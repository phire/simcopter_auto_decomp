// Module: events.obj
// Source: C:\Copter\source\sparkal\events.cpp
// autogenerated by simcopter_tool from PDB file

// Type: int32_t;

// Type: long;



// Contribution: 1:00030b60-00030c4c Module: 63, 16 byte alignment, code, execute, read, 
// FUNCTION: COPTER_D 0x00431b60
int32_t IsEventSet(int32_t nEvent) {
// LINE 23:
	__asm        jmp    _T0b;
_T0b:
	__asm        mov    eax, nEvent;
	__asm        mov    ecx, gGameApp;
	__asm        xor    edx, edx;
	__asm        mov    dl, [ecx+eax*2+0x110];
	__asm        mov    eax, edx;
	__asm        jmp    __RETURN;
// LINE 24:
__RETURN:
}

// FUNCTION: COPTER_D 0x00431b89
int32_t IsEventRangeSet(int32_t nEventStart, int32_t nEventEnd) {
// LINE 33:
__WHILE_06:
	while ((nEventEnd >= nEventStart)) {
		// LINE 34:
			__asm        jmp    _T17;
		_T17:
			__asm        mov    eax, nEventStart;
			__asm        mov    ecx, gGameApp;
			__asm        xor    edx, edx;
			__asm        mov    dl, [ecx+eax*2+0x110];
			__asm        test   edx, edx;
			__asm        je     _T39;
		// LINE 35:
			return nEventStart;
		// LINE 36:
		_T39:
			nEventStart++;
	}
// LINE 38:
_T41:
	return 0x0;
// LINE 39:
}

// FUNCTION: COPTER_D 0x00431bd6
long GetJoystickValue(int32_t nCommand) {
// LINE 47:
	__asm        jmp    _T0b;
_T0b:
	__asm        mov    eax, nCommand;
	__asm        mov    ecx, gGameApp;
	__asm        mov    eax, [ecx+eax*4+0xA28];
	__asm        jmp    __RETURN;
// LINE 48:
__RETURN:
}

// FUNCTION: COPTER_D 0x00431bfb
long GetJoystickValueEither(int32_t nCommand1, int32_t nCommand2) {
	/*bp-0x4*/   long lReturnValue;

// LINE 58:
	__asm        mov    eax, nCommand1;
	__asm        mov    ecx, gGameApp;
	__asm        mov    eax, [ecx+eax*4+0xA28];
	__asm        mov    lReturnValue, eax;
	__asm        jmp    _T21;
_T21:
	__asm        cmp    lReturnValue, 0;
	__asm        je     _T33;
// LINE 59:
	return lReturnValue;
// LINE 60:
_T33:
	__asm        jmp    _T38;
_T38:
	__asm        mov    eax, nCommand2;
	__asm        mov    ecx, gGameApp;
	__asm        mov    eax, [ecx+eax*4+0xA28];
	__asm        jmp    __RETURN;
// LINE 61:
__RETURN:
}

