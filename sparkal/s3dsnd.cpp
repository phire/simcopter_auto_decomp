// Module: S3dsnd.obj
// Source: C:\Copter\source\sparkal\S3dsnd.cpp
// autogenerated by simcopter_tool from PDB file

// Type: long;

// Type: /*packed*/ class SoundChangeNotificationSink;
// VTABLE: COPTER_D 0x0058f5c0
class SoundChangeNotificationSink : public NotificationSink
{ // packed(0x4 bytes) TI: 0x2432
public:
	virtual int32_t Initialize(); // vtable+0x4
	virtual void DoNotificationChange(long, /*packed*/ class PreferenceManager*) /* override */;
};

// Type: /*packed*/ class SoundChangeNotificationSink;
// VTABLE: COPTER_D 0x0058f5c0
class SoundChangeNotificationSink : public NotificationSink
{ // packed(0x4 bytes) TI: 0x2ac5
public:
	virtual int32_t Initialize(); // vtable+0x4
	virtual void DoNotificationChange(long, /*packed*/ class PreferenceManager*) /* override */;
	void SoundChangeNotificationSink(); // synthetic
};

// Type: void ();

// Type: void;

// Type: /*packed*/ class SoundChangeNotificationSink (forward reference);
// VTABLE: COPTER_D 0x0058f5c0
class SoundChangeNotificationSink : public NotificationSink
{ // packed(0x4 bytes) TI: 0x2ac5
public:
	virtual int32_t Initialize(); // vtable+0x4
	virtual void DoNotificationChange(long, /*packed*/ class PreferenceManager*) /* override */;
	void SoundChangeNotificationSink(); // synthetic
};

// Type: int32_t;

// Type: /*packed*/ class PreferenceManager (forward reference);
// VTABLE: COPTER_D 0x00590db0
class PreferenceManager{ // packed(0x28 bytes) TI: 0x26c8
protected:
	/*+0x4*/   int32_t bSaveFileAtAllChanges;
	/*+0x8*/   /*packed*/ class list<PreferenceItem> myPreferences; // 0x8 bytes
	/*+0x10*/  /*packed*/ class MIFF *miffPrefsFile;
	/*+0x14*/  long lFileCreator;
	/*+0x18*/  long lFileType;
	/*+0x1c*/  long lFileVersion;
	/*+0x20*/  int32_t bPrefsDirty;
	/*+0x24*/  int32_t bPrefsLocked;
public:
	void PreferenceManager(long, long, long, int32_t);
	int32_t IPreferenceManager(char *);
	virtual void ~PreferenceManager(); // vtable+0x0
	virtual long SaveAllPrefs(); // vtable+0x4
	virtual long LoadAllPrefs(); // vtable+0x8
	virtual long ClearPrefsMemory(); // vtable+0xc
	virtual void EnumeratePrefs(); // vtable+0x10
	virtual /*packed*/ class PreferenceItem* GetPrefPointer(long); // vtable+0x14
	virtual /*packed*/ class PreferenceItem* GetPrefCopy(long); // vtable+0x18
	virtual char * GetPrefDataPointer(long); // vtable+0x1c
	virtual char * GetPrefDataCopy(long); // vtable+0x20
	virtual long GetPrefDataLength(long); // vtable+0x24
	virtual long SetPref(/*packed*/ class PreferenceItem*); // vtable+0x28
	virtual long SetPref(long, char *, long); // vtable+0x2c
	virtual long RemovePref(long); // vtable+0x30
};

// Type: char *;

// Type: /*packed*/ struct SoundPreferences (forward reference);
struct SoundPreferences{ // packed(0x10 bytes) TI: 0x2845
	/*+0x0*/   long lMasterVolume;
	/*+0x4*/   long lDispatchVolume;
	/*+0x8*/   long lSoundEffectsVolume;
	/*+0xc*/   long lVehicleVolume;
};

// Type: void * __ptr32;

// Type: char;

// Type: /*packed*/ class DigitalSound (forward reference);
// VTABLE: COPTER_D 0x0058f488
class DigitalSound : public Sound
{ // packed(0x7a bytes) TI: 0x45d4
protected:
	/*+0x34*/  int32_t nStreamingType;
	/*+0x38*/  int32_t nCompletionEstimationTimerSet;
	static /*packed*/ struct IDirectSound *lpDirectSound;
	/*+0x3c*/  uint32_t cbSize;
	/*+0x40*/  /*packed*/ struct tWAVEFORMATEX waveFormatEx; // 0x12 bytes
	/*+0x52*/  /*packed*/ struct IDirectSoundBuffer *lpSound[8]; // 0x20 bytes
	/*+0x72*/  /*packed*/ struct _STREAMBUFINFO *lpStreamBufferInfo;
	/*+0x76*/  unsigned long dwDesiredBufferDescFlags;
public:
	void DigitalSound(long);
	void DigitalSound(const /*packed*/ class basic_string<char>&, int32_t);
	void DigitalSound();
	virtual void ~DigitalSound() /* override */;
	/*packed*/ class DigitalSound& operator=(/*packed*/ class DigitalSound&);
	virtual void SetSoundFile(const /*packed*/ class basic_string<char>&, int32_t); // vtable+0x2c
	virtual int32_t Load(); // vtable+0x30
	virtual int32_t LoadFromResource(); // vtable+0x34
	virtual int32_t LoadFromFile(); // vtable+0x38
	virtual void Unload(); // vtable+0x3c
	virtual long Play(long, int32_t) /* override */;
	virtual long Stop() /* override */;
	virtual long ShouldWeStream(); // vtable+0x40
	virtual long PlayStream(); // vtable+0x44
	virtual long StopStream(); // vtable+0x48
protected:
	virtual long IsPlaying(/*packed*/ struct IDirectSoundBuffer**); // vtable+0x4c
public:
	virtual long IsPlaying() /* override */;
	virtual int32_t GetVolume(long *) /* override */;
	virtual int32_t SetVolume(long) /* override */;
	virtual int32_t GetPan(long *); // vtable+0x50
	virtual int32_t SetPan(long); // vtable+0x54
	virtual int32_t SetPosition(long, long, long); // vtable+0x58
	virtual long GetOriginalFrequency(); // vtable+0x5c
	virtual int32_t GetFrequency(long *); // vtable+0x60
	virtual int32_t SetFrequency(long); // vtable+0x64
	virtual int32_t GetSoundType() /* override */;
	virtual int32_t SetCompletionNotification(void (*)(long), long) /* override */;
	virtual void StopCompletionNotification() /* override */;
	virtual long EstimateRemainingPlayTime() /* override */;
protected:
	virtual int32_t GetSoundAliasToPlay(/*packed*/ struct IDirectSoundBuffer**); // vtable+0x68
	virtual int32_t CreateSoundBuffer(/*packed*/ struct _DSBUFFERDESC*); // vtable+0x6c
	virtual int32_t CreatePrimarySoundBuffer(); // vtable+0x70
	virtual int32_t ReleaseSoundBuffer(); // vtable+0x74
	virtual long InitializeStreamBuffer(long); // vtable+0x78
	virtual void ProcessStreamingBufferTimerCallback(); // vtable+0x7c
	virtual void ProcessCompletionEstimationTimerCallback(); // vtable+0x80
	virtual void StopCompletionNotificationEstimationTimer(); // vtable+0x84
	virtual int32_t StartCompletionNotificationEstimationTimer(); // vtable+0x88
};

// Type: /*packed*/ struct Point3d (forward reference);
struct Point3d{ // packed(0xc bytes) TI: 0x18b0
	/*+0x0*/   int32_t x;
	/*+0x4*/   int32_t y;
	/*+0x8*/   int32_t z;
};

// Type: /*packed*/ struct Point3d;
struct Point3d{ // packed(0xc bytes) TI: 0x18b0
	/*+0x0*/   int32_t x;
	/*+0x4*/   int32_t y;
	/*+0x8*/   int32_t z;
};

// Type: /*packed*/ class NotificationSink;
// VTABLE: COPTER_D 0x0058f5c8
class NotificationSink{ // packed(0x4 bytes) TI: 0x2ae9
public:
	virtual void DoNotificationChange(long, /*unpacked*/ class PreferenceManager*); // vtable+0x0
};

// Type: /*packed*/ class Sound;
// VTABLE: COPTER_D 0x0058f458
class Sound{ // packed(0x34 bytes) TI: 0x4335
	enum SoundSourceType {
		nSoundSourceTypeResource = 0,
		nSoundSourceTypeFile = 1,
	};
public:
	/*+0x4*/   enum Sound::SoundSourceType nSoundSourceType;
	enum SoundDuplicateType {
		nSoundDuplicateDefault = 0,
		nSoundDuplicateInterrupt = 1,
		nSoundDuplicateContinue = 2,
		nSoundDuplicateOverlap = 3,
	};
public:
	/*+0x8*/   enum Sound::SoundDuplicateType nSoundDuplicateType;
	/*+0xc*/   long lID;
	/*+0x10*/  long lResID;
	/*+0x14*/  /*packed*/ class basic_string<char> sSoundFile; // 0x8 bytes
	/*+0x1c*/  long bLooping;
	/*+0x20*/  long bStreaming;
	/*+0x24*/  long lVolume;
	/*+0x28*/  void (*soundCompletionFunction)(long);
	/*+0x2c*/  long lSoundCompletionData;
	/*+0x30*/  int32_t bUnloadBeforeNextPlay;
	void Sound();
	virtual void ~Sound(); // vtable+0x0
	/*packed*/ class Sound& operator=(const /*packed*/ class Sound&);
	virtual void SetSoundFile(const /*packed*/ class basic_string<char>&); // vtable+0x4
	virtual long Play(long, int32_t); // vtable+0x8
	virtual long Stop(); // vtable+0xc
	virtual long IsPlaying(); // vtable+0x10
	virtual int32_t SetCompletionNotification(void (*)(long), long); // vtable+0x14
	virtual void StopCompletionNotification(); // vtable+0x18
	virtual long EstimateRemainingPlayTime(); // vtable+0x1c
	virtual int32_t GetVolume(long *); // vtable+0x20
	virtual int32_t SetVolume(long); // vtable+0x24
	virtual int32_t GetSoundType(); // vtable+0x28
	// calltype: NearC
	static unsigned long GetTotalMemoryUsage();
	static unsigned long lTotalMemoryUsage;
};



// Contribution: 1:00040e30-000461ac Module: 52, 16 byte alignment, code, execute, read, 
// STATIC INITIALIZER:
// SYNTHETIC: COPTER_D 0x00441e30
static void $E55() {

	$E54();
	__asm        jmp    __RETURN;
__RETURN:
}

// STATIC INITIALIZER:
// SYNTHETIC: COPTER_D 0x00441e45
static void $E54() {

	glMasterVolume = 0x2710;
	__asm        jmp    __RETURN;
__RETURN:
}

// STATIC INITIALIZER:
// SYNTHETIC: COPTER_D 0x00441e5f
static void $E58() {

	$E57();
	__asm        jmp    __RETURN;
__RETURN:
}

// STATIC INITIALIZER:
// SYNTHETIC: COPTER_D 0x00441e74
static void $E57() {

	gSoundChangeNotificationSink<SoundChangeNotificationSink+0x00> = 0x58f5c8;
	__asm        jmp    _T15;
_T15:
	gSoundChangeNotificationSink<SoundChangeNotificationSink+0x00> = 0x58f5c0;
	__asm        jmp    _T24;
_T24:
	return;
}

// FUNCTION: COPTER_D 0x00441ea2
int32_t SoundChangeNotificationSink::Initialize() {
// LINE 57:
	__asm        cmp    gPreferenceManager, 0;
	__asm        je     _T37;
// LINE 58:
	__asm        mov    eax, this;
	__asm        push   eax;
	__asm        push   0x4FFFFFF;
	__asm        mov    eax, gPreferenceManager;
	__asm        mov    eax, [eax];
	__asm        mov    ecx, gPreferenceManager;
	__asm        call   dword ptr [eax+0x38];
	__asm        jmp    __RETURN;
// LINE 60:
_T37:
	return 0x0;
// LINE 61:
__RETURN:
}

// FUNCTION: COPTER_D 0x00441ee5
void SoundChangeNotificationSink::DoNotificationChange(long lPreferenceType, /*packed*/ class PreferenceManager *thePreferenceManager) {
	/*bp-0x4*/   int32_t i;
	/*bp-0x8*/   /*packed*/ struct SoundPreferences *currentSoundPreferences;
	/*bp-0xc*/   char * chPrefsData;
	/*bp-0x10*/  long lNewVolume;

// LINE 84:
	__asm        cmp    lPreferenceType, 0x4FFFFFF;
	__asm        jne    _Tc4;
// LINE 85:
	__asm        push   0x4FFFFFF;
	__asm        mov    eax, thePreferenceManager;
	__asm        mov    eax, [eax];
	__asm        mov    ecx, thePreferenceManager;
	__asm        call   dword ptr [eax+0x1C];
	__asm        mov    chPrefsData, eax;
// LINE 86:
	__asm        cmp    chPrefsData, 0;
	__asm        je     _Tc4;
// LINE 87:
	currentSoundPreferences = chPrefsData;
// LINE 88:
	glMasterVolume = currentSoundPreferences->lMasterVolume;
// LINE 89:
_FOR_52:
	for (i = 0x0; (i < 0x71); i++) {
// LINE 90:
		__asm        mov    eax, i;
		__asm        cmp    gSoundManager.sound[0][eax*4], 0;
		__asm        je     _Tbf;

		__asm        mov    eax, i;
		__asm        mov    eax, lOriginalSoundVolumes[eax*4];
		__asm        mov    [ebp-0x14], eax;
// LINE 91:
		__asm        mov    eax, glMasterVolume;
		__asm        imul   eax, [ebp-0x14];
		__asm        mov    [ebp-0x14], eax;
		__asm        mov    ecx, 0x2710;
		__asm        mov    eax, [ebp-0x14];
		__asm        cdq;
		__asm        idiv   ecx;
		__asm        mov    [ebp-0x14], eax;
		__asm        mov    eax, [ebp-0x14];
		__asm        mov    lNewVolume, eax;
		__asm        jmp    _Ta2;
// LINE 92:
_Ta2:
		__asm        mov    eax, lNewVolume;
		__asm        push   eax;
		__asm        mov    eax, i;
		__asm        mov    ecx, i;
		__asm        mov    ecx, gSoundManager.sound[0][ecx*4];
		__asm        mov    edx, [ecx];
		__asm        mov    ecx, gSoundManager.sound[0][eax*4];
		__asm        call   dword ptr [edx+0x24];
// LINE 94:
_Tbf:
	}
// LINE 97:
_Tc4:
	return;
}

// FUNCTION: COPTER_D 0x00441fb5
int32_t S3DSInit(void * __ptr32 hWnd) {
	/*bp-0x4*/   int32_t i;

// LINE 131:
_FOR_15:
	for (i = 0x0; (i < 0x71); i++) {
// LINE 132:
		__asm        mov    eax, i;
		__asm        mov    lOriginalSoundVolumes[eax*4], 0x2710;
	}
// LINE 134:
_T35:
	return 0x604588->SoundSystem::Initialize(hWnd);
// LINE 135:
}

// FUNCTION: COPTER_D 0x00442002
int32_t S3LoadSounds() {
	/*bp-0x104*/ char szFullSoundPath[260]; // 0x104 bytes
	/*bp-0x108*/ int32_t count;

// LINE 153:
	GetPathForFile(0x2, 0x0, 0x598974, szFullSoundPath[0]);
// LINE 154:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x73C], eax;
	__asm        cmp    dword ptr [ebp-0x73C], 0;
	__asm        je     _T5e;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x73C];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x10C], eax;
	__asm        jmp    _T68;
_T5e:
	__asm        mov    dword ptr [ebp-0x10C], 0;
_T68:
	__asm        mov    dword ptr [ebp-0x110], 0;
	__asm        jmp    _T77;
_T77:
	__asm        push   2;
	__asm        push   0;
	__asm        lea    eax, [ebp-0x110];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x110];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x110], 0;
	__asm        je     _Tcb;

	__asm        mov    eax, [ebp-0x110];
	__asm        mov    [ebp-0x424], eax;
	__asm        mov    eax, [ebp-0x424];
	__asm        mov    [ebp-0x428], eax;
	__asm        mov    eax, [ebp-0x428];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_Tcb:
	__asm        jmp    _Td0;
// LINE 156:
_Td0:
	GetPathForFile(0x2, 0x0, 0x598980, szFullSoundPath[0]);
// LINE 157:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x740], eax;
	__asm        cmp    dword ptr [ebp-0x740], 0;
	__asm        je     _T122;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x740];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x114], eax;
	__asm        jmp    _T12c;
_T122:
	__asm        mov    dword ptr [ebp-0x114], 0;
_T12c:
	__asm        mov    dword ptr [ebp-0x118], 0;
	__asm        jmp    _T13b;
_T13b:
	__asm        push   2;
	__asm        push   1;
	__asm        lea    eax, [ebp-0x118];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x118];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x118], 0;
	__asm        je     _T18f;

	__asm        mov    eax, [ebp-0x118];
	__asm        mov    [ebp-0x42C], eax;
	__asm        mov    eax, [ebp-0x42C];
	__asm        mov    [ebp-0x430], eax;
	__asm        mov    eax, [ebp-0x430];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T18f:
	__asm        jmp    _T194;
// LINE 159:
_T194:
	GetPathForFile(0x2, 0x0, 0x59898c, szFullSoundPath[0]);
// LINE 160:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x744], eax;
	__asm        cmp    dword ptr [ebp-0x744], 0;
	__asm        je     _T1e6;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x744];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x11C], eax;
	__asm        jmp    _T1f0;
_T1e6:
	__asm        mov    dword ptr [ebp-0x11C], 0;
_T1f0:
	__asm        mov    dword ptr [ebp-0x120], 0;
	__asm        jmp    _T1ff;
_T1ff:
	__asm        push   2;
	__asm        push   2;
	__asm        lea    eax, [ebp-0x120];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x120];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x120], 0;
	__asm        je     _T253;

	__asm        mov    eax, [ebp-0x120];
	__asm        mov    [ebp-0x434], eax;
	__asm        mov    eax, [ebp-0x434];
	__asm        mov    [ebp-0x438], eax;
	__asm        mov    eax, [ebp-0x438];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T253:
	__asm        jmp    _T258;
// LINE 162:
_T258:
	GetPathForFile(0x2, 0x0, 0x59899c, szFullSoundPath[0]);
// LINE 163:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x748], eax;
	__asm        cmp    dword ptr [ebp-0x748], 0;
	__asm        je     _T2aa;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x748];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x124], eax;
	__asm        jmp    _T2b4;
_T2aa:
	__asm        mov    dword ptr [ebp-0x124], 0;
_T2b4:
	__asm        mov    dword ptr [ebp-0x128], 0;
	__asm        jmp    _T2c3;
_T2c3:
	__asm        push   2;
	__asm        push   3;
	__asm        lea    eax, [ebp-0x128];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x128];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x128], 0;
	__asm        je     _T317;

	__asm        mov    eax, [ebp-0x128];
	__asm        mov    [ebp-0x43C], eax;
	__asm        mov    eax, [ebp-0x43C];
	__asm        mov    [ebp-0x440], eax;
	__asm        mov    eax, [ebp-0x440];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T317:
	__asm        jmp    _T31c;
// LINE 165:
_T31c:
	GetPathForFile(0x2, 0x0, 0x5989ac, szFullSoundPath[0]);
// LINE 166:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x74C], eax;
	__asm        cmp    dword ptr [ebp-0x74C], 0;
	__asm        je     _T36e;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x74C];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x12C], eax;
	__asm        jmp    _T378;
_T36e:
	__asm        mov    dword ptr [ebp-0x12C], 0;
_T378:
	__asm        mov    dword ptr [ebp-0x130], 0;
	__asm        jmp    _T387;
_T387:
	__asm        push   2;
	__asm        push   4;
	__asm        lea    eax, [ebp-0x130];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x130];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x130], 0;
	__asm        je     _T3db;

	__asm        mov    eax, [ebp-0x130];
	__asm        mov    [ebp-0x444], eax;
	__asm        mov    eax, [ebp-0x444];
	__asm        mov    [ebp-0x448], eax;
	__asm        mov    eax, [ebp-0x448];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T3db:
	__asm        jmp    _T3e0;
// LINE 168:
_T3e0:
	GetPathForFile(0x2, 0x0, 0x5989b8, szFullSoundPath[0]);
// LINE 169:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x750], eax;
	__asm        cmp    dword ptr [ebp-0x750], 0;
	__asm        je     _T432;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x750];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x134], eax;
	__asm        jmp    _T43c;
_T432:
	__asm        mov    dword ptr [ebp-0x134], 0;
_T43c:
	__asm        mov    dword ptr [ebp-0x138], 0;
	__asm        jmp    _T44b;
_T44b:
	__asm        push   2;
	__asm        push   5;
	__asm        lea    eax, [ebp-0x138];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x138];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x138], 0;
	__asm        je     _T49f;

	__asm        mov    eax, [ebp-0x138];
	__asm        mov    [ebp-0x44C], eax;
	__asm        mov    eax, [ebp-0x44C];
	__asm        mov    [ebp-0x450], eax;
	__asm        mov    eax, [ebp-0x450];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T49f:
	__asm        jmp    _T4a4;
// LINE 171:
_T4a4:
	GetPathForFile(0x2, 0x0, 0x5989c8, szFullSoundPath[0]);
// LINE 172:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x754], eax;
	__asm        cmp    dword ptr [ebp-0x754], 0;
	__asm        je     _T4f6;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x754];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x13C], eax;
	__asm        jmp    _T500;
_T4f6:
	__asm        mov    dword ptr [ebp-0x13C], 0;
_T500:
	__asm        mov    dword ptr [ebp-0x140], 0;
	__asm        jmp    _T50f;
_T50f:
	__asm        push   2;
	__asm        push   6;
	__asm        lea    eax, [ebp-0x140];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x140];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x140], 0;
	__asm        je     _T563;

	__asm        mov    eax, [ebp-0x140];
	__asm        mov    [ebp-0x454], eax;
	__asm        mov    eax, [ebp-0x454];
	__asm        mov    [ebp-0x458], eax;
	__asm        mov    eax, [ebp-0x458];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T563:
	__asm        jmp    _T568;
// LINE 174:
_T568:
	GetPathForFile(0x2, 0x0, 0x5989d4, szFullSoundPath[0]);
// LINE 175:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x758], eax;
	__asm        cmp    dword ptr [ebp-0x758], 0;
	__asm        je     _T5ba;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x758];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x144], eax;
	__asm        jmp    _T5c4;
_T5ba:
	__asm        mov    dword ptr [ebp-0x144], 0;
_T5c4:
	__asm        mov    dword ptr [ebp-0x148], 0;
	__asm        jmp    _T5d3;
_T5d3:
	__asm        push   2;
	__asm        push   7;
	__asm        lea    eax, [ebp-0x148];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x148];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x148], 0;
	__asm        je     _T627;

	__asm        mov    eax, [ebp-0x148];
	__asm        mov    [ebp-0x45C], eax;
	__asm        mov    eax, [ebp-0x45C];
	__asm        mov    [ebp-0x460], eax;
	__asm        mov    eax, [ebp-0x460];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T627:
	__asm        jmp    _T62c;
// LINE 177:
_T62c:
	GetPathForFile(0x2, 0x0, 0x5989e0, szFullSoundPath[0]);
// LINE 178:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x75C], eax;
	__asm        cmp    dword ptr [ebp-0x75C], 0;
	__asm        je     _T67e;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x75C];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x14C], eax;
	__asm        jmp    _T688;
_T67e:
	__asm        mov    dword ptr [ebp-0x14C], 0;
_T688:
	__asm        mov    dword ptr [ebp-0x150], 0;
	__asm        jmp    _T697;
_T697:
	__asm        push   2;
	__asm        push   8;
	__asm        lea    eax, [ebp-0x150];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x150];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x150], 0;
	__asm        je     _T6eb;

	__asm        mov    eax, [ebp-0x150];
	__asm        mov    [ebp-0x464], eax;
	__asm        mov    eax, [ebp-0x464];
	__asm        mov    [ebp-0x468], eax;
	__asm        mov    eax, [ebp-0x468];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T6eb:
	__asm        jmp    _T6f0;
// LINE 180:
_T6f0:
	GetPathForFile(0x2, 0x0, 0x5989ec, szFullSoundPath[0]);
// LINE 181:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x760], eax;
	__asm        cmp    dword ptr [ebp-0x760], 0;
	__asm        je     _T742;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x760];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x154], eax;
	__asm        jmp    _T74c;
_T742:
	__asm        mov    dword ptr [ebp-0x154], 0;
_T74c:
	__asm        mov    dword ptr [ebp-0x158], 0;
	__asm        jmp    _T75b;
_T75b:
	__asm        push   2;
	__asm        push   9;
	__asm        lea    eax, [ebp-0x158];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x158];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x158], 0;
	__asm        je     _T7af;

	__asm        mov    eax, [ebp-0x158];
	__asm        mov    [ebp-0x46C], eax;
	__asm        mov    eax, [ebp-0x46C];
	__asm        mov    [ebp-0x470], eax;
	__asm        mov    eax, [ebp-0x470];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T7af:
	__asm        jmp    _T7b4;
// LINE 183:
_T7b4:
	GetPathForFile(0x2, 0x0, 0x5989f8, szFullSoundPath[0]);
// LINE 184:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x764], eax;
	__asm        cmp    dword ptr [ebp-0x764], 0;
	__asm        je     _T806;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x764];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x15C], eax;
	__asm        jmp    _T810;
_T806:
	__asm        mov    dword ptr [ebp-0x15C], 0;
_T810:
	__asm        mov    dword ptr [ebp-0x160], 0;
	__asm        jmp    _T81f;
_T81f:
	__asm        push   2;
	__asm        push   0xA;
	__asm        lea    eax, [ebp-0x160];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x160];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x160], 0;
	__asm        je     _T873;

	__asm        mov    eax, [ebp-0x160];
	__asm        mov    [ebp-0x474], eax;
	__asm        mov    eax, [ebp-0x474];
	__asm        mov    [ebp-0x478], eax;
	__asm        mov    eax, [ebp-0x478];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T873:
	__asm        jmp    _T878;
// LINE 186:
_T878:
	GetPathForFile(0x2, 0x0, 0x598a04, szFullSoundPath[0]);
// LINE 187:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x768], eax;
	__asm        cmp    dword ptr [ebp-0x768], 0;
	__asm        je     _T8ca;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x768];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x164], eax;
	__asm        jmp    _T8d4;
_T8ca:
	__asm        mov    dword ptr [ebp-0x164], 0;
_T8d4:
	__asm        mov    dword ptr [ebp-0x168], 0;
	__asm        jmp    _T8e3;
_T8e3:
	__asm        push   2;
	__asm        push   0xB;
	__asm        lea    eax, [ebp-0x168];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x168];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x168], 0;
	__asm        je     _T937;

	__asm        mov    eax, [ebp-0x168];
	__asm        mov    [ebp-0x47C], eax;
	__asm        mov    eax, [ebp-0x47C];
	__asm        mov    [ebp-0x480], eax;
	__asm        mov    eax, [ebp-0x480];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T937:
	__asm        jmp    _T93c;
// LINE 189:
_T93c:
	GetPathForFile(0x2, 0x0, 0x598a14, szFullSoundPath[0]);
// LINE 190:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x76C], eax;
	__asm        cmp    dword ptr [ebp-0x76C], 0;
	__asm        je     _T98e;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x76C];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x16C], eax;
	__asm        jmp    _T998;
_T98e:
	__asm        mov    dword ptr [ebp-0x16C], 0;
_T998:
	__asm        mov    dword ptr [ebp-0x170], 0;
	__asm        jmp    _T9a7;
_T9a7:
	__asm        push   2;
	__asm        push   0xC;
	__asm        lea    eax, [ebp-0x170];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x170];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x170], 0;
	__asm        je     _T9fb;

	__asm        mov    eax, [ebp-0x170];
	__asm        mov    [ebp-0x484], eax;
	__asm        mov    eax, [ebp-0x484];
	__asm        mov    [ebp-0x488], eax;
	__asm        mov    eax, [ebp-0x488];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T9fb:
	__asm        jmp    _Ta00;
// LINE 192:
_Ta00:
	GetPathForFile(0x2, 0x0, 0x598a20, szFullSoundPath[0]);
// LINE 193:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x770], eax;
	__asm        cmp    dword ptr [ebp-0x770], 0;
	__asm        je     _Ta52;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x770];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x174], eax;
	__asm        jmp    _Ta5c;
_Ta52:
	__asm        mov    dword ptr [ebp-0x174], 0;
_Ta5c:
	__asm        mov    dword ptr [ebp-0x178], 0;
	__asm        jmp    _Ta6b;
_Ta6b:
	__asm        push   2;
	__asm        push   0xD;
	__asm        lea    eax, [ebp-0x178];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x178];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x178], 0;
	__asm        je     _Tabf;

	__asm        mov    eax, [ebp-0x178];
	__asm        mov    [ebp-0x48C], eax;
	__asm        mov    eax, [ebp-0x48C];
	__asm        mov    [ebp-0x490], eax;
	__asm        mov    eax, [ebp-0x490];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_Tabf:
	__asm        jmp    _Tac4;
// LINE 195:
_Tac4:
	GetPathForFile(0x2, 0x0, 0x598a30, szFullSoundPath[0]);
// LINE 196:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x774], eax;
	__asm        cmp    dword ptr [ebp-0x774], 0;
	__asm        je     _Tb16;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x774];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x17C], eax;
	__asm        jmp    _Tb20;
_Tb16:
	__asm        mov    dword ptr [ebp-0x17C], 0;
_Tb20:
	__asm        mov    dword ptr [ebp-0x180], 0;
	__asm        jmp    _Tb2f;
_Tb2f:
	__asm        push   2;
	__asm        push   0xE;
	__asm        lea    eax, [ebp-0x180];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x180];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x180], 0;
	__asm        je     _Tb83;

	__asm        mov    eax, [ebp-0x180];
	__asm        mov    [ebp-0x494], eax;
	__asm        mov    eax, [ebp-0x494];
	__asm        mov    [ebp-0x498], eax;
	__asm        mov    eax, [ebp-0x498];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_Tb83:
	__asm        jmp    _Tb88;
// LINE 198:
_Tb88:
	GetPathForFile(0x2, 0x0, 0x598a40, szFullSoundPath[0]);
// LINE 199:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x778], eax;
	__asm        cmp    dword ptr [ebp-0x778], 0;
	__asm        je     _Tbda;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x778];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x184], eax;
	__asm        jmp    _Tbe4;
_Tbda:
	__asm        mov    dword ptr [ebp-0x184], 0;
_Tbe4:
	__asm        mov    dword ptr [ebp-0x188], 0;
	__asm        jmp    _Tbf3;
_Tbf3:
	__asm        push   2;
	__asm        push   0xF;
	__asm        lea    eax, [ebp-0x188];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x188];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x188], 0;
	__asm        je     _Tc47;

	__asm        mov    eax, [ebp-0x188];
	__asm        mov    [ebp-0x49C], eax;
	__asm        mov    eax, [ebp-0x49C];
	__asm        mov    [ebp-0x4A0], eax;
	__asm        mov    eax, [ebp-0x4A0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_Tc47:
	__asm        jmp    _Tc4c;
// LINE 201:
_Tc4c:
	GetPathForFile(0x2, 0x0, 0x598a4c, szFullSoundPath[0]);
// LINE 202:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x77C], eax;
	__asm        cmp    dword ptr [ebp-0x77C], 0;
	__asm        je     _Tc9e;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x77C];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x18C], eax;
	__asm        jmp    _Tca8;
_Tc9e:
	__asm        mov    dword ptr [ebp-0x18C], 0;
_Tca8:
	__asm        mov    dword ptr [ebp-0x190], 0;
	__asm        jmp    _Tcb7;
_Tcb7:
	__asm        push   2;
	__asm        push   0x10;
	__asm        lea    eax, [ebp-0x190];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x190];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x190], 0;
	__asm        je     _Td0b;

	__asm        mov    eax, [ebp-0x190];
	__asm        mov    [ebp-0x4A4], eax;
	__asm        mov    eax, [ebp-0x4A4];
	__asm        mov    [ebp-0x4A8], eax;
	__asm        mov    eax, [ebp-0x4A8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_Td0b:
	__asm        jmp    _Td10;
// LINE 204:
_Td10:
	GetPathForFile(0x2, 0x0, 0x598a58, szFullSoundPath[0]);
// LINE 205:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x780], eax;
	__asm        cmp    dword ptr [ebp-0x780], 0;
	__asm        je     _Td62;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x780];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x194], eax;
	__asm        jmp    _Td6c;
_Td62:
	__asm        mov    dword ptr [ebp-0x194], 0;
_Td6c:
	__asm        mov    dword ptr [ebp-0x198], 0;
	__asm        jmp    _Td7b;
_Td7b:
	__asm        push   2;
	__asm        push   0x11;
	__asm        lea    eax, [ebp-0x198];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x198];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x198], 0;
	__asm        je     _Tdcf;

	__asm        mov    eax, [ebp-0x198];
	__asm        mov    [ebp-0x4AC], eax;
	__asm        mov    eax, [ebp-0x4AC];
	__asm        mov    [ebp-0x4B0], eax;
	__asm        mov    eax, [ebp-0x4B0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_Tdcf:
	__asm        jmp    _Tdd4;
// LINE 207:
_Tdd4:
	GetPathForFile(0x2, 0x0, 0x598a68, szFullSoundPath[0]);
// LINE 208:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x784], eax;
	__asm        cmp    dword ptr [ebp-0x784], 0;
	__asm        je     _Te26;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x784];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x19C], eax;
	__asm        jmp    _Te30;
_Te26:
	__asm        mov    dword ptr [ebp-0x19C], 0;
_Te30:
	__asm        mov    dword ptr [ebp-0x1A0], 0;
	__asm        jmp    _Te3f;
_Te3f:
	__asm        push   2;
	__asm        push   0x26;
	__asm        lea    eax, [ebp-0x1A0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x1A0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x1A0], 0;
	__asm        je     _Te93;

	__asm        mov    eax, [ebp-0x1A0];
	__asm        mov    [ebp-0x4B4], eax;
	__asm        mov    eax, [ebp-0x4B4];
	__asm        mov    [ebp-0x4B8], eax;
	__asm        mov    eax, [ebp-0x4B8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_Te93:
	__asm        jmp    _Te98;
// LINE 210:
_Te98:
	GetPathForFile(0x2, 0x0, 0x598a78, szFullSoundPath[0]);
// LINE 211:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x788], eax;
	__asm        cmp    dword ptr [ebp-0x788], 0;
	__asm        je     _Teea;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x788];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x1A4], eax;
	__asm        jmp    _Tef4;
_Teea:
	__asm        mov    dword ptr [ebp-0x1A4], 0;
_Tef4:
	__asm        mov    dword ptr [ebp-0x1A8], 0;
	__asm        jmp    _Tf03;
_Tf03:
	__asm        push   2;
	__asm        push   0x12;
	__asm        lea    eax, [ebp-0x1A8];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x1A8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x1A8], 0;
	__asm        je     _Tf57;

	__asm        mov    eax, [ebp-0x1A8];
	__asm        mov    [ebp-0x4BC], eax;
	__asm        mov    eax, [ebp-0x4BC];
	__asm        mov    [ebp-0x4C0], eax;
	__asm        mov    eax, [ebp-0x4C0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_Tf57:
	__asm        jmp    _Tf5c;
// LINE 213:
_Tf5c:
	GetPathForFile(0x2, 0x0, 0x598a88, szFullSoundPath[0]);
// LINE 214:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x78C], eax;
	__asm        cmp    dword ptr [ebp-0x78C], 0;
	__asm        je     _Tfae;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x78C];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x1AC], eax;
	__asm        jmp    _Tfb8;
_Tfae:
	__asm        mov    dword ptr [ebp-0x1AC], 0;
_Tfb8:
	__asm        mov    dword ptr [ebp-0x1B0], 0;
	__asm        jmp    _Tfc7;
_Tfc7:
	__asm        push   2;
	__asm        push   0x13;
	__asm        lea    eax, [ebp-0x1B0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x1B0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x1B0], 0;
	__asm        je     _T101b;

	__asm        mov    eax, [ebp-0x1B0];
	__asm        mov    [ebp-0x4C4], eax;
	__asm        mov    eax, [ebp-0x4C4];
	__asm        mov    [ebp-0x4C8], eax;
	__asm        mov    eax, [ebp-0x4C8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T101b:
	__asm        jmp    _T1020;
// LINE 216:
_T1020:
	GetPathForFile(0x2, 0x0, 0x598a98, szFullSoundPath[0]);
// LINE 217:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x790], eax;
	__asm        cmp    dword ptr [ebp-0x790], 0;
	__asm        je     _T1072;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x790];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x1B4], eax;
	__asm        jmp    _T107c;
_T1072:
	__asm        mov    dword ptr [ebp-0x1B4], 0;
_T107c:
	__asm        mov    dword ptr [ebp-0x1B8], 0;
	__asm        jmp    _T108b;
_T108b:
	__asm        push   2;
	__asm        push   0x14;
	__asm        lea    eax, [ebp-0x1B8];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x1B8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x1B8], 0;
	__asm        je     _T10df;

	__asm        mov    eax, [ebp-0x1B8];
	__asm        mov    [ebp-0x4CC], eax;
	__asm        mov    eax, [ebp-0x4CC];
	__asm        mov    [ebp-0x4D0], eax;
	__asm        mov    eax, [ebp-0x4D0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T10df:
	__asm        jmp    _T10e4;
// LINE 219:
_T10e4:
	GetPathForFile(0x2, 0x0, 0x598aa8, szFullSoundPath[0]);
// LINE 220:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x794], eax;
	__asm        cmp    dword ptr [ebp-0x794], 0;
	__asm        je     _T1136;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x794];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x1BC], eax;
	__asm        jmp    _T1140;
_T1136:
	__asm        mov    dword ptr [ebp-0x1BC], 0;
_T1140:
	__asm        mov    dword ptr [ebp-0x1C0], 0;
	__asm        jmp    _T114f;
_T114f:
	__asm        push   2;
	__asm        push   0x15;
	__asm        lea    eax, [ebp-0x1C0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x1C0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x1C0], 0;
	__asm        je     _T11a3;

	__asm        mov    eax, [ebp-0x1C0];
	__asm        mov    [ebp-0x4D4], eax;
	__asm        mov    eax, [ebp-0x4D4];
	__asm        mov    [ebp-0x4D8], eax;
	__asm        mov    eax, [ebp-0x4D8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T11a3:
	__asm        jmp    _T11a8;
// LINE 222:
_T11a8:
	GetPathForFile(0x2, 0x0, 0x598ab4, szFullSoundPath[0]);
// LINE 223:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x798], eax;
	__asm        cmp    dword ptr [ebp-0x798], 0;
	__asm        je     _T11fa;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x798];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x1C4], eax;
	__asm        jmp    _T1204;
_T11fa:
	__asm        mov    dword ptr [ebp-0x1C4], 0;
_T1204:
	__asm        mov    dword ptr [ebp-0x1C8], 0;
	__asm        jmp    _T1213;
_T1213:
	__asm        push   2;
	__asm        push   0x16;
	__asm        lea    eax, [ebp-0x1C8];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x1C8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x1C8], 0;
	__asm        je     _T1267;

	__asm        mov    eax, [ebp-0x1C8];
	__asm        mov    [ebp-0x4DC], eax;
	__asm        mov    eax, [ebp-0x4DC];
	__asm        mov    [ebp-0x4E0], eax;
	__asm        mov    eax, [ebp-0x4E0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T1267:
	__asm        jmp    _T126c;
// LINE 225:
_T126c:
	GetPathForFile(0x2, 0x0, 0x598ac4, szFullSoundPath[0]);
// LINE 226:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x79C], eax;
	__asm        cmp    dword ptr [ebp-0x79C], 0;
	__asm        je     _T12be;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x79C];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x1CC], eax;
	__asm        jmp    _T12c8;
_T12be:
	__asm        mov    dword ptr [ebp-0x1CC], 0;
_T12c8:
	__asm        mov    dword ptr [ebp-0x1D0], 0;
	__asm        jmp    _T12d7;
_T12d7:
	__asm        push   2;
	__asm        push   0x17;
	__asm        lea    eax, [ebp-0x1D0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x1D0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x1D0], 0;
	__asm        je     _T132b;

	__asm        mov    eax, [ebp-0x1D0];
	__asm        mov    [ebp-0x4E4], eax;
	__asm        mov    eax, [ebp-0x4E4];
	__asm        mov    [ebp-0x4E8], eax;
	__asm        mov    eax, [ebp-0x4E8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T132b:
	__asm        jmp    _T1330;
// LINE 228:
_T1330:
	GetPathForFile(0x2, 0x0, 0x598ad0, szFullSoundPath[0]);
// LINE 229:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7A0], eax;
	__asm        cmp    dword ptr [ebp-0x7A0], 0;
	__asm        je     _T1382;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7A0];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x1D4], eax;
	__asm        jmp    _T138c;
_T1382:
	__asm        mov    dword ptr [ebp-0x1D4], 0;
_T138c:
	__asm        mov    dword ptr [ebp-0x1D8], 0;
	__asm        jmp    _T139b;
_T139b:
	__asm        push   2;
	__asm        push   0x18;
	__asm        lea    eax, [ebp-0x1D8];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x1D8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x1D8], 0;
	__asm        je     _T13ef;

	__asm        mov    eax, [ebp-0x1D8];
	__asm        mov    [ebp-0x4EC], eax;
	__asm        mov    eax, [ebp-0x4EC];
	__asm        mov    [ebp-0x4F0], eax;
	__asm        mov    eax, [ebp-0x4F0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T13ef:
	__asm        jmp    _T13f4;
// LINE 231:
_T13f4:
	GetPathForFile(0x2, 0x0, 0x598adc, szFullSoundPath[0]);
// LINE 232:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7A4], eax;
	__asm        cmp    dword ptr [ebp-0x7A4], 0;
	__asm        je     _T1446;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7A4];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x1DC], eax;
	__asm        jmp    _T1450;
_T1446:
	__asm        mov    dword ptr [ebp-0x1DC], 0;
_T1450:
	__asm        mov    dword ptr [ebp-0x1E0], 0;
	__asm        jmp    _T145f;
_T145f:
	__asm        push   2;
	__asm        push   0x19;
	__asm        lea    eax, [ebp-0x1E0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x1E0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x1E0], 0;
	__asm        je     _T14b3;

	__asm        mov    eax, [ebp-0x1E0];
	__asm        mov    [ebp-0x4F4], eax;
	__asm        mov    eax, [ebp-0x4F4];
	__asm        mov    [ebp-0x4F8], eax;
	__asm        mov    eax, [ebp-0x4F8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T14b3:
	__asm        jmp    _T14b8;
// LINE 234:
_T14b8:
	GetPathForFile(0x2, 0x0, 0x598ae8, szFullSoundPath[0]);
// LINE 235:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7A8], eax;
	__asm        cmp    dword ptr [ebp-0x7A8], 0;
	__asm        je     _T150a;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7A8];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x1E4], eax;
	__asm        jmp    _T1514;
_T150a:
	__asm        mov    dword ptr [ebp-0x1E4], 0;
_T1514:
	__asm        mov    dword ptr [ebp-0x1E8], 0;
	__asm        jmp    _T1523;
_T1523:
	__asm        push   2;
	__asm        push   0x1A;
	__asm        lea    eax, [ebp-0x1E8];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x1E8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x1E8], 0;
	__asm        je     _T1577;

	__asm        mov    eax, [ebp-0x1E8];
	__asm        mov    [ebp-0x4FC], eax;
	__asm        mov    eax, [ebp-0x4FC];
	__asm        mov    [ebp-0x500], eax;
	__asm        mov    eax, [ebp-0x500];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T1577:
	__asm        jmp    _T157c;
// LINE 237:
_T157c:
	GetPathForFile(0x2, 0x0, 0x598af4, szFullSoundPath[0]);
// LINE 238:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7AC], eax;
	__asm        cmp    dword ptr [ebp-0x7AC], 0;
	__asm        je     _T15ce;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7AC];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x1EC], eax;
	__asm        jmp    _T15d8;
_T15ce:
	__asm        mov    dword ptr [ebp-0x1EC], 0;
_T15d8:
	__asm        mov    dword ptr [ebp-0x1F0], 0;
	__asm        jmp    _T15e7;
_T15e7:
	__asm        push   2;
	__asm        push   0x1B;
	__asm        lea    eax, [ebp-0x1F0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x1F0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x1F0], 0;
	__asm        je     _T163b;

	__asm        mov    eax, [ebp-0x1F0];
	__asm        mov    [ebp-0x504], eax;
	__asm        mov    eax, [ebp-0x504];
	__asm        mov    [ebp-0x508], eax;
	__asm        mov    eax, [ebp-0x508];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T163b:
	__asm        jmp    _T1640;
// LINE 240:
_T1640:
	GetPathForFile(0x2, 0x0, 0x598b00, szFullSoundPath[0]);
// LINE 241:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7B0], eax;
	__asm        cmp    dword ptr [ebp-0x7B0], 0;
	__asm        je     _T1692;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7B0];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x1F4], eax;
	__asm        jmp    _T169c;
_T1692:
	__asm        mov    dword ptr [ebp-0x1F4], 0;
_T169c:
	__asm        mov    dword ptr [ebp-0x1F8], 0;
	__asm        jmp    _T16ab;
_T16ab:
	__asm        push   2;
	__asm        push   0x1C;
	__asm        lea    eax, [ebp-0x1F8];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x1F8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x1F8], 0;
	__asm        je     _T16ff;

	__asm        mov    eax, [ebp-0x1F8];
	__asm        mov    [ebp-0x50C], eax;
	__asm        mov    eax, [ebp-0x50C];
	__asm        mov    [ebp-0x510], eax;
	__asm        mov    eax, [ebp-0x510];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T16ff:
	__asm        jmp    _T1704;
// LINE 243:
_T1704:
	GetPathForFile(0x2, 0x0, 0x598b0c, szFullSoundPath[0]);
// LINE 244:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7B4], eax;
	__asm        cmp    dword ptr [ebp-0x7B4], 0;
	__asm        je     _T1756;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7B4];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x1FC], eax;
	__asm        jmp    _T1760;
_T1756:
	__asm        mov    dword ptr [ebp-0x1FC], 0;
_T1760:
	__asm        mov    dword ptr [ebp-0x200], 0;
	__asm        jmp    _T176f;
_T176f:
	__asm        push   2;
	__asm        push   0x1D;
	__asm        lea    eax, [ebp-0x200];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x200];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x200], 0;
	__asm        je     _T17c3;

	__asm        mov    eax, [ebp-0x200];
	__asm        mov    [ebp-0x514], eax;
	__asm        mov    eax, [ebp-0x514];
	__asm        mov    [ebp-0x518], eax;
	__asm        mov    eax, [ebp-0x518];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T17c3:
	__asm        jmp    _T17c8;
// LINE 246:
_T17c8:
	GetPathForFile(0x2, 0x0, 0x598b18, szFullSoundPath[0]);
// LINE 247:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7B8], eax;
	__asm        cmp    dword ptr [ebp-0x7B8], 0;
	__asm        je     _T181a;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7B8];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x204], eax;
	__asm        jmp    _T1824;
_T181a:
	__asm        mov    dword ptr [ebp-0x204], 0;
_T1824:
	__asm        mov    dword ptr [ebp-0x208], 0;
	__asm        jmp    _T1833;
_T1833:
	__asm        push   2;
	__asm        push   0x1E;
	__asm        lea    eax, [ebp-0x208];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x208];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x208], 0;
	__asm        je     _T1887;

	__asm        mov    eax, [ebp-0x208];
	__asm        mov    [ebp-0x51C], eax;
	__asm        mov    eax, [ebp-0x51C];
	__asm        mov    [ebp-0x520], eax;
	__asm        mov    eax, [ebp-0x520];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T1887:
	__asm        jmp    _T188c;
// LINE 249:
_T188c:
	GetPathForFile(0x2, 0x0, 0x598b24, szFullSoundPath[0]);
// LINE 250:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7BC], eax;
	__asm        cmp    dword ptr [ebp-0x7BC], 0;
	__asm        je     _T18de;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7BC];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x20C], eax;
	__asm        jmp    _T18e8;
_T18de:
	__asm        mov    dword ptr [ebp-0x20C], 0;
_T18e8:
	__asm        mov    dword ptr [ebp-0x210], 0;
	__asm        jmp    _T18f7;
_T18f7:
	__asm        push   2;
	__asm        push   0x1F;
	__asm        lea    eax, [ebp-0x210];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x210];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x210], 0;
	__asm        je     _T194b;

	__asm        mov    eax, [ebp-0x210];
	__asm        mov    [ebp-0x524], eax;
	__asm        mov    eax, [ebp-0x524];
	__asm        mov    [ebp-0x528], eax;
	__asm        mov    eax, [ebp-0x528];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T194b:
	__asm        jmp    _T1950;
// LINE 252:
_T1950:
	GetPathForFile(0x2, 0x0, 0x598b30, szFullSoundPath[0]);
// LINE 253:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7C0], eax;
	__asm        cmp    dword ptr [ebp-0x7C0], 0;
	__asm        je     _T19a2;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7C0];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x214], eax;
	__asm        jmp    _T19ac;
_T19a2:
	__asm        mov    dword ptr [ebp-0x214], 0;
_T19ac:
	__asm        mov    dword ptr [ebp-0x218], 0;
	__asm        jmp    _T19bb;
_T19bb:
	__asm        push   2;
	__asm        push   0x20;
	__asm        lea    eax, [ebp-0x218];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x218];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x218], 0;
	__asm        je     _T1a0f;

	__asm        mov    eax, [ebp-0x218];
	__asm        mov    [ebp-0x52C], eax;
	__asm        mov    eax, [ebp-0x52C];
	__asm        mov    [ebp-0x530], eax;
	__asm        mov    eax, [ebp-0x530];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T1a0f:
	__asm        jmp    _T1a14;
// LINE 255:
_T1a14:
	GetPathForFile(0x2, 0x0, 0x598b3c, szFullSoundPath[0]);
// LINE 256:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7C4], eax;
	__asm        cmp    dword ptr [ebp-0x7C4], 0;
	__asm        je     _T1a66;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7C4];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x21C], eax;
	__asm        jmp    _T1a70;
_T1a66:
	__asm        mov    dword ptr [ebp-0x21C], 0;
_T1a70:
	__asm        mov    dword ptr [ebp-0x220], 0;
	__asm        jmp    _T1a7f;
_T1a7f:
	__asm        push   2;
	__asm        push   0x21;
	__asm        lea    eax, [ebp-0x220];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x220];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x220], 0;
	__asm        je     _T1ad3;

	__asm        mov    eax, [ebp-0x220];
	__asm        mov    [ebp-0x534], eax;
	__asm        mov    eax, [ebp-0x534];
	__asm        mov    [ebp-0x538], eax;
	__asm        mov    eax, [ebp-0x538];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T1ad3:
	__asm        jmp    _T1ad8;
// LINE 258:
_T1ad8:
	GetPathForFile(0x2, 0x0, 0x598b48, szFullSoundPath[0]);
// LINE 259:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7C8], eax;
	__asm        cmp    dword ptr [ebp-0x7C8], 0;
	__asm        je     _T1b2a;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7C8];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x224], eax;
	__asm        jmp    _T1b34;
_T1b2a:
	__asm        mov    dword ptr [ebp-0x224], 0;
_T1b34:
	__asm        mov    dword ptr [ebp-0x228], 0;
	__asm        jmp    _T1b43;
_T1b43:
	__asm        push   2;
	__asm        push   0x22;
	__asm        lea    eax, [ebp-0x228];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x228];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x228], 0;
	__asm        je     _T1b97;

	__asm        mov    eax, [ebp-0x228];
	__asm        mov    [ebp-0x53C], eax;
	__asm        mov    eax, [ebp-0x53C];
	__asm        mov    [ebp-0x540], eax;
	__asm        mov    eax, [ebp-0x540];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T1b97:
	__asm        jmp    _T1b9c;
// LINE 261:
_T1b9c:
	GetPathForFile(0x2, 0x0, 0x598b54, szFullSoundPath[0]);
// LINE 262:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7CC], eax;
	__asm        cmp    dword ptr [ebp-0x7CC], 0;
	__asm        je     _T1bee;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7CC];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x22C], eax;
	__asm        jmp    _T1bf8;
_T1bee:
	__asm        mov    dword ptr [ebp-0x22C], 0;
_T1bf8:
	__asm        mov    dword ptr [ebp-0x230], 0;
	__asm        jmp    _T1c07;
_T1c07:
	__asm        push   2;
	__asm        push   0x23;
	__asm        lea    eax, [ebp-0x230];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x230];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x230], 0;
	__asm        je     _T1c5b;

	__asm        mov    eax, [ebp-0x230];
	__asm        mov    [ebp-0x544], eax;
	__asm        mov    eax, [ebp-0x544];
	__asm        mov    [ebp-0x548], eax;
	__asm        mov    eax, [ebp-0x548];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T1c5b:
	__asm        jmp    _T1c60;
// LINE 264:
_T1c60:
	GetPathForFile(0x2, 0x0, 0x598b60, szFullSoundPath[0]);
// LINE 265:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7D0], eax;
	__asm        cmp    dword ptr [ebp-0x7D0], 0;
	__asm        je     _T1cb2;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7D0];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x234], eax;
	__asm        jmp    _T1cbc;
_T1cb2:
	__asm        mov    dword ptr [ebp-0x234], 0;
_T1cbc:
	__asm        mov    dword ptr [ebp-0x238], 0;
	__asm        jmp    _T1ccb;
_T1ccb:
	__asm        push   2;
	__asm        push   0x24;
	__asm        lea    eax, [ebp-0x238];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x238];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x238], 0;
	__asm        je     _T1d1f;

	__asm        mov    eax, [ebp-0x238];
	__asm        mov    [ebp-0x54C], eax;
	__asm        mov    eax, [ebp-0x54C];
	__asm        mov    [ebp-0x550], eax;
	__asm        mov    eax, [ebp-0x550];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T1d1f:
	__asm        jmp    _T1d24;
// LINE 267:
_T1d24:
	GetPathForFile(0x2, 0x0, 0x598b70, szFullSoundPath[0]);
// LINE 268:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7D4], eax;
	__asm        cmp    dword ptr [ebp-0x7D4], 0;
	__asm        je     _T1d76;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7D4];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x23C], eax;
	__asm        jmp    _T1d80;
_T1d76:
	__asm        mov    dword ptr [ebp-0x23C], 0;
_T1d80:
	__asm        mov    dword ptr [ebp-0x240], 0;
	__asm        jmp    _T1d8f;
_T1d8f:
	__asm        push   2;
	__asm        push   0x25;
	__asm        lea    eax, [ebp-0x240];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x240];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x240], 0;
	__asm        je     _T1de3;

	__asm        mov    eax, [ebp-0x240];
	__asm        mov    [ebp-0x554], eax;
	__asm        mov    eax, [ebp-0x554];
	__asm        mov    [ebp-0x558], eax;
	__asm        mov    eax, [ebp-0x558];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T1de3:
	__asm        jmp    _T1de8;
// LINE 270:
_T1de8:
	GetPathForFile(0x2, 0x0, 0x598b80, szFullSoundPath[0]);
// LINE 271:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7D8], eax;
	__asm        cmp    dword ptr [ebp-0x7D8], 0;
	__asm        je     _T1e3a;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7D8];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x244], eax;
	__asm        jmp    _T1e44;
_T1e3a:
	__asm        mov    dword ptr [ebp-0x244], 0;
_T1e44:
	__asm        mov    dword ptr [ebp-0x248], 0;
	__asm        jmp    _T1e53;
_T1e53:
	__asm        push   2;
	__asm        push   0x27;
	__asm        lea    eax, [ebp-0x248];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x248];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x248], 0;
	__asm        je     _T1ea7;

	__asm        mov    eax, [ebp-0x248];
	__asm        mov    [ebp-0x55C], eax;
	__asm        mov    eax, [ebp-0x55C];
	__asm        mov    [ebp-0x560], eax;
	__asm        mov    eax, [ebp-0x560];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T1ea7:
	__asm        jmp    _T1eac;
// LINE 273:
_T1eac:
	GetPathForFile(0x2, 0x0, 0x598b8c, szFullSoundPath[0]);
// LINE 274:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7DC], eax;
	__asm        cmp    dword ptr [ebp-0x7DC], 0;
	__asm        je     _T1efe;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7DC];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x24C], eax;
	__asm        jmp    _T1f08;
_T1efe:
	__asm        mov    dword ptr [ebp-0x24C], 0;
_T1f08:
	__asm        mov    dword ptr [ebp-0x250], 0;
	__asm        jmp    _T1f17;
_T1f17:
	__asm        push   2;
	__asm        push   0x28;
	__asm        lea    eax, [ebp-0x250];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x250];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x250], 0;
	__asm        je     _T1f6b;

	__asm        mov    eax, [ebp-0x250];
	__asm        mov    [ebp-0x564], eax;
	__asm        mov    eax, [ebp-0x564];
	__asm        mov    [ebp-0x568], eax;
	__asm        mov    eax, [ebp-0x568];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T1f6b:
	__asm        jmp    _T1f70;
// LINE 276:
_T1f70:
	GetPathForFile(0x2, 0x0, 0x598b94, szFullSoundPath[0]);
// LINE 277:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7E0], eax;
	__asm        cmp    dword ptr [ebp-0x7E0], 0;
	__asm        je     _T1fc2;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7E0];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x254], eax;
	__asm        jmp    _T1fcc;
_T1fc2:
	__asm        mov    dword ptr [ebp-0x254], 0;
_T1fcc:
	__asm        mov    dword ptr [ebp-0x258], 0;
	__asm        jmp    _T1fdb;
_T1fdb:
	__asm        push   2;
	__asm        push   0x29;
	__asm        lea    eax, [ebp-0x258];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x258];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x258], 0;
	__asm        je     _T202f;

	__asm        mov    eax, [ebp-0x258];
	__asm        mov    [ebp-0x56C], eax;
	__asm        mov    eax, [ebp-0x56C];
	__asm        mov    [ebp-0x570], eax;
	__asm        mov    eax, [ebp-0x570];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T202f:
	__asm        jmp    _T2034;
// LINE 279:
_T2034:
	GetPathForFile(0x2, 0x0, 0x598b9c, szFullSoundPath[0]);
// LINE 280:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7E4], eax;
	__asm        cmp    dword ptr [ebp-0x7E4], 0;
	__asm        je     _T2086;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7E4];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x25C], eax;
	__asm        jmp    _T2090;
_T2086:
	__asm        mov    dword ptr [ebp-0x25C], 0;
_T2090:
	__asm        mov    dword ptr [ebp-0x260], 0;
	__asm        jmp    _T209f;
_T209f:
	__asm        push   2;
	__asm        push   0x2A;
	__asm        lea    eax, [ebp-0x260];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x260];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x260], 0;
	__asm        je     _T20f3;

	__asm        mov    eax, [ebp-0x260];
	__asm        mov    [ebp-0x574], eax;
	__asm        mov    eax, [ebp-0x574];
	__asm        mov    [ebp-0x578], eax;
	__asm        mov    eax, [ebp-0x578];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T20f3:
	__asm        jmp    _T20f8;
// LINE 282:
_T20f8:
	GetPathForFile(0x2, 0x0, 0x598ba8, szFullSoundPath[0]);
// LINE 283:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7E8], eax;
	__asm        cmp    dword ptr [ebp-0x7E8], 0;
	__asm        je     _T214a;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7E8];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x264], eax;
	__asm        jmp    _T2154;
_T214a:
	__asm        mov    dword ptr [ebp-0x264], 0;
_T2154:
	__asm        mov    dword ptr [ebp-0x268], 0;
	__asm        jmp    _T2163;
_T2163:
	__asm        push   2;
	__asm        push   0x2B;
	__asm        lea    eax, [ebp-0x268];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x268];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x268], 0;
	__asm        je     _T21b7;

	__asm        mov    eax, [ebp-0x268];
	__asm        mov    [ebp-0x57C], eax;
	__asm        mov    eax, [ebp-0x57C];
	__asm        mov    [ebp-0x580], eax;
	__asm        mov    eax, [ebp-0x580];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T21b7:
	__asm        jmp    _T21bc;
// LINE 285:
_T21bc:
	GetPathForFile(0x2, 0x0, 0x598bb4, szFullSoundPath[0]);
// LINE 286:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7EC], eax;
	__asm        cmp    dword ptr [ebp-0x7EC], 0;
	__asm        je     _T220e;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7EC];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x26C], eax;
	__asm        jmp    _T2218;
_T220e:
	__asm        mov    dword ptr [ebp-0x26C], 0;
_T2218:
	__asm        mov    dword ptr [ebp-0x270], 0;
	__asm        jmp    _T2227;
_T2227:
	__asm        push   2;
	__asm        push   0x2C;
	__asm        lea    eax, [ebp-0x270];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x270];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x270], 0;
	__asm        je     _T227b;

	__asm        mov    eax, [ebp-0x270];
	__asm        mov    [ebp-0x584], eax;
	__asm        mov    eax, [ebp-0x584];
	__asm        mov    [ebp-0x588], eax;
	__asm        mov    eax, [ebp-0x588];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T227b:
	__asm        jmp    _T2280;
// LINE 288:
_T2280:
	GetPathForFile(0x2, 0x0, 0x598bc0, szFullSoundPath[0]);
// LINE 289:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7F0], eax;
	__asm        cmp    dword ptr [ebp-0x7F0], 0;
	__asm        je     _T22d2;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7F0];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x274], eax;
	__asm        jmp    _T22dc;
_T22d2:
	__asm        mov    dword ptr [ebp-0x274], 0;
_T22dc:
	__asm        mov    dword ptr [ebp-0x278], 0;
	__asm        jmp    _T22eb;
_T22eb:
	__asm        push   2;
	__asm        push   0x2D;
	__asm        lea    eax, [ebp-0x278];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x278];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x278], 0;
	__asm        je     _T233f;

	__asm        mov    eax, [ebp-0x278];
	__asm        mov    [ebp-0x58C], eax;
	__asm        mov    eax, [ebp-0x58C];
	__asm        mov    [ebp-0x590], eax;
	__asm        mov    eax, [ebp-0x590];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T233f:
	__asm        jmp    _T2344;
// LINE 291:
_T2344:
	GetPathForFile(0x2, 0x0, 0x598bcc, szFullSoundPath[0]);
// LINE 292:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7F4], eax;
	__asm        cmp    dword ptr [ebp-0x7F4], 0;
	__asm        je     _T2396;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7F4];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x27C], eax;
	__asm        jmp    _T23a0;
_T2396:
	__asm        mov    dword ptr [ebp-0x27C], 0;
_T23a0:
	__asm        mov    dword ptr [ebp-0x280], 0;
	__asm        jmp    _T23af;
_T23af:
	__asm        push   2;
	__asm        push   0x2E;
	__asm        lea    eax, [ebp-0x280];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x280];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x280], 0;
	__asm        je     _T2403;

	__asm        mov    eax, [ebp-0x280];
	__asm        mov    [ebp-0x594], eax;
	__asm        mov    eax, [ebp-0x594];
	__asm        mov    [ebp-0x598], eax;
	__asm        mov    eax, [ebp-0x598];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T2403:
	__asm        jmp    _T2408;
// LINE 294:
_T2408:
	GetPathForFile(0x2, 0x0, 0x598bd8, szFullSoundPath[0]);
// LINE 295:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7F8], eax;
	__asm        cmp    dword ptr [ebp-0x7F8], 0;
	__asm        je     _T245a;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7F8];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x284], eax;
	__asm        jmp    _T2464;
_T245a:
	__asm        mov    dword ptr [ebp-0x284], 0;
_T2464:
	__asm        mov    dword ptr [ebp-0x288], 0;
	__asm        jmp    _T2473;
_T2473:
	__asm        push   2;
	__asm        push   0x2F;
	__asm        lea    eax, [ebp-0x288];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x288];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x288], 0;
	__asm        je     _T24c7;

	__asm        mov    eax, [ebp-0x288];
	__asm        mov    [ebp-0x59C], eax;
	__asm        mov    eax, [ebp-0x59C];
	__asm        mov    [ebp-0x5A0], eax;
	__asm        mov    eax, [ebp-0x5A0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T24c7:
	__asm        jmp    _T24cc;
// LINE 297:
_T24cc:
	GetPathForFile(0x2, 0x0, 0x598be4, szFullSoundPath[0]);
// LINE 298:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7FC], eax;
	__asm        cmp    dword ptr [ebp-0x7FC], 0;
	__asm        je     _T251e;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7FC];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x28C], eax;
	__asm        jmp    _T2528;
_T251e:
	__asm        mov    dword ptr [ebp-0x28C], 0;
_T2528:
	__asm        mov    dword ptr [ebp-0x290], 0;
	__asm        jmp    _T2537;
_T2537:
	__asm        push   2;
	__asm        push   0x30;
	__asm        lea    eax, [ebp-0x290];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x290];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x290], 0;
	__asm        je     _T258b;

	__asm        mov    eax, [ebp-0x290];
	__asm        mov    [ebp-0x5A4], eax;
	__asm        mov    eax, [ebp-0x5A4];
	__asm        mov    [ebp-0x5A8], eax;
	__asm        mov    eax, [ebp-0x5A8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T258b:
	__asm        jmp    _T2590;
// LINE 300:
_T2590:
	GetPathForFile(0x2, 0x0, 0x598bf0, szFullSoundPath[0]);
// LINE 301:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x800], eax;
	__asm        cmp    dword ptr [ebp-0x800], 0;
	__asm        je     _T25e2;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x800];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x294], eax;
	__asm        jmp    _T25ec;
_T25e2:
	__asm        mov    dword ptr [ebp-0x294], 0;
_T25ec:
	__asm        mov    dword ptr [ebp-0x298], 0;
	__asm        jmp    _T25fb;
_T25fb:
	__asm        push   2;
	__asm        push   0x31;
	__asm        lea    eax, [ebp-0x298];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x298];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x298], 0;
	__asm        je     _T264f;

	__asm        mov    eax, [ebp-0x298];
	__asm        mov    [ebp-0x5AC], eax;
	__asm        mov    eax, [ebp-0x5AC];
	__asm        mov    [ebp-0x5B0], eax;
	__asm        mov    eax, [ebp-0x5B0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T264f:
	__asm        jmp    _T2654;
// LINE 305:
_T2654:
	GetPathForFile(0x2, 0x0, 0x598c00, szFullSoundPath[0]);
// LINE 306:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x804], eax;
	__asm        cmp    dword ptr [ebp-0x804], 0;
	__asm        je     _T26a6;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x804];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x29C], eax;
	__asm        jmp    _T26b0;
_T26a6:
	__asm        mov    dword ptr [ebp-0x29C], 0;
_T26b0:
	__asm        mov    dword ptr [ebp-0x2A0], 0;
	__asm        jmp    _T26bf;
_T26bf:
	__asm        push   2;
	__asm        push   0x32;
	__asm        lea    eax, [ebp-0x2A0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x2A0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x2A0], 0;
	__asm        je     _T2713;

	__asm        mov    eax, [ebp-0x2A0];
	__asm        mov    [ebp-0x5B4], eax;
	__asm        mov    eax, [ebp-0x5B4];
	__asm        mov    [ebp-0x5B8], eax;
	__asm        mov    eax, [ebp-0x5B8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T2713:
	__asm        jmp    _T2718;
// LINE 308:
_T2718:
	GetPathForFile(0x2, 0x0, 0x598c0c, szFullSoundPath[0]);
// LINE 309:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x808], eax;
	__asm        cmp    dword ptr [ebp-0x808], 0;
	__asm        je     _T276a;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x808];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x2A4], eax;
	__asm        jmp    _T2774;
_T276a:
	__asm        mov    dword ptr [ebp-0x2A4], 0;
_T2774:
	__asm        mov    dword ptr [ebp-0x2A8], 0;
	__asm        jmp    _T2783;
_T2783:
	__asm        push   2;
	__asm        push   0x33;
	__asm        lea    eax, [ebp-0x2A8];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x2A8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x2A8], 0;
	__asm        je     _T27d7;

	__asm        mov    eax, [ebp-0x2A8];
	__asm        mov    [ebp-0x5BC], eax;
	__asm        mov    eax, [ebp-0x5BC];
	__asm        mov    [ebp-0x5C0], eax;
	__asm        mov    eax, [ebp-0x5C0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T27d7:
	__asm        jmp    _T27dc;
// LINE 311:
_T27dc:
	GetPathForFile(0x2, 0x0, 0x598c18, szFullSoundPath[0]);
// LINE 312:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x80C], eax;
	__asm        cmp    dword ptr [ebp-0x80C], 0;
	__asm        je     _T282e;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x80C];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x2AC], eax;
	__asm        jmp    _T2838;
_T282e:
	__asm        mov    dword ptr [ebp-0x2AC], 0;
_T2838:
	__asm        mov    dword ptr [ebp-0x2B0], 0;
	__asm        jmp    _T2847;
_T2847:
	__asm        push   2;
	__asm        push   0x34;
	__asm        lea    eax, [ebp-0x2B0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x2B0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x2B0], 0;
	__asm        je     _T289b;

	__asm        mov    eax, [ebp-0x2B0];
	__asm        mov    [ebp-0x5C4], eax;
	__asm        mov    eax, [ebp-0x5C4];
	__asm        mov    [ebp-0x5C8], eax;
	__asm        mov    eax, [ebp-0x5C8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T289b:
	__asm        jmp    _T28a0;
// LINE 314:
_T28a0:
	GetPathForFile(0x2, 0x0, 0x598c24, szFullSoundPath[0]);
// LINE 315:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x810], eax;
	__asm        cmp    dword ptr [ebp-0x810], 0;
	__asm        je     _T28f2;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x810];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x2B4], eax;
	__asm        jmp    _T28fc;
_T28f2:
	__asm        mov    dword ptr [ebp-0x2B4], 0;
_T28fc:
	__asm        mov    dword ptr [ebp-0x2B8], 0;
	__asm        jmp    _T290b;
_T290b:
	__asm        push   2;
	__asm        push   0x35;
	__asm        lea    eax, [ebp-0x2B8];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x2B8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x2B8], 0;
	__asm        je     _T295f;

	__asm        mov    eax, [ebp-0x2B8];
	__asm        mov    [ebp-0x5CC], eax;
	__asm        mov    eax, [ebp-0x5CC];
	__asm        mov    [ebp-0x5D0], eax;
	__asm        mov    eax, [ebp-0x5D0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T295f:
	__asm        jmp    _T2964;
// LINE 317:
_T2964:
	GetPathForFile(0x2, 0x0, 0x598c30, szFullSoundPath[0]);
// LINE 318:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x814], eax;
	__asm        cmp    dword ptr [ebp-0x814], 0;
	__asm        je     _T29b6;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x814];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x2BC], eax;
	__asm        jmp    _T29c0;
_T29b6:
	__asm        mov    dword ptr [ebp-0x2BC], 0;
_T29c0:
	__asm        mov    dword ptr [ebp-0x2C0], 0;
	__asm        jmp    _T29cf;
_T29cf:
	__asm        push   2;
	__asm        push   0x36;
	__asm        lea    eax, [ebp-0x2C0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x2C0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x2C0], 0;
	__asm        je     _T2a23;

	__asm        mov    eax, [ebp-0x2C0];
	__asm        mov    [ebp-0x5D4], eax;
	__asm        mov    eax, [ebp-0x5D4];
	__asm        mov    [ebp-0x5D8], eax;
	__asm        mov    eax, [ebp-0x5D8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T2a23:
	__asm        jmp    _T2a28;
// LINE 320:
_T2a28:
	GetPathForFile(0x2, 0x0, 0x598c3c, szFullSoundPath[0]);
// LINE 321:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x818], eax;
	__asm        cmp    dword ptr [ebp-0x818], 0;
	__asm        je     _T2a7a;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x818];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x2C4], eax;
	__asm        jmp    _T2a84;
_T2a7a:
	__asm        mov    dword ptr [ebp-0x2C4], 0;
_T2a84:
	__asm        mov    dword ptr [ebp-0x2C8], 0;
	__asm        jmp    _T2a93;
_T2a93:
	__asm        push   2;
	__asm        push   0x37;
	__asm        lea    eax, [ebp-0x2C8];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x2C8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x2C8], 0;
	__asm        je     _T2ae7;

	__asm        mov    eax, [ebp-0x2C8];
	__asm        mov    [ebp-0x5DC], eax;
	__asm        mov    eax, [ebp-0x5DC];
	__asm        mov    [ebp-0x5E0], eax;
	__asm        mov    eax, [ebp-0x5E0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T2ae7:
	__asm        jmp    _T2aec;
// LINE 323:
_T2aec:
	GetPathForFile(0x2, 0x0, 0x598c48, szFullSoundPath[0]);
// LINE 324:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x81C], eax;
	__asm        cmp    dword ptr [ebp-0x81C], 0;
	__asm        je     _T2b3e;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x81C];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x2CC], eax;
	__asm        jmp    _T2b48;
_T2b3e:
	__asm        mov    dword ptr [ebp-0x2CC], 0;
_T2b48:
	__asm        mov    dword ptr [ebp-0x2D0], 0;
	__asm        jmp    _T2b57;
_T2b57:
	__asm        push   2;
	__asm        push   0x38;
	__asm        lea    eax, [ebp-0x2D0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x2D0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x2D0], 0;
	__asm        je     _T2bab;

	__asm        mov    eax, [ebp-0x2D0];
	__asm        mov    [ebp-0x5E4], eax;
	__asm        mov    eax, [ebp-0x5E4];
	__asm        mov    [ebp-0x5E8], eax;
	__asm        mov    eax, [ebp-0x5E8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T2bab:
	__asm        jmp    _T2bb0;
// LINE 326:
_T2bb0:
	GetPathForFile(0x2, 0x0, 0x598c54, szFullSoundPath[0]);
// LINE 327:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x820], eax;
	__asm        cmp    dword ptr [ebp-0x820], 0;
	__asm        je     _T2c02;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x820];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x2D4], eax;
	__asm        jmp    _T2c0c;
_T2c02:
	__asm        mov    dword ptr [ebp-0x2D4], 0;
_T2c0c:
	__asm        mov    dword ptr [ebp-0x2D8], 0;
	__asm        jmp    _T2c1b;
_T2c1b:
	__asm        push   2;
	__asm        push   0x39;
	__asm        lea    eax, [ebp-0x2D8];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x2D8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x2D8], 0;
	__asm        je     _T2c6f;

	__asm        mov    eax, [ebp-0x2D8];
	__asm        mov    [ebp-0x5EC], eax;
	__asm        mov    eax, [ebp-0x5EC];
	__asm        mov    [ebp-0x5F0], eax;
	__asm        mov    eax, [ebp-0x5F0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T2c6f:
	__asm        jmp    _T2c74;
// LINE 329:
_T2c74:
	GetPathForFile(0x2, 0x0, 0x598c60, szFullSoundPath[0]);
// LINE 330:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x824], eax;
	__asm        cmp    dword ptr [ebp-0x824], 0;
	__asm        je     _T2cc6;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x824];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x2DC], eax;
	__asm        jmp    _T2cd0;
_T2cc6:
	__asm        mov    dword ptr [ebp-0x2DC], 0;
_T2cd0:
	__asm        mov    dword ptr [ebp-0x2E0], 0;
	__asm        jmp    _T2cdf;
_T2cdf:
	__asm        push   2;
	__asm        push   0x3A;
	__asm        lea    eax, [ebp-0x2E0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x2E0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x2E0], 0;
	__asm        je     _T2d33;

	__asm        mov    eax, [ebp-0x2E0];
	__asm        mov    [ebp-0x5F4], eax;
	__asm        mov    eax, [ebp-0x5F4];
	__asm        mov    [ebp-0x5F8], eax;
	__asm        mov    eax, [ebp-0x5F8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T2d33:
	__asm        jmp    _T2d38;
// LINE 332:
_T2d38:
	GetPathForFile(0x2, 0x0, 0x598c6c, szFullSoundPath[0]);
// LINE 333:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x828], eax;
	__asm        cmp    dword ptr [ebp-0x828], 0;
	__asm        je     _T2d8a;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x828];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x2E4], eax;
	__asm        jmp    _T2d94;
_T2d8a:
	__asm        mov    dword ptr [ebp-0x2E4], 0;
_T2d94:
	__asm        mov    dword ptr [ebp-0x2E8], 0;
	__asm        jmp    _T2da3;
_T2da3:
	__asm        push   2;
	__asm        push   0x3B;
	__asm        lea    eax, [ebp-0x2E8];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x2E8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x2E8], 0;
	__asm        je     _T2df7;

	__asm        mov    eax, [ebp-0x2E8];
	__asm        mov    [ebp-0x5FC], eax;
	__asm        mov    eax, [ebp-0x5FC];
	__asm        mov    [ebp-0x600], eax;
	__asm        mov    eax, [ebp-0x600];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T2df7:
	__asm        jmp    _T2dfc;
// LINE 335:
_T2dfc:
	GetPathForFile(0x2, 0x0, 0x598c78, szFullSoundPath[0]);
// LINE 336:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x82C], eax;
	__asm        cmp    dword ptr [ebp-0x82C], 0;
	__asm        je     _T2e4e;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x82C];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x2EC], eax;
	__asm        jmp    _T2e58;
_T2e4e:
	__asm        mov    dword ptr [ebp-0x2EC], 0;
_T2e58:
	__asm        mov    dword ptr [ebp-0x2F0], 0;
	__asm        jmp    _T2e67;
_T2e67:
	__asm        push   2;
	__asm        push   0x3C;
	__asm        lea    eax, [ebp-0x2F0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x2F0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x2F0], 0;
	__asm        je     _T2ebb;

	__asm        mov    eax, [ebp-0x2F0];
	__asm        mov    [ebp-0x604], eax;
	__asm        mov    eax, [ebp-0x604];
	__asm        mov    [ebp-0x608], eax;
	__asm        mov    eax, [ebp-0x608];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T2ebb:
	__asm        jmp    _T2ec0;
// LINE 338:
_T2ec0:
	GetPathForFile(0x2, 0x0, 0x598c84, szFullSoundPath[0]);
// LINE 339:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x830], eax;
	__asm        cmp    dword ptr [ebp-0x830], 0;
	__asm        je     _T2f12;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x830];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x2F4], eax;
	__asm        jmp    _T2f1c;
_T2f12:
	__asm        mov    dword ptr [ebp-0x2F4], 0;
_T2f1c:
	__asm        mov    dword ptr [ebp-0x2F8], 0;
	__asm        jmp    _T2f2b;
_T2f2b:
	__asm        push   2;
	__asm        push   0x3D;
	__asm        lea    eax, [ebp-0x2F8];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x2F8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x2F8], 0;
	__asm        je     _T2f7f;

	__asm        mov    eax, [ebp-0x2F8];
	__asm        mov    [ebp-0x60C], eax;
	__asm        mov    eax, [ebp-0x60C];
	__asm        mov    [ebp-0x610], eax;
	__asm        mov    eax, [ebp-0x610];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T2f7f:
	__asm        jmp    _T2f84;
// LINE 341:
_T2f84:
	GetPathForFile(0x2, 0x0, 0x598c90, szFullSoundPath[0]);
// LINE 342:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x834], eax;
	__asm        cmp    dword ptr [ebp-0x834], 0;
	__asm        je     _T2fd6;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x834];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x2FC], eax;
	__asm        jmp    _T2fe0;
_T2fd6:
	__asm        mov    dword ptr [ebp-0x2FC], 0;
_T2fe0:
	__asm        mov    dword ptr [ebp-0x300], 0;
	__asm        jmp    _T2fef;
_T2fef:
	__asm        push   2;
	__asm        push   0x3E;
	__asm        lea    eax, [ebp-0x300];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x300];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x300], 0;
	__asm        je     _T3043;

	__asm        mov    eax, [ebp-0x300];
	__asm        mov    [ebp-0x614], eax;
	__asm        mov    eax, [ebp-0x614];
	__asm        mov    [ebp-0x618], eax;
	__asm        mov    eax, [ebp-0x618];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T3043:
	__asm        jmp    _T3048;
// LINE 344:
_T3048:
	GetPathForFile(0x2, 0x0, 0x598c9c, szFullSoundPath[0]);
// LINE 345:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x838], eax;
	__asm        cmp    dword ptr [ebp-0x838], 0;
	__asm        je     _T309a;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x838];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x304], eax;
	__asm        jmp    _T30a4;
_T309a:
	__asm        mov    dword ptr [ebp-0x304], 0;
_T30a4:
	__asm        mov    dword ptr [ebp-0x308], 0;
	__asm        jmp    _T30b3;
_T30b3:
	__asm        push   2;
	__asm        push   0x3F;
	__asm        lea    eax, [ebp-0x308];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x308];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x308], 0;
	__asm        je     _T3107;

	__asm        mov    eax, [ebp-0x308];
	__asm        mov    [ebp-0x61C], eax;
	__asm        mov    eax, [ebp-0x61C];
	__asm        mov    [ebp-0x620], eax;
	__asm        mov    eax, [ebp-0x620];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T3107:
	__asm        jmp    _T310c;
// LINE 347:
_T310c:
	GetPathForFile(0x2, 0x0, 0x598ca8, szFullSoundPath[0]);
// LINE 348:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x83C], eax;
	__asm        cmp    dword ptr [ebp-0x83C], 0;
	__asm        je     _T315e;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x83C];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x30C], eax;
	__asm        jmp    _T3168;
_T315e:
	__asm        mov    dword ptr [ebp-0x30C], 0;
_T3168:
	__asm        mov    dword ptr [ebp-0x310], 0;
	__asm        jmp    _T3177;
_T3177:
	__asm        push   2;
	__asm        push   0x40;
	__asm        lea    eax, [ebp-0x310];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x310];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x310], 0;
	__asm        je     _T31cb;

	__asm        mov    eax, [ebp-0x310];
	__asm        mov    [ebp-0x624], eax;
	__asm        mov    eax, [ebp-0x624];
	__asm        mov    [ebp-0x628], eax;
	__asm        mov    eax, [ebp-0x628];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T31cb:
	__asm        jmp    _T31d0;
// LINE 350:
_T31d0:
	GetPathForFile(0x2, 0x0, 0x598cb4, szFullSoundPath[0]);
// LINE 351:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x840], eax;
	__asm        cmp    dword ptr [ebp-0x840], 0;
	__asm        je     _T3222;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x840];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x314], eax;
	__asm        jmp    _T322c;
_T3222:
	__asm        mov    dword ptr [ebp-0x314], 0;
_T322c:
	__asm        mov    dword ptr [ebp-0x318], 0;
	__asm        jmp    _T323b;
_T323b:
	__asm        push   2;
	__asm        push   0x41;
	__asm        lea    eax, [ebp-0x318];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x318];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x318], 0;
	__asm        je     _T328f;

	__asm        mov    eax, [ebp-0x318];
	__asm        mov    [ebp-0x62C], eax;
	__asm        mov    eax, [ebp-0x62C];
	__asm        mov    [ebp-0x630], eax;
	__asm        mov    eax, [ebp-0x630];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T328f:
	__asm        jmp    _T3294;
// LINE 353:
_T3294:
	GetPathForFile(0x2, 0x0, 0x598cc0, szFullSoundPath[0]);
// LINE 354:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x844], eax;
	__asm        cmp    dword ptr [ebp-0x844], 0;
	__asm        je     _T32e6;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x844];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x31C], eax;
	__asm        jmp    _T32f0;
_T32e6:
	__asm        mov    dword ptr [ebp-0x31C], 0;
_T32f0:
	__asm        mov    dword ptr [ebp-0x320], 0;
	__asm        jmp    _T32ff;
_T32ff:
	__asm        push   2;
	__asm        push   0x42;
	__asm        lea    eax, [ebp-0x320];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x320];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x320], 0;
	__asm        je     _T3353;

	__asm        mov    eax, [ebp-0x320];
	__asm        mov    [ebp-0x634], eax;
	__asm        mov    eax, [ebp-0x634];
	__asm        mov    [ebp-0x638], eax;
	__asm        mov    eax, [ebp-0x638];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T3353:
	__asm        jmp    _T3358;
// LINE 356:
_T3358:
	GetPathForFile(0x2, 0x0, 0x598ccc, szFullSoundPath[0]);
// LINE 357:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x848], eax;
	__asm        cmp    dword ptr [ebp-0x848], 0;
	__asm        je     _T33aa;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x848];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x324], eax;
	__asm        jmp    _T33b4;
_T33aa:
	__asm        mov    dword ptr [ebp-0x324], 0;
_T33b4:
	__asm        mov    dword ptr [ebp-0x328], 0;
	__asm        jmp    _T33c3;
_T33c3:
	__asm        push   2;
	__asm        push   0x43;
	__asm        lea    eax, [ebp-0x328];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x328];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x328], 0;
	__asm        je     _T3417;

	__asm        mov    eax, [ebp-0x328];
	__asm        mov    [ebp-0x63C], eax;
	__asm        mov    eax, [ebp-0x63C];
	__asm        mov    [ebp-0x640], eax;
	__asm        mov    eax, [ebp-0x640];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T3417:
	__asm        jmp    _T341c;
// LINE 359:
_T341c:
	GetPathForFile(0x2, 0x0, 0x598cd8, szFullSoundPath[0]);
// LINE 360:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x84C], eax;
	__asm        cmp    dword ptr [ebp-0x84C], 0;
	__asm        je     _T346e;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x84C];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x32C], eax;
	__asm        jmp    _T3478;
_T346e:
	__asm        mov    dword ptr [ebp-0x32C], 0;
_T3478:
	__asm        mov    dword ptr [ebp-0x330], 0;
	__asm        jmp    _T3487;
_T3487:
	__asm        push   2;
	__asm        push   0x44;
	__asm        lea    eax, [ebp-0x330];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x330];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x330], 0;
	__asm        je     _T34db;

	__asm        mov    eax, [ebp-0x330];
	__asm        mov    [ebp-0x644], eax;
	__asm        mov    eax, [ebp-0x644];
	__asm        mov    [ebp-0x648], eax;
	__asm        mov    eax, [ebp-0x648];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T34db:
	__asm        jmp    _T34e0;
// LINE 362:
_T34e0:
	GetPathForFile(0x2, 0x0, 0x598ce4, szFullSoundPath[0]);
// LINE 363:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x850], eax;
	__asm        cmp    dword ptr [ebp-0x850], 0;
	__asm        je     _T3532;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x850];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x334], eax;
	__asm        jmp    _T353c;
_T3532:
	__asm        mov    dword ptr [ebp-0x334], 0;
_T353c:
	__asm        mov    dword ptr [ebp-0x338], 0;
	__asm        jmp    _T354b;
_T354b:
	__asm        push   2;
	__asm        push   0x45;
	__asm        lea    eax, [ebp-0x338];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x338];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x338], 0;
	__asm        je     _T359f;

	__asm        mov    eax, [ebp-0x338];
	__asm        mov    [ebp-0x64C], eax;
	__asm        mov    eax, [ebp-0x64C];
	__asm        mov    [ebp-0x650], eax;
	__asm        mov    eax, [ebp-0x650];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T359f:
	__asm        jmp    _T35a4;
// LINE 365:
_T35a4:
	GetPathForFile(0x2, 0x0, 0x598cf0, szFullSoundPath[0]);
// LINE 366:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x854], eax;
	__asm        cmp    dword ptr [ebp-0x854], 0;
	__asm        je     _T35f6;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x854];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x33C], eax;
	__asm        jmp    _T3600;
_T35f6:
	__asm        mov    dword ptr [ebp-0x33C], 0;
_T3600:
	__asm        mov    dword ptr [ebp-0x340], 0;
	__asm        jmp    _T360f;
_T360f:
	__asm        push   2;
	__asm        push   0x46;
	__asm        lea    eax, [ebp-0x340];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x340];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x340], 0;
	__asm        je     _T3663;

	__asm        mov    eax, [ebp-0x340];
	__asm        mov    [ebp-0x654], eax;
	__asm        mov    eax, [ebp-0x654];
	__asm        mov    [ebp-0x658], eax;
	__asm        mov    eax, [ebp-0x658];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T3663:
	__asm        jmp    _T3668;
// LINE 368:
_T3668:
	GetPathForFile(0x2, 0x0, 0x598cfc, szFullSoundPath[0]);
// LINE 369:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x858], eax;
	__asm        cmp    dword ptr [ebp-0x858], 0;
	__asm        je     _T36ba;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x858];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x344], eax;
	__asm        jmp    _T36c4;
_T36ba:
	__asm        mov    dword ptr [ebp-0x344], 0;
_T36c4:
	__asm        mov    dword ptr [ebp-0x348], 0;
	__asm        jmp    _T36d3;
_T36d3:
	__asm        push   2;
	__asm        push   0x47;
	__asm        lea    eax, [ebp-0x348];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x348];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x348], 0;
	__asm        je     _T3727;

	__asm        mov    eax, [ebp-0x348];
	__asm        mov    [ebp-0x65C], eax;
	__asm        mov    eax, [ebp-0x65C];
	__asm        mov    [ebp-0x660], eax;
	__asm        mov    eax, [ebp-0x660];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T3727:
	__asm        jmp    _T372c;
// LINE 371:
_T372c:
	GetPathForFile(0x2, 0x0, 0x598d08, szFullSoundPath[0]);
// LINE 372:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x85C], eax;
	__asm        cmp    dword ptr [ebp-0x85C], 0;
	__asm        je     _T377e;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x85C];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x34C], eax;
	__asm        jmp    _T3788;
_T377e:
	__asm        mov    dword ptr [ebp-0x34C], 0;
_T3788:
	__asm        mov    dword ptr [ebp-0x350], 0;
	__asm        jmp    _T3797;
_T3797:
	__asm        push   2;
	__asm        push   0x48;
	__asm        lea    eax, [ebp-0x350];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x350];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x350], 0;
	__asm        je     _T37eb;

	__asm        mov    eax, [ebp-0x350];
	__asm        mov    [ebp-0x664], eax;
	__asm        mov    eax, [ebp-0x664];
	__asm        mov    [ebp-0x668], eax;
	__asm        mov    eax, [ebp-0x668];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T37eb:
	__asm        jmp    _T37f0;
// LINE 374:
_T37f0:
	GetPathForFile(0x2, 0x0, 0x598d14, szFullSoundPath[0]);
// LINE 375:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x860], eax;
	__asm        cmp    dword ptr [ebp-0x860], 0;
	__asm        je     _T3842;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x860];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x354], eax;
	__asm        jmp    _T384c;
_T3842:
	__asm        mov    dword ptr [ebp-0x354], 0;
_T384c:
	__asm        mov    dword ptr [ebp-0x358], 0;
	__asm        jmp    _T385b;
_T385b:
	__asm        push   2;
	__asm        push   0x49;
	__asm        lea    eax, [ebp-0x358];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x358];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x358], 0;
	__asm        je     _T38af;

	__asm        mov    eax, [ebp-0x358];
	__asm        mov    [ebp-0x66C], eax;
	__asm        mov    eax, [ebp-0x66C];
	__asm        mov    [ebp-0x670], eax;
	__asm        mov    eax, [ebp-0x670];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T38af:
	__asm        jmp    _T38b4;
// LINE 377:
_T38b4:
	GetPathForFile(0x2, 0x0, 0x598d20, szFullSoundPath[0]);
// LINE 378:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x864], eax;
	__asm        cmp    dword ptr [ebp-0x864], 0;
	__asm        je     _T3906;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x864];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x35C], eax;
	__asm        jmp    _T3910;
_T3906:
	__asm        mov    dword ptr [ebp-0x35C], 0;
_T3910:
	__asm        mov    dword ptr [ebp-0x360], 0;
	__asm        jmp    _T391f;
_T391f:
	__asm        push   2;
	__asm        push   0x4A;
	__asm        lea    eax, [ebp-0x360];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x360];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x360], 0;
	__asm        je     _T3973;

	__asm        mov    eax, [ebp-0x360];
	__asm        mov    [ebp-0x674], eax;
	__asm        mov    eax, [ebp-0x674];
	__asm        mov    [ebp-0x678], eax;
	__asm        mov    eax, [ebp-0x678];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T3973:
	__asm        jmp    _T3978;
// LINE 380:
_T3978:
	GetPathForFile(0x2, 0x0, 0x598d2c, szFullSoundPath[0]);
// LINE 381:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x868], eax;
	__asm        cmp    dword ptr [ebp-0x868], 0;
	__asm        je     _T39ca;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x868];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x364], eax;
	__asm        jmp    _T39d4;
_T39ca:
	__asm        mov    dword ptr [ebp-0x364], 0;
_T39d4:
	__asm        mov    dword ptr [ebp-0x368], 0;
	__asm        jmp    _T39e3;
_T39e3:
	__asm        push   2;
	__asm        push   0x4B;
	__asm        lea    eax, [ebp-0x368];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x368];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x368], 0;
	__asm        je     _T3a37;

	__asm        mov    eax, [ebp-0x368];
	__asm        mov    [ebp-0x67C], eax;
	__asm        mov    eax, [ebp-0x67C];
	__asm        mov    [ebp-0x680], eax;
	__asm        mov    eax, [ebp-0x680];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T3a37:
	__asm        jmp    _T3a3c;
// LINE 383:
_T3a3c:
	GetPathForFile(0x2, 0x0, 0x598d38, szFullSoundPath[0]);
// LINE 384:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x86C], eax;
	__asm        cmp    dword ptr [ebp-0x86C], 0;
	__asm        je     _T3a8e;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x86C];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x36C], eax;
	__asm        jmp    _T3a98;
_T3a8e:
	__asm        mov    dword ptr [ebp-0x36C], 0;
_T3a98:
	__asm        mov    dword ptr [ebp-0x370], 0;
	__asm        jmp    _T3aa7;
_T3aa7:
	__asm        push   2;
	__asm        push   0x4C;
	__asm        lea    eax, [ebp-0x370];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x370];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x370], 0;
	__asm        je     _T3afb;

	__asm        mov    eax, [ebp-0x370];
	__asm        mov    [ebp-0x684], eax;
	__asm        mov    eax, [ebp-0x684];
	__asm        mov    [ebp-0x688], eax;
	__asm        mov    eax, [ebp-0x688];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T3afb:
	__asm        jmp    _T3b00;
// LINE 386:
_T3b00:
	GetPathForFile(0x2, 0x0, 0x598d44, szFullSoundPath[0]);
// LINE 387:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x870], eax;
	__asm        cmp    dword ptr [ebp-0x870], 0;
	__asm        je     _T3b52;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x870];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x374], eax;
	__asm        jmp    _T3b5c;
_T3b52:
	__asm        mov    dword ptr [ebp-0x374], 0;
_T3b5c:
	__asm        mov    dword ptr [ebp-0x378], 0;
	__asm        jmp    _T3b6b;
_T3b6b:
	__asm        push   2;
	__asm        push   0x4D;
	__asm        lea    eax, [ebp-0x378];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x378];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x378], 0;
	__asm        je     _T3bbf;

	__asm        mov    eax, [ebp-0x378];
	__asm        mov    [ebp-0x68C], eax;
	__asm        mov    eax, [ebp-0x68C];
	__asm        mov    [ebp-0x690], eax;
	__asm        mov    eax, [ebp-0x690];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T3bbf:
	__asm        jmp    _T3bc4;
// LINE 389:
_T3bc4:
	GetPathForFile(0x2, 0x0, 0x598d50, szFullSoundPath[0]);
// LINE 390:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x874], eax;
	__asm        cmp    dword ptr [ebp-0x874], 0;
	__asm        je     _T3c16;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x874];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x37C], eax;
	__asm        jmp    _T3c20;
_T3c16:
	__asm        mov    dword ptr [ebp-0x37C], 0;
_T3c20:
	__asm        mov    dword ptr [ebp-0x380], 0;
	__asm        jmp    _T3c2f;
_T3c2f:
	__asm        push   2;
	__asm        push   0x4E;
	__asm        lea    eax, [ebp-0x380];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x380];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x380], 0;
	__asm        je     _T3c83;

	__asm        mov    eax, [ebp-0x380];
	__asm        mov    [ebp-0x694], eax;
	__asm        mov    eax, [ebp-0x694];
	__asm        mov    [ebp-0x698], eax;
	__asm        mov    eax, [ebp-0x698];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T3c83:
	__asm        jmp    _T3c88;
// LINE 392:
_T3c88:
	GetPathForFile(0x2, 0x0, 0x598d5c, szFullSoundPath[0]);
// LINE 393:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x878], eax;
	__asm        cmp    dword ptr [ebp-0x878], 0;
	__asm        je     _T3cda;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x878];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x384], eax;
	__asm        jmp    _T3ce4;
_T3cda:
	__asm        mov    dword ptr [ebp-0x384], 0;
_T3ce4:
	__asm        mov    dword ptr [ebp-0x388], 0;
	__asm        jmp    _T3cf3;
_T3cf3:
	__asm        push   2;
	__asm        push   0x4F;
	__asm        lea    eax, [ebp-0x388];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x388];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x388], 0;
	__asm        je     _T3d47;

	__asm        mov    eax, [ebp-0x388];
	__asm        mov    [ebp-0x69C], eax;
	__asm        mov    eax, [ebp-0x69C];
	__asm        mov    [ebp-0x6A0], eax;
	__asm        mov    eax, [ebp-0x6A0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T3d47:
	__asm        jmp    _T3d4c;
// LINE 395:
_T3d4c:
	GetPathForFile(0x2, 0x0, 0x598d68, szFullSoundPath[0]);
// LINE 396:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x87C], eax;
	__asm        cmp    dword ptr [ebp-0x87C], 0;
	__asm        je     _T3d9e;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x87C];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x38C], eax;
	__asm        jmp    _T3da8;
_T3d9e:
	__asm        mov    dword ptr [ebp-0x38C], 0;
_T3da8:
	__asm        mov    dword ptr [ebp-0x390], 0;
	__asm        jmp    _T3db7;
_T3db7:
	__asm        push   2;
	__asm        push   0x50;
	__asm        lea    eax, [ebp-0x390];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x390];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x390], 0;
	__asm        je     _T3e0b;

	__asm        mov    eax, [ebp-0x390];
	__asm        mov    [ebp-0x6A4], eax;
	__asm        mov    eax, [ebp-0x6A4];
	__asm        mov    [ebp-0x6A8], eax;
	__asm        mov    eax, [ebp-0x6A8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T3e0b:
	__asm        jmp    _T3e10;
// LINE 398:
_T3e10:
	GetPathForFile(0x2, 0x0, 0x598d74, szFullSoundPath[0]);
// LINE 399:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x880], eax;
	__asm        cmp    dword ptr [ebp-0x880], 0;
	__asm        je     _T3e62;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x880];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x394], eax;
	__asm        jmp    _T3e6c;
_T3e62:
	__asm        mov    dword ptr [ebp-0x394], 0;
_T3e6c:
	__asm        mov    dword ptr [ebp-0x398], 0;
	__asm        jmp    _T3e7b;
_T3e7b:
	__asm        push   2;
	__asm        push   0x51;
	__asm        lea    eax, [ebp-0x398];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x398];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x398], 0;
	__asm        je     _T3ecf;

	__asm        mov    eax, [ebp-0x398];
	__asm        mov    [ebp-0x6AC], eax;
	__asm        mov    eax, [ebp-0x6AC];
	__asm        mov    [ebp-0x6B0], eax;
	__asm        mov    eax, [ebp-0x6B0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T3ecf:
	__asm        jmp    _T3ed4;
// LINE 401:
_T3ed4:
	GetPathForFile(0x2, 0x0, 0x598d80, szFullSoundPath[0]);
// LINE 402:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x884], eax;
	__asm        cmp    dword ptr [ebp-0x884], 0;
	__asm        je     _T3f26;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x884];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x39C], eax;
	__asm        jmp    _T3f30;
_T3f26:
	__asm        mov    dword ptr [ebp-0x39C], 0;
_T3f30:
	__asm        mov    dword ptr [ebp-0x3A0], 0;
	__asm        jmp    _T3f3f;
_T3f3f:
	__asm        push   2;
	__asm        push   0x52;
	__asm        lea    eax, [ebp-0x3A0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x3A0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x3A0], 0;
	__asm        je     _T3f93;

	__asm        mov    eax, [ebp-0x3A0];
	__asm        mov    [ebp-0x6B4], eax;
	__asm        mov    eax, [ebp-0x6B4];
	__asm        mov    [ebp-0x6B8], eax;
	__asm        mov    eax, [ebp-0x6B8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T3f93:
	__asm        jmp    _T3f98;
// LINE 404:
_T3f98:
	GetPathForFile(0x2, 0x0, 0x598d8c, szFullSoundPath[0]);
// LINE 405:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x888], eax;
	__asm        cmp    dword ptr [ebp-0x888], 0;
	__asm        je     _T3fea;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x888];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x3A4], eax;
	__asm        jmp    _T3ff4;
_T3fea:
	__asm        mov    dword ptr [ebp-0x3A4], 0;
_T3ff4:
	__asm        mov    dword ptr [ebp-0x3A8], 0;
	__asm        jmp    _T4003;
_T4003:
	__asm        push   2;
	__asm        push   0x53;
	__asm        lea    eax, [ebp-0x3A8];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x3A8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x3A8], 0;
	__asm        je     _T4057;

	__asm        mov    eax, [ebp-0x3A8];
	__asm        mov    [ebp-0x6BC], eax;
	__asm        mov    eax, [ebp-0x6BC];
	__asm        mov    [ebp-0x6C0], eax;
	__asm        mov    eax, [ebp-0x6C0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T4057:
	__asm        jmp    _T405c;
// LINE 407:
_T405c:
	GetPathForFile(0x2, 0x0, 0x598d98, szFullSoundPath[0]);
// LINE 408:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x88C], eax;
	__asm        cmp    dword ptr [ebp-0x88C], 0;
	__asm        je     _T40ae;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x88C];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x3AC], eax;
	__asm        jmp    _T40b8;
_T40ae:
	__asm        mov    dword ptr [ebp-0x3AC], 0;
_T40b8:
	__asm        mov    dword ptr [ebp-0x3B0], 0;
	__asm        jmp    _T40c7;
_T40c7:
	__asm        push   2;
	__asm        push   0x54;
	__asm        lea    eax, [ebp-0x3B0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x3B0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x3B0], 0;
	__asm        je     _T411b;

	__asm        mov    eax, [ebp-0x3B0];
	__asm        mov    [ebp-0x6C4], eax;
	__asm        mov    eax, [ebp-0x6C4];
	__asm        mov    [ebp-0x6C8], eax;
	__asm        mov    eax, [ebp-0x6C8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T411b:
	__asm        jmp    _T4120;
// LINE 410:
_T4120:
	GetPathForFile(0x2, 0x0, 0x598da4, szFullSoundPath[0]);
// LINE 411:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x890], eax;
	__asm        cmp    dword ptr [ebp-0x890], 0;
	__asm        je     _T4172;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x890];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x3B4], eax;
	__asm        jmp    _T417c;
_T4172:
	__asm        mov    dword ptr [ebp-0x3B4], 0;
_T417c:
	__asm        mov    dword ptr [ebp-0x3B8], 0;
	__asm        jmp    _T418b;
_T418b:
	__asm        push   2;
	__asm        push   0x55;
	__asm        lea    eax, [ebp-0x3B8];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x3B8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x3B8], 0;
	__asm        je     _T41df;

	__asm        mov    eax, [ebp-0x3B8];
	__asm        mov    [ebp-0x6CC], eax;
	__asm        mov    eax, [ebp-0x6CC];
	__asm        mov    [ebp-0x6D0], eax;
	__asm        mov    eax, [ebp-0x6D0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T41df:
	__asm        jmp    _T41e4;
// LINE 413:
_T41e4:
	GetPathForFile(0x2, 0x0, 0x598db0, szFullSoundPath[0]);
// LINE 414:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x894], eax;
	__asm        cmp    dword ptr [ebp-0x894], 0;
	__asm        je     _T4236;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x894];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x3BC], eax;
	__asm        jmp    _T4240;
_T4236:
	__asm        mov    dword ptr [ebp-0x3BC], 0;
_T4240:
	__asm        mov    dword ptr [ebp-0x3C0], 0;
	__asm        jmp    _T424f;
_T424f:
	__asm        push   2;
	__asm        push   0x56;
	__asm        lea    eax, [ebp-0x3C0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x3C0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x3C0], 0;
	__asm        je     _T42a3;

	__asm        mov    eax, [ebp-0x3C0];
	__asm        mov    [ebp-0x6D4], eax;
	__asm        mov    eax, [ebp-0x6D4];
	__asm        mov    [ebp-0x6D8], eax;
	__asm        mov    eax, [ebp-0x6D8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T42a3:
	__asm        jmp    _T42a8;
// LINE 416:
_T42a8:
	GetPathForFile(0x2, 0x0, 0x598dbc, szFullSoundPath[0]);
// LINE 417:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x898], eax;
	__asm        cmp    dword ptr [ebp-0x898], 0;
	__asm        je     _T42fa;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x898];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x3C4], eax;
	__asm        jmp    _T4304;
_T42fa:
	__asm        mov    dword ptr [ebp-0x3C4], 0;
_T4304:
	__asm        mov    dword ptr [ebp-0x3C8], 0;
	__asm        jmp    _T4313;
_T4313:
	__asm        push   2;
	__asm        push   0x57;
	__asm        lea    eax, [ebp-0x3C8];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x3C8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x3C8], 0;
	__asm        je     _T4367;

	__asm        mov    eax, [ebp-0x3C8];
	__asm        mov    [ebp-0x6DC], eax;
	__asm        mov    eax, [ebp-0x6DC];
	__asm        mov    [ebp-0x6E0], eax;
	__asm        mov    eax, [ebp-0x6E0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T4367:
	__asm        jmp    _T436c;
// LINE 419:
_T436c:
	GetPathForFile(0x2, 0x0, 0x598dc8, szFullSoundPath[0]);
// LINE 420:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x89C], eax;
	__asm        cmp    dword ptr [ebp-0x89C], 0;
	__asm        je     _T43be;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x89C];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x3CC], eax;
	__asm        jmp    _T43c8;
_T43be:
	__asm        mov    dword ptr [ebp-0x3CC], 0;
_T43c8:
	__asm        mov    dword ptr [ebp-0x3D0], 0;
	__asm        jmp    _T43d7;
_T43d7:
	__asm        push   2;
	__asm        push   0x58;
	__asm        lea    eax, [ebp-0x3D0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x3D0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x3D0], 0;
	__asm        je     _T442b;

	__asm        mov    eax, [ebp-0x3D0];
	__asm        mov    [ebp-0x6E4], eax;
	__asm        mov    eax, [ebp-0x6E4];
	__asm        mov    [ebp-0x6E8], eax;
	__asm        mov    eax, [ebp-0x6E8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T442b:
	__asm        jmp    _T4430;
// LINE 422:
_T4430:
	GetPathForFile(0x2, 0x0, 0x598dd4, szFullSoundPath[0]);
// LINE 423:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x8A0], eax;
	__asm        cmp    dword ptr [ebp-0x8A0], 0;
	__asm        je     _T4482;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x8A0];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x3D4], eax;
	__asm        jmp    _T448c;
_T4482:
	__asm        mov    dword ptr [ebp-0x3D4], 0;
_T448c:
	__asm        mov    dword ptr [ebp-0x3D8], 0;
	__asm        jmp    _T449b;
_T449b:
	__asm        push   2;
	__asm        push   0x59;
	__asm        lea    eax, [ebp-0x3D8];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x3D8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x3D8], 0;
	__asm        je     _T44ef;

	__asm        mov    eax, [ebp-0x3D8];
	__asm        mov    [ebp-0x6EC], eax;
	__asm        mov    eax, [ebp-0x6EC];
	__asm        mov    [ebp-0x6F0], eax;
	__asm        mov    eax, [ebp-0x6F0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T44ef:
	__asm        jmp    _T44f4;
// LINE 425:
_T44f4:
	GetPathForFile(0x2, 0x0, 0x598de0, szFullSoundPath[0]);
// LINE 426:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x8A4], eax;
	__asm        cmp    dword ptr [ebp-0x8A4], 0;
	__asm        je     _T4546;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x8A4];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x3DC], eax;
	__asm        jmp    _T4550;
_T4546:
	__asm        mov    dword ptr [ebp-0x3DC], 0;
_T4550:
	__asm        mov    dword ptr [ebp-0x3E0], 0;
	__asm        jmp    _T455f;
_T455f:
	__asm        push   2;
	__asm        push   0x5A;
	__asm        lea    eax, [ebp-0x3E0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x3E0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x3E0], 0;
	__asm        je     _T45b3;

	__asm        mov    eax, [ebp-0x3E0];
	__asm        mov    [ebp-0x6F4], eax;
	__asm        mov    eax, [ebp-0x6F4];
	__asm        mov    [ebp-0x6F8], eax;
	__asm        mov    eax, [ebp-0x6F8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T45b3:
	__asm        jmp    _T45b8;
// LINE 428:
_T45b8:
	GetPathForFile(0x2, 0x0, 0x598dec, szFullSoundPath[0]);
// LINE 429:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x8A8], eax;
	__asm        cmp    dword ptr [ebp-0x8A8], 0;
	__asm        je     _T460a;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x8A8];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x3E4], eax;
	__asm        jmp    _T4614;
_T460a:
	__asm        mov    dword ptr [ebp-0x3E4], 0;
_T4614:
	__asm        mov    dword ptr [ebp-0x3E8], 0;
	__asm        jmp    _T4623;
_T4623:
	__asm        push   2;
	__asm        push   0x5B;
	__asm        lea    eax, [ebp-0x3E8];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x3E8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x3E8], 0;
	__asm        je     _T4677;

	__asm        mov    eax, [ebp-0x3E8];
	__asm        mov    [ebp-0x6FC], eax;
	__asm        mov    eax, [ebp-0x6FC];
	__asm        mov    [ebp-0x700], eax;
	__asm        mov    eax, [ebp-0x700];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T4677:
	__asm        jmp    _T467c;
// LINE 431:
_T467c:
	GetPathForFile(0x2, 0x0, 0x598df8, szFullSoundPath[0]);
// LINE 432:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x8AC], eax;
	__asm        cmp    dword ptr [ebp-0x8AC], 0;
	__asm        je     _T46ce;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x8AC];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x3EC], eax;
	__asm        jmp    _T46d8;
_T46ce:
	__asm        mov    dword ptr [ebp-0x3EC], 0;
_T46d8:
	__asm        mov    dword ptr [ebp-0x3F0], 0;
	__asm        jmp    _T46e7;
_T46e7:
	__asm        push   2;
	__asm        push   0x5C;
	__asm        lea    eax, [ebp-0x3F0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x3F0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x3F0], 0;
	__asm        je     _T473b;

	__asm        mov    eax, [ebp-0x3F0];
	__asm        mov    [ebp-0x704], eax;
	__asm        mov    eax, [ebp-0x704];
	__asm        mov    [ebp-0x708], eax;
	__asm        mov    eax, [ebp-0x708];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T473b:
	__asm        jmp    _T4740;
// LINE 434:
_T4740:
	GetPathForFile(0x2, 0x0, 0x598e04, szFullSoundPath[0]);
// LINE 435:
	__asm        push   2;
	__asm        push   0x5D;
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        lea    ecx, [ebp-0x3F8];
	__asm        call   basic_string<char>::basic_string<char>;
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x3F8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x3F8], 0;
	__asm        je     _T47b8;

	__asm        mov    eax, [ebp-0x3F8];
	__asm        mov    [ebp-0x70C], eax;
	__asm        mov    eax, [ebp-0x70C];
	__asm        mov    [ebp-0x710], eax;
	__asm        mov    eax, [ebp-0x710];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T47b8:
	__asm        jmp    _T47bd;
// LINE 437:
_T47bd:
	GetPathForFile(0x2, 0x0, 0x598e10, szFullSoundPath[0]);
// LINE 438:
	__asm        push   2;
	__asm        push   0x5E;
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        lea    ecx, [ebp-0x400];
	__asm        call   basic_string<char>::basic_string<char>;
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x400];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x400], 0;
	__asm        je     _T4835;

	__asm        mov    eax, [ebp-0x400];
	__asm        mov    [ebp-0x714], eax;
	__asm        mov    eax, [ebp-0x714];
	__asm        mov    [ebp-0x718], eax;
	__asm        mov    eax, [ebp-0x718];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T4835:
	__asm        jmp    _T483a;
// LINE 440:
_T483a:
	GetPathForFile(0x2, 0x0, 0x598e1c, szFullSoundPath[0]);
// LINE 441:
	__asm        push   2;
	__asm        push   0x5F;
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        lea    ecx, [ebp-0x408];
	__asm        call   basic_string<char>::basic_string<char>;
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x408];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x408], 0;
	__asm        je     _T48b2;

	__asm        mov    eax, [ebp-0x408];
	__asm        mov    [ebp-0x71C], eax;
	__asm        mov    eax, [ebp-0x71C];
	__asm        mov    [ebp-0x720], eax;
	__asm        mov    eax, [ebp-0x720];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T48b2:
	__asm        jmp    _T48b7;
// LINE 443:
_T48b7:
	GetPathForFile(0x2, 0x0, 0x598e28, szFullSoundPath[0]);
// LINE 444:
	__asm        push   2;
	__asm        push   0x60;
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        lea    ecx, [ebp-0x410];
	__asm        call   basic_string<char>::basic_string<char>;
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x410];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x410], 0;
	__asm        je     _T492f;

	__asm        mov    eax, [ebp-0x410];
	__asm        mov    [ebp-0x724], eax;
	__asm        mov    eax, [ebp-0x724];
	__asm        mov    [ebp-0x728], eax;
	__asm        mov    eax, [ebp-0x728];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T492f:
	__asm        jmp    _T4934;
// LINE 446:
_T4934:
	GetPathForFile(0x2, 0x0, 0x598e34, szFullSoundPath[0]);
// LINE 447:
	__asm        push   2;
	__asm        push   0x61;
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        lea    ecx, [ebp-0x418];
	__asm        call   basic_string<char>::basic_string<char>;
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x418];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x418], 0;
	__asm        je     _T49ac;

	__asm        mov    eax, [ebp-0x418];
	__asm        mov    [ebp-0x72C], eax;
	__asm        mov    eax, [ebp-0x72C];
	__asm        mov    [ebp-0x730], eax;
	__asm        mov    eax, [ebp-0x730];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T49ac:
	__asm        jmp    _T49b1;
// LINE 449:
_T49b1:
	GetPathForFile(0x2, 0x0, 0x598e40, szFullSoundPath[0]);
// LINE 450:
_FOR_49d8:
	for (count = 0x62; (count < 0x71); count++) {
// LINE 451:
		__asm        push   0;
		__asm        mov    eax, count;
		__asm        push   eax;
		__asm        lea    eax, szFullSoundPath[0];
		__asm        push   eax;
		__asm        lea    ecx, [ebp-0x420];
		__asm        call   basic_string<char>::basic_string<char>;
		__asm        push   eax;
		__asm        mov    ecx, 0x604600;
		__asm        call   SoundManager::AddDigitalSound;
		__asm        lea    ecx, [ebp-0x420];
		__asm        call   basic_string<char>::delete_ref;
		__asm        cmp    dword ptr [ebp-0x420], 0;
		__asm        je     _T4a50;

		__asm        mov    eax, [ebp-0x420];
		__asm        mov    [ebp-0x734], eax;
		__asm        mov    eax, [ebp-0x734];
		__asm        mov    [ebp-0x738], eax;
		__asm        mov    eax, [ebp-0x738];
		__asm        push   eax;
		__asm        call   operator delete;
		__asm        add    esp, 4;
_T4a50:
		__asm        jmp    _T4a55;
// LINE 452:
_T4a55:
	}
// LINE 453:
_T4a5a:
	return 0x1;
// LINE 454:
}

// FUNCTION: COPTER_D 0x00446a6b
void S3DSSetFile(int32_t nSoundIndex, char * szSoundFile) {
	/*bp-0x104*/ char szFullSoundPath[260]; // 0x104 bytes
	/*bp-0x108*/ /*packed*/ class DigitalSound *theSound;

// LINE 472:
	__asm        mov    eax, nSoundIndex;
	__asm        mov    eax, gSoundManager.sound[0][eax*4];
	__asm        mov    theSound, eax;
// LINE 473:
	__asm        cmp    theSound, 0;
	__asm        je     _T24d;
// LINE 474:
	GetPathForFile(0x2, 0x0, szSoundFile, szFullSoundPath[0]);
// LINE 475:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x12C], eax;
	__asm        cmp    dword ptr [ebp-0x12C], 0;
	__asm        je     _T129;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        call   strlen;
	__asm        add    esp, 4;
	__asm        mov    ecx, [ebp-0x12C];
	__asm        mov    [ecx+4], eax;
	__asm        jmp    _T7a;
_T7a:
	__asm        mov    eax, [ebp-0x12C];
	__asm        mov    eax, [eax+4];
	__asm        mov    ecx, [ebp-0x12C];
	__asm        mov    [ecx+8], eax;
	__asm        mov    eax, [ebp-0x12C];
	__asm        cmp    dword ptr [eax+8], 0;
	__asm        je     _Tfa;

	__asm        mov    eax, [ebp-0x12C];
	__asm        mov    eax, [eax+8];
	__asm        push   eax;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    ecx, [ebp-0x12C];
	__asm        mov    [ecx], eax;
	__asm        mov    eax, [ebp-0x12C];
	__asm        mov    eax, [eax+4];
	__asm        mov    [ebp-0x130], eax;
	__asm        mov    eax, [ebp-0x12C];
	__asm        mov    eax, [eax];
	__asm        mov    [ebp-0x134], eax;
	__asm        mov    eax, [ebp-0x130];
	__asm        push   eax;
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    eax, [ebp-0x134];
	__asm        push   eax;
	__asm        call   memcpy;
	__asm        add    esp, 0xC;
	__asm        jmp    _Tf5;
_Tf5:
	__asm        jmp    _T106;
_Tfa:
	__asm        mov    eax, [ebp-0x12C];
	__asm        mov    dword ptr [eax], 0;
_T106:
	__asm        mov    eax, [ebp-0x12C];
	__asm        mov    dword ptr [eax+0xC], 1;
	__asm        jmp    _T118;
_T118:
	__asm        mov    eax, [ebp-0x12C];
	__asm        mov    [ebp-0x10C], eax;
	__asm        jmp    _T133;
_T129:
	__asm        mov    dword ptr [ebp-0x10C], 0;
_T133:
	__asm        mov    dword ptr [ebp-0x110], 0;
	__asm        jmp    _T142;
_T142:
	__asm        push   2;
	__asm        lea    eax, [ebp-0x110];
	__asm        push   eax;
	__asm        mov    eax, theSound;
	__asm        mov    eax, [eax];
	__asm        mov    ecx, theSound;
	__asm        call   dword ptr [eax+0x2C];
	__asm        mov    eax, [ebp-0x10C];
	__asm        dec    dword ptr [eax+0xC];
	__asm        mov    eax, [ebp-0x10C];
	__asm        cmp    dword ptr [eax+0xC], 0;
	__asm        jne    _T20f;

	__asm        mov    eax, [ebp-0x10C];
	__asm        mov    [ebp-0x120], eax;
	__asm        mov    eax, [ebp-0x120];
	__asm        mov    [ebp-0x11C], eax;
	__asm        cmp    dword ptr [ebp-0x11C], 0;
	__asm        je     _T20f;

	__asm        mov    eax, [ebp-0x11C];
	__asm        cmp    dword ptr [eax+8], 0;
	__asm        je     _T1ec;

	__asm        mov    eax, [ebp-0x11C];
	__asm        mov    eax, [eax];
	__asm        mov    [ebp-0x124], eax;
	__asm        mov    eax, [ebp-0x124];
	__asm        mov    [ebp-0x128], eax;
	__asm        mov    eax, [ebp-0x128];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
	__asm        mov    eax, [ebp-0x11C];
	__asm        mov    dword ptr [eax+8], 0;
	__asm        mov    eax, [ebp-0x11C];
	__asm        mov    dword ptr [eax], 0;
_T1ec:
	__asm        jmp    _T1f1;
_T1f1:
	__asm        jmp    _T1f6;
_T1f6:
	__asm        mov    eax, [ebp-0x11C];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
	__asm        jmp    _T20a;
_T20a:
	__asm        jmp    _T20f;
_T20f:
	__asm        jmp    _T214;
_T214:
	__asm        cmp    dword ptr [ebp-0x110], 0;
	__asm        je     _T248;

	__asm        mov    eax, [ebp-0x110];
	__asm        mov    [ebp-0x114], eax;
	__asm        mov    eax, [ebp-0x114];
	__asm        mov    [ebp-0x118], eax;
	__asm        mov    eax, [ebp-0x118];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T248:
	__asm        jmp    _T24d;
// LINE 477:
_T24d:
	return;
}

// FUNCTION: COPTER_D 0x00446cc2
int32_t S3DSPlay(int32_t nSoundIndex, /*packed*/ struct Point3d *loc, int32_t nFlags) {
	/*bp-0x4*/   /*packed*/ class DigitalSound *theSound;
	/*bp-0x8*/   int32_t lastparam;
	/*bp-0xc*/   int32_t fpDistance;
	/*bp-0x18*/  /*packed*/ struct Point3d viewvect; // 0xc bytes
	/*bp-0x1c*/  int32_t nReturnValue;
	/*bp-0x20*/  long midparam;
	/*bp-0x24*/  long lNewVolume;

// LINE 500:
	__asm        mov    eax, nSoundIndex;
	__asm        mov    eax, gSoundManager.sound[0][eax*4];
	__asm        mov    theSound, eax;
// LINE 503:
	viewvect.x = (loc->x - ViewState.world_pos.x);
// LINE 504:
	viewvect.y = (loc->y - ViewState.world_pos.y);
// LINE 505:
	viewvect.z = (loc->z - ViewState.world_pos.z);
// LINE 506:
	fpDistance = MTMagnitude(viewvect.x);
// LINE 508:
	__asm        cmp    fpDistance, 0x7800000;
	__asm        jl     _T65;
// LINE 509:
	return 0x0;
// LINE 510:
_T65:
	__asm        push   0xF0600000;
	__asm        push   0x7800000;
	__asm        mov    eax, fpDistance;
	__asm        push   eax;
	__asm        call   _FixedDiv;
	__asm        add    esp, 8;
	__asm        push   eax;
	__asm        call   _FixedMul;
	__asm        add    esp, 8;
	__asm        sar    eax, 0x10;
	__asm        mov    lNewVolume, eax;
// LINE 513:
	lNewVolume += 0x2710;
// LINE 514:
	__asm        mov    eax, lNewVolume;
	__asm        mov    ecx, nSoundIndex;
	__asm        mov    lOriginalSoundVolumes[ecx*4], eax;
	__asm        mov    eax, lNewVolume;
	__asm        mov    [ebp-0x28], eax;
// LINE 515:
	__asm        mov    eax, glMasterVolume;
	__asm        imul   eax, [ebp-0x28];
	__asm        mov    [ebp-0x28], eax;
	__asm        mov    ecx, 0x2710;
	__asm        mov    eax, [ebp-0x28];
	__asm        cdq;
	__asm        idiv   ecx;
	__asm        mov    [ebp-0x28], eax;
	__asm        mov    eax, [ebp-0x28];
	__asm        mov    lNewVolume, eax;
	__asm        jmp    _Tc9;
// LINE 516:
_Tc9:
	__asm        cmp    theSound, 0;
	__asm        je     _Te2;
// LINE 517:
	__asm        mov    eax, lNewVolume;
	__asm        push   eax;
	__asm        mov    eax, theSound;
	__asm        mov    eax, [eax];
	__asm        mov    ecx, theSound;
	__asm        call   dword ptr [eax+0x24];
// LINE 521:
_Te2:
	__asm        test   reinterpret_cast<uint8_t>(nFlags), 1;
	__asm        je     _Tf8;
// LINE 522:
	midparam = 0x1;
// LINE 523:
	__asm        jmp    _Tff;
// LINE 524:
_Tf8:
	midparam = 0x0;
// LINE 525:
_Tff:
	__asm        test   reinterpret_cast<uint8_t>(nFlags), 2;
	__asm        je     _T115;
// LINE 526:
	lastparam = 0x1;
// LINE 527:
	__asm        jmp    _T11c;
// LINE 528:
_T115:
	lastparam = 0x2;
// LINE 530:
_T11c:
	nReturnValue = 0x604600->SoundManager::PlaySoundA(nSoundIndex, midparam, lastparam);
// LINE 532:
	return nReturnValue;
// LINE 533:
}

// FUNCTION: COPTER_D 0x00446e04
void S3DSStopPlay(int32_t nSoundIndex) {
// LINE 552:
	0x604600->SoundManager::StopSound(nSoundIndex);
// LINE 553:
	return;
}

// FUNCTION: COPTER_D 0x00446e22
void S3DSStopAllSounds() {
// LINE 569:
	0x604600->SoundManager::StopAllSounds();
// LINE 570:
	return;
}

// FUNCTION: COPTER_D 0x00446e3c
void S3SoundAdjFreq(int32_t nSoundIndex, long lFrequencyAdjustment) {
	/*bp-0x4*/   /*packed*/ class DigitalSound *theSound;

// LINE 589:
	__asm        mov    eax, nSoundIndex;
	__asm        mov    eax, gSoundManager.sound[0][eax*4];
	__asm        mov    theSound, eax;
// LINE 591:
	__asm        cmp    theSound, 0;
	__asm        je     _T3c;
// LINE 592:
	__asm        mov    eax, theSound;
	__asm        mov    eax, [eax];
	__asm        mov    ecx, theSound;
	__asm        call   dword ptr [eax+0x5C];
	__asm        mov    ecx, lFrequencyAdjustment;
	__asm        add    ecx, eax;
	__asm        push   ecx;
	__asm        mov    eax, theSound;
	__asm        mov    eax, [eax];
	__asm        mov    ecx, theSound;
	__asm        call   dword ptr [eax+0x64];
// LINE 593:
_T3c:
	return;
}

// FUNCTION: COPTER_D 0x00446e82
void S3SoundAdjVol(int32_t nSoundIndex, long lNewVolume) {
// LINE 614:
	__asm        add    lNewVolume, 0x2710;
	__asm        mov    eax, lNewVolume;
	__asm        mov    [ebp-4], eax;
// LINE 615:
	__asm        mov    eax, glMasterVolume;
	__asm        imul   eax, [ebp-4];
	__asm        mov    [ebp-4], eax;
	__asm        mov    ecx, 0x2710;
	__asm        mov    eax, [ebp-4];
	__asm        cdq;
	__asm        idiv   ecx;
	__asm        mov    [ebp-4], eax;
	__asm        mov    eax, [ebp-4];
	__asm        mov    lNewVolume, eax;
	__asm        jmp    _T3b;
// LINE 616:
_T3b:
	__asm        mov    eax, lNewVolume;
	__asm        mov    ecx, nSoundIndex;
	__asm        mov    lOriginalSoundVolumes[ecx*4], eax;
// LINE 617:
	__asm        mov    eax, nSoundIndex;
	__asm        cmp    gSoundManager.sound[0][eax*4], 0;
	__asm        je     _T76;
// LINE 618:
	__asm        mov    eax, lNewVolume;
	__asm        push   eax;
	__asm        mov    eax, nSoundIndex;
	__asm        mov    ecx, nSoundIndex;
	__asm        mov    ecx, gSoundManager.sound[0][ecx*4];
	__asm        mov    edx, [ecx];
	__asm        mov    ecx, gSoundManager.sound[0][eax*4];
	__asm        call   dword ptr [edx+0x24];
// LINE 619:
_T76:
	return;
}

// FUNCTION: COPTER_D 0x00446f02
int32_t S3SoundIsPlaying(int32_t nSoundIndex) {
// LINE 638:
	__asm        mov    eax, nSoundIndex;
	__asm        cmp    gSoundManager.sound[0][eax*4], 0;
	__asm        je     _T35;
// LINE 639:
	__asm        mov    eax, nSoundIndex;
	__asm        mov    ecx, nSoundIndex;
	__asm        mov    ecx, gSoundManager.sound[0][ecx*4];
	__asm        mov    edx, [ecx];
	__asm        mov    ecx, gSoundManager.sound[0][eax*4];
	__asm        call   dword ptr [edx+0x10];
	__asm        jmp    __RETURN;
// LINE 640:
_T35:
	return 0x0;
// LINE 641:
__RETURN:
}

// FUNCTION: COPTER_D 0x00446f43
void S3SoundSetPosition(int32_t nSoundIndex, /*packed*/ struct Point3d *loc) {
	/*bp-0xc*/   /*packed*/ struct Point3d positionTemp; // 0xc bytes
	/*bp-0x10*/  /*packed*/ class DigitalSound *theSound;
	/*bp-0x14*/  int32_t fpDistance;
	/*bp-0x20*/  /*packed*/ struct Point3d positionRelative; // 0xc bytes
	/*bp-0x24*/  long lPan;
	/*bp-0x28*/  long lVolume;

// LINE 680:
	__asm        mov    eax, nSoundIndex;
	__asm        mov    eax, gSoundManager.sound[0][eax*4];
	__asm        mov    theSound, eax;
// LINE 686:
	__asm        cmp    theSound, 0;
	__asm        jne    _T25;
// LINE 687:
	return;
// LINE 691:
_T25:
	positionTemp.x = (loc->x - Viewer.pos.x);
// LINE 692:
	positionTemp.y = (loc->y - Viewer.pos.y);
// LINE 693:
	positionTemp.z = (loc->z - Viewer.pos.z);
// LINE 694:
	_VRRotateP3d(positionTemp.x, positionRelative.x, (0x6c12a0 + 0x38));
// LINE 698:
	__asm        mov    eax, positionRelative.x;
	__asm        mov    [ebp-0x48], eax;
	__asm        fild   dword ptr [ebp-0x48];
	__asm        fdiv   qword ptr ds:[0x58F5D0];
	__asm        fstp   qword ptr [ebp-0x3C];
	__asm        mov    eax, positionRelative.z;
	__asm        mov    [ebp-0x4C], eax;
	__asm        fild   dword ptr [ebp-0x4C];
	__asm        fdiv   qword ptr ds:[0x58F5D0];
	__asm        fst    qword ptr [ebp-0x44];
	__asm        fmul   qword ptr [ebp-0x44];
	__asm        fld    qword ptr [ebp-0x3C];
	__asm        fmul   qword ptr [ebp-0x3C];
	__asm        faddp;
	__asm        sub    esp, 8;
	__asm        fstp   qword ptr [esp];
	__asm        call   _sqrt;
	__asm        add    esp, 8;
	__asm        fcom   qword ptr ds:[0x58F5D8];
	__asm        fstp   qword ptr [ebp-0x34];
	__asm        fnstsw ax;
	__asm        test   ah, 0x40;
	__asm        jne    _Te8;

	__asm        fld    qword ptr [ebp-0x3C];
	__asm        fdiv   qword ptr [ebp-0x34];
	__asm        fmul   qword ptr ds:[0x58F5D0];
	__asm        call   __ftol;
	__asm        mov    positionRelative.x, eax;
	__asm        fld    qword ptr [ebp-0x44];
	__asm        fdiv   qword ptr [ebp-0x34];
	__asm        fmul   qword ptr ds:[0x58F5D0];
	__asm        call   __ftol;
	__asm        mov    positionRelative.z, eax;
	__asm        jmp    _Tf5;
_Te8:
	positionRelative.z = 0x0;
	positionRelative.x = positionRelative.z;
_Tf5:
	__asm        fld    qword ptr [ebp-0x34];
	__asm        fmul   qword ptr ds:[0x58F5D0];
	__asm        call   __ftol;
	__asm        mov    fpDistance, eax;
	__asm        jmp    _T10b;
// LINE 701:
_T10b:
	__asm        push   0xF0600000;
	__asm        push   0x7800000;
	__asm        mov    eax, fpDistance;
	__asm        push   eax;
	__asm        call   _FixedDiv;
	__asm        add    esp, 8;
	__asm        push   eax;
	__asm        call   _FixedMul;
	__asm        add    esp, 8;
	__asm        sar    eax, 0x10;
	__asm        mov    lVolume, eax;
// LINE 702:
	lVolume += 0x2710;
// LINE 714:
	__asm        mov    eax, positionRelative.x;
	__asm        push   eax;
	__asm        push   0x27100000;
	__asm        call   _FixedMul;
	__asm        add    esp, 8;
	__asm        sar    eax, 0x10;
	__asm        cdq;
	__asm        and    edx, 7;
	__asm        add    eax, edx;
	__asm        sar    eax, 3;
	__asm        mov    lPan, eax;
// LINE 724:
	__asm        mov    eax, lVolume;
	__asm        mov    ecx, nSoundIndex;
	__asm        mov    lOriginalSoundVolumes[ecx*4], eax;
	__asm        mov    eax, lVolume;
	__asm        mov    [ebp-0x2C], eax;
// LINE 725:
	__asm        mov    eax, glMasterVolume;
	__asm        imul   eax, [ebp-0x2C];
	__asm        mov    [ebp-0x2C], eax;
	__asm        mov    ecx, 0x2710;
	__asm        mov    eax, [ebp-0x2C];
	__asm        cdq;
	__asm        idiv   ecx;
	__asm        mov    [ebp-0x2C], eax;
	__asm        mov    eax, [ebp-0x2C];
	__asm        mov    lVolume, eax;
	__asm        jmp    _T18f;
// LINE 728:
_T18f:
	__asm        mov    eax, lVolume;
	__asm        push   eax;
	__asm        mov    eax, theSound;
	__asm        mov    eax, [eax];
	__asm        mov    ecx, theSound;
	__asm        call   dword ptr [eax+0x24];
// LINE 729:
	__asm        mov    eax, lPan;
	__asm        push   eax;
	__asm        mov    eax, theSound;
	__asm        mov    eax, [eax];
	__asm        mov    ecx, theSound;
	__asm        call   dword ptr [eax+0x54];
// LINE 730:
	return;
}

// FUNCTION: COPTER_D 0x004470fa
void S3SoundAddToQueue(int32_t nQueue, int32_t nSoundIndex, int32_t nDelayBeforePlay) {
	/*bp-0x4*/   /*packed*/ class DigitalSound *theSound;
	/*bp-0x8*/   long lNewVolume;

// LINE 737:
	__asm        mov    eax, nSoundIndex;
	__asm        mov    eax, gSoundManager.sound[0][eax*4];
	__asm        mov    theSound, eax;
	__asm        mov    dword ptr [ebp-0x14], 0x2710;
// LINE 738:
	__asm        mov    eax, glMasterVolume;
	__asm        imul   eax, [ebp-0x14];
	__asm        mov    [ebp-0x14], eax;
	__asm        mov    ecx, 0x2710;
	__asm        mov    eax, [ebp-0x14];
	__asm        cdq;
	__asm        idiv   ecx;
	__asm        mov    [ebp-0x14], eax;
	__asm        mov    eax, [ebp-0x14];
	__asm        mov    lNewVolume, eax;
	__asm        jmp    _T42;
// LINE 740:
_T42:
	__asm        cmp    theSound, 0;
	__asm        je     _Ta9;
// LINE 741:
	__asm        mov    eax, lNewVolume;
	__asm        push   eax;
	__asm        mov    eax, theSound;
	__asm        mov    eax, [eax];
	__asm        mov    ecx, theSound;
	__asm        call   dword ptr [eax+0x24];
// LINE 742:
	__asm        push   0x18;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0xC], eax;
	__asm        cmp    dword ptr [ebp-0xC], 0;
	__asm        je     _T8c;

	__asm        push   0;
	__asm        mov    eax, nDelayBeforePlay;
	__asm        push   eax;
	__asm        mov    eax, theSound;
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0xC];
	__asm        call   SoundQueueItem::SoundQueueItem;
	__asm        mov    [ebp-0x10], eax;
	__asm        jmp    _T93;
_T8c:
	__asm        mov    dword ptr [ebp-0x10], 0;
_T93:
	__asm        mov    eax, [ebp-0x10];
	__asm        push   eax;
	__asm        mov    eax, nQueue;
	__asm        lea    eax, [eax+eax*2];
	__asm        lea    ecx, gSoundQueue[0]<vftable>[eax*8];
	__asm        call   SoundQueue::operator+=;
// LINE 744:
_Ta9:
	return;
}



// Contribution: 2:000005c0-000005c7 Module: 52, 8 byte alignment, initialized_data, (comdat), read, 
// vftable for SoundChangeNotificationSink @ 0x0058f5c0
//   00: SoundChangeNotificationSink::DoNotificationChange @ 0x00441ee5
//   01: SoundChangeNotificationSink::Initialize @ 0x00441ea2
//   2 entries



// Contribution: 2:000005c8-000005cb Module: 52, 4 byte alignment, initialized_data, (comdat), read, 
// vftable for NotificationSink @ 0x0058f5c8
//   00: _purecall @ 0x0056cfa0
//   1 entries



// Contribution: 2:000005d0-000005df Module: 52, 8 byte alignment, initialized_data, read, 


// Contribution: 3:00000034-0000003b Module: 52, 4 byte alignment, initialized_data, read, write, 
// GLOBAL: COPTER_D 0x00597034
static void (*$S56)() = { 0 /* todo */ };

// GLOBAL: COPTER_D 0x00597038
static void (*$S59)() = { 0 /* todo */ };



// Contribution: 3:00001974-00001e49 Module: 52, 4 byte alignment, initialized_data, read, write, 


// Contribution: 3:0002c628-0002c7f3 Module: 52, 8 byte alignment, uninitialized_data, read, write, 
// GLOBAL: COPTER_D 0x005c3628
static long lOriginalSoundVolumes[113];

// GLOBAL: COPTER_D 0x005c37ec
/*packed*/ class SoundChangeNotificationSink gSoundChangeNotificationSink;
// has alternate definitions: (original TI: 0x2432)
//   /*packed*/ class SoundChangeNotificationSink gSoundChangeNotificationSink (TI: 0x2ac5)

// GLOBAL: COPTER_D 0x005c37f0
long glMasterVolume;



// Unknown globals:
// The PDB was slightly corrupted and we aren't sure which file these globals belong to.

// WARNING: this global might actually belong to: rotate.asm
// GLOBAL: COPTER_D 0x006c12a0
/*packed*/ struct ViewerInfo Viewer; // Contrib missing


// WARNING: this global might actually belong to: C:\Copter\source\sparkal\Gameapp7.cpp
// GLOBAL: COPTER_D 0x006c12a0
/*packed*/ struct ViewerInfo Viewer; // Contrib missing

