// Module: S3dsnd.obj
// Source: C:\Copter\source\sparkal\S3dsnd.cpp
// autogenerated by simcopter_tool from PDB file

// Type: long;

// Type: class SoundChangeNotificationSink;
class SoundChangeNotificationSink : public NotificationSink
{
public:
	// vtable: 4
	intro int32_t Initialize();
	virtual void DoNotificationChange(long, class PreferenceManager*);
};

// Type: void ();

// Type: class SoundChangeNotificationSink;
class SoundChangeNotificationSink : public NotificationSink
{
public:
	// vtable: 4
	intro int32_t Initialize();
	virtual void DoNotificationChange(long, class PreferenceManager*);
	void SoundChangeNotificationSink();
};

// Type: void;

// Type: class SoundChangeNotificationSink (forward reference);
class SoundChangeNotificationSink : public NotificationSink
{
public:
	// vtable: 4
	intro int32_t Initialize();
	virtual void DoNotificationChange(long, class PreferenceManager*);
	void SoundChangeNotificationSink();
};

// Type: int32_t;

// Type: class PreferenceManager (forward reference);
class PreferenceManager{
protected:
	int32_t bSaveFileAtAllChanges;
	class list<PreferenceItem> myPreferences;
	class MIFF* miffPrefsFile;
	long lFileCreator;
	long lFileType;
	long lFileVersion;
	int32_t bPrefsDirty;
	int32_t bPrefsLocked;
public:
	void PreferenceManager(long, long, long, int32_t);
	int32_t IPreferenceManager(char *);
	// vtable: 0
	intro void ~PreferenceManager();
	// vtable: 4
	intro long SaveAllPrefs();
	// vtable: 8
	intro long LoadAllPrefs();
	// vtable: 12
	intro long ClearPrefsMemory();
	// vtable: 16
	intro void EnumeratePrefs();
	// vtable: 20
	intro class PreferenceItem* GetPrefPointer(long);
	// vtable: 24
	intro class PreferenceItem* GetPrefCopy(long);
	// vtable: 28
	intro char * GetPrefDataPointer(long);
	// vtable: 32
	intro char * GetPrefDataCopy(long);
	// vtable: 36
	intro long GetPrefDataLength(long);
	// vtable: 40
	intro long SetPref(class PreferenceItem*);
	// vtable: 44
	intro long SetPref(long, char *, long);
	// vtable: 48
	intro long RemovePref(long);
};

// Type: char *;

// Type: struct SoundPreferences (forward reference);
// SoundPreferences Class implementation not found

// Type: void * __ptr32;

// Type: char;

// Type: class DigitalSound (forward reference);
class DigitalSound : public Sound
{
protected:
	int32_t nStreamingType;
	int32_t nCompletionEstimationTimerSet;
	static struct IDirectSound* lpDirectSound;
	uint32_t cbSize;
	struct tWAVEFORMATEX waveFormatEx;
	struct IDirectSoundBuffer* lpSound[8];
	struct _STREAMBUFINFO* lpStreamBufferInfo;
	unsigned long dwDesiredBufferDescFlags;
public:
	void DigitalSound(long);
	void DigitalSound(const class basic_string<char>&, int32_t);
	void DigitalSound();
	virtual void ~DigitalSound();
	class DigitalSound& operator=(class DigitalSound&);
	// vtable: 44
	intro void SetSoundFile(const class basic_string<char>&, int32_t);
	// vtable: 48
	intro int32_t Load();
	// vtable: 52
	intro int32_t LoadFromResource();
	// vtable: 56
	intro int32_t LoadFromFile();
	// vtable: 60
	intro void Unload();
	virtual long Play(long, int32_t);
	virtual long Stop();
	// vtable: 64
	intro long ShouldWeStream();
	// vtable: 68
	intro long PlayStream();
	// vtable: 72
	intro long StopStream();
protected:
	// vtable: 76
	intro long IsPlaying(struct IDirectSoundBuffer**);
public:
	virtual long IsPlaying();
	virtual int32_t GetVolume(long *);
	virtual int32_t SetVolume(long);
	// vtable: 80
	intro int32_t GetPan(long *);
	// vtable: 84
	intro int32_t SetPan(long);
	// vtable: 88
	intro int32_t SetPosition(long, long, long);
	// vtable: 92
	intro long GetOriginalFrequency();
	// vtable: 96
	intro int32_t GetFrequency(long *);
	// vtable: 100
	intro int32_t SetFrequency(long);
	virtual int32_t GetSoundType();
	virtual int32_t SetCompletionNotification(void (*)(long), long);
	virtual void StopCompletionNotification();
	virtual long EstimateRemainingPlayTime();
protected:
	// vtable: 104
	intro int32_t GetSoundAliasToPlay(struct IDirectSoundBuffer**);
	// vtable: 108
	intro int32_t CreateSoundBuffer(struct _DSBUFFERDESC*);
	// vtable: 112
	intro int32_t CreatePrimarySoundBuffer();
	// vtable: 116
	intro int32_t ReleaseSoundBuffer();
	// vtable: 120
	intro long InitializeStreamBuffer(long);
	// vtable: 124
	intro void ProcessStreamingBufferTimerCallback();
	// vtable: 128
	intro void ProcessCompletionEstimationTimerCallback();
	// vtable: 132
	intro void StopCompletionNotificationEstimationTimer();
	// vtable: 136
	intro int32_t StartCompletionNotificationEstimationTimer();
};

// Type: struct Point3d (forward reference);
// Point3d Class implementation not found

// Type: struct Point3d;
struct Point3d{
	int32_t x;
	int32_t y;
	int32_t z;
};

// Type: class NotificationSink;
class NotificationSink{
public:
	// vtable: 0
	intro void DoNotificationChange(long, class PreferenceManager*);
};

// Type: class Sound;
class Sound{
	enum SoundSourceType {
		nSoundSourceTypeResource = 0,
		nSoundSourceTypeFile = 1,
	};
public:
	enum Sound::SoundSourceType nSoundSourceType;
	enum SoundDuplicateType {
		nSoundDuplicateDefault = 0,
		nSoundDuplicateInterrupt = 1,
		nSoundDuplicateContinue = 2,
		nSoundDuplicateOverlap = 3,
	};
public:
	enum Sound::SoundDuplicateType nSoundDuplicateType;
	long lID;
	long lResID;
	class basic_string<char> sSoundFile;
	long bLooping;
	long bStreaming;
	long lVolume;
	void (*soundCompletionFunction)(long);
	long lSoundCompletionData;
	void Sound();
	// vtable: 0
	intro void ~Sound();
	class Sound& operator=(const class Sound&);
	// vtable: 4
	intro void SetSoundFile(const class basic_string<char>&);
	// vtable: 8
	intro long Play(long, int32_t);
	// vtable: 12
	intro long Stop();
	// vtable: 16
	intro long IsPlaying();
	// vtable: 20
	intro int32_t SetCompletionNotification(void (*)(long), long);
	// vtable: 24
	intro void StopCompletionNotification();
	// vtable: 28
	intro long EstimateRemainingPlayTime();
	// vtable: 32
	intro int32_t GetVolume(long *);
	// vtable: 36
	intro int32_t SetVolume(long);
	// vtable: 40
	intro int32_t GetSoundType();
	// calltype: NearC
	static unsigned long GetTotalMemoryUsage();
	static unsigned long lTotalMemoryUsage;
};



// Contribution: 1:00040e30-000461ac Module: 52, 16 byte alignment, code, execute, read, 
// STATIC INITIALIZER:
// FUNCTION: COPTER_D 0x00441e30
void $E55() {

	__asm        call   $E54;
	__asm        jmp    near ptr 0x00441E40;
}

// STATIC INITIALIZER:
// FUNCTION: COPTER_D 0x00441e45
void $E54() {

	__asm        mov    glMasterVolume, 0x2710;
	__asm        jmp    near ptr 0x00441E5A;
}

// STATIC INITIALIZER:
// FUNCTION: COPTER_D 0x00441e5f
void $E58() {

	__asm        call   $E57;
	__asm        jmp    near ptr 0x00441E6F;
}

// STATIC INITIALIZER:
// FUNCTION: COPTER_D 0x00441e74
void $E57() {

	__asm        mov    gSoundChangeNotificationSink<SoundChangeNotificationSink+0x00>, 0x58F5C8;
	__asm        jmp    near ptr 0x00441E89;

	__asm        mov    gSoundChangeNotificationSink<SoundChangeNotificationSink+0x00>, 0x58F5C0;
	__asm        jmp    near ptr 0x00441E98;

	__asm        jmp    near ptr 0x00441E9D;
}

// FUNCTION: COPTER_D 0x00441ea2
int32_t SoundChangeNotificationSink::Initialize() {
// LINE 57:
	__asm        cmp    gPreferenceManager, 0;
	__asm        je     _T37;
// LINE 58:
	__asm        mov    eax, this;
	__asm        push   eax;
	__asm        push   0x4FFFFFF;
	__asm        mov    eax, gPreferenceManager;
	__asm        mov    eax, [eax];
	__asm        mov    ecx, gPreferenceManager;
	__asm        call   dword ptr [eax+0x38];
	__asm        jmp    _T3e;
// LINE 60:
_T37:
	__asm        xor    eax, eax;
	__asm        jmp    _T3e;
// LINE 61:
_T3e:
}

// FUNCTION: COPTER_D 0x00441ee5
void SoundChangeNotificationSink::DoNotificationChange(long lPreferenceType, class PreferenceManager* thePreferenceManager) {
	long lNewVolume;
	char * chPrefsData;
	struct SoundPreferences* currentSoundPreferences;
	int32_t i;

// LINE 84:
	__asm        cmp    lPreferenceType, 0x4FFFFFF;
	__asm        jne    _Tc4;
// LINE 85:
	__asm        push   0x4FFFFFF;
	__asm        mov    eax, thePreferenceManager;
	__asm        mov    eax, [eax];
	__asm        mov    ecx, thePreferenceManager;
	__asm        call   dword ptr [eax+0x1C];
	__asm        mov    chPrefsData, eax;
// LINE 86:
	__asm        cmp    chPrefsData, 0;
	__asm        je     _Tc4;
// LINE 87:
	__asm        mov    eax, chPrefsData;
	__asm        mov    currentSoundPreferences, eax;
// LINE 88:
	__asm        mov    eax, currentSoundPreferences;
	__asm        mov    eax, [eax];
	__asm        mov    glMasterVolume, eax;
// LINE 89:
	__asm        mov    i, 0;
	__asm        jmp    _T55;
_T52:
	__asm        inc    i;
_T55:
	__asm        cmp    i, 0x71;
	__asm        jge    _Tc4;
// LINE 90:
	__asm        mov    eax, i;
	__asm        cmp    gSoundManager.sound[0][eax*4], 0;
	__asm        je     _Tbf;

	__asm        mov    eax, i;
	__asm        mov    eax, lOriginalSoundVolumes[eax*4];
	__asm        mov    [ebp-0x14], eax;
// LINE 91:
	__asm        mov    eax, glMasterVolume;
	__asm        imul   eax, [ebp-0x14];
	__asm        mov    [ebp-0x14], eax;
	__asm        mov    ecx, 0x2710;
	__asm        mov    eax, [ebp-0x14];
	__asm        cdq;
	__asm        idiv   ecx;
	__asm        mov    [ebp-0x14], eax;
	__asm        mov    eax, [ebp-0x14];
	__asm        mov    lNewVolume, eax;
	__asm        jmp    near ptr 0x00441F87;
// LINE 92:
	__asm        mov    eax, lNewVolume;
	__asm        push   eax;
	__asm        mov    eax, i;
	__asm        mov    ecx, i;
	__asm        mov    ecx, gSoundManager.sound[0][ecx*4];
	__asm        mov    edx, [ecx];
	__asm        mov    ecx, gSoundManager.sound[0][eax*4];
	__asm        call   dword ptr [edx+0x24];
// LINE 94:
_Tbf:
	__asm        jmp    _T52;
// LINE 97:
_Tc4:
	__asm        jmp    near ptr 0x00441FAE;
}

// FUNCTION: COPTER_D 0x00441fb5
int32_t S3DSInit(void * __ptr32 hWnd) {
	int32_t i;

// LINE 131:
	__asm        mov    i, 0;
	__asm        jmp    _T18;
_T15:
	__asm        inc    i;
_T18:
	__asm        cmp    i, 0x71;
	__asm        jge    _T35;
// LINE 132:
	__asm        mov    eax, i;
	__asm        mov    lOriginalSoundVolumes[eax*4], 0x2710;
// LINE 133:
	__asm        jmp    _T15;
// LINE 134:
_T35:
	__asm        mov    eax, hWnd;
	__asm        push   eax;
	__asm        mov    ecx, 0x604588;
	__asm        call   SoundSystem::Initialize;
	__asm        jmp    near ptr 0x00441FFD;
// LINE 135:
}

// FUNCTION: COPTER_D 0x00442002
int32_t S3LoadSounds() {
	int32_t count;
	char szFullSoundPath[260];

// LINE 153:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598974;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 154:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x73C], eax;
	__asm        cmp    dword ptr [ebp-0x73C], 0;
	__asm        je     _T5e;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x73C];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x10C], eax;
	__asm        jmp    _T68;
_T5e:
	__asm        mov    dword ptr [ebp-0x10C], 0;
_T68:
	__asm        mov    dword ptr [ebp-0x110], 0;
	__asm        jmp    near ptr 0x00442079;

	__asm        push   2;
	__asm        push   0;
	__asm        lea    eax, [ebp-0x110];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x110];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x110], 0;
	__asm        je     _Tcb;

	__asm        mov    eax, [ebp-0x110];
	__asm        mov    [ebp-0x424], eax;
	__asm        mov    eax, [ebp-0x424];
	__asm        mov    [ebp-0x428], eax;
	__asm        mov    eax, [ebp-0x428];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_Tcb:
	__asm        jmp    near ptr 0x004420D2;
// LINE 156:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598980;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 157:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x740], eax;
	__asm        cmp    dword ptr [ebp-0x740], 0;
	__asm        je     _T122;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x740];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x114], eax;
	__asm        jmp    _T12c;
_T122:
	__asm        mov    dword ptr [ebp-0x114], 0;
_T12c:
	__asm        mov    dword ptr [ebp-0x118], 0;
	__asm        jmp    near ptr 0x0044213D;

	__asm        push   2;
	__asm        push   1;
	__asm        lea    eax, [ebp-0x118];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x118];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x118], 0;
	__asm        je     _T18f;

	__asm        mov    eax, [ebp-0x118];
	__asm        mov    [ebp-0x42C], eax;
	__asm        mov    eax, [ebp-0x42C];
	__asm        mov    [ebp-0x430], eax;
	__asm        mov    eax, [ebp-0x430];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T18f:
	__asm        jmp    near ptr 0x00442196;
// LINE 159:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x59898C;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 160:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x744], eax;
	__asm        cmp    dword ptr [ebp-0x744], 0;
	__asm        je     _T1e6;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x744];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x11C], eax;
	__asm        jmp    _T1f0;
_T1e6:
	__asm        mov    dword ptr [ebp-0x11C], 0;
_T1f0:
	__asm        mov    dword ptr [ebp-0x120], 0;
	__asm        jmp    near ptr 0x00442201;

	__asm        push   2;
	__asm        push   2;
	__asm        lea    eax, [ebp-0x120];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x120];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x120], 0;
	__asm        je     _T253;

	__asm        mov    eax, [ebp-0x120];
	__asm        mov    [ebp-0x434], eax;
	__asm        mov    eax, [ebp-0x434];
	__asm        mov    [ebp-0x438], eax;
	__asm        mov    eax, [ebp-0x438];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T253:
	__asm        jmp    near ptr 0x0044225A;
// LINE 162:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x59899C;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 163:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x748], eax;
	__asm        cmp    dword ptr [ebp-0x748], 0;
	__asm        je     _T2aa;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x748];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x124], eax;
	__asm        jmp    _T2b4;
_T2aa:
	__asm        mov    dword ptr [ebp-0x124], 0;
_T2b4:
	__asm        mov    dword ptr [ebp-0x128], 0;
	__asm        jmp    near ptr 0x004422C5;

	__asm        push   2;
	__asm        push   3;
	__asm        lea    eax, [ebp-0x128];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x128];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x128], 0;
	__asm        je     _T317;

	__asm        mov    eax, [ebp-0x128];
	__asm        mov    [ebp-0x43C], eax;
	__asm        mov    eax, [ebp-0x43C];
	__asm        mov    [ebp-0x440], eax;
	__asm        mov    eax, [ebp-0x440];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T317:
	__asm        jmp    near ptr 0x0044231E;
// LINE 165:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x5989AC;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 166:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x74C], eax;
	__asm        cmp    dword ptr [ebp-0x74C], 0;
	__asm        je     _T36e;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x74C];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x12C], eax;
	__asm        jmp    _T378;
_T36e:
	__asm        mov    dword ptr [ebp-0x12C], 0;
_T378:
	__asm        mov    dword ptr [ebp-0x130], 0;
	__asm        jmp    near ptr 0x00442389;

	__asm        push   2;
	__asm        push   4;
	__asm        lea    eax, [ebp-0x130];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x130];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x130], 0;
	__asm        je     _T3db;

	__asm        mov    eax, [ebp-0x130];
	__asm        mov    [ebp-0x444], eax;
	__asm        mov    eax, [ebp-0x444];
	__asm        mov    [ebp-0x448], eax;
	__asm        mov    eax, [ebp-0x448];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T3db:
	__asm        jmp    near ptr 0x004423E2;
// LINE 168:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x5989B8;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 169:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x750], eax;
	__asm        cmp    dword ptr [ebp-0x750], 0;
	__asm        je     _T432;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x750];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x134], eax;
	__asm        jmp    _T43c;
_T432:
	__asm        mov    dword ptr [ebp-0x134], 0;
_T43c:
	__asm        mov    dword ptr [ebp-0x138], 0;
	__asm        jmp    near ptr 0x0044244D;

	__asm        push   2;
	__asm        push   5;
	__asm        lea    eax, [ebp-0x138];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x138];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x138], 0;
	__asm        je     _T49f;

	__asm        mov    eax, [ebp-0x138];
	__asm        mov    [ebp-0x44C], eax;
	__asm        mov    eax, [ebp-0x44C];
	__asm        mov    [ebp-0x450], eax;
	__asm        mov    eax, [ebp-0x450];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T49f:
	__asm        jmp    near ptr 0x004424A6;
// LINE 171:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x5989C8;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 172:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x754], eax;
	__asm        cmp    dword ptr [ebp-0x754], 0;
	__asm        je     _T4f6;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x754];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x13C], eax;
	__asm        jmp    _T500;
_T4f6:
	__asm        mov    dword ptr [ebp-0x13C], 0;
_T500:
	__asm        mov    dword ptr [ebp-0x140], 0;
	__asm        jmp    near ptr 0x00442511;

	__asm        push   2;
	__asm        push   6;
	__asm        lea    eax, [ebp-0x140];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x140];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x140], 0;
	__asm        je     _T563;

	__asm        mov    eax, [ebp-0x140];
	__asm        mov    [ebp-0x454], eax;
	__asm        mov    eax, [ebp-0x454];
	__asm        mov    [ebp-0x458], eax;
	__asm        mov    eax, [ebp-0x458];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T563:
	__asm        jmp    near ptr 0x0044256A;
// LINE 174:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x5989D4;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 175:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x758], eax;
	__asm        cmp    dword ptr [ebp-0x758], 0;
	__asm        je     _T5ba;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x758];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x144], eax;
	__asm        jmp    _T5c4;
_T5ba:
	__asm        mov    dword ptr [ebp-0x144], 0;
_T5c4:
	__asm        mov    dword ptr [ebp-0x148], 0;
	__asm        jmp    near ptr 0x004425D5;

	__asm        push   2;
	__asm        push   7;
	__asm        lea    eax, [ebp-0x148];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x148];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x148], 0;
	__asm        je     _T627;

	__asm        mov    eax, [ebp-0x148];
	__asm        mov    [ebp-0x45C], eax;
	__asm        mov    eax, [ebp-0x45C];
	__asm        mov    [ebp-0x460], eax;
	__asm        mov    eax, [ebp-0x460];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T627:
	__asm        jmp    near ptr 0x0044262E;
// LINE 177:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x5989E0;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 178:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x75C], eax;
	__asm        cmp    dword ptr [ebp-0x75C], 0;
	__asm        je     _T67e;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x75C];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x14C], eax;
	__asm        jmp    _T688;
_T67e:
	__asm        mov    dword ptr [ebp-0x14C], 0;
_T688:
	__asm        mov    dword ptr [ebp-0x150], 0;
	__asm        jmp    near ptr 0x00442699;

	__asm        push   2;
	__asm        push   8;
	__asm        lea    eax, [ebp-0x150];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x150];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x150], 0;
	__asm        je     _T6eb;

	__asm        mov    eax, [ebp-0x150];
	__asm        mov    [ebp-0x464], eax;
	__asm        mov    eax, [ebp-0x464];
	__asm        mov    [ebp-0x468], eax;
	__asm        mov    eax, [ebp-0x468];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T6eb:
	__asm        jmp    near ptr 0x004426F2;
// LINE 180:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x5989EC;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 181:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x760], eax;
	__asm        cmp    dword ptr [ebp-0x760], 0;
	__asm        je     _T742;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x760];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x154], eax;
	__asm        jmp    _T74c;
_T742:
	__asm        mov    dword ptr [ebp-0x154], 0;
_T74c:
	__asm        mov    dword ptr [ebp-0x158], 0;
	__asm        jmp    near ptr 0x0044275D;

	__asm        push   2;
	__asm        push   9;
	__asm        lea    eax, [ebp-0x158];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x158];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x158], 0;
	__asm        je     _T7af;

	__asm        mov    eax, [ebp-0x158];
	__asm        mov    [ebp-0x46C], eax;
	__asm        mov    eax, [ebp-0x46C];
	__asm        mov    [ebp-0x470], eax;
	__asm        mov    eax, [ebp-0x470];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T7af:
	__asm        jmp    near ptr 0x004427B6;
// LINE 183:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x5989F8;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 184:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x764], eax;
	__asm        cmp    dword ptr [ebp-0x764], 0;
	__asm        je     _T806;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x764];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x15C], eax;
	__asm        jmp    _T810;
_T806:
	__asm        mov    dword ptr [ebp-0x15C], 0;
_T810:
	__asm        mov    dword ptr [ebp-0x160], 0;
	__asm        jmp    near ptr 0x00442821;

	__asm        push   2;
	__asm        push   0xA;
	__asm        lea    eax, [ebp-0x160];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x160];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x160], 0;
	__asm        je     _T873;

	__asm        mov    eax, [ebp-0x160];
	__asm        mov    [ebp-0x474], eax;
	__asm        mov    eax, [ebp-0x474];
	__asm        mov    [ebp-0x478], eax;
	__asm        mov    eax, [ebp-0x478];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T873:
	__asm        jmp    near ptr 0x0044287A;
// LINE 186:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598A04;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 187:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x768], eax;
	__asm        cmp    dword ptr [ebp-0x768], 0;
	__asm        je     _T8ca;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x768];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x164], eax;
	__asm        jmp    _T8d4;
_T8ca:
	__asm        mov    dword ptr [ebp-0x164], 0;
_T8d4:
	__asm        mov    dword ptr [ebp-0x168], 0;
	__asm        jmp    near ptr 0x004428E5;

	__asm        push   2;
	__asm        push   0xB;
	__asm        lea    eax, [ebp-0x168];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x168];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x168], 0;
	__asm        je     _T937;

	__asm        mov    eax, [ebp-0x168];
	__asm        mov    [ebp-0x47C], eax;
	__asm        mov    eax, [ebp-0x47C];
	__asm        mov    [ebp-0x480], eax;
	__asm        mov    eax, [ebp-0x480];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T937:
	__asm        jmp    near ptr 0x0044293E;
// LINE 189:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598A14;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 190:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x76C], eax;
	__asm        cmp    dword ptr [ebp-0x76C], 0;
	__asm        je     _T98e;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x76C];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x16C], eax;
	__asm        jmp    _T998;
_T98e:
	__asm        mov    dword ptr [ebp-0x16C], 0;
_T998:
	__asm        mov    dword ptr [ebp-0x170], 0;
	__asm        jmp    near ptr 0x004429A9;

	__asm        push   2;
	__asm        push   0xC;
	__asm        lea    eax, [ebp-0x170];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x170];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x170], 0;
	__asm        je     _T9fb;

	__asm        mov    eax, [ebp-0x170];
	__asm        mov    [ebp-0x484], eax;
	__asm        mov    eax, [ebp-0x484];
	__asm        mov    [ebp-0x488], eax;
	__asm        mov    eax, [ebp-0x488];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T9fb:
	__asm        jmp    near ptr 0x00442A02;
// LINE 192:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598A20;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 193:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x770], eax;
	__asm        cmp    dword ptr [ebp-0x770], 0;
	__asm        je     _Ta52;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x770];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x174], eax;
	__asm        jmp    _Ta5c;
_Ta52:
	__asm        mov    dword ptr [ebp-0x174], 0;
_Ta5c:
	__asm        mov    dword ptr [ebp-0x178], 0;
	__asm        jmp    near ptr 0x00442A6D;

	__asm        push   2;
	__asm        push   0xD;
	__asm        lea    eax, [ebp-0x178];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x178];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x178], 0;
	__asm        je     _Tabf;

	__asm        mov    eax, [ebp-0x178];
	__asm        mov    [ebp-0x48C], eax;
	__asm        mov    eax, [ebp-0x48C];
	__asm        mov    [ebp-0x490], eax;
	__asm        mov    eax, [ebp-0x490];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_Tabf:
	__asm        jmp    near ptr 0x00442AC6;
// LINE 195:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598A30;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 196:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x774], eax;
	__asm        cmp    dword ptr [ebp-0x774], 0;
	__asm        je     _Tb16;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x774];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x17C], eax;
	__asm        jmp    _Tb20;
_Tb16:
	__asm        mov    dword ptr [ebp-0x17C], 0;
_Tb20:
	__asm        mov    dword ptr [ebp-0x180], 0;
	__asm        jmp    near ptr 0x00442B31;

	__asm        push   2;
	__asm        push   0xE;
	__asm        lea    eax, [ebp-0x180];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x180];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x180], 0;
	__asm        je     _Tb83;

	__asm        mov    eax, [ebp-0x180];
	__asm        mov    [ebp-0x494], eax;
	__asm        mov    eax, [ebp-0x494];
	__asm        mov    [ebp-0x498], eax;
	__asm        mov    eax, [ebp-0x498];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_Tb83:
	__asm        jmp    near ptr 0x00442B8A;
// LINE 198:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598A40;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 199:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x778], eax;
	__asm        cmp    dword ptr [ebp-0x778], 0;
	__asm        je     _Tbda;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x778];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x184], eax;
	__asm        jmp    _Tbe4;
_Tbda:
	__asm        mov    dword ptr [ebp-0x184], 0;
_Tbe4:
	__asm        mov    dword ptr [ebp-0x188], 0;
	__asm        jmp    near ptr 0x00442BF5;

	__asm        push   2;
	__asm        push   0xF;
	__asm        lea    eax, [ebp-0x188];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x188];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x188], 0;
	__asm        je     _Tc47;

	__asm        mov    eax, [ebp-0x188];
	__asm        mov    [ebp-0x49C], eax;
	__asm        mov    eax, [ebp-0x49C];
	__asm        mov    [ebp-0x4A0], eax;
	__asm        mov    eax, [ebp-0x4A0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_Tc47:
	__asm        jmp    near ptr 0x00442C4E;
// LINE 201:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598A4C;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 202:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x77C], eax;
	__asm        cmp    dword ptr [ebp-0x77C], 0;
	__asm        je     _Tc9e;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x77C];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x18C], eax;
	__asm        jmp    _Tca8;
_Tc9e:
	__asm        mov    dword ptr [ebp-0x18C], 0;
_Tca8:
	__asm        mov    dword ptr [ebp-0x190], 0;
	__asm        jmp    near ptr 0x00442CB9;

	__asm        push   2;
	__asm        push   0x10;
	__asm        lea    eax, [ebp-0x190];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x190];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x190], 0;
	__asm        je     _Td0b;

	__asm        mov    eax, [ebp-0x190];
	__asm        mov    [ebp-0x4A4], eax;
	__asm        mov    eax, [ebp-0x4A4];
	__asm        mov    [ebp-0x4A8], eax;
	__asm        mov    eax, [ebp-0x4A8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_Td0b:
	__asm        jmp    near ptr 0x00442D12;
// LINE 204:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598A58;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 205:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x780], eax;
	__asm        cmp    dword ptr [ebp-0x780], 0;
	__asm        je     _Td62;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x780];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x194], eax;
	__asm        jmp    _Td6c;
_Td62:
	__asm        mov    dword ptr [ebp-0x194], 0;
_Td6c:
	__asm        mov    dword ptr [ebp-0x198], 0;
	__asm        jmp    near ptr 0x00442D7D;

	__asm        push   2;
	__asm        push   0x11;
	__asm        lea    eax, [ebp-0x198];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x198];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x198], 0;
	__asm        je     _Tdcf;

	__asm        mov    eax, [ebp-0x198];
	__asm        mov    [ebp-0x4AC], eax;
	__asm        mov    eax, [ebp-0x4AC];
	__asm        mov    [ebp-0x4B0], eax;
	__asm        mov    eax, [ebp-0x4B0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_Tdcf:
	__asm        jmp    near ptr 0x00442DD6;
// LINE 207:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598A68;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 208:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x784], eax;
	__asm        cmp    dword ptr [ebp-0x784], 0;
	__asm        je     _Te26;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x784];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x19C], eax;
	__asm        jmp    _Te30;
_Te26:
	__asm        mov    dword ptr [ebp-0x19C], 0;
_Te30:
	__asm        mov    dword ptr [ebp-0x1A0], 0;
	__asm        jmp    near ptr 0x00442E41;

	__asm        push   2;
	__asm        push   0x26;
	__asm        lea    eax, [ebp-0x1A0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x1A0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x1A0], 0;
	__asm        je     _Te93;

	__asm        mov    eax, [ebp-0x1A0];
	__asm        mov    [ebp-0x4B4], eax;
	__asm        mov    eax, [ebp-0x4B4];
	__asm        mov    [ebp-0x4B8], eax;
	__asm        mov    eax, [ebp-0x4B8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_Te93:
	__asm        jmp    near ptr 0x00442E9A;
// LINE 210:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598A78;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 211:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x788], eax;
	__asm        cmp    dword ptr [ebp-0x788], 0;
	__asm        je     _Teea;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x788];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x1A4], eax;
	__asm        jmp    _Tef4;
_Teea:
	__asm        mov    dword ptr [ebp-0x1A4], 0;
_Tef4:
	__asm        mov    dword ptr [ebp-0x1A8], 0;
	__asm        jmp    near ptr 0x00442F05;

	__asm        push   2;
	__asm        push   0x12;
	__asm        lea    eax, [ebp-0x1A8];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x1A8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x1A8], 0;
	__asm        je     _Tf57;

	__asm        mov    eax, [ebp-0x1A8];
	__asm        mov    [ebp-0x4BC], eax;
	__asm        mov    eax, [ebp-0x4BC];
	__asm        mov    [ebp-0x4C0], eax;
	__asm        mov    eax, [ebp-0x4C0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_Tf57:
	__asm        jmp    near ptr 0x00442F5E;
// LINE 213:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598A88;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 214:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x78C], eax;
	__asm        cmp    dword ptr [ebp-0x78C], 0;
	__asm        je     _Tfae;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x78C];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x1AC], eax;
	__asm        jmp    _Tfb8;
_Tfae:
	__asm        mov    dword ptr [ebp-0x1AC], 0;
_Tfb8:
	__asm        mov    dword ptr [ebp-0x1B0], 0;
	__asm        jmp    near ptr 0x00442FC9;

	__asm        push   2;
	__asm        push   0x13;
	__asm        lea    eax, [ebp-0x1B0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x1B0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x1B0], 0;
	__asm        je     _T101b;

	__asm        mov    eax, [ebp-0x1B0];
	__asm        mov    [ebp-0x4C4], eax;
	__asm        mov    eax, [ebp-0x4C4];
	__asm        mov    [ebp-0x4C8], eax;
	__asm        mov    eax, [ebp-0x4C8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T101b:
	__asm        jmp    near ptr 0x00443022;
// LINE 216:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598A98;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 217:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x790], eax;
	__asm        cmp    dword ptr [ebp-0x790], 0;
	__asm        je     _T1072;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x790];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x1B4], eax;
	__asm        jmp    _T107c;
_T1072:
	__asm        mov    dword ptr [ebp-0x1B4], 0;
_T107c:
	__asm        mov    dword ptr [ebp-0x1B8], 0;
	__asm        jmp    near ptr 0x0044308D;

	__asm        push   2;
	__asm        push   0x14;
	__asm        lea    eax, [ebp-0x1B8];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x1B8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x1B8], 0;
	__asm        je     _T10df;

	__asm        mov    eax, [ebp-0x1B8];
	__asm        mov    [ebp-0x4CC], eax;
	__asm        mov    eax, [ebp-0x4CC];
	__asm        mov    [ebp-0x4D0], eax;
	__asm        mov    eax, [ebp-0x4D0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T10df:
	__asm        jmp    near ptr 0x004430E6;
// LINE 219:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598AA8;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 220:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x794], eax;
	__asm        cmp    dword ptr [ebp-0x794], 0;
	__asm        je     _T1136;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x794];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x1BC], eax;
	__asm        jmp    _T1140;
_T1136:
	__asm        mov    dword ptr [ebp-0x1BC], 0;
_T1140:
	__asm        mov    dword ptr [ebp-0x1C0], 0;
	__asm        jmp    near ptr 0x00443151;

	__asm        push   2;
	__asm        push   0x15;
	__asm        lea    eax, [ebp-0x1C0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x1C0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x1C0], 0;
	__asm        je     _T11a3;

	__asm        mov    eax, [ebp-0x1C0];
	__asm        mov    [ebp-0x4D4], eax;
	__asm        mov    eax, [ebp-0x4D4];
	__asm        mov    [ebp-0x4D8], eax;
	__asm        mov    eax, [ebp-0x4D8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T11a3:
	__asm        jmp    near ptr 0x004431AA;
// LINE 222:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598AB4;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 223:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x798], eax;
	__asm        cmp    dword ptr [ebp-0x798], 0;
	__asm        je     _T11fa;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x798];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x1C4], eax;
	__asm        jmp    _T1204;
_T11fa:
	__asm        mov    dword ptr [ebp-0x1C4], 0;
_T1204:
	__asm        mov    dword ptr [ebp-0x1C8], 0;
	__asm        jmp    near ptr 0x00443215;

	__asm        push   2;
	__asm        push   0x16;
	__asm        lea    eax, [ebp-0x1C8];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x1C8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x1C8], 0;
	__asm        je     _T1267;

	__asm        mov    eax, [ebp-0x1C8];
	__asm        mov    [ebp-0x4DC], eax;
	__asm        mov    eax, [ebp-0x4DC];
	__asm        mov    [ebp-0x4E0], eax;
	__asm        mov    eax, [ebp-0x4E0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T1267:
	__asm        jmp    near ptr 0x0044326E;
// LINE 225:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598AC4;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 226:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x79C], eax;
	__asm        cmp    dword ptr [ebp-0x79C], 0;
	__asm        je     _T12be;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x79C];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x1CC], eax;
	__asm        jmp    _T12c8;
_T12be:
	__asm        mov    dword ptr [ebp-0x1CC], 0;
_T12c8:
	__asm        mov    dword ptr [ebp-0x1D0], 0;
	__asm        jmp    near ptr 0x004432D9;

	__asm        push   2;
	__asm        push   0x17;
	__asm        lea    eax, [ebp-0x1D0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x1D0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x1D0], 0;
	__asm        je     _T132b;

	__asm        mov    eax, [ebp-0x1D0];
	__asm        mov    [ebp-0x4E4], eax;
	__asm        mov    eax, [ebp-0x4E4];
	__asm        mov    [ebp-0x4E8], eax;
	__asm        mov    eax, [ebp-0x4E8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T132b:
	__asm        jmp    near ptr 0x00443332;
// LINE 228:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598AD0;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 229:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7A0], eax;
	__asm        cmp    dword ptr [ebp-0x7A0], 0;
	__asm        je     _T1382;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7A0];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x1D4], eax;
	__asm        jmp    _T138c;
_T1382:
	__asm        mov    dword ptr [ebp-0x1D4], 0;
_T138c:
	__asm        mov    dword ptr [ebp-0x1D8], 0;
	__asm        jmp    near ptr 0x0044339D;

	__asm        push   2;
	__asm        push   0x18;
	__asm        lea    eax, [ebp-0x1D8];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x1D8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x1D8], 0;
	__asm        je     _T13ef;

	__asm        mov    eax, [ebp-0x1D8];
	__asm        mov    [ebp-0x4EC], eax;
	__asm        mov    eax, [ebp-0x4EC];
	__asm        mov    [ebp-0x4F0], eax;
	__asm        mov    eax, [ebp-0x4F0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T13ef:
	__asm        jmp    near ptr 0x004433F6;
// LINE 231:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598ADC;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 232:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7A4], eax;
	__asm        cmp    dword ptr [ebp-0x7A4], 0;
	__asm        je     _T1446;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7A4];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x1DC], eax;
	__asm        jmp    _T1450;
_T1446:
	__asm        mov    dword ptr [ebp-0x1DC], 0;
_T1450:
	__asm        mov    dword ptr [ebp-0x1E0], 0;
	__asm        jmp    near ptr 0x00443461;

	__asm        push   2;
	__asm        push   0x19;
	__asm        lea    eax, [ebp-0x1E0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x1E0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x1E0], 0;
	__asm        je     _T14b3;

	__asm        mov    eax, [ebp-0x1E0];
	__asm        mov    [ebp-0x4F4], eax;
	__asm        mov    eax, [ebp-0x4F4];
	__asm        mov    [ebp-0x4F8], eax;
	__asm        mov    eax, [ebp-0x4F8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T14b3:
	__asm        jmp    near ptr 0x004434BA;
// LINE 234:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598AE8;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 235:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7A8], eax;
	__asm        cmp    dword ptr [ebp-0x7A8], 0;
	__asm        je     _T150a;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7A8];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x1E4], eax;
	__asm        jmp    _T1514;
_T150a:
	__asm        mov    dword ptr [ebp-0x1E4], 0;
_T1514:
	__asm        mov    dword ptr [ebp-0x1E8], 0;
	__asm        jmp    near ptr 0x00443525;

	__asm        push   2;
	__asm        push   0x1A;
	__asm        lea    eax, [ebp-0x1E8];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x1E8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x1E8], 0;
	__asm        je     _T1577;

	__asm        mov    eax, [ebp-0x1E8];
	__asm        mov    [ebp-0x4FC], eax;
	__asm        mov    eax, [ebp-0x4FC];
	__asm        mov    [ebp-0x500], eax;
	__asm        mov    eax, [ebp-0x500];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T1577:
	__asm        jmp    near ptr 0x0044357E;
// LINE 237:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598AF4;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 238:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7AC], eax;
	__asm        cmp    dword ptr [ebp-0x7AC], 0;
	__asm        je     _T15ce;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7AC];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x1EC], eax;
	__asm        jmp    _T15d8;
_T15ce:
	__asm        mov    dword ptr [ebp-0x1EC], 0;
_T15d8:
	__asm        mov    dword ptr [ebp-0x1F0], 0;
	__asm        jmp    near ptr 0x004435E9;

	__asm        push   2;
	__asm        push   0x1B;
	__asm        lea    eax, [ebp-0x1F0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x1F0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x1F0], 0;
	__asm        je     _T163b;

	__asm        mov    eax, [ebp-0x1F0];
	__asm        mov    [ebp-0x504], eax;
	__asm        mov    eax, [ebp-0x504];
	__asm        mov    [ebp-0x508], eax;
	__asm        mov    eax, [ebp-0x508];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T163b:
	__asm        jmp    near ptr 0x00443642;
// LINE 240:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598B00;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 241:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7B0], eax;
	__asm        cmp    dword ptr [ebp-0x7B0], 0;
	__asm        je     _T1692;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7B0];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x1F4], eax;
	__asm        jmp    _T169c;
_T1692:
	__asm        mov    dword ptr [ebp-0x1F4], 0;
_T169c:
	__asm        mov    dword ptr [ebp-0x1F8], 0;
	__asm        jmp    near ptr 0x004436AD;

	__asm        push   2;
	__asm        push   0x1C;
	__asm        lea    eax, [ebp-0x1F8];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x1F8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x1F8], 0;
	__asm        je     _T16ff;

	__asm        mov    eax, [ebp-0x1F8];
	__asm        mov    [ebp-0x50C], eax;
	__asm        mov    eax, [ebp-0x50C];
	__asm        mov    [ebp-0x510], eax;
	__asm        mov    eax, [ebp-0x510];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T16ff:
	__asm        jmp    near ptr 0x00443706;
// LINE 243:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598B0C;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 244:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7B4], eax;
	__asm        cmp    dword ptr [ebp-0x7B4], 0;
	__asm        je     _T1756;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7B4];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x1FC], eax;
	__asm        jmp    _T1760;
_T1756:
	__asm        mov    dword ptr [ebp-0x1FC], 0;
_T1760:
	__asm        mov    dword ptr [ebp-0x200], 0;
	__asm        jmp    near ptr 0x00443771;

	__asm        push   2;
	__asm        push   0x1D;
	__asm        lea    eax, [ebp-0x200];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x200];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x200], 0;
	__asm        je     _T17c3;

	__asm        mov    eax, [ebp-0x200];
	__asm        mov    [ebp-0x514], eax;
	__asm        mov    eax, [ebp-0x514];
	__asm        mov    [ebp-0x518], eax;
	__asm        mov    eax, [ebp-0x518];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T17c3:
	__asm        jmp    near ptr 0x004437CA;
// LINE 246:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598B18;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 247:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7B8], eax;
	__asm        cmp    dword ptr [ebp-0x7B8], 0;
	__asm        je     _T181a;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7B8];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x204], eax;
	__asm        jmp    _T1824;
_T181a:
	__asm        mov    dword ptr [ebp-0x204], 0;
_T1824:
	__asm        mov    dword ptr [ebp-0x208], 0;
	__asm        jmp    near ptr 0x00443835;

	__asm        push   2;
	__asm        push   0x1E;
	__asm        lea    eax, [ebp-0x208];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x208];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x208], 0;
	__asm        je     _T1887;

	__asm        mov    eax, [ebp-0x208];
	__asm        mov    [ebp-0x51C], eax;
	__asm        mov    eax, [ebp-0x51C];
	__asm        mov    [ebp-0x520], eax;
	__asm        mov    eax, [ebp-0x520];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T1887:
	__asm        jmp    near ptr 0x0044388E;
// LINE 249:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598B24;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 250:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7BC], eax;
	__asm        cmp    dword ptr [ebp-0x7BC], 0;
	__asm        je     _T18de;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7BC];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x20C], eax;
	__asm        jmp    _T18e8;
_T18de:
	__asm        mov    dword ptr [ebp-0x20C], 0;
_T18e8:
	__asm        mov    dword ptr [ebp-0x210], 0;
	__asm        jmp    near ptr 0x004438F9;

	__asm        push   2;
	__asm        push   0x1F;
	__asm        lea    eax, [ebp-0x210];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x210];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x210], 0;
	__asm        je     _T194b;

	__asm        mov    eax, [ebp-0x210];
	__asm        mov    [ebp-0x524], eax;
	__asm        mov    eax, [ebp-0x524];
	__asm        mov    [ebp-0x528], eax;
	__asm        mov    eax, [ebp-0x528];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T194b:
	__asm        jmp    near ptr 0x00443952;
// LINE 252:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598B30;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 253:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7C0], eax;
	__asm        cmp    dword ptr [ebp-0x7C0], 0;
	__asm        je     _T19a2;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7C0];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x214], eax;
	__asm        jmp    _T19ac;
_T19a2:
	__asm        mov    dword ptr [ebp-0x214], 0;
_T19ac:
	__asm        mov    dword ptr [ebp-0x218], 0;
	__asm        jmp    near ptr 0x004439BD;

	__asm        push   2;
	__asm        push   0x20;
	__asm        lea    eax, [ebp-0x218];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x218];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x218], 0;
	__asm        je     _T1a0f;

	__asm        mov    eax, [ebp-0x218];
	__asm        mov    [ebp-0x52C], eax;
	__asm        mov    eax, [ebp-0x52C];
	__asm        mov    [ebp-0x530], eax;
	__asm        mov    eax, [ebp-0x530];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T1a0f:
	__asm        jmp    near ptr 0x00443A16;
// LINE 255:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598B3C;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 256:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7C4], eax;
	__asm        cmp    dword ptr [ebp-0x7C4], 0;
	__asm        je     _T1a66;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7C4];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x21C], eax;
	__asm        jmp    _T1a70;
_T1a66:
	__asm        mov    dword ptr [ebp-0x21C], 0;
_T1a70:
	__asm        mov    dword ptr [ebp-0x220], 0;
	__asm        jmp    near ptr 0x00443A81;

	__asm        push   2;
	__asm        push   0x21;
	__asm        lea    eax, [ebp-0x220];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x220];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x220], 0;
	__asm        je     _T1ad3;

	__asm        mov    eax, [ebp-0x220];
	__asm        mov    [ebp-0x534], eax;
	__asm        mov    eax, [ebp-0x534];
	__asm        mov    [ebp-0x538], eax;
	__asm        mov    eax, [ebp-0x538];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T1ad3:
	__asm        jmp    near ptr 0x00443ADA;
// LINE 258:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598B48;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 259:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7C8], eax;
	__asm        cmp    dword ptr [ebp-0x7C8], 0;
	__asm        je     _T1b2a;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7C8];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x224], eax;
	__asm        jmp    _T1b34;
_T1b2a:
	__asm        mov    dword ptr [ebp-0x224], 0;
_T1b34:
	__asm        mov    dword ptr [ebp-0x228], 0;
	__asm        jmp    near ptr 0x00443B45;

	__asm        push   2;
	__asm        push   0x22;
	__asm        lea    eax, [ebp-0x228];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x228];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x228], 0;
	__asm        je     _T1b97;

	__asm        mov    eax, [ebp-0x228];
	__asm        mov    [ebp-0x53C], eax;
	__asm        mov    eax, [ebp-0x53C];
	__asm        mov    [ebp-0x540], eax;
	__asm        mov    eax, [ebp-0x540];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T1b97:
	__asm        jmp    near ptr 0x00443B9E;
// LINE 261:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598B54;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 262:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7CC], eax;
	__asm        cmp    dword ptr [ebp-0x7CC], 0;
	__asm        je     _T1bee;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7CC];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x22C], eax;
	__asm        jmp    _T1bf8;
_T1bee:
	__asm        mov    dword ptr [ebp-0x22C], 0;
_T1bf8:
	__asm        mov    dword ptr [ebp-0x230], 0;
	__asm        jmp    near ptr 0x00443C09;

	__asm        push   2;
	__asm        push   0x23;
	__asm        lea    eax, [ebp-0x230];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x230];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x230], 0;
	__asm        je     _T1c5b;

	__asm        mov    eax, [ebp-0x230];
	__asm        mov    [ebp-0x544], eax;
	__asm        mov    eax, [ebp-0x544];
	__asm        mov    [ebp-0x548], eax;
	__asm        mov    eax, [ebp-0x548];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T1c5b:
	__asm        jmp    near ptr 0x00443C62;
// LINE 264:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598B60;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 265:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7D0], eax;
	__asm        cmp    dword ptr [ebp-0x7D0], 0;
	__asm        je     _T1cb2;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7D0];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x234], eax;
	__asm        jmp    _T1cbc;
_T1cb2:
	__asm        mov    dword ptr [ebp-0x234], 0;
_T1cbc:
	__asm        mov    dword ptr [ebp-0x238], 0;
	__asm        jmp    near ptr 0x00443CCD;

	__asm        push   2;
	__asm        push   0x24;
	__asm        lea    eax, [ebp-0x238];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x238];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x238], 0;
	__asm        je     _T1d1f;

	__asm        mov    eax, [ebp-0x238];
	__asm        mov    [ebp-0x54C], eax;
	__asm        mov    eax, [ebp-0x54C];
	__asm        mov    [ebp-0x550], eax;
	__asm        mov    eax, [ebp-0x550];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T1d1f:
	__asm        jmp    near ptr 0x00443D26;
// LINE 267:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598B70;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 268:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7D4], eax;
	__asm        cmp    dword ptr [ebp-0x7D4], 0;
	__asm        je     _T1d76;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7D4];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x23C], eax;
	__asm        jmp    _T1d80;
_T1d76:
	__asm        mov    dword ptr [ebp-0x23C], 0;
_T1d80:
	__asm        mov    dword ptr [ebp-0x240], 0;
	__asm        jmp    near ptr 0x00443D91;

	__asm        push   2;
	__asm        push   0x25;
	__asm        lea    eax, [ebp-0x240];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x240];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x240], 0;
	__asm        je     _T1de3;

	__asm        mov    eax, [ebp-0x240];
	__asm        mov    [ebp-0x554], eax;
	__asm        mov    eax, [ebp-0x554];
	__asm        mov    [ebp-0x558], eax;
	__asm        mov    eax, [ebp-0x558];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T1de3:
	__asm        jmp    near ptr 0x00443DEA;
// LINE 270:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598B80;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 271:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7D8], eax;
	__asm        cmp    dword ptr [ebp-0x7D8], 0;
	__asm        je     _T1e3a;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7D8];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x244], eax;
	__asm        jmp    _T1e44;
_T1e3a:
	__asm        mov    dword ptr [ebp-0x244], 0;
_T1e44:
	__asm        mov    dword ptr [ebp-0x248], 0;
	__asm        jmp    near ptr 0x00443E55;

	__asm        push   2;
	__asm        push   0x27;
	__asm        lea    eax, [ebp-0x248];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x248];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x248], 0;
	__asm        je     _T1ea7;

	__asm        mov    eax, [ebp-0x248];
	__asm        mov    [ebp-0x55C], eax;
	__asm        mov    eax, [ebp-0x55C];
	__asm        mov    [ebp-0x560], eax;
	__asm        mov    eax, [ebp-0x560];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T1ea7:
	__asm        jmp    near ptr 0x00443EAE;
// LINE 273:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598B8C;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 274:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7DC], eax;
	__asm        cmp    dword ptr [ebp-0x7DC], 0;
	__asm        je     _T1efe;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7DC];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x24C], eax;
	__asm        jmp    _T1f08;
_T1efe:
	__asm        mov    dword ptr [ebp-0x24C], 0;
_T1f08:
	__asm        mov    dword ptr [ebp-0x250], 0;
	__asm        jmp    near ptr 0x00443F19;

	__asm        push   2;
	__asm        push   0x28;
	__asm        lea    eax, [ebp-0x250];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x250];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x250], 0;
	__asm        je     _T1f6b;

	__asm        mov    eax, [ebp-0x250];
	__asm        mov    [ebp-0x564], eax;
	__asm        mov    eax, [ebp-0x564];
	__asm        mov    [ebp-0x568], eax;
	__asm        mov    eax, [ebp-0x568];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T1f6b:
	__asm        jmp    near ptr 0x00443F72;
// LINE 276:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598B94;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 277:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7E0], eax;
	__asm        cmp    dword ptr [ebp-0x7E0], 0;
	__asm        je     _T1fc2;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7E0];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x254], eax;
	__asm        jmp    _T1fcc;
_T1fc2:
	__asm        mov    dword ptr [ebp-0x254], 0;
_T1fcc:
	__asm        mov    dword ptr [ebp-0x258], 0;
	__asm        jmp    near ptr 0x00443FDD;

	__asm        push   2;
	__asm        push   0x29;
	__asm        lea    eax, [ebp-0x258];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x258];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x258], 0;
	__asm        je     _T202f;

	__asm        mov    eax, [ebp-0x258];
	__asm        mov    [ebp-0x56C], eax;
	__asm        mov    eax, [ebp-0x56C];
	__asm        mov    [ebp-0x570], eax;
	__asm        mov    eax, [ebp-0x570];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T202f:
	__asm        jmp    near ptr 0x00444036;
// LINE 279:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598B9C;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 280:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7E4], eax;
	__asm        cmp    dword ptr [ebp-0x7E4], 0;
	__asm        je     _T2086;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7E4];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x25C], eax;
	__asm        jmp    _T2090;
_T2086:
	__asm        mov    dword ptr [ebp-0x25C], 0;
_T2090:
	__asm        mov    dword ptr [ebp-0x260], 0;
	__asm        jmp    near ptr 0x004440A1;

	__asm        push   2;
	__asm        push   0x2A;
	__asm        lea    eax, [ebp-0x260];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x260];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x260], 0;
	__asm        je     _T20f3;

	__asm        mov    eax, [ebp-0x260];
	__asm        mov    [ebp-0x574], eax;
	__asm        mov    eax, [ebp-0x574];
	__asm        mov    [ebp-0x578], eax;
	__asm        mov    eax, [ebp-0x578];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T20f3:
	__asm        jmp    near ptr 0x004440FA;
// LINE 282:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598BA8;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 283:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7E8], eax;
	__asm        cmp    dword ptr [ebp-0x7E8], 0;
	__asm        je     _T214a;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7E8];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x264], eax;
	__asm        jmp    _T2154;
_T214a:
	__asm        mov    dword ptr [ebp-0x264], 0;
_T2154:
	__asm        mov    dword ptr [ebp-0x268], 0;
	__asm        jmp    near ptr 0x00444165;

	__asm        push   2;
	__asm        push   0x2B;
	__asm        lea    eax, [ebp-0x268];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x268];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x268], 0;
	__asm        je     _T21b7;

	__asm        mov    eax, [ebp-0x268];
	__asm        mov    [ebp-0x57C], eax;
	__asm        mov    eax, [ebp-0x57C];
	__asm        mov    [ebp-0x580], eax;
	__asm        mov    eax, [ebp-0x580];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T21b7:
	__asm        jmp    near ptr 0x004441BE;
// LINE 285:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598BB4;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 286:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7EC], eax;
	__asm        cmp    dword ptr [ebp-0x7EC], 0;
	__asm        je     _T220e;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7EC];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x26C], eax;
	__asm        jmp    _T2218;
_T220e:
	__asm        mov    dword ptr [ebp-0x26C], 0;
_T2218:
	__asm        mov    dword ptr [ebp-0x270], 0;
	__asm        jmp    near ptr 0x00444229;

	__asm        push   2;
	__asm        push   0x2C;
	__asm        lea    eax, [ebp-0x270];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x270];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x270], 0;
	__asm        je     _T227b;

	__asm        mov    eax, [ebp-0x270];
	__asm        mov    [ebp-0x584], eax;
	__asm        mov    eax, [ebp-0x584];
	__asm        mov    [ebp-0x588], eax;
	__asm        mov    eax, [ebp-0x588];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T227b:
	__asm        jmp    near ptr 0x00444282;
// LINE 288:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598BC0;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 289:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7F0], eax;
	__asm        cmp    dword ptr [ebp-0x7F0], 0;
	__asm        je     _T22d2;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7F0];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x274], eax;
	__asm        jmp    _T22dc;
_T22d2:
	__asm        mov    dword ptr [ebp-0x274], 0;
_T22dc:
	__asm        mov    dword ptr [ebp-0x278], 0;
	__asm        jmp    near ptr 0x004442ED;

	__asm        push   2;
	__asm        push   0x2D;
	__asm        lea    eax, [ebp-0x278];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x278];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x278], 0;
	__asm        je     _T233f;

	__asm        mov    eax, [ebp-0x278];
	__asm        mov    [ebp-0x58C], eax;
	__asm        mov    eax, [ebp-0x58C];
	__asm        mov    [ebp-0x590], eax;
	__asm        mov    eax, [ebp-0x590];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T233f:
	__asm        jmp    near ptr 0x00444346;
// LINE 291:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598BCC;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 292:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7F4], eax;
	__asm        cmp    dword ptr [ebp-0x7F4], 0;
	__asm        je     _T2396;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7F4];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x27C], eax;
	__asm        jmp    _T23a0;
_T2396:
	__asm        mov    dword ptr [ebp-0x27C], 0;
_T23a0:
	__asm        mov    dword ptr [ebp-0x280], 0;
	__asm        jmp    near ptr 0x004443B1;

	__asm        push   2;
	__asm        push   0x2E;
	__asm        lea    eax, [ebp-0x280];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x280];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x280], 0;
	__asm        je     _T2403;

	__asm        mov    eax, [ebp-0x280];
	__asm        mov    [ebp-0x594], eax;
	__asm        mov    eax, [ebp-0x594];
	__asm        mov    [ebp-0x598], eax;
	__asm        mov    eax, [ebp-0x598];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T2403:
	__asm        jmp    near ptr 0x0044440A;
// LINE 294:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598BD8;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 295:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7F8], eax;
	__asm        cmp    dword ptr [ebp-0x7F8], 0;
	__asm        je     _T245a;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7F8];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x284], eax;
	__asm        jmp    _T2464;
_T245a:
	__asm        mov    dword ptr [ebp-0x284], 0;
_T2464:
	__asm        mov    dword ptr [ebp-0x288], 0;
	__asm        jmp    near ptr 0x00444475;

	__asm        push   2;
	__asm        push   0x2F;
	__asm        lea    eax, [ebp-0x288];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x288];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x288], 0;
	__asm        je     _T24c7;

	__asm        mov    eax, [ebp-0x288];
	__asm        mov    [ebp-0x59C], eax;
	__asm        mov    eax, [ebp-0x59C];
	__asm        mov    [ebp-0x5A0], eax;
	__asm        mov    eax, [ebp-0x5A0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T24c7:
	__asm        jmp    near ptr 0x004444CE;
// LINE 297:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598BE4;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 298:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7FC], eax;
	__asm        cmp    dword ptr [ebp-0x7FC], 0;
	__asm        je     _T251e;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7FC];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x28C], eax;
	__asm        jmp    _T2528;
_T251e:
	__asm        mov    dword ptr [ebp-0x28C], 0;
_T2528:
	__asm        mov    dword ptr [ebp-0x290], 0;
	__asm        jmp    near ptr 0x00444539;

	__asm        push   2;
	__asm        push   0x30;
	__asm        lea    eax, [ebp-0x290];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x290];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x290], 0;
	__asm        je     _T258b;

	__asm        mov    eax, [ebp-0x290];
	__asm        mov    [ebp-0x5A4], eax;
	__asm        mov    eax, [ebp-0x5A4];
	__asm        mov    [ebp-0x5A8], eax;
	__asm        mov    eax, [ebp-0x5A8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T258b:
	__asm        jmp    near ptr 0x00444592;
// LINE 300:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598BF0;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 301:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x800], eax;
	__asm        cmp    dword ptr [ebp-0x800], 0;
	__asm        je     _T25e2;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x800];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x294], eax;
	__asm        jmp    _T25ec;
_T25e2:
	__asm        mov    dword ptr [ebp-0x294], 0;
_T25ec:
	__asm        mov    dword ptr [ebp-0x298], 0;
	__asm        jmp    near ptr 0x004445FD;

	__asm        push   2;
	__asm        push   0x31;
	__asm        lea    eax, [ebp-0x298];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x298];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x298], 0;
	__asm        je     _T264f;

	__asm        mov    eax, [ebp-0x298];
	__asm        mov    [ebp-0x5AC], eax;
	__asm        mov    eax, [ebp-0x5AC];
	__asm        mov    [ebp-0x5B0], eax;
	__asm        mov    eax, [ebp-0x5B0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T264f:
	__asm        jmp    near ptr 0x00444656;
// LINE 305:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598C00;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 306:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x804], eax;
	__asm        cmp    dword ptr [ebp-0x804], 0;
	__asm        je     _T26a6;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x804];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x29C], eax;
	__asm        jmp    _T26b0;
_T26a6:
	__asm        mov    dword ptr [ebp-0x29C], 0;
_T26b0:
	__asm        mov    dword ptr [ebp-0x2A0], 0;
	__asm        jmp    near ptr 0x004446C1;

	__asm        push   2;
	__asm        push   0x32;
	__asm        lea    eax, [ebp-0x2A0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x2A0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x2A0], 0;
	__asm        je     _T2713;

	__asm        mov    eax, [ebp-0x2A0];
	__asm        mov    [ebp-0x5B4], eax;
	__asm        mov    eax, [ebp-0x5B4];
	__asm        mov    [ebp-0x5B8], eax;
	__asm        mov    eax, [ebp-0x5B8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T2713:
	__asm        jmp    near ptr 0x0044471A;
// LINE 308:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598C0C;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 309:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x808], eax;
	__asm        cmp    dword ptr [ebp-0x808], 0;
	__asm        je     _T276a;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x808];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x2A4], eax;
	__asm        jmp    _T2774;
_T276a:
	__asm        mov    dword ptr [ebp-0x2A4], 0;
_T2774:
	__asm        mov    dword ptr [ebp-0x2A8], 0;
	__asm        jmp    near ptr 0x00444785;

	__asm        push   2;
	__asm        push   0x33;
	__asm        lea    eax, [ebp-0x2A8];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x2A8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x2A8], 0;
	__asm        je     _T27d7;

	__asm        mov    eax, [ebp-0x2A8];
	__asm        mov    [ebp-0x5BC], eax;
	__asm        mov    eax, [ebp-0x5BC];
	__asm        mov    [ebp-0x5C0], eax;
	__asm        mov    eax, [ebp-0x5C0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T27d7:
	__asm        jmp    near ptr 0x004447DE;
// LINE 311:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598C18;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 312:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x80C], eax;
	__asm        cmp    dword ptr [ebp-0x80C], 0;
	__asm        je     _T282e;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x80C];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x2AC], eax;
	__asm        jmp    _T2838;
_T282e:
	__asm        mov    dword ptr [ebp-0x2AC], 0;
_T2838:
	__asm        mov    dword ptr [ebp-0x2B0], 0;
	__asm        jmp    near ptr 0x00444849;

	__asm        push   2;
	__asm        push   0x34;
	__asm        lea    eax, [ebp-0x2B0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x2B0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x2B0], 0;
	__asm        je     _T289b;

	__asm        mov    eax, [ebp-0x2B0];
	__asm        mov    [ebp-0x5C4], eax;
	__asm        mov    eax, [ebp-0x5C4];
	__asm        mov    [ebp-0x5C8], eax;
	__asm        mov    eax, [ebp-0x5C8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T289b:
	__asm        jmp    near ptr 0x004448A2;
// LINE 314:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598C24;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 315:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x810], eax;
	__asm        cmp    dword ptr [ebp-0x810], 0;
	__asm        je     _T28f2;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x810];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x2B4], eax;
	__asm        jmp    _T28fc;
_T28f2:
	__asm        mov    dword ptr [ebp-0x2B4], 0;
_T28fc:
	__asm        mov    dword ptr [ebp-0x2B8], 0;
	__asm        jmp    near ptr 0x0044490D;

	__asm        push   2;
	__asm        push   0x35;
	__asm        lea    eax, [ebp-0x2B8];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x2B8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x2B8], 0;
	__asm        je     _T295f;

	__asm        mov    eax, [ebp-0x2B8];
	__asm        mov    [ebp-0x5CC], eax;
	__asm        mov    eax, [ebp-0x5CC];
	__asm        mov    [ebp-0x5D0], eax;
	__asm        mov    eax, [ebp-0x5D0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T295f:
	__asm        jmp    near ptr 0x00444966;
// LINE 317:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598C30;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 318:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x814], eax;
	__asm        cmp    dword ptr [ebp-0x814], 0;
	__asm        je     _T29b6;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x814];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x2BC], eax;
	__asm        jmp    _T29c0;
_T29b6:
	__asm        mov    dword ptr [ebp-0x2BC], 0;
_T29c0:
	__asm        mov    dword ptr [ebp-0x2C0], 0;
	__asm        jmp    near ptr 0x004449D1;

	__asm        push   2;
	__asm        push   0x36;
	__asm        lea    eax, [ebp-0x2C0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x2C0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x2C0], 0;
	__asm        je     _T2a23;

	__asm        mov    eax, [ebp-0x2C0];
	__asm        mov    [ebp-0x5D4], eax;
	__asm        mov    eax, [ebp-0x5D4];
	__asm        mov    [ebp-0x5D8], eax;
	__asm        mov    eax, [ebp-0x5D8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T2a23:
	__asm        jmp    near ptr 0x00444A2A;
// LINE 320:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598C3C;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 321:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x818], eax;
	__asm        cmp    dword ptr [ebp-0x818], 0;
	__asm        je     _T2a7a;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x818];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x2C4], eax;
	__asm        jmp    _T2a84;
_T2a7a:
	__asm        mov    dword ptr [ebp-0x2C4], 0;
_T2a84:
	__asm        mov    dword ptr [ebp-0x2C8], 0;
	__asm        jmp    near ptr 0x00444A95;

	__asm        push   2;
	__asm        push   0x37;
	__asm        lea    eax, [ebp-0x2C8];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x2C8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x2C8], 0;
	__asm        je     _T2ae7;

	__asm        mov    eax, [ebp-0x2C8];
	__asm        mov    [ebp-0x5DC], eax;
	__asm        mov    eax, [ebp-0x5DC];
	__asm        mov    [ebp-0x5E0], eax;
	__asm        mov    eax, [ebp-0x5E0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T2ae7:
	__asm        jmp    near ptr 0x00444AEE;
// LINE 323:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598C48;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 324:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x81C], eax;
	__asm        cmp    dword ptr [ebp-0x81C], 0;
	__asm        je     _T2b3e;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x81C];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x2CC], eax;
	__asm        jmp    _T2b48;
_T2b3e:
	__asm        mov    dword ptr [ebp-0x2CC], 0;
_T2b48:
	__asm        mov    dword ptr [ebp-0x2D0], 0;
	__asm        jmp    near ptr 0x00444B59;

	__asm        push   2;
	__asm        push   0x38;
	__asm        lea    eax, [ebp-0x2D0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x2D0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x2D0], 0;
	__asm        je     _T2bab;

	__asm        mov    eax, [ebp-0x2D0];
	__asm        mov    [ebp-0x5E4], eax;
	__asm        mov    eax, [ebp-0x5E4];
	__asm        mov    [ebp-0x5E8], eax;
	__asm        mov    eax, [ebp-0x5E8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T2bab:
	__asm        jmp    near ptr 0x00444BB2;
// LINE 326:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598C54;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 327:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x820], eax;
	__asm        cmp    dword ptr [ebp-0x820], 0;
	__asm        je     _T2c02;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x820];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x2D4], eax;
	__asm        jmp    _T2c0c;
_T2c02:
	__asm        mov    dword ptr [ebp-0x2D4], 0;
_T2c0c:
	__asm        mov    dword ptr [ebp-0x2D8], 0;
	__asm        jmp    near ptr 0x00444C1D;

	__asm        push   2;
	__asm        push   0x39;
	__asm        lea    eax, [ebp-0x2D8];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x2D8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x2D8], 0;
	__asm        je     _T2c6f;

	__asm        mov    eax, [ebp-0x2D8];
	__asm        mov    [ebp-0x5EC], eax;
	__asm        mov    eax, [ebp-0x5EC];
	__asm        mov    [ebp-0x5F0], eax;
	__asm        mov    eax, [ebp-0x5F0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T2c6f:
	__asm        jmp    near ptr 0x00444C76;
// LINE 329:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598C60;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 330:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x824], eax;
	__asm        cmp    dword ptr [ebp-0x824], 0;
	__asm        je     _T2cc6;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x824];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x2DC], eax;
	__asm        jmp    _T2cd0;
_T2cc6:
	__asm        mov    dword ptr [ebp-0x2DC], 0;
_T2cd0:
	__asm        mov    dword ptr [ebp-0x2E0], 0;
	__asm        jmp    near ptr 0x00444CE1;

	__asm        push   2;
	__asm        push   0x3A;
	__asm        lea    eax, [ebp-0x2E0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x2E0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x2E0], 0;
	__asm        je     _T2d33;

	__asm        mov    eax, [ebp-0x2E0];
	__asm        mov    [ebp-0x5F4], eax;
	__asm        mov    eax, [ebp-0x5F4];
	__asm        mov    [ebp-0x5F8], eax;
	__asm        mov    eax, [ebp-0x5F8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T2d33:
	__asm        jmp    near ptr 0x00444D3A;
// LINE 332:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598C6C;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 333:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x828], eax;
	__asm        cmp    dword ptr [ebp-0x828], 0;
	__asm        je     _T2d8a;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x828];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x2E4], eax;
	__asm        jmp    _T2d94;
_T2d8a:
	__asm        mov    dword ptr [ebp-0x2E4], 0;
_T2d94:
	__asm        mov    dword ptr [ebp-0x2E8], 0;
	__asm        jmp    near ptr 0x00444DA5;

	__asm        push   2;
	__asm        push   0x3B;
	__asm        lea    eax, [ebp-0x2E8];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x2E8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x2E8], 0;
	__asm        je     _T2df7;

	__asm        mov    eax, [ebp-0x2E8];
	__asm        mov    [ebp-0x5FC], eax;
	__asm        mov    eax, [ebp-0x5FC];
	__asm        mov    [ebp-0x600], eax;
	__asm        mov    eax, [ebp-0x600];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T2df7:
	__asm        jmp    near ptr 0x00444DFE;
// LINE 335:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598C78;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 336:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x82C], eax;
	__asm        cmp    dword ptr [ebp-0x82C], 0;
	__asm        je     _T2e4e;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x82C];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x2EC], eax;
	__asm        jmp    _T2e58;
_T2e4e:
	__asm        mov    dword ptr [ebp-0x2EC], 0;
_T2e58:
	__asm        mov    dword ptr [ebp-0x2F0], 0;
	__asm        jmp    near ptr 0x00444E69;

	__asm        push   2;
	__asm        push   0x3C;
	__asm        lea    eax, [ebp-0x2F0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x2F0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x2F0], 0;
	__asm        je     _T2ebb;

	__asm        mov    eax, [ebp-0x2F0];
	__asm        mov    [ebp-0x604], eax;
	__asm        mov    eax, [ebp-0x604];
	__asm        mov    [ebp-0x608], eax;
	__asm        mov    eax, [ebp-0x608];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T2ebb:
	__asm        jmp    near ptr 0x00444EC2;
// LINE 338:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598C84;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 339:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x830], eax;
	__asm        cmp    dword ptr [ebp-0x830], 0;
	__asm        je     _T2f12;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x830];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x2F4], eax;
	__asm        jmp    _T2f1c;
_T2f12:
	__asm        mov    dword ptr [ebp-0x2F4], 0;
_T2f1c:
	__asm        mov    dword ptr [ebp-0x2F8], 0;
	__asm        jmp    near ptr 0x00444F2D;

	__asm        push   2;
	__asm        push   0x3D;
	__asm        lea    eax, [ebp-0x2F8];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x2F8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x2F8], 0;
	__asm        je     _T2f7f;

	__asm        mov    eax, [ebp-0x2F8];
	__asm        mov    [ebp-0x60C], eax;
	__asm        mov    eax, [ebp-0x60C];
	__asm        mov    [ebp-0x610], eax;
	__asm        mov    eax, [ebp-0x610];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T2f7f:
	__asm        jmp    near ptr 0x00444F86;
// LINE 341:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598C90;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 342:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x834], eax;
	__asm        cmp    dword ptr [ebp-0x834], 0;
	__asm        je     _T2fd6;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x834];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x2FC], eax;
	__asm        jmp    _T2fe0;
_T2fd6:
	__asm        mov    dword ptr [ebp-0x2FC], 0;
_T2fe0:
	__asm        mov    dword ptr [ebp-0x300], 0;
	__asm        jmp    near ptr 0x00444FF1;

	__asm        push   2;
	__asm        push   0x3E;
	__asm        lea    eax, [ebp-0x300];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x300];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x300], 0;
	__asm        je     _T3043;

	__asm        mov    eax, [ebp-0x300];
	__asm        mov    [ebp-0x614], eax;
	__asm        mov    eax, [ebp-0x614];
	__asm        mov    [ebp-0x618], eax;
	__asm        mov    eax, [ebp-0x618];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T3043:
	__asm        jmp    near ptr 0x0044504A;
// LINE 344:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598C9C;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 345:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x838], eax;
	__asm        cmp    dword ptr [ebp-0x838], 0;
	__asm        je     _T309a;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x838];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x304], eax;
	__asm        jmp    _T30a4;
_T309a:
	__asm        mov    dword ptr [ebp-0x304], 0;
_T30a4:
	__asm        mov    dword ptr [ebp-0x308], 0;
	__asm        jmp    near ptr 0x004450B5;

	__asm        push   2;
	__asm        push   0x3F;
	__asm        lea    eax, [ebp-0x308];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x308];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x308], 0;
	__asm        je     _T3107;

	__asm        mov    eax, [ebp-0x308];
	__asm        mov    [ebp-0x61C], eax;
	__asm        mov    eax, [ebp-0x61C];
	__asm        mov    [ebp-0x620], eax;
	__asm        mov    eax, [ebp-0x620];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T3107:
	__asm        jmp    near ptr 0x0044510E;
// LINE 347:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598CA8;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 348:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x83C], eax;
	__asm        cmp    dword ptr [ebp-0x83C], 0;
	__asm        je     _T315e;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x83C];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x30C], eax;
	__asm        jmp    _T3168;
_T315e:
	__asm        mov    dword ptr [ebp-0x30C], 0;
_T3168:
	__asm        mov    dword ptr [ebp-0x310], 0;
	__asm        jmp    near ptr 0x00445179;

	__asm        push   2;
	__asm        push   0x40;
	__asm        lea    eax, [ebp-0x310];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x310];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x310], 0;
	__asm        je     _T31cb;

	__asm        mov    eax, [ebp-0x310];
	__asm        mov    [ebp-0x624], eax;
	__asm        mov    eax, [ebp-0x624];
	__asm        mov    [ebp-0x628], eax;
	__asm        mov    eax, [ebp-0x628];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T31cb:
	__asm        jmp    near ptr 0x004451D2;
// LINE 350:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598CB4;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 351:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x840], eax;
	__asm        cmp    dword ptr [ebp-0x840], 0;
	__asm        je     _T3222;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x840];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x314], eax;
	__asm        jmp    _T322c;
_T3222:
	__asm        mov    dword ptr [ebp-0x314], 0;
_T322c:
	__asm        mov    dword ptr [ebp-0x318], 0;
	__asm        jmp    near ptr 0x0044523D;

	__asm        push   2;
	__asm        push   0x41;
	__asm        lea    eax, [ebp-0x318];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x318];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x318], 0;
	__asm        je     _T328f;

	__asm        mov    eax, [ebp-0x318];
	__asm        mov    [ebp-0x62C], eax;
	__asm        mov    eax, [ebp-0x62C];
	__asm        mov    [ebp-0x630], eax;
	__asm        mov    eax, [ebp-0x630];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T328f:
	__asm        jmp    near ptr 0x00445296;
// LINE 353:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598CC0;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 354:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x844], eax;
	__asm        cmp    dword ptr [ebp-0x844], 0;
	__asm        je     _T32e6;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x844];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x31C], eax;
	__asm        jmp    _T32f0;
_T32e6:
	__asm        mov    dword ptr [ebp-0x31C], 0;
_T32f0:
	__asm        mov    dword ptr [ebp-0x320], 0;
	__asm        jmp    near ptr 0x00445301;

	__asm        push   2;
	__asm        push   0x42;
	__asm        lea    eax, [ebp-0x320];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x320];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x320], 0;
	__asm        je     _T3353;

	__asm        mov    eax, [ebp-0x320];
	__asm        mov    [ebp-0x634], eax;
	__asm        mov    eax, [ebp-0x634];
	__asm        mov    [ebp-0x638], eax;
	__asm        mov    eax, [ebp-0x638];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T3353:
	__asm        jmp    near ptr 0x0044535A;
// LINE 356:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598CCC;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 357:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x848], eax;
	__asm        cmp    dword ptr [ebp-0x848], 0;
	__asm        je     _T33aa;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x848];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x324], eax;
	__asm        jmp    _T33b4;
_T33aa:
	__asm        mov    dword ptr [ebp-0x324], 0;
_T33b4:
	__asm        mov    dword ptr [ebp-0x328], 0;
	__asm        jmp    near ptr 0x004453C5;

	__asm        push   2;
	__asm        push   0x43;
	__asm        lea    eax, [ebp-0x328];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x328];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x328], 0;
	__asm        je     _T3417;

	__asm        mov    eax, [ebp-0x328];
	__asm        mov    [ebp-0x63C], eax;
	__asm        mov    eax, [ebp-0x63C];
	__asm        mov    [ebp-0x640], eax;
	__asm        mov    eax, [ebp-0x640];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T3417:
	__asm        jmp    near ptr 0x0044541E;
// LINE 359:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598CD8;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 360:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x84C], eax;
	__asm        cmp    dword ptr [ebp-0x84C], 0;
	__asm        je     _T346e;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x84C];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x32C], eax;
	__asm        jmp    _T3478;
_T346e:
	__asm        mov    dword ptr [ebp-0x32C], 0;
_T3478:
	__asm        mov    dword ptr [ebp-0x330], 0;
	__asm        jmp    near ptr 0x00445489;

	__asm        push   2;
	__asm        push   0x44;
	__asm        lea    eax, [ebp-0x330];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x330];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x330], 0;
	__asm        je     _T34db;

	__asm        mov    eax, [ebp-0x330];
	__asm        mov    [ebp-0x644], eax;
	__asm        mov    eax, [ebp-0x644];
	__asm        mov    [ebp-0x648], eax;
	__asm        mov    eax, [ebp-0x648];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T34db:
	__asm        jmp    near ptr 0x004454E2;
// LINE 362:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598CE4;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 363:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x850], eax;
	__asm        cmp    dword ptr [ebp-0x850], 0;
	__asm        je     _T3532;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x850];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x334], eax;
	__asm        jmp    _T353c;
_T3532:
	__asm        mov    dword ptr [ebp-0x334], 0;
_T353c:
	__asm        mov    dword ptr [ebp-0x338], 0;
	__asm        jmp    near ptr 0x0044554D;

	__asm        push   2;
	__asm        push   0x45;
	__asm        lea    eax, [ebp-0x338];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x338];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x338], 0;
	__asm        je     _T359f;

	__asm        mov    eax, [ebp-0x338];
	__asm        mov    [ebp-0x64C], eax;
	__asm        mov    eax, [ebp-0x64C];
	__asm        mov    [ebp-0x650], eax;
	__asm        mov    eax, [ebp-0x650];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T359f:
	__asm        jmp    near ptr 0x004455A6;
// LINE 365:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598CF0;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 366:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x854], eax;
	__asm        cmp    dword ptr [ebp-0x854], 0;
	__asm        je     _T35f6;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x854];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x33C], eax;
	__asm        jmp    _T3600;
_T35f6:
	__asm        mov    dword ptr [ebp-0x33C], 0;
_T3600:
	__asm        mov    dword ptr [ebp-0x340], 0;
	__asm        jmp    near ptr 0x00445611;

	__asm        push   2;
	__asm        push   0x46;
	__asm        lea    eax, [ebp-0x340];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x340];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x340], 0;
	__asm        je     _T3663;

	__asm        mov    eax, [ebp-0x340];
	__asm        mov    [ebp-0x654], eax;
	__asm        mov    eax, [ebp-0x654];
	__asm        mov    [ebp-0x658], eax;
	__asm        mov    eax, [ebp-0x658];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T3663:
	__asm        jmp    near ptr 0x0044566A;
// LINE 368:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598CFC;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 369:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x858], eax;
	__asm        cmp    dword ptr [ebp-0x858], 0;
	__asm        je     _T36ba;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x858];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x344], eax;
	__asm        jmp    _T36c4;
_T36ba:
	__asm        mov    dword ptr [ebp-0x344], 0;
_T36c4:
	__asm        mov    dword ptr [ebp-0x348], 0;
	__asm        jmp    near ptr 0x004456D5;

	__asm        push   2;
	__asm        push   0x47;
	__asm        lea    eax, [ebp-0x348];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x348];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x348], 0;
	__asm        je     _T3727;

	__asm        mov    eax, [ebp-0x348];
	__asm        mov    [ebp-0x65C], eax;
	__asm        mov    eax, [ebp-0x65C];
	__asm        mov    [ebp-0x660], eax;
	__asm        mov    eax, [ebp-0x660];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T3727:
	__asm        jmp    near ptr 0x0044572E;
// LINE 371:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598D08;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 372:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x85C], eax;
	__asm        cmp    dword ptr [ebp-0x85C], 0;
	__asm        je     _T377e;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x85C];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x34C], eax;
	__asm        jmp    _T3788;
_T377e:
	__asm        mov    dword ptr [ebp-0x34C], 0;
_T3788:
	__asm        mov    dword ptr [ebp-0x350], 0;
	__asm        jmp    near ptr 0x00445799;

	__asm        push   2;
	__asm        push   0x48;
	__asm        lea    eax, [ebp-0x350];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x350];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x350], 0;
	__asm        je     _T37eb;

	__asm        mov    eax, [ebp-0x350];
	__asm        mov    [ebp-0x664], eax;
	__asm        mov    eax, [ebp-0x664];
	__asm        mov    [ebp-0x668], eax;
	__asm        mov    eax, [ebp-0x668];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T37eb:
	__asm        jmp    near ptr 0x004457F2;
// LINE 374:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598D14;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 375:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x860], eax;
	__asm        cmp    dword ptr [ebp-0x860], 0;
	__asm        je     _T3842;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x860];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x354], eax;
	__asm        jmp    _T384c;
_T3842:
	__asm        mov    dword ptr [ebp-0x354], 0;
_T384c:
	__asm        mov    dword ptr [ebp-0x358], 0;
	__asm        jmp    near ptr 0x0044585D;

	__asm        push   2;
	__asm        push   0x49;
	__asm        lea    eax, [ebp-0x358];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x358];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x358], 0;
	__asm        je     _T38af;

	__asm        mov    eax, [ebp-0x358];
	__asm        mov    [ebp-0x66C], eax;
	__asm        mov    eax, [ebp-0x66C];
	__asm        mov    [ebp-0x670], eax;
	__asm        mov    eax, [ebp-0x670];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T38af:
	__asm        jmp    near ptr 0x004458B6;
// LINE 377:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598D20;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 378:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x864], eax;
	__asm        cmp    dword ptr [ebp-0x864], 0;
	__asm        je     _T3906;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x864];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x35C], eax;
	__asm        jmp    _T3910;
_T3906:
	__asm        mov    dword ptr [ebp-0x35C], 0;
_T3910:
	__asm        mov    dword ptr [ebp-0x360], 0;
	__asm        jmp    near ptr 0x00445921;

	__asm        push   2;
	__asm        push   0x4A;
	__asm        lea    eax, [ebp-0x360];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x360];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x360], 0;
	__asm        je     _T3973;

	__asm        mov    eax, [ebp-0x360];
	__asm        mov    [ebp-0x674], eax;
	__asm        mov    eax, [ebp-0x674];
	__asm        mov    [ebp-0x678], eax;
	__asm        mov    eax, [ebp-0x678];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T3973:
	__asm        jmp    near ptr 0x0044597A;
// LINE 380:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598D2C;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 381:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x868], eax;
	__asm        cmp    dword ptr [ebp-0x868], 0;
	__asm        je     _T39ca;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x868];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x364], eax;
	__asm        jmp    _T39d4;
_T39ca:
	__asm        mov    dword ptr [ebp-0x364], 0;
_T39d4:
	__asm        mov    dword ptr [ebp-0x368], 0;
	__asm        jmp    near ptr 0x004459E5;

	__asm        push   2;
	__asm        push   0x4B;
	__asm        lea    eax, [ebp-0x368];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x368];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x368], 0;
	__asm        je     _T3a37;

	__asm        mov    eax, [ebp-0x368];
	__asm        mov    [ebp-0x67C], eax;
	__asm        mov    eax, [ebp-0x67C];
	__asm        mov    [ebp-0x680], eax;
	__asm        mov    eax, [ebp-0x680];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T3a37:
	__asm        jmp    near ptr 0x00445A3E;
// LINE 383:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598D38;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 384:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x86C], eax;
	__asm        cmp    dword ptr [ebp-0x86C], 0;
	__asm        je     _T3a8e;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x86C];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x36C], eax;
	__asm        jmp    _T3a98;
_T3a8e:
	__asm        mov    dword ptr [ebp-0x36C], 0;
_T3a98:
	__asm        mov    dword ptr [ebp-0x370], 0;
	__asm        jmp    near ptr 0x00445AA9;

	__asm        push   2;
	__asm        push   0x4C;
	__asm        lea    eax, [ebp-0x370];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x370];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x370], 0;
	__asm        je     _T3afb;

	__asm        mov    eax, [ebp-0x370];
	__asm        mov    [ebp-0x684], eax;
	__asm        mov    eax, [ebp-0x684];
	__asm        mov    [ebp-0x688], eax;
	__asm        mov    eax, [ebp-0x688];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T3afb:
	__asm        jmp    near ptr 0x00445B02;
// LINE 386:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598D44;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 387:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x870], eax;
	__asm        cmp    dword ptr [ebp-0x870], 0;
	__asm        je     _T3b52;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x870];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x374], eax;
	__asm        jmp    _T3b5c;
_T3b52:
	__asm        mov    dword ptr [ebp-0x374], 0;
_T3b5c:
	__asm        mov    dword ptr [ebp-0x378], 0;
	__asm        jmp    near ptr 0x00445B6D;

	__asm        push   2;
	__asm        push   0x4D;
	__asm        lea    eax, [ebp-0x378];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x378];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x378], 0;
	__asm        je     _T3bbf;

	__asm        mov    eax, [ebp-0x378];
	__asm        mov    [ebp-0x68C], eax;
	__asm        mov    eax, [ebp-0x68C];
	__asm        mov    [ebp-0x690], eax;
	__asm        mov    eax, [ebp-0x690];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T3bbf:
	__asm        jmp    near ptr 0x00445BC6;
// LINE 389:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598D50;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 390:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x874], eax;
	__asm        cmp    dword ptr [ebp-0x874], 0;
	__asm        je     _T3c16;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x874];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x37C], eax;
	__asm        jmp    _T3c20;
_T3c16:
	__asm        mov    dword ptr [ebp-0x37C], 0;
_T3c20:
	__asm        mov    dword ptr [ebp-0x380], 0;
	__asm        jmp    near ptr 0x00445C31;

	__asm        push   2;
	__asm        push   0x4E;
	__asm        lea    eax, [ebp-0x380];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x380];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x380], 0;
	__asm        je     _T3c83;

	__asm        mov    eax, [ebp-0x380];
	__asm        mov    [ebp-0x694], eax;
	__asm        mov    eax, [ebp-0x694];
	__asm        mov    [ebp-0x698], eax;
	__asm        mov    eax, [ebp-0x698];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T3c83:
	__asm        jmp    near ptr 0x00445C8A;
// LINE 392:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598D5C;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 393:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x878], eax;
	__asm        cmp    dword ptr [ebp-0x878], 0;
	__asm        je     _T3cda;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x878];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x384], eax;
	__asm        jmp    _T3ce4;
_T3cda:
	__asm        mov    dword ptr [ebp-0x384], 0;
_T3ce4:
	__asm        mov    dword ptr [ebp-0x388], 0;
	__asm        jmp    near ptr 0x00445CF5;

	__asm        push   2;
	__asm        push   0x4F;
	__asm        lea    eax, [ebp-0x388];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x388];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x388], 0;
	__asm        je     _T3d47;

	__asm        mov    eax, [ebp-0x388];
	__asm        mov    [ebp-0x69C], eax;
	__asm        mov    eax, [ebp-0x69C];
	__asm        mov    [ebp-0x6A0], eax;
	__asm        mov    eax, [ebp-0x6A0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T3d47:
	__asm        jmp    near ptr 0x00445D4E;
// LINE 395:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598D68;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 396:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x87C], eax;
	__asm        cmp    dword ptr [ebp-0x87C], 0;
	__asm        je     _T3d9e;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x87C];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x38C], eax;
	__asm        jmp    _T3da8;
_T3d9e:
	__asm        mov    dword ptr [ebp-0x38C], 0;
_T3da8:
	__asm        mov    dword ptr [ebp-0x390], 0;
	__asm        jmp    near ptr 0x00445DB9;

	__asm        push   2;
	__asm        push   0x50;
	__asm        lea    eax, [ebp-0x390];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x390];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x390], 0;
	__asm        je     _T3e0b;

	__asm        mov    eax, [ebp-0x390];
	__asm        mov    [ebp-0x6A4], eax;
	__asm        mov    eax, [ebp-0x6A4];
	__asm        mov    [ebp-0x6A8], eax;
	__asm        mov    eax, [ebp-0x6A8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T3e0b:
	__asm        jmp    near ptr 0x00445E12;
// LINE 398:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598D74;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 399:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x880], eax;
	__asm        cmp    dword ptr [ebp-0x880], 0;
	__asm        je     _T3e62;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x880];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x394], eax;
	__asm        jmp    _T3e6c;
_T3e62:
	__asm        mov    dword ptr [ebp-0x394], 0;
_T3e6c:
	__asm        mov    dword ptr [ebp-0x398], 0;
	__asm        jmp    near ptr 0x00445E7D;

	__asm        push   2;
	__asm        push   0x51;
	__asm        lea    eax, [ebp-0x398];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x398];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x398], 0;
	__asm        je     _T3ecf;

	__asm        mov    eax, [ebp-0x398];
	__asm        mov    [ebp-0x6AC], eax;
	__asm        mov    eax, [ebp-0x6AC];
	__asm        mov    [ebp-0x6B0], eax;
	__asm        mov    eax, [ebp-0x6B0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T3ecf:
	__asm        jmp    near ptr 0x00445ED6;
// LINE 401:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598D80;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 402:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x884], eax;
	__asm        cmp    dword ptr [ebp-0x884], 0;
	__asm        je     _T3f26;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x884];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x39C], eax;
	__asm        jmp    _T3f30;
_T3f26:
	__asm        mov    dword ptr [ebp-0x39C], 0;
_T3f30:
	__asm        mov    dword ptr [ebp-0x3A0], 0;
	__asm        jmp    near ptr 0x00445F41;

	__asm        push   2;
	__asm        push   0x52;
	__asm        lea    eax, [ebp-0x3A0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x3A0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x3A0], 0;
	__asm        je     _T3f93;

	__asm        mov    eax, [ebp-0x3A0];
	__asm        mov    [ebp-0x6B4], eax;
	__asm        mov    eax, [ebp-0x6B4];
	__asm        mov    [ebp-0x6B8], eax;
	__asm        mov    eax, [ebp-0x6B8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T3f93:
	__asm        jmp    near ptr 0x00445F9A;
// LINE 404:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598D8C;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 405:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x888], eax;
	__asm        cmp    dword ptr [ebp-0x888], 0;
	__asm        je     _T3fea;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x888];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x3A4], eax;
	__asm        jmp    _T3ff4;
_T3fea:
	__asm        mov    dword ptr [ebp-0x3A4], 0;
_T3ff4:
	__asm        mov    dword ptr [ebp-0x3A8], 0;
	__asm        jmp    near ptr 0x00446005;

	__asm        push   2;
	__asm        push   0x53;
	__asm        lea    eax, [ebp-0x3A8];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x3A8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x3A8], 0;
	__asm        je     _T4057;

	__asm        mov    eax, [ebp-0x3A8];
	__asm        mov    [ebp-0x6BC], eax;
	__asm        mov    eax, [ebp-0x6BC];
	__asm        mov    [ebp-0x6C0], eax;
	__asm        mov    eax, [ebp-0x6C0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T4057:
	__asm        jmp    near ptr 0x0044605E;
// LINE 407:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598D98;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 408:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x88C], eax;
	__asm        cmp    dword ptr [ebp-0x88C], 0;
	__asm        je     _T40ae;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x88C];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x3AC], eax;
	__asm        jmp    _T40b8;
_T40ae:
	__asm        mov    dword ptr [ebp-0x3AC], 0;
_T40b8:
	__asm        mov    dword ptr [ebp-0x3B0], 0;
	__asm        jmp    near ptr 0x004460C9;

	__asm        push   2;
	__asm        push   0x54;
	__asm        lea    eax, [ebp-0x3B0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x3B0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x3B0], 0;
	__asm        je     _T411b;

	__asm        mov    eax, [ebp-0x3B0];
	__asm        mov    [ebp-0x6C4], eax;
	__asm        mov    eax, [ebp-0x6C4];
	__asm        mov    [ebp-0x6C8], eax;
	__asm        mov    eax, [ebp-0x6C8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T411b:
	__asm        jmp    near ptr 0x00446122;
// LINE 410:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598DA4;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 411:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x890], eax;
	__asm        cmp    dword ptr [ebp-0x890], 0;
	__asm        je     _T4172;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x890];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x3B4], eax;
	__asm        jmp    _T417c;
_T4172:
	__asm        mov    dword ptr [ebp-0x3B4], 0;
_T417c:
	__asm        mov    dword ptr [ebp-0x3B8], 0;
	__asm        jmp    near ptr 0x0044618D;

	__asm        push   2;
	__asm        push   0x55;
	__asm        lea    eax, [ebp-0x3B8];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x3B8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x3B8], 0;
	__asm        je     _T41df;

	__asm        mov    eax, [ebp-0x3B8];
	__asm        mov    [ebp-0x6CC], eax;
	__asm        mov    eax, [ebp-0x6CC];
	__asm        mov    [ebp-0x6D0], eax;
	__asm        mov    eax, [ebp-0x6D0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T41df:
	__asm        jmp    near ptr 0x004461E6;
// LINE 413:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598DB0;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 414:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x894], eax;
	__asm        cmp    dword ptr [ebp-0x894], 0;
	__asm        je     _T4236;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x894];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x3BC], eax;
	__asm        jmp    _T4240;
_T4236:
	__asm        mov    dword ptr [ebp-0x3BC], 0;
_T4240:
	__asm        mov    dword ptr [ebp-0x3C0], 0;
	__asm        jmp    near ptr 0x00446251;

	__asm        push   2;
	__asm        push   0x56;
	__asm        lea    eax, [ebp-0x3C0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x3C0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x3C0], 0;
	__asm        je     _T42a3;

	__asm        mov    eax, [ebp-0x3C0];
	__asm        mov    [ebp-0x6D4], eax;
	__asm        mov    eax, [ebp-0x6D4];
	__asm        mov    [ebp-0x6D8], eax;
	__asm        mov    eax, [ebp-0x6D8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T42a3:
	__asm        jmp    near ptr 0x004462AA;
// LINE 416:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598DBC;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 417:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x898], eax;
	__asm        cmp    dword ptr [ebp-0x898], 0;
	__asm        je     _T42fa;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x898];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x3C4], eax;
	__asm        jmp    _T4304;
_T42fa:
	__asm        mov    dword ptr [ebp-0x3C4], 0;
_T4304:
	__asm        mov    dword ptr [ebp-0x3C8], 0;
	__asm        jmp    near ptr 0x00446315;

	__asm        push   2;
	__asm        push   0x57;
	__asm        lea    eax, [ebp-0x3C8];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x3C8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x3C8], 0;
	__asm        je     _T4367;

	__asm        mov    eax, [ebp-0x3C8];
	__asm        mov    [ebp-0x6DC], eax;
	__asm        mov    eax, [ebp-0x6DC];
	__asm        mov    [ebp-0x6E0], eax;
	__asm        mov    eax, [ebp-0x6E0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T4367:
	__asm        jmp    near ptr 0x0044636E;
// LINE 419:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598DC8;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 420:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x89C], eax;
	__asm        cmp    dword ptr [ebp-0x89C], 0;
	__asm        je     _T43be;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x89C];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x3CC], eax;
	__asm        jmp    _T43c8;
_T43be:
	__asm        mov    dword ptr [ebp-0x3CC], 0;
_T43c8:
	__asm        mov    dword ptr [ebp-0x3D0], 0;
	__asm        jmp    near ptr 0x004463D9;

	__asm        push   2;
	__asm        push   0x58;
	__asm        lea    eax, [ebp-0x3D0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x3D0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x3D0], 0;
	__asm        je     _T442b;

	__asm        mov    eax, [ebp-0x3D0];
	__asm        mov    [ebp-0x6E4], eax;
	__asm        mov    eax, [ebp-0x6E4];
	__asm        mov    [ebp-0x6E8], eax;
	__asm        mov    eax, [ebp-0x6E8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T442b:
	__asm        jmp    near ptr 0x00446432;
// LINE 422:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598DD4;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 423:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x8A0], eax;
	__asm        cmp    dword ptr [ebp-0x8A0], 0;
	__asm        je     _T4482;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x8A0];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x3D4], eax;
	__asm        jmp    _T448c;
_T4482:
	__asm        mov    dword ptr [ebp-0x3D4], 0;
_T448c:
	__asm        mov    dword ptr [ebp-0x3D8], 0;
	__asm        jmp    near ptr 0x0044649D;

	__asm        push   2;
	__asm        push   0x59;
	__asm        lea    eax, [ebp-0x3D8];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x3D8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x3D8], 0;
	__asm        je     _T44ef;

	__asm        mov    eax, [ebp-0x3D8];
	__asm        mov    [ebp-0x6EC], eax;
	__asm        mov    eax, [ebp-0x6EC];
	__asm        mov    [ebp-0x6F0], eax;
	__asm        mov    eax, [ebp-0x6F0];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T44ef:
	__asm        jmp    near ptr 0x004464F6;
// LINE 425:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598DE0;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 426:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x8A4], eax;
	__asm        cmp    dword ptr [ebp-0x8A4], 0;
	__asm        je     _T4546;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x8A4];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x3DC], eax;
	__asm        jmp    _T4550;
_T4546:
	__asm        mov    dword ptr [ebp-0x3DC], 0;
_T4550:
	__asm        mov    dword ptr [ebp-0x3E0], 0;
	__asm        jmp    near ptr 0x00446561;

	__asm        push   2;
	__asm        push   0x5A;
	__asm        lea    eax, [ebp-0x3E0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x3E0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x3E0], 0;
	__asm        je     _T45b3;

	__asm        mov    eax, [ebp-0x3E0];
	__asm        mov    [ebp-0x6F4], eax;
	__asm        mov    eax, [ebp-0x6F4];
	__asm        mov    [ebp-0x6F8], eax;
	__asm        mov    eax, [ebp-0x6F8];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T45b3:
	__asm        jmp    near ptr 0x004465BA;
// LINE 428:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598DEC;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 429:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x8A8], eax;
	__asm        cmp    dword ptr [ebp-0x8A8], 0;
	__asm        je     _T460a;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x8A8];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x3E4], eax;
	__asm        jmp    _T4614;
_T460a:
	__asm        mov    dword ptr [ebp-0x3E4], 0;
_T4614:
	__asm        mov    dword ptr [ebp-0x3E8], 0;
	__asm        jmp    near ptr 0x00446625;

	__asm        push   2;
	__asm        push   0x5B;
	__asm        lea    eax, [ebp-0x3E8];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x3E8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x3E8], 0;
	__asm        je     _T4677;

	__asm        mov    eax, [ebp-0x3E8];
	__asm        mov    [ebp-0x6FC], eax;
	__asm        mov    eax, [ebp-0x6FC];
	__asm        mov    [ebp-0x700], eax;
	__asm        mov    eax, [ebp-0x700];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T4677:
	__asm        jmp    near ptr 0x0044667E;
// LINE 431:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598DF8;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 432:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x8AC], eax;
	__asm        cmp    dword ptr [ebp-0x8AC], 0;
	__asm        je     _T46ce;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x8AC];
	__asm        call   basic_string_ref<char>::basic_string_ref<char>;
	__asm        mov    [ebp-0x3EC], eax;
	__asm        jmp    _T46d8;
_T46ce:
	__asm        mov    dword ptr [ebp-0x3EC], 0;
_T46d8:
	__asm        mov    dword ptr [ebp-0x3F0], 0;
	__asm        jmp    near ptr 0x004466E9;

	__asm        push   2;
	__asm        push   0x5C;
	__asm        lea    eax, [ebp-0x3F0];
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x3F0];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x3F0], 0;
	__asm        je     _T473b;

	__asm        mov    eax, [ebp-0x3F0];
	__asm        mov    [ebp-0x704], eax;
	__asm        mov    eax, [ebp-0x704];
	__asm        mov    [ebp-0x708], eax;
	__asm        mov    eax, [ebp-0x708];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T473b:
	__asm        jmp    near ptr 0x00446742;
// LINE 434:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598E04;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 435:
	__asm        push   2;
	__asm        push   0x5D;
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        lea    ecx, [ebp-0x3F8];
	__asm        call   basic_string<char>::basic_string<char>;
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x3F8];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x3F8], 0;
	__asm        je     _T47b8;

	__asm        mov    eax, [ebp-0x3F8];
	__asm        mov    [ebp-0x70C], eax;
	__asm        mov    eax, [ebp-0x70C];
	__asm        mov    [ebp-0x710], eax;
	__asm        mov    eax, [ebp-0x710];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T47b8:
	__asm        jmp    near ptr 0x004467BF;
// LINE 437:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598E10;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 438:
	__asm        push   2;
	__asm        push   0x5E;
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        lea    ecx, [ebp-0x400];
	__asm        call   basic_string<char>::basic_string<char>;
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x400];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x400], 0;
	__asm        je     _T4835;

	__asm        mov    eax, [ebp-0x400];
	__asm        mov    [ebp-0x714], eax;
	__asm        mov    eax, [ebp-0x714];
	__asm        mov    [ebp-0x718], eax;
	__asm        mov    eax, [ebp-0x718];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T4835:
	__asm        jmp    near ptr 0x0044683C;
// LINE 440:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598E1C;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 441:
	__asm        push   2;
	__asm        push   0x5F;
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        lea    ecx, [ebp-0x408];
	__asm        call   basic_string<char>::basic_string<char>;
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x408];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x408], 0;
	__asm        je     _T48b2;

	__asm        mov    eax, [ebp-0x408];
	__asm        mov    [ebp-0x71C], eax;
	__asm        mov    eax, [ebp-0x71C];
	__asm        mov    [ebp-0x720], eax;
	__asm        mov    eax, [ebp-0x720];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T48b2:
	__asm        jmp    near ptr 0x004468B9;
// LINE 443:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598E28;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 444:
	__asm        push   2;
	__asm        push   0x60;
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        lea    ecx, [ebp-0x410];
	__asm        call   basic_string<char>::basic_string<char>;
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x410];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x410], 0;
	__asm        je     _T492f;

	__asm        mov    eax, [ebp-0x410];
	__asm        mov    [ebp-0x724], eax;
	__asm        mov    eax, [ebp-0x724];
	__asm        mov    [ebp-0x728], eax;
	__asm        mov    eax, [ebp-0x728];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T492f:
	__asm        jmp    near ptr 0x00446936;
// LINE 446:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598E34;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 447:
	__asm        push   2;
	__asm        push   0x61;
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        lea    ecx, [ebp-0x418];
	__asm        call   basic_string<char>::basic_string<char>;
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x418];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x418], 0;
	__asm        je     _T49ac;

	__asm        mov    eax, [ebp-0x418];
	__asm        mov    [ebp-0x72C], eax;
	__asm        mov    eax, [ebp-0x72C];
	__asm        mov    [ebp-0x730], eax;
	__asm        mov    eax, [ebp-0x730];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T49ac:
	__asm        jmp    near ptr 0x004469B3;
// LINE 449:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        push   0x598E40;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 450:
	__asm        mov    count, 0x62;
	__asm        jmp    _T49de;
_T49d8:
	__asm        inc    count;
_T49de:
	__asm        cmp    count, 0x71;
	__asm        jge    _T4a5a;
// LINE 451:
	__asm        push   0;
	__asm        mov    eax, count;
	__asm        push   eax;
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        lea    ecx, [ebp-0x420];
	__asm        call   basic_string<char>::basic_string<char>;
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::AddDigitalSound;
	__asm        lea    ecx, [ebp-0x420];
	__asm        call   basic_string<char>::delete_ref;
	__asm        cmp    dword ptr [ebp-0x420], 0;
	__asm        je     _T4a50;

	__asm        mov    eax, [ebp-0x420];
	__asm        mov    [ebp-0x734], eax;
	__asm        mov    eax, [ebp-0x734];
	__asm        mov    [ebp-0x738], eax;
	__asm        mov    eax, [ebp-0x738];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T4a50:
	__asm        jmp    near ptr 0x00446A57;
// LINE 452:
	__asm        jmp    _T49d8;
// LINE 453:
_T4a5a:
	__asm        mov    eax, 1;
	__asm        jmp    near ptr 0x00446A66;
// LINE 454:
}

// FUNCTION: COPTER_D 0x00446a6b
void S3DSSetFile(int32_t nSoundIndex, char * szSoundFile) {
	class DigitalSound* theSound;
	char szFullSoundPath[260];

// LINE 472:
	__asm        mov    eax, nSoundIndex;
	__asm        mov    eax, gSoundManager.sound[0][eax*4];
	__asm        mov    theSound, eax;
// LINE 473:
	__asm        cmp    theSound, 0;
	__asm        je     _T24d;
// LINE 474:
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    eax, szSoundFile;
	__asm        push   eax;
	__asm        push   0;
	__asm        push   2;
	__asm        call   GetPathForFile;
	__asm        add    esp, 0x10;
// LINE 475:
	__asm        push   0x10;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x12C], eax;
	__asm        cmp    dword ptr [ebp-0x12C], 0;
	__asm        je     _T129;

	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        call   strlen;
	__asm        add    esp, 4;
	__asm        mov    ecx, [ebp-0x12C];
	__asm        mov    [ecx+4], eax;
	__asm        jmp    near ptr 0x00446AE5;

	__asm        mov    eax, [ebp-0x12C];
	__asm        mov    eax, [eax+4];
	__asm        mov    ecx, [ebp-0x12C];
	__asm        mov    [ecx+8], eax;
	__asm        mov    eax, [ebp-0x12C];
	__asm        cmp    dword ptr [eax+8], 0;
	__asm        je     _Tfa;

	__asm        mov    eax, [ebp-0x12C];
	__asm        mov    eax, [eax+8];
	__asm        push   eax;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    ecx, [ebp-0x12C];
	__asm        mov    [ecx], eax;
	__asm        mov    eax, [ebp-0x12C];
	__asm        mov    eax, [eax+4];
	__asm        mov    [ebp-0x130], eax;
	__asm        mov    eax, [ebp-0x12C];
	__asm        mov    eax, [eax];
	__asm        mov    [ebp-0x134], eax;
	__asm        mov    eax, [ebp-0x130];
	__asm        push   eax;
	__asm        lea    eax, szFullSoundPath[0];
	__asm        push   eax;
	__asm        mov    eax, [ebp-0x134];
	__asm        push   eax;
	__asm        call   memcpy;
	__asm        add    esp, 0xC;
	__asm        jmp    near ptr 0x00446B60;

	__asm        jmp    _T106;
_Tfa:
	__asm        mov    eax, [ebp-0x12C];
	__asm        mov    dword ptr [eax], 0;
_T106:
	__asm        mov    eax, [ebp-0x12C];
	__asm        mov    dword ptr [eax+0xC], 1;
	__asm        jmp    near ptr 0x00446B83;

	__asm        mov    eax, [ebp-0x12C];
	__asm        mov    [ebp-0x10C], eax;
	__asm        jmp    _T133;
_T129:
	__asm        mov    dword ptr [ebp-0x10C], 0;
_T133:
	__asm        mov    dword ptr [ebp-0x110], 0;
	__asm        jmp    near ptr 0x00446BAD;

	__asm        push   2;
	__asm        lea    eax, [ebp-0x110];
	__asm        push   eax;
	__asm        mov    eax, theSound;
	__asm        mov    eax, [eax];
	__asm        mov    ecx, theSound;
	__asm        call   dword ptr [eax+0x2C];
	__asm        mov    eax, [ebp-0x10C];
	__asm        dec    dword ptr [eax+0xC];
	__asm        mov    eax, [ebp-0x10C];
	__asm        cmp    dword ptr [eax+0xC], 0;
	__asm        jne    _T20f;

	__asm        mov    eax, [ebp-0x10C];
	__asm        mov    [ebp-0x120], eax;
	__asm        mov    eax, [ebp-0x120];
	__asm        mov    [ebp-0x11C], eax;
	__asm        cmp    dword ptr [ebp-0x11C], 0;
	__asm        je     _T20f;

	__asm        mov    eax, [ebp-0x11C];
	__asm        cmp    dword ptr [eax+8], 0;
	__asm        je     _T1ec;

	__asm        mov    eax, [ebp-0x11C];
	__asm        mov    eax, [eax];
	__asm        mov    [ebp-0x124], eax;
	__asm        mov    eax, [ebp-0x124];
	__asm        mov    [ebp-0x128], eax;
	__asm        mov    eax, [ebp-0x128];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
	__asm        mov    eax, [ebp-0x11C];
	__asm        mov    dword ptr [eax+8], 0;
	__asm        mov    eax, [ebp-0x11C];
	__asm        mov    dword ptr [eax], 0;
_T1ec:
	__asm        jmp    near ptr 0x00446C5C;

	__asm        jmp    near ptr 0x00446C61;

	__asm        mov    eax, [ebp-0x11C];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
	__asm        jmp    near ptr 0x00446C75;

	__asm        jmp    _T20f;
_T20f:
	__asm        jmp    near ptr 0x00446C7F;

	__asm        cmp    dword ptr [ebp-0x110], 0;
	__asm        je     _T248;

	__asm        mov    eax, [ebp-0x110];
	__asm        mov    [ebp-0x114], eax;
	__asm        mov    eax, [ebp-0x114];
	__asm        mov    [ebp-0x118], eax;
	__asm        mov    eax, [ebp-0x118];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
_T248:
	__asm        jmp    _T24d;
// LINE 477:
_T24d:
	__asm        jmp    near ptr 0x00446CBD;
}

// FUNCTION: COPTER_D 0x00446cc2
int32_t S3DSPlay(int32_t nSoundIndex, struct Point3d* loc, int32_t nFlags) {
	long lNewVolume;
	long midparam;
	int32_t nReturnValue;
	struct Point3d viewvect;
	int32_t fpDistance;
	int32_t lastparam;
	class DigitalSound* theSound;

// LINE 500:
	__asm        mov    eax, nSoundIndex;
	__asm        mov    eax, gSoundManager.sound[0][eax*4];
	__asm        mov    theSound, eax;
// LINE 503:
	__asm        mov    eax, loc;
	__asm        mov    eax, [eax];
	__asm        sub    eax, ViewState.world_pos.x;
	__asm        mov    viewvect.x, eax;
// LINE 504:
	__asm        mov    eax, loc;
	__asm        mov    eax, [eax+4];
	__asm        sub    eax, ViewState.world_pos.y;
	__asm        mov    viewvect.y, eax;
// LINE 505:
	__asm        mov    eax, loc;
	__asm        mov    eax, [eax+8];
	__asm        sub    eax, ViewState.world_pos.z;
	__asm        mov    viewvect.z, eax;
// LINE 506:
	__asm        lea    eax, viewvect.x;
	__asm        push   eax;
	__asm        call   MTMagnitude;
	__asm        add    esp, 4;
	__asm        mov    fpDistance, eax;
// LINE 508:
	__asm        cmp    fpDistance, 0x7800000;
	__asm        jl     _T65;
// LINE 509:
	__asm        xor    eax, eax;
	__asm        jmp    _T13d;
// LINE 510:
_T65:
	__asm        push   0xF0600000;
	__asm        push   0x7800000;
	__asm        mov    eax, fpDistance;
	__asm        push   eax;
	__asm        call   0x004D19DF;
	__asm        add    esp, 8;
	__asm        push   eax;
	__asm        call   0x004D19BD;
	__asm        add    esp, 8;
	__asm        sar    eax, 0x10;
	__asm        mov    lNewVolume, eax;
// LINE 513:
	__asm        add    lNewVolume, 0x2710;
// LINE 514:
	__asm        mov    eax, lNewVolume;
	__asm        mov    ecx, nSoundIndex;
	__asm        mov    lOriginalSoundVolumes[ecx*4], eax;
	__asm        mov    eax, lNewVolume;
	__asm        mov    [ebp-0x28], eax;
// LINE 515:
	__asm        mov    eax, glMasterVolume;
	__asm        imul   eax, [ebp-0x28];
	__asm        mov    [ebp-0x28], eax;
	__asm        mov    ecx, 0x2710;
	__asm        mov    eax, [ebp-0x28];
	__asm        cdq;
	__asm        idiv   ecx;
	__asm        mov    [ebp-0x28], eax;
	__asm        mov    eax, [ebp-0x28];
	__asm        mov    lNewVolume, eax;
	__asm        jmp    near ptr 0x00446D8B;
// LINE 516:
	__asm        cmp    theSound, 0;
	__asm        je     _Te2;
// LINE 517:
	__asm        mov    eax, lNewVolume;
	__asm        push   eax;
	__asm        mov    eax, theSound;
	__asm        mov    eax, [eax];
	__asm        mov    ecx, theSound;
	__asm        call   dword ptr [eax+0x24];
// LINE 521:
_Te2:
	__asm        test   reinterpret_cast<uint8_t>(nFlags), 1;
	__asm        je     _Tf8;
// LINE 522:
	__asm        mov    midparam, 1;
// LINE 523:
	__asm        jmp    _Tff;
// LINE 524:
_Tf8:
	__asm        mov    midparam, 0;
// LINE 525:
_Tff:
	__asm        test   reinterpret_cast<uint8_t>(nFlags), 2;
	__asm        je     _T115;
// LINE 526:
	__asm        mov    lastparam, 1;
// LINE 527:
	__asm        jmp    _T11c;
// LINE 528:
_T115:
	__asm        mov    lastparam, 2;
// LINE 530:
_T11c:
	__asm        mov    eax, lastparam;
	__asm        push   eax;
	__asm        mov    eax, midparam;
	__asm        push   eax;
	__asm        mov    eax, nSoundIndex;
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::PlaySoundA;
	__asm        mov    nReturnValue, eax;
// LINE 532:
	__asm        mov    eax, nReturnValue;
	__asm        jmp    _T13d;
// LINE 533:
_T13d:
}

// FUNCTION: COPTER_D 0x00446e04
void S3DSStopPlay(int32_t nSoundIndex) {
// LINE 552:
	__asm        mov    eax, nSoundIndex;
	__asm        push   eax;
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::StopSound;
// LINE 553:
	__asm        jmp    near ptr 0x00446E1D;
}

// FUNCTION: COPTER_D 0x00446e22
void S3DSStopAllSounds() {
// LINE 569:
	__asm        mov    ecx, 0x604600;
	__asm        call   SoundManager::StopAllSounds;
// LINE 570:
	__asm        jmp    near ptr 0x00446E37;
}

// FUNCTION: COPTER_D 0x00446e3c
void S3SoundAdjFreq(int32_t nSoundIndex, long lFrequencyAdjustment) {
	class DigitalSound* theSound;

// LINE 589:
	__asm        mov    eax, nSoundIndex;
	__asm        mov    eax, gSoundManager.sound[0][eax*4];
	__asm        mov    theSound, eax;
// LINE 591:
	__asm        cmp    theSound, 0;
	__asm        je     _T3c;
// LINE 592:
	__asm        mov    eax, theSound;
	__asm        mov    eax, [eax];
	__asm        mov    ecx, theSound;
	__asm        call   dword ptr [eax+0x5C];
	__asm        mov    ecx, lFrequencyAdjustment;
	__asm        add    ecx, eax;
	__asm        push   ecx;
	__asm        mov    eax, theSound;
	__asm        mov    eax, [eax];
	__asm        mov    ecx, theSound;
	__asm        call   dword ptr [eax+0x64];
// LINE 593:
_T3c:
	__asm        jmp    near ptr 0x00446E7D;
}

// FUNCTION: COPTER_D 0x00446e82
void S3SoundAdjVol(int32_t nSoundIndex, long lNewVolume) {
// LINE 614:
	__asm        add    lNewVolume, 0x2710;
	__asm        mov    eax, lNewVolume;
	__asm        mov    [ebp-4], eax;
// LINE 615:
	__asm        mov    eax, glMasterVolume;
	__asm        imul   eax, [ebp-4];
	__asm        mov    [ebp-4], eax;
	__asm        mov    ecx, 0x2710;
	__asm        mov    eax, [ebp-4];
	__asm        cdq;
	__asm        idiv   ecx;
	__asm        mov    [ebp-4], eax;
	__asm        mov    eax, [ebp-4];
	__asm        mov    lNewVolume, eax;
	__asm        jmp    near ptr 0x00446EBD;
// LINE 616:
	__asm        mov    eax, lNewVolume;
	__asm        mov    ecx, nSoundIndex;
	__asm        mov    lOriginalSoundVolumes[ecx*4], eax;
// LINE 617:
	__asm        mov    eax, nSoundIndex;
	__asm        cmp    gSoundManager.sound[0][eax*4], 0;
	__asm        je     _T76;
// LINE 618:
	__asm        mov    eax, lNewVolume;
	__asm        push   eax;
	__asm        mov    eax, nSoundIndex;
	__asm        mov    ecx, nSoundIndex;
	__asm        mov    ecx, gSoundManager.sound[0][ecx*4];
	__asm        mov    edx, [ecx];
	__asm        mov    ecx, gSoundManager.sound[0][eax*4];
	__asm        call   dword ptr [edx+0x24];
// LINE 619:
_T76:
	__asm        jmp    near ptr 0x00446EFD;
}

// FUNCTION: COPTER_D 0x00446f02
int32_t S3SoundIsPlaying(int32_t nSoundIndex) {
// LINE 638:
	__asm        mov    eax, nSoundIndex;
	__asm        cmp    gSoundManager.sound[0][eax*4], 0;
	__asm        je     _T35;
// LINE 639:
	__asm        mov    eax, nSoundIndex;
	__asm        mov    ecx, nSoundIndex;
	__asm        mov    ecx, gSoundManager.sound[0][ecx*4];
	__asm        mov    edx, [ecx];
	__asm        mov    ecx, gSoundManager.sound[0][eax*4];
	__asm        call   dword ptr [edx+0x10];
	__asm        jmp    _T3c;
// LINE 640:
_T35:
	__asm        xor    eax, eax;
	__asm        jmp    _T3c;
// LINE 641:
_T3c:
}

// FUNCTION: COPTER_D 0x00446f43
void S3SoundSetPosition(int32_t nSoundIndex, struct Point3d* loc) {
	long lVolume;
	long lPan;
	struct Point3d positionRelative;
	int32_t fpDistance;
	class DigitalSound* theSound;
	struct Point3d positionTemp;

// LINE 680:
	__asm        mov    eax, nSoundIndex;
	__asm        mov    eax, gSoundManager.sound[0][eax*4];
	__asm        mov    theSound, eax;
// LINE 686:
	__asm        cmp    theSound, 0;
	__asm        jne    _T25;
// LINE 687:
	__asm        jmp    _T1b2;
// LINE 691:
_T25:
	__asm        mov    eax, loc;
	__asm        mov    eax, [eax];
	__asm        sub    eax, Viewer.pos.x;
	__asm        mov    positionTemp.x, eax;
// LINE 692:
	__asm        mov    eax, loc;
	__asm        mov    eax, [eax+4];
	__asm        sub    eax, Viewer.pos.y;
	__asm        mov    positionTemp.y, eax;
// LINE 693:
	__asm        mov    eax, loc;
	__asm        mov    eax, [eax+8];
	__asm        sub    eax, Viewer.pos.z;
	__asm        mov    positionTemp.z, eax;
// LINE 694:
	__asm        mov    eax, 0x6C12A0;
	__asm        add    eax, 0x38;
	__asm        push   eax;
	__asm        lea    eax, positionRelative.x;
	__asm        push   eax;
	__asm        lea    eax, positionTemp.x;
	__asm        push   eax;
	__asm        call   0x004D2094;
	__asm        add    esp, 0xC;
// LINE 698:
	__asm        mov    eax, positionRelative.x;
	__asm        mov    [ebp-0x48], eax;
	__asm        fild   dword ptr [ebp-0x48];
	__asm        fdiv   qword ptr ds:[0x58F5D0];
	__asm        fstp   qword ptr [ebp-0x3C];
	__asm        mov    eax, positionRelative.z;
	__asm        mov    [ebp-0x4C], eax;
	__asm        fild   dword ptr [ebp-0x4C];
	__asm        fdiv   qword ptr ds:[0x58F5D0];
	__asm        fst    qword ptr [ebp-0x44];
	__asm        fmul   qword ptr [ebp-0x44];
	__asm        fld    qword ptr [ebp-0x3C];
	__asm        fmul   qword ptr [ebp-0x3C];
	__asm        faddp;
	__asm        sub    esp, 8;
	__asm        fstp   qword ptr [esp];
	__asm        call   0x0056EC10;
	__asm        add    esp, 8;
	__asm        fcom   qword ptr ds:[0x58F5D8];
	__asm        fstp   qword ptr [ebp-0x34];
	__asm        fnstsw ax;
	__asm        test   ah, 0x40;
	__asm        jne    _Te8;

	__asm        fld    qword ptr [ebp-0x3C];
	__asm        fdiv   qword ptr [ebp-0x34];
	__asm        fmul   qword ptr ds:[0x58F5D0];
	__asm        call   0x0056EBE8;
	__asm        mov    positionRelative.x, eax;
	__asm        fld    qword ptr [ebp-0x44];
	__asm        fdiv   qword ptr [ebp-0x34];
	__asm        fmul   qword ptr ds:[0x58F5D0];
	__asm        call   0x0056EBE8;
	__asm        mov    positionRelative.z, eax;
	__asm        jmp    _Tf5;
_Te8:
	__asm        mov    positionRelative.z, 0;
	__asm        mov    eax, positionRelative.z;
	__asm        mov    positionRelative.x, eax;
_Tf5:
	__asm        fld    qword ptr [ebp-0x34];
	__asm        fmul   qword ptr ds:[0x58F5D0];
	__asm        call   0x0056EBE8;
	__asm        mov    fpDistance, eax;
	__asm        jmp    near ptr 0x0044704E;
// LINE 701:
	__asm        push   0xF0600000;
	__asm        push   0x7800000;
	__asm        mov    eax, fpDistance;
	__asm        push   eax;
	__asm        call   0x004D19DF;
	__asm        add    esp, 8;
	__asm        push   eax;
	__asm        call   0x004D19BD;
	__asm        add    esp, 8;
	__asm        sar    eax, 0x10;
	__asm        mov    lVolume, eax;
// LINE 702:
	__asm        add    lVolume, 0x2710;
// LINE 714:
	__asm        mov    eax, positionRelative.x;
	__asm        push   eax;
	__asm        push   0x27100000;
	__asm        call   0x004D19BD;
	__asm        add    esp, 8;
	__asm        sar    eax, 0x10;
	__asm        cdq;
	__asm        and    edx, 7;
	__asm        add    eax, edx;
	__asm        sar    eax, 3;
	__asm        mov    lPan, eax;
// LINE 724:
	__asm        mov    eax, lVolume;
	__asm        mov    ecx, nSoundIndex;
	__asm        mov    lOriginalSoundVolumes[ecx*4], eax;
	__asm        mov    eax, lVolume;
	__asm        mov    [ebp-0x2C], eax;
// LINE 725:
	__asm        mov    eax, glMasterVolume;
	__asm        imul   eax, [ebp-0x2C];
	__asm        mov    [ebp-0x2C], eax;
	__asm        mov    ecx, 0x2710;
	__asm        mov    eax, [ebp-0x2C];
	__asm        cdq;
	__asm        idiv   ecx;
	__asm        mov    [ebp-0x2C], eax;
	__asm        mov    eax, [ebp-0x2C];
	__asm        mov    lVolume, eax;
	__asm        jmp    near ptr 0x004470D2;
// LINE 728:
	__asm        mov    eax, lVolume;
	__asm        push   eax;
	__asm        mov    eax, theSound;
	__asm        mov    eax, [eax];
	__asm        mov    ecx, theSound;
	__asm        call   dword ptr [eax+0x24];
// LINE 729:
	__asm        mov    eax, lPan;
	__asm        push   eax;
	__asm        mov    eax, theSound;
	__asm        mov    eax, [eax];
	__asm        mov    ecx, theSound;
	__asm        call   dword ptr [eax+0x54];
// LINE 730:
	__asm        jmp    _T1b2;
_T1b2:
}

// FUNCTION: COPTER_D 0x004470fa
void S3SoundAddToQueue(int32_t nQueue, int32_t nSoundIndex, int32_t nDelayBeforePlay) {
	long lNewVolume;
	class DigitalSound* theSound;

// LINE 737:
	__asm        mov    eax, nSoundIndex;
	__asm        mov    eax, gSoundManager.sound[0][eax*4];
	__asm        mov    theSound, eax;
	__asm        mov    dword ptr [ebp-0x14], 0x2710;
// LINE 738:
	__asm        mov    eax, glMasterVolume;
	__asm        imul   eax, [ebp-0x14];
	__asm        mov    [ebp-0x14], eax;
	__asm        mov    ecx, 0x2710;
	__asm        mov    eax, [ebp-0x14];
	__asm        cdq;
	__asm        idiv   ecx;
	__asm        mov    [ebp-0x14], eax;
	__asm        mov    eax, [ebp-0x14];
	__asm        mov    lNewVolume, eax;
	__asm        jmp    near ptr 0x0044713C;
// LINE 740:
	__asm        cmp    theSound, 0;
	__asm        je     _Ta9;
// LINE 741:
	__asm        mov    eax, lNewVolume;
	__asm        push   eax;
	__asm        mov    eax, theSound;
	__asm        mov    eax, [eax];
	__asm        mov    ecx, theSound;
	__asm        call   dword ptr [eax+0x24];
// LINE 742:
	__asm        push   0x18;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0xC], eax;
	__asm        cmp    dword ptr [ebp-0xC], 0;
	__asm        je     _T8c;

	__asm        push   0;
	__asm        mov    eax, nDelayBeforePlay;
	__asm        push   eax;
	__asm        mov    eax, theSound;
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0xC];
	__asm        call   SoundQueueItem::SoundQueueItem;
	__asm        mov    [ebp-0x10], eax;
	__asm        jmp    _T93;
_T8c:
	__asm        mov    dword ptr [ebp-0x10], 0;
_T93:
	__asm        mov    eax, [ebp-0x10];
	__asm        push   eax;
	__asm        mov    eax, nQueue;
	__asm        lea    eax, [eax+eax*2];
	__asm        lea    ecx, gSoundQueue[0]<vftable>[eax*8];
	__asm        call   SoundQueue::operator+=;
// LINE 744:
_Ta9:
	__asm        jmp    near ptr 0x004471A8;
}



// Contribution: 2:000005c0-000005c7 Module: 52, 8 byte alignment, initialized_data, (comdat), read, 
// GLOBAL: COPTER_D 0x0058f5c0
// GLOBAL: COPTER_D 0x0058f5c0
// ??_7SoundChangeNotificationSink@@6B@


// Contribution: 2:000005c8-000005cb Module: 52, 4 byte alignment, initialized_data, (comdat), read, 
// GLOBAL: COPTER_D 0x0058f5c8
// GLOBAL: COPTER_D 0x0058f5c8
// ??_7NotificationSink@@6B@


// Contribution: 2:000005d0-000005df Module: 52, 8 byte alignment, initialized_data, read, 


// Contribution: 3:00000034-0000003b Module: 52, 4 byte alignment, initialized_data, read, write, 
// GLOBAL: COPTER_D 0x00597034
static void (*$S56)() = { 0 /* todo */ };

// GLOBAL: COPTER_D 0x00597038
static void (*$S59)() = { 0 /* todo */ };



// Contribution: 3:00001974-00001e49 Module: 52, 4 byte alignment, initialized_data, read, write, 


// Contribution: 3:0002c628-0002c7f3 Module: 52, 8 byte alignment, uninitialized_data, read, write, 
// GLOBAL: COPTER_D 0x005c3628
static long lOriginalSoundVolumes[113];

// GLOBAL: COPTER_D 0x005c37ec
class SoundChangeNotificationSink gSoundChangeNotificationSink;

// GLOBAL: COPTER_D 0x005c37f0
long glMasterVolume;



// Unknown globals:
// The PDB was slightly corrupted and we aren't sure which file these globals belong to.

// WARNING: this global might actually belong to: rotate.asm
// GLOBAL: COPTER_D 0x006c12a0
struct ViewerInfo Viewer; // Contrib missing


// WARNING: this global might actually belong to: C:\Copter\source\sparkal\Gameapp7.cpp
// GLOBAL: COPTER_D 0x006c12a0
struct ViewerInfo Viewer; // Contrib missing

