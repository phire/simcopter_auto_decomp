// Module: Notify.obj
// Source: C:\Copter\source\sparkal\Notify.cpp
// autogenerated by simcopter_tool from PDB file

// Type: /*packed*/ class NotificationItem (forward reference);
class NotificationItem{ // packed(0x8 bytes) TI: 0x2557
public:
	/*+0x0*/   long lPreferenceType;
	/*+0x4*/   /*packed*/ class NotificationSink *myNotificationSink;
	void NotificationItem(long, /*packed*/ class NotificationSink*);
	void NotificationItem(const /*packed*/ class NotificationItem&);
	void NotificationItem();
	/*packed*/ class NotificationItem& operator=(const /*packed*/ class NotificationItem&);
};

// Type: void;

// Type: long;

// Type: /*packed*/ class NotificationSink (forward reference);
// VTABLE: COPTER_D 0x0058f5c8
class NotificationSink{ // packed(0x4 bytes) TI: 0x2ae9
public:
	virtual void DoNotificationChange(long, /*unpacked*/ class PreferenceManager*); // vtable+0x0
};

// Type: int32_t;



// Contribution: 1:0003d160-0003d24d Module: 54, 16 byte alignment, code, execute, read, 
// FUNCTION: COPTER_D 0x0043e160
void NotificationItem::NotificationItem() {

	this->lPreferenceType = 0x0;
	this->myNotificationSink = 0x0;
// LINE 10:
	return;

	__asm        mov    eax, this;
}

// FUNCTION: COPTER_D 0x0043e18c
void NotificationItem::NotificationItem(const /*packed*/ class NotificationItem& newNotificationSink) {
// LINE 13:
	__asm        mov    eax, newNotificationSink;
	__asm        push   eax;
	__asm        mov    ecx, this;
	__asm        call   NotificationItem::operator=;
// LINE 14:
	return;

	__asm        mov    eax, this;
}

// FUNCTION: COPTER_D 0x0043e1b3
void NotificationItem::NotificationItem(long lNewPreferenceType, /*packed*/ class NotificationSink *newNotificationSink) {

	this->lPreferenceType = lNewPreferenceType;
	this->myNotificationSink = newNotificationSink;
// LINE 20:
	return;

	__asm        mov    eax, this;
}

// FUNCTION: COPTER_D 0x0043e1df
/*packed*/ class NotificationItem& NotificationItem::operator=(const /*packed*/ class NotificationItem& P2) {
// LINE 23:
	this->lPreferenceType = P2.lPreferenceType;
// LINE 24:
	this->myNotificationSink = P2.myNotificationSink;
// LINE 25:
	return this;
// LINE 26:
}

// FUNCTION: COPTER_D 0x0043e210
int32_t operator==(const /*packed*/ class NotificationItem& P1, const /*packed*/ class NotificationItem& P2) {
// LINE 31:
	__asm        mov    eax, P1;
	__asm        mov    ecx, P2;
	__asm        mov    ecx, [ecx];
	__asm        cmp    [eax], ecx;
	__asm        jne    _T32;

	__asm        mov    eax, P1;
	__asm        mov    ecx, P2;
	__asm        mov    ecx, [ecx+4];
	__asm        cmp    [eax+4], ecx;
	__asm        jne    _T32;

	__asm        mov    eax, 1;
	__asm        jmp    _T34;
_T32:
	__asm        xor    eax, eax;
_T34:
	__asm        jmp    __RETURN;
// LINE 32:
__RETURN:
}

