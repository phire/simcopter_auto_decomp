// Module: gameapp2.obj
// Source: C:\Copter\source\sparkal\gameapp2.cpp
// autogenerated by simcopter_tool from PDB file



// Contribution: 1:00060180-00065c19 Module: 44, 16 byte alignment, code, execute, read, 
// FUNCTION: COPTER_D 0x00461180
void S3SwitchToProperSkyType() {
// LINE 90:
	asm( 
"	      00461180    push ebp"
"	      00461181    mov ebp,esp"
"	      00461183    push ebx"
"	      00461184    push esi"
"	      00461185    push edi"
);
// LINE 91:
	asm( 
"	      00461186    cmp dword ptr ds:[5B4794h],0"
"	      0046118d    je near ptr 004611B5h"
"	      00461193    mov eax,ds:[599BBCh]"
"	      00461198    cmp dword ptr [eax+0DCh],0"
"	      0046119f    je near ptr 004611B5h"
);
// LINE 92:
	asm( 
"	      004611a5    mov eax,ds:[599BBCh]"
"	      004611aa    mov ecx,[eax+0DCh]"
"	      004611b0    call 0049550Ch"
);
// LINE 93:
	asm( 
"	      004611b5    jmp near ptr 004611BAh"
"	      004611ba    pop edi"
"	      004611bb    pop esi"
"	      004611bc    pop ebx"
"	      004611bd    leave"
"	      004611be    ret"
);
}

// FUNCTION: COPTER_D 0x004611bf
int32_t IsActualTimeDaytime() {
// LINE 98:
	asm( 
"	      004611bf    push ebp"
"	      004611c0    mov ebp,esp"
"	      004611c2    sub esp,8"
"	      004611c5    push ebx"
"	      004611c6    push esi"
"	      004611c7    push edi"
);
// LINE 99:
	asm( 
"	      004611c8    lea ecx,[ebp-8]"
"	      004611cb    call 0043CA79h"
);
// LINE 101:
	asm( 
"	      004611d0    lea ecx,[ebp-8]"
"	      004611d3    call 0043CCF2h"
"	      004611d8    cmp eax,6"
"	      004611db    jb near ptr 004611F2h"
"	      004611e1    lea ecx,[ebp-8]"
"	      004611e4    call 0043CCF2h"
"	      004611e9    cmp eax,12h"
"	      004611ec    jbe near ptr 004611F9h"
);
// LINE 102:
	asm( 
"	      004611f2    xor eax,eax"
"	      004611f4    jmp near ptr 00461203h"
);
// LINE 103:
	asm( 
"	      004611f9    mov eax,1"
"	      004611fe    jmp near ptr 00461203h"
);
// LINE 104:
	asm( 
"	      00461203    pop edi"
"	      00461204    pop esi"
"	      00461205    pop ebx"
"	      00461206    leave"
"	      00461207    ret"
);
}

// FUNCTION: COPTER_D 0x00461208
public: virtual void __thiscall CGameApp::GetPreferences(void) {
// LINE 111:
	asm( 
"	      00461208    push ebp"
"	      00461209    mov ebp,esp"
"	      0046120b    sub esp,110h"
"	      00461211    push ebx"
"	      00461212    push esi"
"	      00461213    push edi"
"	      00461214    mov [ebp-110h],ecx"
);
// LINE 115:
	asm( 
"	      0046121a    push 30h"
"	      0046121c    call 0056A600h"
"	      00461221    add esp,4"
"	      00461224    mov [ebp-10Ch],eax"
"	      0046122a    cmp dword ptr [ebp-10Ch],0"
"	      00461231    je near ptr 0046125Dh"
"	      00461237    push 0"
"	      00461239    push 10000h"
"	      0046123e    push 46455250h"
"	      00461243    push 52545043h"
"	      00461248    mov ecx,[ebp-10Ch]"
"	      0046124e    call 0047D250h"
"	      00461253    mov ds:[599BC4h],eax"
"	      00461258    jmp near ptr 00461267h"
"	      0046125d    mov dword ptr ds:[599BC4h],0"
);
// LINE 116:
	asm( 
"	      00461267    cmp dword ptr ds:[599BC4h],0"
"	      0046126e    je near ptr 004613C1h"
);
// LINE 117:
	asm( 
"	      00461274    lea eax,[ebp-104h]"
"	      0046127a    push eax"
"	      0046127b    mov eax,ds:[599288h]"
"	      00461280    push eax"
"	      00461281    push 0"
"	      00461283    push 9"
"	      00461285    call 0049172Bh"
"	      0046128a    add esp,10h"
);
// LINE 118:
	asm( 
"	      0046128d    lea eax,[ebp-104h]"
"	      00461293    push eax"
"	      00461294    mov ecx,ds:[599BC4h]"
"	      0046129a    call 0047C147h"
);
// LINE 119:
	asm( 
"	      0046129f    push 2FFFFFFh"
"	      004612a4    mov eax,ds:[599BC4h]"
"	      004612a9    mov eax,[eax]"
"	      004612ab    mov ecx,ds:[599BC4h]"
"	      004612b1    call dword ptr [eax+1Ch]"
"	      004612b4    mov [ebp-108h],eax"
);
// LINE 120:
	asm( 
"	      004612ba    cmp dword ptr [ebp-108h],0"
"	      004612c1    je near ptr 004612FEh"
);
// LINE 122:
	asm( 
"	      004612c7    push 2FFFFFFh"
"	      004612cc    mov eax,ds:[599BC4h]"
"	      004612d1    mov eax,[eax]"
"	      004612d3    mov ecx,ds:[599BC4h]"
"	      004612d9    call dword ptr [eax+24h]"
"	      004612dc    cmp eax,20h"
"	      004612df    jne near ptr 004612FEh"
);
// LINE 123:
	asm( 
"	      004612e5    mov edi,[ebp-110h]"
"	      004612eb    add edi,4308h"
"	      004612f1    mov esi,[ebp-108h]"
"	      004612f7    mov ecx,8"
"	      004612fc    rep movsd"
);
// LINE 125:
	asm( 
"	      004612fe    push 3FFFFFFh"
"	      00461303    mov eax,ds:[599BC4h]"
"	      00461308    mov eax,[eax]"
"	      0046130a    mov ecx,ds:[599BC4h]"
"	      00461310    call dword ptr [eax+1Ch]"
"	      00461313    mov [ebp-108h],eax"
);
// LINE 126:
	asm( 
"	      00461319    cmp dword ptr [ebp-108h],0"
"	      00461320    je near ptr 0046136Ch"
);
// LINE 127:
	asm( 
"	      00461326    push 3FFFFFFh"
"	      0046132b    mov eax,ds:[599BC4h]"
"	      00461330    mov eax,[eax]"
"	      00461332    mov ecx,ds:[599BC4h]"
"	      00461338    call dword ptr [eax+24h]"
"	      0046133b    cmp eax,10h"
"	      0046133e    jne near ptr 0046136Ch"
);
// LINE 128:
	asm( 
"	      00461344    mov eax,[ebp-108h]"
"	      0046134a    mov ecx,[ebp-110h]"
"	      00461350    add ecx,4328h"
"	      00461356    mov edx,[eax]"
"	      00461358    mov [ecx],edx"
"	      0046135a    mov edx,[eax+4]"
"	      0046135d    mov [ecx+4],edx"
"	      00461360    mov edx,[eax+8]"
"	      00461363    mov [ecx+8],edx"
"	      00461366    mov eax,[eax+0Ch]"
"	      00461369    mov [ecx+0Ch],eax"
);
// LINE 130:
	asm( 
"	      0046136c    push 5FFFFFFh"
"	      00461371    mov eax,ds:[599BC4h]"
"	      00461376    mov eax,[eax]"
"	      00461378    mov ecx,ds:[599BC4h]"
"	      0046137e    call dword ptr [eax+1Ch]"
"	      00461381    mov [ebp-108h],eax"
);
// LINE 131:
	asm( 
"	      00461387    cmp dword ptr [ebp-108h],0"
"	      0046138e    je near ptr 004613C1h"
);
// LINE 132:
	asm( 
"	      00461394    push 5FFFFFFh"
"	      00461399    mov eax,ds:[599BC4h]"
"	      0046139e    mov eax,[eax]"
"	      004613a0    mov ecx,ds:[599BC4h]"
"	      004613a6    call dword ptr [eax+24h]"
"	      004613a9    cmp eax,24h"
"	      004613ac    jne near ptr 004613C1h"
);
// LINE 133:
	asm( 
"	      004613b2    mov eax,[ebp-108h]"
"	      004613b8    push eax"
"	      004613b9    call 004F9A8Bh"
"	      004613be    add esp,4"
);
// LINE 136:
	asm( 
"	      004613c1    jmp near ptr 004613C6h"
"	      004613c6    pop edi"
"	      004613c7    pop esi"
"	      004613c8    pop ebx"
"	      004613c9    leave"
"	      004613ca    ret"
);
}

// FUNCTION: COPTER_D 0x004613cb
public: virtual void __thiscall CGameApp::GetSoundPreferences(void) {
// LINE 143:
	asm( 
"	      004613cb    push ebp"
"	      004613cc    mov ebp,esp"
"	      004613ce    sub esp,18h"
"	      004613d1    push ebx"
"	      004613d2    push esi"
"	      004613d3    push edi"
"	      004613d4    mov [ebp-18h],ecx"
);
// LINE 147:
	asm( 
"	      004613d7    push 4FFFFFFh"
"	      004613dc    mov eax,ds:[599BC4h]"
"	      004613e1    mov eax,[eax]"
"	      004613e3    mov ecx,ds:[599BC4h]"
"	      004613e9    call dword ptr [eax+1Ch]"
"	      004613ec    mov [ebp-14h],eax"
);
// LINE 148:
	asm( 
"	      004613ef    cmp dword ptr [ebp-14h],0"
"	      004613f3    je near ptr 00461447h"
);
// LINE 150:
	asm( 
"	      004613f9    push 4FFFFFFh"
"	      004613fe    mov eax,ds:[599BC4h]"
"	      00461403    mov eax,[eax]"
"	      00461405    mov ecx,ds:[599BC4h]"
"	      0046140b    call dword ptr [eax+24h]"
"	      0046140e    cmp eax,10h"
"	      00461411    jne near ptr 00461447h"
);
// LINE 151:
	asm( 
"	      00461417    mov eax,[ebp-14h]"
"	      0046141a    lea ecx,[ebp-10h]"
"	      0046141d    mov edx,[eax]"
"	      0046141f    mov [ecx],edx"
"	      00461421    mov edx,[eax+4]"
"	      00461424    mov [ecx+4],edx"
"	      00461427    mov edx,[eax+8]"
"	      0046142a    mov [ecx+8],edx"
"	      0046142d    mov eax,[eax+0Ch]"
"	      00461430    mov [ecx+0Ch],eax"
);
// LINE 152:
	asm( 
"	      00461433    lea eax,[ebp-10h]"
"	      00461436    push eax"
"	      00461437    mov eax,[ebp-18h]"
"	      0046143a    mov eax,[eax]"
"	      0046143c    mov ecx,[ebp-18h]"
"	      0046143f    call dword ptr [eax+30h]"
);
// LINE 153:
	asm( 
"	      00461442    jmp near ptr 0046148Fh"
);
// LINE 161:
	asm( 
"	      00461447    mov dword ptr [ebp-4],2710h"
"	      0046144e    mov eax,[ebp-4]"
"	      00461451    mov [ebp-8],eax"
"	      00461454    mov eax,[ebp-8]"
"	      00461457    mov [ebp-0Ch],eax"
"	      0046145a    mov eax,[ebp-0Ch]"
"	      0046145d    mov [ebp-10h],eax"
);
// LINE 163:
	asm( 
"	      00461460    push 10h"
"	      00461462    lea eax,[ebp-10h]"
"	      00461465    push eax"
"	      00461466    push 4FFFFFFh"
"	      0046146b    mov eax,ds:[599BC4h]"
"	      00461470    mov eax,[eax]"
"	      00461472    mov ecx,ds:[599BC4h]"
"	      00461478    call dword ptr [eax+2Ch]"
);
// LINE 164:
	asm( 
"	      0046147b    lea eax,[ebp-10h]"
"	      0046147e    push eax"
"	      0046147f    mov eax,[ebp-18h]"
"	      00461482    mov eax,[eax]"
"	      00461484    mov ecx,[ebp-18h]"
"	      00461487    call dword ptr [eax+30h]"
);
// LINE 165:
	asm( 
"	      0046148a    jmp near ptr 0046148Fh"
"	      0046148f    pop edi"
"	      00461490    pop esi"
"	      00461491    pop ebx"
"	      00461492    leave"
"	      00461493    ret"
);
}

// FUNCTION: COPTER_D 0x00461494
public: virtual void __thiscall CGameApp::SetSoundPreferences(struct SoundPreferences &) {
// LINE 172:
	asm( 
"	      00461494    push ebp"
"	      00461495    mov ebp,esp"
"	      00461497    sub esp,4"
"	      0046149a    push ebx"
"	      0046149b    push esi"
"	      0046149c    push edi"
"	      0046149d    mov [ebp-4],ecx"
);
// LINE 173:
	asm( 
"	      004614a0    mov eax,[ebp+8]"
"	      004614a3    mov eax,[eax]"
"	      004614a5    mov ds:[5C37F0h],eax"
);
// LINE 175:
	asm( 
"	      004614aa    cmp dword ptr ds:[599BC4h],0"
"	      004614b1    je near ptr 004614D2h"
);
// LINE 177:
	asm( 
"	      004614b7    push 10h"
"	      004614b9    mov eax,[ebp+8]"
"	      004614bc    push eax"
"	      004614bd    push 4FFFFFFh"
"	      004614c2    mov eax,ds:[599BC4h]"
"	      004614c7    mov eax,[eax]"
"	      004614c9    mov ecx,ds:[599BC4h]"
"	      004614cf    call dword ptr [eax+2Ch]"
);
// LINE 179:
	asm( 
"	      004614d2    jmp near ptr 004614D7h"
"	      004614d7    pop edi"
"	      004614d8    pop esi"
"	      004614d9    pop ebx"
"	      004614da    leave"
"	      004614db    ret 4"
);
}

// FUNCTION: COPTER_D 0x004614de
public: virtual void __thiscall CGameApp::SavePreferences(void) {
// LINE 187:
	asm( 
"	      004614de    push ebp"
"	      004614df    mov ebp,esp"
"	      004614e1    sub esp,54h"
"	      004614e4    push ebx"
"	      004614e5    push esi"
"	      004614e6    push edi"
"	      004614e7    mov [ebp-54h],ecx"
);
// LINE 188:
	asm( 
"	      004614ea    jmp near ptr 004614EFh"
"	      004614ef    mov eax,ds:[604C78h]"
"	      004614f4    mov [ebp-48h],eax"
);
// LINE 192:
	asm( 
"	      004614f7    cmp dword ptr ds:[599BC4h],0"
"	      004614fe    je near ptr 0046161Fh"
);
// LINE 194:
	asm( 
"	      00461504    mov eax,[ebp-54h]"
"	      00461507    mov eax,[eax+30h]"
"	      0046150a    mov ecx,[ebp-54h]"
"	      0046150d    mov [ecx+4318h],eax"
);
// LINE 197:
	asm( 
"	      00461513    push 20h"
"	      00461515    mov eax,[ebp-54h]"
"	      00461518    add eax,4308h"
"	      0046151d    push eax"
"	      0046151e    push 2FFFFFFh"
"	      00461523    mov eax,ds:[599BC4h]"
"	      00461528    mov eax,[eax]"
"	      0046152a    mov ecx,ds:[599BC4h]"
"	      00461530    call dword ptr [eax+2Ch]"
);
// LINE 198:
	asm( 
"	      00461533    push 10h"
"	      00461535    mov eax,[ebp-54h]"
"	      00461538    add eax,4328h"
"	      0046153d    push eax"
"	      0046153e    push 3FFFFFFh"
"	      00461543    mov eax,ds:[599BC4h]"
"	      00461548    mov eax,[eax]"
"	      0046154a    mov ecx,ds:[599BC4h]"
"	      00461550    call dword ptr [eax+2Ch]"
);
// LINE 199:
	asm( 
"	      00461553    push 24h"
"	      00461555    call 004F9A76h"
"	      0046155a    push eax"
"	      0046155b    push 5FFFFFFh"
"	      00461560    mov eax,ds:[599BC4h]"
"	      00461565    mov eax,[eax]"
"	      00461567    mov ecx,ds:[599BC4h]"
"	      0046156d    call dword ptr [eax+2Ch]"
);
// LINE 200:
	asm( 
"	      00461570    push 4"
"	      00461572    lea eax,[ebp-48h]"
"	      00461575    push eax"
"	      00461576    push 4EEEEEEh"
"	      0046157b    mov eax,ds:[599BC4h]"
"	      00461580    mov eax,[eax]"
"	      00461582    mov ecx,ds:[599BC4h]"
"	      00461588    call dword ptr [eax+2Ch]"
);
// LINE 201:
	asm( 
"	      0046158b    mov dword ptr [ebp-44h],0"
"	      00461592    jmp near ptr 0046159Ah"
"	      00461597    inc dword ptr [ebp-44h]"
"	      0046159a    mov eax,[ebp-48h]"
"	      0046159d    cmp [ebp-44h],eax"
"	      004615a0    jge near ptr 004615ECh"
);
// LINE 202:
	asm( 
"	      004615a6    mov byte ptr [ebp-40h],0"
);
// LINE 203:
	asm( 
"	      004615aa    lea eax,[ebp-40h]"
"	      004615ad    push eax"
"	      004615ae    mov eax,[ebp-44h]"
"	      004615b1    push eax"
"	      004615b2    mov ecx,604C78h"
"	      004615b7    call 0049A696h"
);
// LINE 204:
	asm( 
"	      004615bc    lea eax,[ebp-40h]"
"	      004615bf    push eax"
"	      004615c0    call 0056ABE0h"
"	      004615c5    add esp,4"
"	      004615c8    inc eax"
"	      004615c9    push eax"
"	      004615ca    lea eax,[ebp-40h]"
"	      004615cd    push eax"
"	      004615ce    mov eax,[ebp-44h]"
"	      004615d1    add eax,0EEEEEEh"
"	      004615d6    push eax"
"	      004615d7    mov eax,ds:[599BC4h]"
"	      004615dc    mov eax,[eax]"
"	      004615de    mov ecx,ds:[599BC4h]"
"	      004615e4    call dword ptr [eax+2Ch]"
);
// LINE 205:
	asm( 
"	      004615e7    jmp near ptr 00461597h"
);
// LINE 206:
	asm( 
"	      004615ec    mov eax,ds:[599BC4h]"
"	      004615f1    mov [ebp-50h],eax"
"	      004615f4    mov eax,[ebp-50h]"
"	      004615f7    mov [ebp-4Ch],eax"
"	      004615fa    cmp dword ptr [ebp-4Ch],0"
"	      004615fe    je near ptr 00461615h"
"	      00461604    push 1"
"	      00461606    mov eax,[ebp-4Ch]"
"	      00461609    mov eax,[eax]"
"	      0046160b    mov ecx,[ebp-4Ch]"
"	      0046160e    call dword ptr [eax]"
"	      00461610    jmp near ptr 00461615h"
);
// LINE 207:
	asm( 
"	      00461615    mov dword ptr ds:[599BC4h],0"
);
// LINE 209:
	asm( 
"	      0046161f    jmp near ptr 00461624h"
"	      00461624    pop edi"
"	      00461625    pop esi"
"	      00461626    pop ebx"
"	      00461627    leave"
"	      00461628    ret"
);
}

// FUNCTION: COPTER_D 0x00461629
public: virtual unsigned long __thiscall CGameApp::TickGame(void) {
// LINE 218:
	asm( 
"	      00461629    push ebp"
"	      0046162a    mov ebp,esp"
"	      0046162c    sub esp,38h"
"	      0046162f    push ebx"
"	      00461630    push esi"
"	      00461631    push edi"
"	      00461632    mov [ebp-30h],ecx"
);
// LINE 222:
	asm( 
"	      00461635    inc dword ptr ds:[599294h]"
);
// LINE 223:
	asm( 
"	      0046163b    mov eax,[ebp-30h]"
"	      0046163e    mov eax,[eax+416Ch]"
"	      00461644    mov [ebp-18h],eax"
"	      00461647    jmp near ptr 0046164Ch"
"	      0046164c    mov eax,[ebp-30h]"
"	      0046164f    cmp dword ptr [eax+4168h],0"
"	      00461656    je near ptr 004616DBh"
"	      0046165c    mov eax,[ebp-30h]"
"	      0046165f    cmp dword ptr [eax+4164h],1"
"	      00461666    jne near ptr 0046167Fh"
"	      0046166c    call dword ptr ds:[6C3908h]"
"	      00461672    mov [ebp-28h],eax"
"	      00461675    jmp near ptr 004616C6h"
"	      0046167a    jmp near ptr 004616C6h"
"	      0046167f    mov eax,[ebp-30h]"
"	      00461682    cmp dword ptr [eax+4164h],0"
"	      00461689    jne near ptr 004616AFh"
"	      0046168f    lea eax,[ebp-24h]"
"	      00461692    push eax"
"	      00461693    call dword ptr ds:[6C365Ch]"
"	      00461699    mov eax,[ebp-24h]"
"	      0046169c    mov [ebp-1Ch],eax"
"	      0046169f    mov eax,[ebp-1Ch]"
"	      004616a2    mov [ebp-28h],eax"
"	      004616a5    jmp near ptr 004616C6h"
"	      004616aa    jmp near ptr 004616C6h"
"	      004616af    call dword ptr ds:[6C3908h]"
"	      004616b5    mov ecx,3E8h"
"	      004616ba    sub edx,edx"
"	      004616bc    div ecx"
"	      004616be    mov [ebp-28h],eax"
"	      004616c1    jmp near ptr 004616C6h"
"	      004616c6    mov eax,[ebp-28h]"
"	      004616c9    mov ecx,[ebp-30h]"
"	      004616cc    sub eax,[ecx+4168h]"
"	      004616d2    mov [ebp-14h],eax"
"	      004616d5    mov eax,[ebp-14h]"
"	      004616d8    add [ebp-18h],eax"
"	      004616db    mov eax,[ebp-30h]"
"	      004616de    cmp dword ptr [eax+4164h],0"
"	      004616e5    jne near ptr 00461722h"
"	      004616eb    mov eax,[ebp-30h]"
"	      004616ee    cmp dword ptr [eax+4170h],0"
"	      004616f5    je near ptr 00461722h"
"	      004616fb    mov eax,[ebp-30h]"
"	      004616fe    mov eax,[eax+4170h]"
"	      00461704    push eax"
"	      00461705    push 0F4240h"
"	      0046170a    mov eax,[ebp-18h]"
"	      0046170d    push eax"
"	      0046170e    call dword ptr ds:[6C372Ch]"
"	      00461714    mov [ebp-18h],eax"
"	      00461717    mov eax,[ebp-18h]"
"	      0046171a    mov [ebp-4],eax"
"	      0046171d    jmp near ptr 00461733h"
"	      00461722    mov eax,[ebp-18h]"
"	      00461725    mov [ebp-4],eax"
"	      00461728    jmp near ptr 00461733h"
"	      0046172d    mov eax,[ebp-2Ch]"
"	      00461730    mov [ebp-4],eax"
);
// LINE 224:
	asm( 
"	      00461733    cmp dword ptr [ebp-4],3E8h"
"	      0046173a    jl near ptr 0046182Ch"
);
// LINE 226:
	asm( 
"	      00461740    mov eax,ds:[599294h]"
"	      00461745    mov [ebp-34h],eax"
"	      00461748    fild dword ptr [ebp-34h]"
"	      0046174b    fmul dword ptr ds:[590464h]"
"	      00461751    mov eax,[ebp-4]"
"	      00461754    mov [ebp-38h],eax"
"	      00461757    fidiv dword ptr [ebp-38h]"
"	      0046175a    mov eax,[ebp-30h]"
"	      0046175d    fstp dword ptr [eax+4344h]"
);
// LINE 227:
	asm( 
"	      00461763    mov dword ptr ds:[599294h],0"
);
// LINE 229:
	asm( 
"	      0046176d    mov eax,[ebp-30h]"
"	      00461770    mov dword ptr [eax+416Ch],0"
"	      0046177a    mov eax,[ebp-30h]"
"	      0046177d    mov dword ptr [eax+4168h],0"
"	      00461787    jmp near ptr 0046178Ch"
"	      0046178c    jmp near ptr 00461791h"
"	      00461791    mov eax,[ebp-30h]"
"	      00461794    cmp dword ptr [eax+4168h],0"
"	      0046179b    je near ptr 004617A6h"
"	      004617a1    jmp near ptr 00461827h"
"	      004617a6    mov eax,[ebp-30h]"
"	      004617a9    cmp dword ptr [eax+4164h],1"
"	      004617b0    jne near ptr 004617CFh"
"	      004617b6    call dword ptr ds:[6C3908h]"
"	      004617bc    mov ecx,[ebp-30h]"
"	      004617bf    mov [ecx+4168h],eax"
"	      004617c5    jmp near ptr 00461822h"
"	      004617ca    jmp near ptr 00461822h"
"	      004617cf    mov eax,[ebp-30h]"
"	      004617d2    cmp dword ptr [eax+4164h],0"
"	      004617d9    jne near ptr 00461805h"
"	      004617df    lea eax,[ebp-10h]"
"	      004617e2    push eax"
"	      004617e3    call dword ptr ds:[6C365Ch]"
"	      004617e9    mov eax,[ebp-10h]"
"	      004617ec    mov [ebp-8],eax"
"	      004617ef    mov eax,[ebp-8]"
"	      004617f2    mov ecx,[ebp-30h]"
"	      004617f5    mov [ecx+4168h],eax"
"	      004617fb    jmp near ptr 00461822h"
"	      00461800    jmp near ptr 00461822h"
"	      00461805    call dword ptr ds:[6C3908h]"
"	      0046180b    mov ecx,3E8h"
"	      00461810    sub edx,edx"
"	      00461812    div ecx"
"	      00461814    mov ecx,[ebp-30h]"
"	      00461817    mov [ecx+4168h],eax"
"	      0046181d    jmp near ptr 00461822h"
"	      00461822    jmp near ptr 00461827h"
"	      00461827    jmp near ptr 0046182Ch"
);
// LINE 232:
	asm( 
"	      0046182c    mov eax,[ebp-30h]"
"	      0046182f    cmp dword ptr [eax+42C4h],0"
"	      00461836    je near ptr 00461877h"
);
// LINE 233:
	asm( 
"	      0046183c    mov eax,[ebp-4]"
"	      0046183f    push eax"
"	      00461840    mov eax,[ebp-30h]"
"	      00461843    mov eax,[eax]"
"	      00461845    mov ecx,[ebp-30h]"
"	      00461848    call dword ptr [eax+3Ch]"
);
// LINE 234:
	asm( 
"	      0046184b    mov eax,[ebp-30h]"
"	      0046184e    mov eax,[eax]"
"	      00461850    mov ecx,[ebp-30h]"
"	      00461853    call dword ptr [eax+60h]"
);
// LINE 235:
	asm( 
"	      00461856    mov eax,[ebp-30h]"
"	      00461859    cmp dword ptr [eax+4340h],0"
"	      00461860    je near ptr 00461877h"
);
// LINE 240:
	asm( 
"	      00461866    mov eax,[ebp-30h]"
"	      00461869    mov ecx,[ebp-30h]"
"	      0046186c    mov ecx,[ecx+50h]"
"	      0046186f    mov edx,[ecx]"
"	      00461871    mov ecx,[eax+50h]"
"	      00461874    call dword ptr [edx+8]"
);
// LINE 251:
	asm( 
"	      00461877    cmp dword ptr ds:[599DA4h],0"
"	      0046187e    je near ptr 00461897h"
);
// LINE 253:
	asm( 
"	      00461884    mov eax,ds:[599DA4h]"
"	      00461889    push eax"
"	      0046188a    push 5992D8h"
"	      0046188f    call 00424B14h"
"	      00461894    add esp,8"
);
// LINE 256:
	asm( 
"	      00461897    xor eax,eax"
"	      00461899    jmp near ptr 0046189Eh"
);
// LINE 257:
	asm( 
"	      0046189e    pop edi"
"	      0046189f    pop esi"
"	      004618a0    pop ebx"
"	      004618a1    leave"
"	      004618a2    ret"
);
}

// FUNCTION: COPTER_D 0x004618a3
public: virtual void __thiscall CGameApp::ComposeFrame(void) {
// LINE 269:
	asm( 
"	      004618a3    push ebp"
"	      004618a4    mov ebp,esp"
"	      004618a6    push 0FFFFFFFFh"
"	      004618a8    push 461EA1h"
"	      004618ad    mov eax,fs:[0]"
"	      004618b3    push eax"
"	      004618b4    mov fs:[0],esp"
"	      004618bb    sub esp,4"
"	      004618be    sub esp,23Ch"
"	      004618c4    push ebx"
"	      004618c5    push esi"
"	      004618c6    push edi"
"	      004618c7    mov [ebp-10h],esp"
"	      004618ca    mov [ebp-248h],ecx"
);
// LINE 270:
	asm( 
"	      004618d0    mov eax,[ebp-248h]"
"	      004618d6    mov eax,[eax+4338h]"
"	      004618dc    mov [ebp-240h],eax"
"	      004618e2    mov eax,[ebp-240h]"
"	      004618e8    mov [ebp-23Ch],eax"
"	      004618ee    jmp near ptr 004618F3h"
"	      004618f3    jmp near ptr 004618F8h"
"	      004618f8    mov eax,[ebp-23Ch]"
"	      004618fe    mov eax,[eax+4]"
"	      00461901    mov [ebp-23Ch],eax"
"	      00461907    jmp near ptr 0046190Ch"
"	      0046190c    jmp near ptr 00461911h"
"	      00461911    jmp near ptr 00461916h"
"	      00461916    mov eax,[ebp-23Ch]"
"	      0046191c    mov eax,[eax+8]"
"	      0046191f    mov [ebp-14h],eax"
);
// LINE 272:
	asm( 
"	      00461922    mov eax,[ebp-14h]"
"	      00461925    mov [ebp-24Ch],eax"
"	      0046192b    jmp near ptr 00461DD9h"
);
// LINE 277:
	asm( 
"	      00461930    lea eax,[ebp-118h]"
"	      00461936    push eax"
"	      00461937    mov eax,ds:[599284h]"
"	      0046193c    push eax"
"	      0046193d    push 0"
"	      0046193f    push 1"
"	      00461941    call 0049172Bh"
"	      00461946    add esp,10h"
);
// LINE 278:
	asm( 
"	      00461949    mov dword ptr [ebp-124h],0FFFFFFFFh"
"	      00461953    mov dword ptr [ebp-120h],1"
"	      0046195d    mov dword ptr [ebp-22Ch],590468h"
"	      00461967    mov dword ptr ds:[5C0920h],8000h"
"	      00461971    lea eax,[ebp-118h]"
"	      00461977    push eax"
"	      00461978    lea eax,[ebp-228h]"
"	      0046197e    push eax"
"	      0046197f    call 0056CEB0h"
"	      00461984    add esp,8"
"	      00461987    jmp near ptr 00461993h"
"	      0046198c    mov byte ptr [ebp-228h],0"
"	      00461993    jmp near ptr 00461998h"
"	      00461998    push 0"
"	      0046199a    lea ecx,[ebp-22Ch]"
"	      004619a0    call 004A06E6h"
"	      004619a5    test eax,eax"
"	      004619a7    jne near ptr 004619BCh"
"	      004619ad    mov dword ptr [ebp-11Ch],1"
"	      004619b7    jmp near ptr 004619C6h"
"	      004619bc    mov dword ptr [ebp-11Ch],0"
"	      004619c6    mov dword ptr [ebp-22Ch],590468h"
"	      004619d0    cmp dword ptr [ebp-124h],0FFFFFFFFh"
"	      004619d7    jle near ptr 004619E2h"
"	      004619dd    jmp near ptr 004619E7h"
"	      004619e2    jmp near ptr 00461A15h"
"	      004619e7    jmp near ptr 004619F9h"
"	      004619ec    cmp dword ptr [ebp-244h],0"
"	      004619f3    je near ptr 00461A15h"
"	      004619f9    cmp dword ptr [ebp-120h],0"
"	      00461a00    je near ptr 00461A15h"
"	      00461a06    mov eax,[ebp-124h]"
"	      00461a0c    push eax"
"	      00461a0d    call 00578E50h"
"	      00461a12    add esp,4"
"	      00461a15    jmp near ptr 00461A1Ah"
"	      00461a1a    mov eax,[ebp-11Ch]"
"	      00461a20    mov [ebp-234h],eax"
"	      00461a26    cmp dword ptr [ebp-234h],0"
"	      00461a2d    je near ptr 00461A48h"
);
// LINE 279:
	asm( 
"	      00461a33    mov eax,[ebp-248h]"
"	      00461a39    mov dword ptr [eax+42C0h],0"
);
// LINE 280:
	asm( 
"	      00461a43    jmp near ptr 00461B1Fh"
);
// LINE 281:
	asm( 
"	      00461a48    push 140h"
"	      00461a4d    call 0056A600h"
"	      00461a52    add esp,4"
"	      00461a55    mov [ebp-230h],eax"
"	      00461a5b    cmp dword ptr [ebp-230h],0"
"	      00461a62    je near ptr 00461A95h"
"	      00461a68    push 116h"
"	      00461a6d    push 280h"
"	      00461a72    lea eax,[ebp-118h]"
"	      00461a78    push eax"
"	      00461a79    mov ecx,[ebp-230h]"
"	      00461a7f    call 00497CCFh"
"	      00461a84    mov ecx,[ebp-248h]"
"	      00461a8a    mov [ecx+42C0h],eax"
"	      00461a90    jmp near ptr 00461AA5h"
"	      00461a95    mov eax,[ebp-248h]"
"	      00461a9b    mov dword ptr [eax+42C0h],0"
"	      00461aa5    mov eax,[ebp-248h]"
"	      00461aab    mov eax,[eax+42C0h]"
"	      00461ab1    mov [ebp-238h],eax"
);
// LINE 282:
	asm( 
"	      00461ab7    mov eax,[ebp-238h]"
"	      00461abd    mov dword ptr [eax+24h],0"
"	      00461ac4    mov eax,[ebp-238h]"
"	      00461aca    mov dword ptr [eax+28h],64h"
"	      00461ad1    jmp near ptr 00461AD6h"
);
// LINE 283:
	asm( 
"	      00461ad6    jmp near ptr 00461ADBh"
"	      00461adb    mov eax,[ebp-248h]"
"	      00461ae1    mov eax,[eax+50h]"
"	      00461ae4    mov eax,[eax+18h]"
"	      00461ae7    push eax"
"	      00461ae8    mov eax,[ebp-248h]"
"	      00461aee    mov ecx,[eax+42C0h]"
"	      00461af4    call 0049805Bh"
);
// LINE 284:
	asm( 
"	      00461af9    push 0FFFFFFFFh"
"	      00461afb    push 0FE000h"
"	      00461b00    push 0"
"	      00461b02    mov eax,[ebp-248h]"
"	      00461b08    mov ecx,[ebp-248h]"
"	      00461b0e    mov ecx,[ecx+42C0h]"
"	      00461b14    mov edx,[ecx]"
"	      00461b16    mov ecx,[eax+42C0h]"
"	      00461b1c    call dword ptr [edx+10h]"
);
// LINE 289:
	asm( 
"	      00461b1f    push 2"
"	      00461b21    mov eax,[ebp-248h]"
"	      00461b27    mov eax,[eax]"
"	      00461b29    mov ecx,[ebp-248h]"
"	      00461b2f    call dword ptr [eax+6Ch]"
);
// LINE 290:
	asm( 
"	      00461b32    push 3"
"	      00461b34    mov eax,[ebp-248h]"
"	      00461b3a    mov eax,[eax]"
"	      00461b3c    mov ecx,[ebp-248h]"
"	      00461b42    call dword ptr [eax+68h]"
);
// LINE 297:
	asm( 
"	      00461b45    mov eax,[ebp-248h]"
"	      00461b4b    cmp dword ptr [eax+42C0h],0"
"	      00461b52    je near ptr 00461B7Dh"
"	      00461b58    mov eax,[ebp-248h]"
"	      00461b5e    mov ecx,[ebp-248h]"
"	      00461b64    mov ecx,[ecx+42C0h]"
"	      00461b6a    mov edx,[ecx]"
"	      00461b6c    mov ecx,[eax+42C0h]"
"	      00461b72    call dword ptr [edx+18h]"
"	      00461b75    test eax,eax"
"	      00461b77    je near ptr 00461BA3h"
);
// LINE 298:
	asm( 
"	      00461b7d    push 3"
"	      00461b7f    mov eax,[ebp-248h]"
"	      00461b85    mov eax,[eax]"
"	      00461b87    mov ecx,[ebp-248h]"
"	      00461b8d    call dword ptr [eax+6Ch]"
);
// LINE 299:
	asm( 
"	      00461b90    push 4"
"	      00461b92    mov eax,[ebp-248h]"
"	      00461b98    mov eax,[eax]"
"	      00461b9a    mov ecx,[ebp-248h]"
"	      00461ba0    call dword ptr [eax+68h]"
);
// LINE 302:
	asm( 
"	      00461ba3    jmp near ptr 00461E25h"
);
// LINE 305:
	asm( 
"	      00461ba8    mov eax,[ebp-248h]"
"	      00461bae    cmp dword ptr [eax+88h],1"
"	      00461bb5    jne near ptr 00461BCBh"
);
// LINE 306:
	asm( 
"	      00461bbb    mov ecx,[ebp-248h]"
"	      00461bc1    call 004668ADh"
);
// LINE 307:
	asm( 
"	      00461bc6    jmp near ptr 00461BE0h"
);
// LINE 308:
	asm( 
"	      00461bcb    mov ecx,[ebp-248h]"
"	      00461bd1    mov eax,[ebp-248h]"
"	      00461bd7    mov eax,[eax+3Ch]"
"	      00461bda    add ecx,3Ch"
"	      00461bdd    call dword ptr [eax+24h]"
);
// LINE 309:
	asm( 
"	      00461be0    jmp near ptr 00461E25h"
);
// LINE 312:
	asm( 
"	      00461be5    mov ecx,[ebp-248h]"
"	      00461beb    call 00466B94h"
);
// LINE 318:
	asm( 
"	      00461bf0    push 1Eh"
"	      00461bf2    call 0043D91Fh"
"	      00461bf7    add esp,4"
);
// LINE 320:
	asm( 
"	      00461bfa    mov ecx,[ebp-248h]"
"	      00461c00    mov eax,[ebp-248h]"
"	      00461c06    mov eax,[eax+3Ch]"
"	      00461c09    add ecx,3Ch"
"	      00461c0c    call dword ptr [eax+24h]"
);
// LINE 322:
	asm( 
"	      00461c0f    push 1Eh"
"	      00461c11    call 0043D91Fh"
"	      00461c16    add esp,4"
);
// LINE 324:
	asm( 
"	      00461c19    jmp near ptr 00461E25h"
);
// LINE 327:
	asm( 
"	      00461c1e    mov eax,[ebp-248h]"
"	      00461c24    cmp dword ptr [eax+0B4h],0"
"	      00461c2b    jne near ptr 00461D5Fh"
);
// LINE 331:
	asm( 
"	      00461c31    mov dword ptr [ebp-4],0"
);
// LINE 339:
	asm( 
"	      00461c38    mov eax,[ebp-248h]"
"	      00461c3e    mov eax,[eax]"
"	      00461c40    mov ecx,[ebp-248h]"
"	      00461c46    call dword ptr [eax+64h]"
);
// LINE 341:
	asm( 
"	      00461c49    mov ecx,[ebp-248h]"
"	      00461c4f    mov eax,[ebp-248h]"
"	      00461c55    mov eax,[eax+3Ch]"
"	      00461c58    add ecx,3Ch"
"	      00461c5b    call dword ptr [eax+24h]"
"	      00461c5e    jmp near ptr 00461D53h"
);
// LINE 345:
	asm( 
"	      00461c63    mov eax,[ebp-248h]"
"	      00461c69    mov dword ptr [eax+0B4h],2"
);
// LINE 346:
	asm( 
"	      00461c73    mov eax,[ebp-248h]"
"	      00461c79    mov dword ptr [eax+24h],1"
);
// LINE 349:
	asm( 
"	      00461c80    jmp near ptr 00461C85h"
"	      00461c85    mov eax,[ebp-248h]"
"	      00461c8b    mov eax,[eax+0D8h]"
"	      00461c91    cmp dword ptr [eax+4],0"
"	      00461c95    je near ptr 00461CB8h"
);
// LINE 350:
	asm( 
"	      00461c9b    mov eax,[ebp-248h]"
"	      00461ca1    mov ecx,[ebp-248h]"
"	      00461ca7    mov ecx,[ecx+0D8h]"
"	      00461cad    mov edx,[ecx]"
"	      00461caf    mov ecx,[eax+0D8h]"
"	      00461cb5    call dword ptr [edx+4]"
);
// LINE 351:
	asm( 
"	      00461cb8    jmp near ptr 00461CBDh"
"	      00461cbd    mov eax,[ebp-248h]"
"	      00461cc3    mov eax,[eax+34h]"
"	      00461cc6    cmp dword ptr [eax+4],0"
"	      00461cca    je near ptr 00461CE7h"
);
// LINE 352:
	asm( 
"	      00461cd0    mov eax,[ebp-248h]"
"	      00461cd6    mov ecx,[ebp-248h]"
"	      00461cdc    mov ecx,[ecx+34h]"
"	      00461cdf    mov edx,[ecx]"
"	      00461ce1    mov ecx,[eax+34h]"
"	      00461ce4    call dword ptr [edx+4]"
);
// LINE 353:
	asm( 
"	      00461ce7    jmp near ptr 00461CECh"
"	      00461cec    mov eax,[ebp-248h]"
"	      00461cf2    mov eax,[eax+0DCh]"
"	      00461cf8    cmp dword ptr [eax+4],0"
"	      00461cfc    je near ptr 00461D1Fh"
);
// LINE 354:
	asm( 
"	      00461d02    mov eax,[ebp-248h]"
"	      00461d08    mov ecx,[ebp-248h]"
"	      00461d0e    mov ecx,[ecx+0DCh]"
"	      00461d14    mov edx,[ecx]"
"	      00461d16    mov ecx,[eax+0DCh]"
"	      00461d1c    call dword ptr [edx+4]"
);
// LINE 359:
	asm( 
"	      00461d1f    mov eax,[ebp-248h]"
"	      00461d25    mov ecx,[ebp-248h]"
"	      00461d2b    mov ecx,[ecx+38h]"
"	      00461d2e    mov edx,[ecx]"
"	      00461d30    mov ecx,[eax+38h]"
"	      00461d33    call dword ptr [edx+68h]"
);
// LINE 360:
	asm( 
"	      00461d36    push 20002h"
"	      00461d3b    push 20h"
"	      00461d3d    push 7DCh"
"	      00461d42    mov ecx,[ebp-248h]"
"	      00461d48    call 0043F2B9h"
);
// LINE 361:
	asm( 
"	      00461d4d    mov eax,461D53h"
"	      00461d52    ret"
);
// LINE 363:
	asm( 
"	      00461d53    mov dword ptr [ebp-4],0FFFFFFFFh"
);
// LINE 364:
	asm( 
"	      00461d5a    jmp near ptr 00461DA1h"
"	      00461d5f    mov eax,[ebp-248h]"
"	      00461d65    cmp dword ptr [eax+0B4h],1"
"	      00461d6c    jne near ptr 00461D8Ch"
);
// LINE 365:
	asm( 
"	      00461d72    mov ecx,[ebp-248h]"
"	      00461d78    mov eax,[ebp-248h]"
"	      00461d7e    mov eax,[eax+3Ch]"
"	      00461d81    add ecx,3Ch"
"	      00461d84    call dword ptr [eax+24h]"
);
// LINE 367:
	asm( 
"	      00461d87    jmp near ptr 00461DA1h"
);
// LINE 368:
	asm( 
"	      00461d8c    mov ecx,[ebp-248h]"
"	      00461d92    mov eax,[ebp-248h]"
"	      00461d98    mov eax,[eax+3Ch]"
"	      00461d9b    add ecx,3Ch"
"	      00461d9e    call dword ptr [eax+24h]"
);
// LINE 370:
	asm( 
"	      00461da1    jmp near ptr 00461E25h"
);
// LINE 375:
	asm( 
"	      00461da6    mov eax,[ebp-248h]"
"	      00461dac    mov dword ptr [eax+36B8h],1"
);
// LINE 376:
	asm( 
"	      00461db6    mov eax,[ebp-248h]"
"	      00461dbc    mov eax,[eax]"
"	      00461dbe    mov ecx,[ebp-248h]"
"	      00461dc4    call dword ptr [eax+78h]"
);
// LINE 378:
	asm( 
"	      00461dc7    push 0"
"	      00461dc9    call dword ptr ds:[6C3874h]"
);
// LINE 382:
	asm( 
"	      00461dcf    jmp near ptr 00461E25h"
);
// LINE 383:
	asm( 
"	      00461dd4    jmp near ptr 00461E25h"
"	      00461dd9    dec dword ptr [ebp-24Ch]"
"	      00461ddf    cmp dword ptr [ebp-24Ch],0Ah"
"	      00461de6    ja near ptr 00461E25h"
"	      00461dec    mov eax,[ebp-24Ch]"
"	      00461df2    jmp dword ptr [eax*4+461DF9h]"
"	      00461df9    cmpsb"
"	      00461dfa    sbb eax,19300046h"
"	      00461dff    inc esi"
"	      00461e00    add [ebp+1Bh],al"
"	      00461e03    inc esi"
"	      00461e04    add ch,ah"
"	      00461e06    sbb eax,[esi]"
"	      00461e09    test al,1Bh"
"	      00461e0b    inc esi"
"	      00461e0c    add [esi],bl"
"	      00461e0e    sbb al,46h"
"	      00461e10    add al,dh"
"	      00461e12    sbb eax,[esi]"
"	      00461e15    (bad)"
"	      00461e19    (bad)"
"	      00461e1d    and eax,0F000461Eh"
"	      00461e22    sbb eax,[esi]"
);
// LINE 385:
	asm( 
"	      00461e25    mov eax,[ebp-248h]"
"	      00461e2b    cmp dword ptr [eax+42C8h],0"
"	      00461e32    je near ptr 00461E43h"
);
// LINE 386:
	asm( 
"	      00461e38    mov ecx,[ebp-248h]"
"	      00461e3e    call 004960C5h"
);
// LINE 389:
	asm( 
"	      00461e43    mov eax,[ebp-248h]"
"	      00461e49    cmp dword ptr [eax+430Ch],0"
"	      00461e50    je near ptr 00461E9Ch"
"	      00461e56    mov eax,[ebp-248h]"
"	      00461e5c    cmp dword ptr [eax+42BCh],0"
"	      00461e63    je near ptr 00461E9Ch"
);
// LINE 390:
	asm( 
"	      00461e69    push 0"
"	      00461e6b    push 0"
"	      00461e6d    push 0"
"	      00461e6f    push 0"
"	      00461e71    push 0Ah"
"	      00461e73    push 0Ah"
"	      00461e75    mov eax,[ebp-248h]"
"	      00461e7b    mov eax,[eax+34h]"
"	      00461e7e    push eax"
"	      00461e7f    mov eax,[ebp-248h]"
"	      00461e85    mov ecx,[ebp-248h]"
"	      00461e8b    mov ecx,[ecx+42BCh]"
"	      00461e91    mov edx,[ecx]"
"	      00461e93    mov ecx,[eax+42BCh]"
"	      00461e99    call dword ptr [edx+0Ch]"
);
// LINE 391:
	asm( 
"	      00461e9c    jmp near ptr 00461EABh"
"	      00461ea1    mov eax,595C00h"
"	      00461ea6    jmp near ptr 0056F590h"
"	      00461eab    mov eax,[ebp-0Ch]"
"	      00461eae    mov fs:[0],eax"
"	      00461eb4    pop edi"
"	      00461eb5    pop esi"
"	      00461eb6    pop ebx"
"	      00461eb7    leave"
"	      00461eb8    ret"
);
}

// FUNCTION: COPTER_D 0x00461eb9
public: virtual void __thiscall CGameApp::ComposePlayFrame(void) {
// LINE 400:
	asm( 
"	      00461eb9    push ebp"
"	      00461eba    mov ebp,esp"
"	      00461ebc    sub esp,64h"
"	      00461ebf    push ebx"
"	      00461ec0    push esi"
"	      00461ec1    push edi"
"	      00461ec2    mov [ebp-64h],ecx"
);
// LINE 406:
	asm( 
"	      00461ec5    inc dword ptr ds:[5992A0h]"
);
// LINE 408:
	asm( 
"	      00461ecb    mov eax,[ebp-64h]"
"	      00461ece    cmp dword ptr [eax+0A4h],0"
"	      00461ed5    jne near ptr 00462400h"
);
// LINE 409:
	asm( 
"	      00461edb    mov ecx,[ebp-64h]"
"	      00461ede    add ecx,110h"
"	      00461ee4    call 0048B9A9h"
);
// LINE 410:
	asm( 
"	      00461ee9    call dword ptr ds:[6C3614h]"
"	      00461eef    mov ds:[59929Ch],eax"
);
// LINE 411:
	asm( 
"	      00461ef4    mov eax,ds:[59929Ch]"
"	      00461ef9    sub eax,ds:[599298h]"
"	      00461eff    mov ds:[5B4760h],eax"
);
// LINE 412:
	asm( 
"	      00461f04    shl dword ptr ds:[5B4760h],10h"
);
// LINE 413:
	asm( 
"	      00461f0b    mov ecx,3E8h"
"	      00461f10    mov eax,ds:[5B4760h]"
"	      00461f15    cdq"
"	      00461f16    idiv ecx"
"	      00461f18    mov ds:[5B4760h],eax"
);
// LINE 414:
	asm( 
"	      00461f1d    cmp dword ptr ds:[5B4760h],64h"
"	      00461f24    jge near ptr 00461F34h"
);
// LINE 415:
	asm( 
"	      00461f2a    mov dword ptr ds:[5B4760h],64h"
);
// LINE 416:
	asm( 
"	      00461f34    cmp dword ptr ds:[5B4760h],8000h"
"	      00461f3e    jle near ptr 00461F4Eh"
);
// LINE 417:
	asm( 
"	      00461f44    mov dword ptr ds:[5B4760h],8000h"
);
// LINE 418:
	asm( 
"	      00461f4e    call 004EB9AAh"
);
// LINE 419:
	asm( 
"	      00461f53    mov eax,ds:[59929Ch]"
"	      00461f58    mov ds:[599298h],eax"
);
// LINE 420:
	asm( 
"	      00461f5d    mov eax,ds:[5992A0h]"
"	      00461f62    and al,3"
"	      00461f64    cmp al,3"
"	      00461f66    jne near ptr 004623FBh"
);
// LINE 421:
	asm( 
"	      00461f6c    mov eax,ds:[5992A0h]"
"	      00461f71    and al,3Fh"
"	      00461f73    cmp al,3Fh"
"	      00461f75    jne near ptr 004622AFh"
);
// LINE 423:
	asm( 
"	      00461f7b    cmp dword ptr ds:[5C2AA0h],2"
"	      00461f82    jne near ptr 00461F9Dh"
"	      00461f88    call 00429015h"
"	      00461f8d    cmp eax,3E8h"
"	      00461f92    jl near ptr 00461F9Dh"
"	      00461f98    jmp near ptr 00461FA2h"
"	      00461f9d    jmp near ptr 00462084h"
"	      00461fa2    jmp near ptr 00461FB1h"
"	      00461fa7    cmp dword ptr [ebp-0Ch],0"
"	      00461fab    je near ptr 00462084h"
"	      00461fb1    cmp dword ptr ds:[5C33D0h],0"
"	      00461fb8    jne near ptr 00462084h"
);
// LINE 425:
	asm( 
"	      00461fbe    mov dword ptr ds:[5C33D0h],1"
"	      00461fc8    mov dword ptr ds:[5C33DCh],0"
"	      00461fd2    mov dword ptr ds:[5C33D8h],0"
"	      00461fdc    jmp near ptr 00461FE1h"
"	      00461fe1    jmp near ptr 00461FE6h"
"	      00461fe6    cmp dword ptr ds:[5C33D8h],0"
"	      00461fed    je near ptr 00461FF8h"
"	      00461ff3    jmp near ptr 00462067h"
"	      00461ff8    cmp dword ptr ds:[5C33D4h],1"
"	      00461fff    jne near ptr 0046201Ah"
"	      00462005    call dword ptr ds:[6C3908h]"
"	      0046200b    mov ds:[5C33D8h],eax"
"	      00462010    jmp near ptr 00462062h"
"	      00462015    jmp near ptr 00462062h"
"	      0046201a    cmp dword ptr ds:[5C33D4h],0"
"	      00462021    jne near ptr 00462049h"
"	      00462027    lea eax,[ebp-1Ch]"
"	      0046202a    push eax"
"	      0046202b    call dword ptr ds:[6C365Ch]"
"	      00462031    mov eax,[ebp-1Ch]"
"	      00462034    mov [ebp-14h],eax"
"	      00462037    mov eax,[ebp-14h]"
"	      0046203a    mov ds:[5C33D8h],eax"
"	      0046203f    jmp near ptr 00462062h"
"	      00462044    jmp near ptr 00462062h"
"	      00462049    call dword ptr ds:[6C3908h]"
"	      0046204f    mov ecx,3E8h"
"	      00462054    sub edx,edx"
"	      00462056    div ecx"
"	      00462058    mov ds:[5C33D8h],eax"
"	      0046205d    jmp near ptr 00462062h"
"	      00462062    jmp near ptr 00462067h"
"	      00462067    jmp near ptr 0046206Ch"
"	      0046206c    jmp near ptr 00462071h"
);
// LINE 426:
	asm( 
"	      00462071    mov eax,[ebp-64h]"
"	      00462074    mov eax,[eax]"
"	      00462076    mov ecx,[ebp-64h]"
"	      00462079    call dword ptr [eax+94h]"
);
// LINE 429:
	asm( 
"	      0046207f    jmp near ptr 004622AAh"
"	      00462084    cmp dword ptr ds:[5C33D0h],1"
"	      0046208b    jne near ptr 00462197h"
);
// LINE 430:
	asm( 
"	      00462091    mov eax,ds:[5C33DCh]"
"	      00462096    mov [ebp-30h],eax"
"	      00462099    jmp near ptr 0046209Eh"
"	      0046209e    cmp dword ptr ds:[5C33D8h],0"
"	      004620a5    je near ptr 00462121h"
"	      004620ab    cmp dword ptr ds:[5C33D4h],1"
"	      004620b2    jne near ptr 004620CBh"
"	      004620b8    call dword ptr ds:[6C3908h]"
"	      004620be    mov [ebp-40h],eax"
"	      004620c1    jmp near ptr 0046210Fh"
"	      004620c6    jmp near ptr 0046210Fh"
"	      004620cb    cmp dword ptr ds:[5C33D4h],0"
"	      004620d2    jne near ptr 004620F8h"
"	      004620d8    lea eax,[ebp-3Ch]"
"	      004620db    push eax"
"	      004620dc    call dword ptr ds:[6C365Ch]"
"	      004620e2    mov eax,[ebp-3Ch]"
"	      004620e5    mov [ebp-34h],eax"
"	      004620e8    mov eax,[ebp-34h]"
"	      004620eb    mov [ebp-40h],eax"
"	      004620ee    jmp near ptr 0046210Fh"
"	      004620f3    jmp near ptr 0046210Fh"
"	      004620f8    call dword ptr ds:[6C3908h]"
"	      004620fe    mov ecx,3E8h"
"	      00462103    sub edx,edx"
"	      00462105    div ecx"
"	      00462107    mov [ebp-40h],eax"
"	      0046210a    jmp near ptr 0046210Fh"
"	      0046210f    mov eax,[ebp-40h]"
"	      00462112    sub eax,ds:[5C33D8h]"
"	      00462118    mov [ebp-2Ch],eax"
"	      0046211b    mov eax,[ebp-2Ch]"
"	      0046211e    add [ebp-30h],eax"
"	      00462121    cmp dword ptr ds:[5C33D4h],0"
"	      00462128    jne near ptr 00462165h"
"	      0046212e    cmp dword ptr ds:[5C33E0h],0"
"	      00462135    je near ptr 00462165h"
"	      0046213b    mov eax,ds:[5C33E0h]"
"	      00462140    push eax"
"	      00462141    push 0F4240h"
"	      00462146    mov eax,[ebp-30h]"
"	      00462149    push eax"
"	      0046214a    call dword ptr ds:[6C372Ch]"
"	      00462150    mov [ebp-30h],eax"
"	      00462153    cmp dword ptr [ebp-30h],493E0h"
"	      0046215a    jbe near ptr 00462192h"
"	      00462160    jmp near ptr 00462184h"
"	      00462165    cmp dword ptr [ebp-30h],493E0h"
"	      0046216c    jbe near ptr 00462192h"
"	      00462172    jmp near ptr 00462184h"
"	      00462177    cmp dword ptr [ebp-44h],493E0h"
"	      0046217e    jbe near ptr 00462192h"
);
// LINE 431:
	asm( 
"	      00462184    mov eax,[ebp-64h]"
"	      00462187    mov eax,[eax]"
"	      00462189    mov ecx,[ebp-64h]"
"	      0046218c    call dword ptr [eax+94h]"
);
// LINE 433:
	asm( 
"	      00462192    jmp near ptr 004622AAh"
);
// LINE 434:
	asm( 
"	      00462197    cmp dword ptr ds:[5C33D0h],2"
"	      0046219e    jne near ptr 004622AAh"
"	      004621a4    mov eax,ds:[5C33DCh]"
"	      004621a9    mov [ebp-4Ch],eax"
"	      004621ac    jmp near ptr 004621B1h"
"	      004621b1    cmp dword ptr ds:[5C33D8h],0"
"	      004621b8    je near ptr 00462234h"
"	      004621be    cmp dword ptr ds:[5C33D4h],1"
"	      004621c5    jne near ptr 004621DEh"
"	      004621cb    call dword ptr ds:[6C3908h]"
"	      004621d1    mov [ebp-5Ch],eax"
"	      004621d4    jmp near ptr 00462222h"
"	      004621d9    jmp near ptr 00462222h"
"	      004621de    cmp dword ptr ds:[5C33D4h],0"
"	      004621e5    jne near ptr 0046220Bh"
"	      004621eb    lea eax,[ebp-58h]"
"	      004621ee    push eax"
"	      004621ef    call dword ptr ds:[6C365Ch]"
"	      004621f5    mov eax,[ebp-58h]"
"	      004621f8    mov [ebp-50h],eax"
"	      004621fb    mov eax,[ebp-50h]"
"	      004621fe    mov [ebp-5Ch],eax"
"	      00462201    jmp near ptr 00462222h"
"	      00462206    jmp near ptr 00462222h"
"	      0046220b    call dword ptr ds:[6C3908h]"
"	      00462211    mov ecx,3E8h"
"	      00462216    sub edx,edx"
"	      00462218    div ecx"
"	      0046221a    mov [ebp-5Ch],eax"
"	      0046221d    jmp near ptr 00462222h"
"	      00462222    mov eax,[ebp-5Ch]"
"	      00462225    sub eax,ds:[5C33D8h]"
"	      0046222b    mov [ebp-48h],eax"
"	      0046222e    mov eax,[ebp-48h]"
"	      00462231    add [ebp-4Ch],eax"
"	      00462234    cmp dword ptr ds:[5C33D4h],0"
"	      0046223b    jne near ptr 00462278h"
"	      00462241    cmp dword ptr ds:[5C33E0h],0"
"	      00462248    je near ptr 00462278h"
"	      0046224e    mov eax,ds:[5C33E0h]"
"	      00462253    push eax"
"	      00462254    push 0F4240h"
"	      00462259    mov eax,[ebp-4Ch]"
"	      0046225c    push eax"
"	      0046225d    call dword ptr ds:[6C372Ch]"
"	      00462263    mov [ebp-4Ch],eax"
"	      00462266    cmp dword ptr [ebp-4Ch],2710h"
"	      0046226d    jbe near ptr 004622AAh"
"	      00462273    jmp near ptr 00462297h"
"	      00462278    cmp dword ptr [ebp-4Ch],2710h"
"	      0046227f    jbe near ptr 004622AAh"
"	      00462285    jmp near ptr 00462297h"
"	      0046228a    cmp dword ptr [ebp-60h],2710h"
"	      00462291    jbe near ptr 004622AAh"
);
// LINE 436:
	asm( 
"	      00462297    mov eax,[ebp-64h]"
"	      0046229a    mov eax,[eax]"
"	      0046229c    mov ecx,[ebp-64h]"
"	      0046229f    call dword ptr [eax+8Ch]"
);
// LINE 437:
	asm( 
"	      004622a5    jmp near ptr 004624D9h"
);
// LINE 440:
	asm( 
"	      004622aa    jmp near ptr 004623FBh"
"	      004622af    cmp dword ptr ds:[598EB8h],0FFFFFFFFh"
"	      004622b6    je near ptr 004622D3h"
"	      004622bc    mov eax,ds:[598EB8h]"
"	      004622c1    mov [ebp-4],eax"
"	      004622c4    cmp dword ptr [ebp-4],0"
"	      004622c8    je near ptr 00462309h"
"	      004622ce    jmp near ptr 004622E7h"
"	      004622d3    jmp near ptr 00462309h"
"	      004622d8    jmp near ptr 004622E7h"
"	      004622dd    cmp dword ptr [ebp-10h],0"
"	      004622e1    je near ptr 00462309h"
);
// LINE 441:
	asm( 
"	      004622e7    cmp dword ptr [ebp-4],0F6h"
"	      004622ee    jne near ptr 00462304h"
);
// LINE 442:
	asm( 
"	      004622f4    push 2Ah"
"	      004622f6    mov eax,[ebp-64h]"
"	      004622f9    mov eax,[eax]"
"	      004622fb    mov ecx,[ebp-64h]"
"	      004622fe    call dword ptr [eax+9Ch]"
);
// LINE 444:
	asm( 
"	      00462304    jmp near ptr 004623FBh"
);
// LINE 445:
	asm( 
"	      00462309    mov ecx,[ebp-64h]"
"	      0046230c    add ecx,0A0h"
"	      00462312    call 004BFED8h"
"	      00462317    mov [ebp-8],eax"
);
// LINE 446:
	asm( 
"	      0046231a    cmp dword ptr [ebp-8],1"
"	      0046231e    jne near ptr 0046233Eh"
);
// LINE 447:
	asm( 
"	      00462324    call 0045FFB9h"
"	      00462329    test eax,eax"
"	      0046232b    je near ptr 00462339h"
);
// LINE 448:
	asm( 
"	      00462331    mov ecx,[ebp-64h]"
"	      00462334    call 00441CBEh"
);
// LINE 450:
	asm( 
"	      00462339    jmp near ptr 004623FBh"
"	      0046233e    cmp dword ptr [ebp-8],3"
"	      00462342    jne near ptr 004623FBh"
);
// LINE 451:
	asm( 
"	      00462348    mov dword ptr ds:[5C33D0h],2"
"	      00462352    mov dword ptr ds:[5C33DCh],0"
"	      0046235c    mov dword ptr ds:[5C33D8h],0"
"	      00462366    jmp near ptr 0046236Bh"
"	      0046236b    jmp near ptr 00462370h"
"	      00462370    cmp dword ptr ds:[5C33D8h],0"
"	      00462377    je near ptr 00462382h"
"	      0046237d    jmp near ptr 004623F1h"
"	      00462382    cmp dword ptr ds:[5C33D4h],1"
"	      00462389    jne near ptr 004623A4h"
"	      0046238f    call dword ptr ds:[6C3908h]"
"	      00462395    mov ds:[5C33D8h],eax"
"	      0046239a    jmp near ptr 004623ECh"
"	      0046239f    jmp near ptr 004623ECh"
"	      004623a4    cmp dword ptr ds:[5C33D4h],0"
"	      004623ab    jne near ptr 004623D3h"
"	      004623b1    lea eax,[ebp-28h]"
"	      004623b4    push eax"
"	      004623b5    call dword ptr ds:[6C365Ch]"
"	      004623bb    mov eax,[ebp-28h]"
"	      004623be    mov [ebp-20h],eax"
"	      004623c1    mov eax,[ebp-20h]"
"	      004623c4    mov ds:[5C33D8h],eax"
"	      004623c9    jmp near ptr 004623ECh"
"	      004623ce    jmp near ptr 004623ECh"
"	      004623d3    call dword ptr ds:[6C3908h]"
"	      004623d9    mov ecx,3E8h"
"	      004623de    sub edx,edx"
"	      004623e0    div ecx"
"	      004623e2    mov ds:[5C33D8h],eax"
"	      004623e7    jmp near ptr 004623ECh"
"	      004623ec    jmp near ptr 004623F1h"
"	      004623f1    jmp near ptr 004623F6h"
"	      004623f6    jmp near ptr 004623FBh"
);
// LINE 455:
	asm( 
"	      004623fb    jmp near ptr 0046240Ah"
);
// LINE 457:
	asm( 
"	      00462400    push 14h"
"	      00462402    call 0043D91Fh"
"	      00462407    add esp,4"
);
// LINE 461:
	asm( 
"	      0046240a    mov eax,[ebp-64h]"
"	      0046240d    cmp dword ptr [eax+0A4h],0"
"	      00462414    je near ptr 00462429h"
"	      0046241a    mov eax,ds:[5992A0h]"
"	      0046241f    and al,7"
"	      00462421    cmp al,7"
"	      00462423    jne near ptr 004624BAh"
);
// LINE 462:
	asm( 
"	      00462429    mov ecx,[ebp-64h]"
"	      0046242c    call 00495BE3h"
);
// LINE 463:
	asm( 
"	      00462431    call 0051103Eh"
);
// LINE 464:
	asm( 
"	      00462436    mov ecx,[ebp-64h]"
"	      00462439    call 00495EF7h"
);
// LINE 465:
	asm( 
"	      0046243e    cmp dword ptr ds:[5C381Ch],0"
"	      00462445    je near ptr 004624A9h"
"	      0046244b    cmp dword ptr ds:[5B4DB8h],3"
"	      00462452    jne near ptr 004624A9h"
);
// LINE 466:
	asm( 
"	      00462458    mov eax,[ebp-64h]"
"	      0046245b    mov ecx,[ebp-64h]"
"	      0046245e    mov ecx,[ecx+34h]"
"	      00462461    mov edx,[ecx]"
"	      00462463    mov ecx,[eax+34h]"
"	      00462466    call dword ptr [edx]"
);
// LINE 467:
	asm( 
"	      00462468    jmp near ptr 0046246Dh"
"	      0046246d    jmp near ptr 00462472h"
"	      00462472    push 144h"
"	      00462477    push 200h"
"	      0046247c    mov eax,[ebp-64h]"
"	      0046247f    mov eax,[eax+34h]"
"	      00462482    mov eax,[eax+14h]"
"	      00462485    push eax"
"	      00462486    mov eax,[ebp-64h]"
"	      00462489    mov eax,[eax+34h]"
"	      0046248c    mov eax,[eax+10h]"
"	      0046248f    push eax"
"	      00462490    call 0050074Dh"
"	      00462495    add esp,10h"
);
// LINE 468:
	asm( 
"	      00462498    mov eax,[ebp-64h]"
"	      0046249b    mov ecx,[ebp-64h]"
"	      0046249e    mov ecx,[ecx+34h]"
"	      004624a1    mov edx,[ecx]"
"	      004624a3    mov ecx,[eax+34h]"
"	      004624a6    call dword ptr [edx+4]"
);
// LINE 470:
	asm( 
"	      004624a9    mov eax,[ebp-64h]"
"	      004624ac    mov eax,[eax+34h]"
"	      004624af    push eax"
"	      004624b0    mov ecx,604530h"
"	      004624b5    call 0046D802h"
);
// LINE 473:
	asm( 
"	      004624ba    mov eax,[ebp-64h]"
"	      004624bd    cmp dword ptr [eax+0A4h],0"
"	      004624c4    je near ptr 004624D4h"
);
// LINE 475:
	asm( 
"	      004624ca    push 14h"
"	      004624cc    call 0043D91Fh"
"	      004624d1    add esp,4"
);
// LINE 478:
	asm( 
"	      004624d4    jmp near ptr 004624D9h"
"	      004624d9    pop edi"
"	      004624da    pop esi"
"	      004624db    pop ebx"
"	      004624dc    leave"
"	      004624dd    ret"
);
}

// FUNCTION: COPTER_D 0x004624de
public: virtual void __thiscall CGameApp::DoRecurringTasks(long) {
// LINE 484:
	asm( 
"	      004624de    push ebp"
"	      004624df    mov ebp,esp"
"	      004624e1    sub esp,10h"
"	      004624e4    push ebx"
"	      004624e5    push esi"
"	      004624e6    push edi"
"	      004624e7    mov [ebp-10h],ecx"
);
// LINE 487:
	asm( 
"	      004624ea    cmp dword ptr [ebp+8],2EEh"
"	      004624f1    jle near ptr 004624FFh"
);
// LINE 488:
	asm( 
"	      004624f7    mov ecx,[ebp-10h]"
"	      004624fa    call 00471F41h"
);
// LINE 490:
	asm( 
"	      004624ff    mov eax,[ebp-10h]"
"	      00462502    mov eax,[eax+4338h]"
"	      00462508    mov [ebp-0Ch],eax"
"	      0046250b    mov eax,[ebp-0Ch]"
"	      0046250e    mov [ebp-8],eax"
"	      00462511    jmp near ptr 00462516h"
"	      00462516    jmp near ptr 0046251Bh"
"	      0046251b    mov eax,[ebp-8]"
"	      0046251e    mov eax,[eax+4]"
"	      00462521    mov [ebp-8],eax"
"	      00462524    jmp near ptr 00462529h"
"	      00462529    jmp near ptr 0046252Eh"
"	      0046252e    jmp near ptr 00462533h"
"	      00462533    mov eax,[ebp-8]"
"	      00462536    cmp dword ptr [eax+8],6"
"	      0046253a    jne near ptr 00462576h"
);
// LINE 491:
	asm( 
"	      00462540    mov dword ptr [ebp-4],0"
"	      00462547    jmp near ptr 0046254Fh"
"	      0046254c    inc dword ptr [ebp-4]"
"	      0046254f    jmp near ptr 00462554h"
"	      00462554    mov eax,[ebp-4]"
"	      00462557    cmp ds:[604C78h],eax"
"	      0046255d    jle near ptr 00462576h"
);
// LINE 492:
	asm( 
"	      00462563    mov eax,[ebp-4]"
"	      00462566    push eax"
"	      00462567    mov ecx,604C78h"
"	      0046256c    call 0049AA99h"
"	      00462571    jmp near ptr 0046254Ch"
);
// LINE 494:
	asm( 
"	      00462576    jmp near ptr 0046257Bh"
"	      0046257b    pop edi"
"	      0046257c    pop esi"
"	      0046257d    pop ebx"
"	      0046257e    leave"
"	      0046257f    ret 4"
);
}

// FUNCTION: COPTER_D 0x00462582
public: virtual int __thiscall CGameApp::EnterMode(int) {
// LINE 502:
	asm( 
"	      00462582    push ebp"
"	      00462583    mov ebp,esp"
"	      00462585    sub esp,160h"
"	      0046258b    push ebx"
"	      0046258c    push esi"
"	      0046258d    push edi"
"	      0046258e    mov [ebp-160h],ecx"
);
// LINE 503:
	asm( 
"	      00462594    cmp dword ptr [ebp+8],0"
"	      00462598    jne near ptr 00462680h"
);
// LINE 504:
	asm( 
"	      0046259e    mov eax,[ebp-160h]"
"	      004625a4    mov dword ptr [eax+4340h],0"
"	      004625ae    push 0"
"	      004625b0    lea ecx,[ebp-8]"
"	      004625b3    call 004BD692h"
"	      004625b8    mov [ebp-4Ch],eax"
);
// LINE 505:
	asm( 
"	      004625bb    mov eax,[ebp-160h]"
"	      004625c1    mov eax,[eax+4338h]"
"	      004625c7    mov [ebp-3Ch],eax"
"	      004625ca    mov eax,[ebp-3Ch]"
"	      004625cd    mov [ebp-34h],eax"
"	      004625d0    jmp near ptr 004625D5h"
"	      004625d5    jmp near ptr 004625DAh"
"	      004625da    mov eax,[ebp-34h]"
"	      004625dd    mov [ebp-48h],eax"
"	      004625e0    mov ecx,[ebp-160h]"
"	      004625e6    add ecx,4338h"
"	      004625ec    call 00466CB0h"
"	      004625f1    mov [ebp-40h],eax"
"	      004625f4    jmp near ptr 004625F9h"
"	      004625f9    mov eax,[ebp-40h]"
"	      004625fc    add eax,8"
"	      004625ff    mov [ebp-44h],eax"
"	      00462602    jmp near ptr 00462607h"
"	      00462607    cmp dword ptr [ebp-44h],0"
"	      0046260b    je near ptr 00462622h"
"	      00462611    mov eax,[ebp-4Ch]"
"	      00462614    push eax"
"	      00462615    mov ecx,[ebp-44h]"
"	      00462618    call 004BD6B5h"
"	      0046261d    jmp near ptr 00462622h"
"	      00462622    jmp near ptr 00462627h"
"	      00462627    mov eax,[ebp-48h]"
"	      0046262a    mov ecx,[ebp-40h]"
"	      0046262d    mov [ecx],eax"
"	      0046262f    mov eax,[ebp-48h]"
"	      00462632    mov eax,[eax+4]"
"	      00462635    mov ecx,[ebp-40h]"
"	      00462638    mov [ecx+4],eax"
"	      0046263b    mov eax,[ebp-40h]"
"	      0046263e    mov ecx,[ebp-48h]"
"	      00462641    mov ecx,[ecx+4]"
"	      00462644    mov [ecx],eax"
"	      00462646    mov eax,[ebp-40h]"
"	      00462649    mov ecx,[ebp-48h]"
"	      0046264c    mov [ecx+4],eax"
"	      0046264f    mov eax,[ebp-160h]"
"	      00462655    add dword ptr [eax+433Ch],1"
"	      0046265c    mov eax,[ebp-40h]"
"	      0046265f    mov [ebp-38h],eax"
"	      00462662    jmp near ptr 00462667h"
"	      00462667    jmp near ptr 0046266Ch"
"	      0046266c    jmp near ptr 00462671h"
);
// LINE 506:
	asm( 
"	      00462671    mov eax,1"
"	      00462676    jmp near ptr 00463601h"
);
// LINE 508:
	asm( 
"	      0046267b    jmp near ptr 004635FAh"
"	      00462680    cmp dword ptr [ebp+8],1"
"	      00462684    jne near ptr 00462772h"
);
// LINE 509:
	asm( 
"	      0046268a    mov eax,[ebp-160h]"
"	      00462690    mov dword ptr [eax+4340h],1"
"	      0046269a    push 1"
"	      0046269c    lea ecx,[ebp-0Ch]"
"	      0046269f    call 004BD692h"
"	      004626a4    mov [ebp-68h],eax"
);
// LINE 510:
	asm( 
"	      004626a7    mov eax,[ebp-160h]"
"	      004626ad    mov eax,[eax+4338h]"
"	      004626b3    mov [ebp-58h],eax"
"	      004626b6    mov eax,[ebp-58h]"
"	      004626b9    mov [ebp-50h],eax"
"	      004626bc    jmp near ptr 004626C1h"
"	      004626c1    jmp near ptr 004626C6h"
"	      004626c6    mov eax,[ebp-50h]"
"	      004626c9    mov [ebp-64h],eax"
"	      004626cc    mov ecx,[ebp-160h]"
"	      004626d2    add ecx,4338h"
"	      004626d8    call 00466CB0h"
"	      004626dd    mov [ebp-5Ch],eax"
"	      004626e0    jmp near ptr 004626E5h"
"	      004626e5    mov eax,[ebp-5Ch]"
"	      004626e8    add eax,8"
"	      004626eb    mov [ebp-60h],eax"
"	      004626ee    jmp near ptr 004626F3h"
"	      004626f3    cmp dword ptr [ebp-60h],0"
"	      004626f7    je near ptr 0046270Eh"
"	      004626fd    mov eax,[ebp-68h]"
"	      00462700    push eax"
"	      00462701    mov ecx,[ebp-60h]"
"	      00462704    call 004BD6B5h"
"	      00462709    jmp near ptr 0046270Eh"
"	      0046270e    jmp near ptr 00462713h"
"	      00462713    mov eax,[ebp-64h]"
"	      00462716    mov ecx,[ebp-5Ch]"
"	      00462719    mov [ecx],eax"
"	      0046271b    mov eax,[ebp-64h]"
"	      0046271e    mov eax,[eax+4]"
"	      00462721    mov ecx,[ebp-5Ch]"
"	      00462724    mov [ecx+4],eax"
"	      00462727    mov eax,[ebp-5Ch]"
"	      0046272a    mov ecx,[ebp-64h]"
"	      0046272d    mov ecx,[ecx+4]"
"	      00462730    mov [ecx],eax"
"	      00462732    mov eax,[ebp-5Ch]"
"	      00462735    mov ecx,[ebp-64h]"
"	      00462738    mov [ecx+4],eax"
"	      0046273b    mov eax,[ebp-160h]"
"	      00462741    add dword ptr [eax+433Ch],1"
"	      00462748    mov eax,[ebp-5Ch]"
"	      0046274b    mov [ebp-54h],eax"
"	      0046274e    jmp near ptr 00462753h"
"	      00462753    jmp near ptr 00462758h"
"	      00462758    jmp near ptr 0046275Dh"
);
// LINE 511:
	asm( 
"	      0046275d    mov eax,[ebp-160h]"
"	      00462763    mov dword ptr [eax+36B8h],0"
);
// LINE 513:
	asm( 
"	      0046276d    jmp near ptr 004635FAh"
"	      00462772    cmp dword ptr [ebp+8],2"
"	      00462776    jne near ptr 00462864h"
);
// LINE 514:
	asm( 
"	      0046277c    mov eax,[ebp-160h]"
"	      00462782    mov dword ptr [eax+4340h],0"
"	      0046278c    push 2"
"	      0046278e    lea ecx,[ebp-10h]"
"	      00462791    call 004BD692h"
"	      00462796    mov [ebp-84h],eax"
);
// LINE 515:
	asm( 
"	      0046279c    mov eax,[ebp-160h]"
"	      004627a2    mov eax,[eax+4338h]"
"	      004627a8    mov [ebp-74h],eax"
"	      004627ab    mov eax,[ebp-74h]"
"	      004627ae    mov [ebp-6Ch],eax"
"	      004627b1    jmp near ptr 004627B6h"
"	      004627b6    jmp near ptr 004627BBh"
"	      004627bb    mov eax,[ebp-6Ch]"
"	      004627be    mov [ebp-80h],eax"
"	      004627c1    mov ecx,[ebp-160h]"
"	      004627c7    add ecx,4338h"
"	      004627cd    call 00466CB0h"
"	      004627d2    mov [ebp-78h],eax"
"	      004627d5    jmp near ptr 004627DAh"
"	      004627da    mov eax,[ebp-78h]"
"	      004627dd    add eax,8"
"	      004627e0    mov [ebp-7Ch],eax"
"	      004627e3    jmp near ptr 004627E8h"
"	      004627e8    cmp dword ptr [ebp-7Ch],0"
"	      004627ec    je near ptr 00462806h"
"	      004627f2    mov eax,[ebp-84h]"
"	      004627f8    push eax"
"	      004627f9    mov ecx,[ebp-7Ch]"
"	      004627fc    call 004BD6B5h"
"	      00462801    jmp near ptr 00462806h"
"	      00462806    jmp near ptr 0046280Bh"
"	      0046280b    mov eax,[ebp-80h]"
"	      0046280e    mov ecx,[ebp-78h]"
"	      00462811    mov [ecx],eax"
"	      00462813    mov eax,[ebp-80h]"
"	      00462816    mov eax,[eax+4]"
"	      00462819    mov ecx,[ebp-78h]"
"	      0046281c    mov [ecx+4],eax"
"	      0046281f    mov eax,[ebp-78h]"
"	      00462822    mov ecx,[ebp-80h]"
"	      00462825    mov ecx,[ecx+4]"
"	      00462828    mov [ecx],eax"
"	      0046282a    mov eax,[ebp-78h]"
"	      0046282d    mov ecx,[ebp-80h]"
"	      00462830    mov [ecx+4],eax"
"	      00462833    mov eax,[ebp-160h]"
"	      00462839    add dword ptr [eax+433Ch],1"
"	      00462840    mov eax,[ebp-78h]"
"	      00462843    mov [ebp-70h],eax"
"	      00462846    jmp near ptr 0046284Bh"
"	      0046284b    jmp near ptr 00462850h"
"	      00462850    jmp near ptr 00462855h"
);
// LINE 516:
	asm( 
"	      00462855    mov eax,1"
"	      0046285a    jmp near ptr 00463601h"
);
// LINE 518:
	asm( 
"	      0046285f    jmp near ptr 004635FAh"
"	      00462864    cmp dword ptr [ebp+8],3"
"	      00462868    jne near ptr 00462992h"
);
// LINE 519:
	asm( 
"	      0046286e    mov eax,[ebp-160h]"
"	      00462874    mov dword ptr [eax+4340h],0"
"	      0046287e    push 3"
"	      00462880    lea ecx,[ebp-14h]"
"	      00462883    call 004BD692h"
"	      00462888    mov [ebp-0A0h],eax"
);
// LINE 520:
	asm( 
"	      0046288e    mov eax,[ebp-160h]"
"	      00462894    mov eax,[eax+4338h]"
"	      0046289a    mov [ebp-90h],eax"
"	      004628a0    mov eax,[ebp-90h]"
"	      004628a6    mov [ebp-88h],eax"
"	      004628ac    jmp near ptr 004628B1h"
"	      004628b1    jmp near ptr 004628B6h"
"	      004628b6    mov eax,[ebp-88h]"
"	      004628bc    mov [ebp-9Ch],eax"
"	      004628c2    mov ecx,[ebp-160h]"
"	      004628c8    add ecx,4338h"
"	      004628ce    call 00466CB0h"
"	      004628d3    mov [ebp-94h],eax"
"	      004628d9    jmp near ptr 004628DEh"
"	      004628de    mov eax,[ebp-94h]"
"	      004628e4    add eax,8"
"	      004628e7    mov [ebp-98h],eax"
"	      004628ed    jmp near ptr 004628F2h"
"	      004628f2    cmp dword ptr [ebp-98h],0"
"	      004628f9    je near ptr 00462916h"
"	      004628ff    mov eax,[ebp-0A0h]"
"	      00462905    push eax"
"	      00462906    mov ecx,[ebp-98h]"
"	      0046290c    call 004BD6B5h"
"	      00462911    jmp near ptr 00462916h"
"	      00462916    jmp near ptr 0046291Bh"
"	      0046291b    mov eax,[ebp-9Ch]"
"	      00462921    mov ecx,[ebp-94h]"
"	      00462927    mov [ecx],eax"
"	      00462929    mov eax,[ebp-9Ch]"
"	      0046292f    mov eax,[eax+4]"
"	      00462932    mov ecx,[ebp-94h]"
"	      00462938    mov [ecx+4],eax"
"	      0046293b    mov eax,[ebp-94h]"
"	      00462941    mov ecx,[ebp-9Ch]"
"	      00462947    mov ecx,[ecx+4]"
"	      0046294a    mov [ecx],eax"
"	      0046294c    mov eax,[ebp-94h]"
"	      00462952    mov ecx,[ebp-9Ch]"
"	      00462958    mov [ecx+4],eax"
"	      0046295b    mov eax,[ebp-160h]"
"	      00462961    add dword ptr [eax+433Ch],1"
"	      00462968    mov eax,[ebp-94h]"
"	      0046296e    mov [ebp-8Ch],eax"
"	      00462974    jmp near ptr 00462979h"
"	      00462979    jmp near ptr 0046297Eh"
"	      0046297e    jmp near ptr 00462983h"
);
// LINE 521:
	asm( 
"	      00462983    mov eax,1"
"	      00462988    jmp near ptr 00463601h"
);
// LINE 523:
	asm( 
"	      0046298d    jmp near ptr 004635FAh"
"	      00462992    cmp dword ptr [ebp+8],4"
"	      00462996    jne near ptr 00462B14h"
);
// LINE 524:
	asm( 
"	      0046299c    mov eax,[ebp-160h]"
"	      004629a2    mov dword ptr [eax+4340h],1"
"	      004629ac    push 4"
"	      004629ae    lea ecx,[ebp-18h]"
"	      004629b1    call 004BD692h"
"	      004629b6    mov [ebp-0BCh],eax"
);
// LINE 525:
	asm( 
"	      004629bc    mov eax,[ebp-160h]"
"	      004629c2    mov eax,[eax+4338h]"
"	      004629c8    mov [ebp-0ACh],eax"
"	      004629ce    mov eax,[ebp-0ACh]"
"	      004629d4    mov [ebp-0A4h],eax"
"	      004629da    jmp near ptr 004629DFh"
"	      004629df    jmp near ptr 004629E4h"
"	      004629e4    mov eax,[ebp-0A4h]"
"	      004629ea    mov [ebp-0B8h],eax"
"	      004629f0    mov ecx,[ebp-160h]"
"	      004629f6    add ecx,4338h"
"	      004629fc    call 00466CB0h"
"	      00462a01    mov [ebp-0B0h],eax"
"	      00462a07    jmp near ptr 00462A0Ch"
"	      00462a0c    mov eax,[ebp-0B0h]"
"	      00462a12    add eax,8"
"	      00462a15    mov [ebp-0B4h],eax"
"	      00462a1b    jmp near ptr 00462A20h"
"	      00462a20    cmp dword ptr [ebp-0B4h],0"
"	      00462a27    je near ptr 00462A44h"
"	      00462a2d    mov eax,[ebp-0BCh]"
"	      00462a33    push eax"
"	      00462a34    mov ecx,[ebp-0B4h]"
"	      00462a3a    call 004BD6B5h"
"	      00462a3f    jmp near ptr 00462A44h"
"	      00462a44    jmp near ptr 00462A49h"
"	      00462a49    mov eax,[ebp-0B8h]"
"	      00462a4f    mov ecx,[ebp-0B0h]"
"	      00462a55    mov [ecx],eax"
"	      00462a57    mov eax,[ebp-0B8h]"
"	      00462a5d    mov eax,[eax+4]"
"	      00462a60    mov ecx,[ebp-0B0h]"
"	      00462a66    mov [ecx+4],eax"
"	      00462a69    mov eax,[ebp-0B0h]"
"	      00462a6f    mov ecx,[ebp-0B8h]"
"	      00462a75    mov ecx,[ecx+4]"
"	      00462a78    mov [ecx],eax"
"	      00462a7a    mov eax,[ebp-0B0h]"
"	      00462a80    mov ecx,[ebp-0B8h]"
"	      00462a86    mov [ecx+4],eax"
"	      00462a89    mov eax,[ebp-160h]"
"	      00462a8f    inc dword ptr [eax+433Ch]"
"	      00462a95    mov eax,[ebp-0B0h]"
"	      00462a9b    mov [ebp-0A8h],eax"
"	      00462aa1    jmp near ptr 00462AA6h"
"	      00462aa6    jmp near ptr 00462AABh"
"	      00462aab    jmp near ptr 00462AB0h"
);
// LINE 526:
	asm( 
"	      00462ab0    mov eax,[ebp-160h]"
"	      00462ab6    mov ecx,[ebp-160h]"
"	      00462abc    mov [ecx+64h],eax"
);
// LINE 527:
	asm( 
"	      00462abf    mov eax,[ebp-160h]"
"	      00462ac5    mov eax,[eax+38h]"
"	      00462ac8    mov ecx,[ebp-160h]"
"	      00462ace    mov [ecx+68h],eax"
);
// LINE 528:
	asm( 
"	      00462ad1    mov ecx,[ebp-160h]"
"	      00462ad7    add ecx,58h"
"	      00462ada    call 004BD94Ah"
);
// LINE 529:
	asm( 
"	      00462adf    mov ecx,[ebp-160h]"
"	      00462ae5    add ecx,58h"
"	      00462ae8    call 004BD8F7h"
);
// LINE 530:
	asm( 
"	      00462aed    mov ecx,[ebp-160h]"
"	      00462af3    call 00466968h"
);
// LINE 531:
	asm( 
"	      00462af8    mov eax,[ebp-160h]"
"	      00462afe    mov dword ptr [eax+1Ch],1"
);
// LINE 532:
	asm( 
"	      00462b05    mov eax,1"
"	      00462b0a    jmp near ptr 00463601h"
);
// LINE 534:
	asm( 
"	      00462b0f    jmp near ptr 004635FAh"
"	      00462b14    cmp dword ptr [ebp+8],5"
"	      00462b18    jne near ptr 00462CB5h"
);
// LINE 535:
	asm( 
"	      00462b1e    mov eax,[ebp-160h]"
"	      00462b24    mov dword ptr [eax+4340h],1"
);
// LINE 536:
	asm( 
"	      00462b2e    push 0"
"	      00462b30    mov eax,[ebp-160h]"
"	      00462b36    mov ecx,[ebp-160h]"
"	      00462b3c    mov ecx,[ecx+34h]"
"	      00462b3f    mov edx,[ecx]"
"	      00462b41    mov ecx,[eax+34h]"
"	      00462b44    call dword ptr [edx+70h]"
"	      00462b47    push 5"
"	      00462b49    lea ecx,[ebp-1Ch]"
"	      00462b4c    call 004BD692h"
"	      00462b51    mov [ebp-0D8h],eax"
);
// LINE 537:
	asm( 
"	      00462b57    mov eax,[ebp-160h]"
"	      00462b5d    mov eax,[eax+4338h]"
"	      00462b63    mov [ebp-0C8h],eax"
"	      00462b69    mov eax,[ebp-0C8h]"
"	      00462b6f    mov [ebp-0C0h],eax"
"	      00462b75    jmp near ptr 00462B7Ah"
"	      00462b7a    jmp near ptr 00462B7Fh"
"	      00462b7f    mov eax,[ebp-0C0h]"
"	      00462b85    mov [ebp-0D4h],eax"
"	      00462b8b    mov ecx,[ebp-160h]"
"	      00462b91    add ecx,4338h"
"	      00462b97    call 00466CB0h"
"	      00462b9c    mov [ebp-0CCh],eax"
"	      00462ba2    jmp near ptr 00462BA7h"
"	      00462ba7    mov eax,[ebp-0CCh]"
"	      00462bad    add eax,8"
"	      00462bb0    mov [ebp-0D0h],eax"
"	      00462bb6    jmp near ptr 00462BBBh"
"	      00462bbb    cmp dword ptr [ebp-0D0h],0"
"	      00462bc2    je near ptr 00462BDFh"
"	      00462bc8    mov eax,[ebp-0D8h]"
"	      00462bce    push eax"
"	      00462bcf    mov ecx,[ebp-0D0h]"
"	      00462bd5    call 004BD6B5h"
"	      00462bda    jmp near ptr 00462BDFh"
"	      00462bdf    jmp near ptr 00462BE4h"
"	      00462be4    mov eax,[ebp-0D4h]"
"	      00462bea    mov ecx,[ebp-0CCh]"
"	      00462bf0    mov [ecx],eax"
"	      00462bf2    mov eax,[ebp-0D4h]"
"	      00462bf8    mov eax,[eax+4]"
"	      00462bfb    mov ecx,[ebp-0CCh]"
"	      00462c01    mov [ecx+4],eax"
"	      00462c04    mov eax,[ebp-0CCh]"
"	      00462c0a    mov ecx,[ebp-0D4h]"
"	      00462c10    mov ecx,[ecx+4]"
"	      00462c13    mov [ecx],eax"
"	      00462c15    mov eax,[ebp-0CCh]"
"	      00462c1b    mov ecx,[ebp-0D4h]"
"	      00462c21    mov [ecx+4],eax"
"	      00462c24    mov eax,[ebp-160h]"
"	      00462c2a    inc dword ptr [eax+433Ch]"
"	      00462c30    mov eax,[ebp-0CCh]"
"	      00462c36    mov [ebp-0C4h],eax"
"	      00462c3c    jmp near ptr 00462C41h"
"	      00462c41    jmp near ptr 00462C46h"
"	      00462c46    jmp near ptr 00462C4Bh"
);
// LINE 538:
	asm( 
"	      00462c4b    mov eax,[ebp-160h]"
"	      00462c51    mov ecx,[ebp-160h]"
"	      00462c57    mov [ecx+7Ch],eax"
);
// LINE 539:
	asm( 
"	      00462c5a    mov eax,[ebp-160h]"
"	      00462c60    mov eax,[eax+38h]"
"	      00462c63    mov ecx,[ebp-160h]"
"	      00462c69    mov [ecx+80h],eax"
);
// LINE 540:
	asm( 
"	      00462c6f    mov ecx,[ebp-160h]"
"	      00462c75    add ecx,70h"
"	      00462c78    call 004BDD3Bh"
);
// LINE 541:
	asm( 
"	      00462c7d    mov ecx,[ebp-160h]"
"	      00462c83    add ecx,70h"
"	      00462c86    call 004BDE8Bh"
);
// LINE 542:
	asm( 
"	      00462c8b    mov ecx,[ebp-160h]"
"	      00462c91    add ecx,70h"
"	      00462c94    call 004BDE38h"
);
// LINE 543:
	asm( 
"	      00462c99    mov eax,[ebp-160h]"
"	      00462c9f    mov dword ptr [eax+1Ch],1"
);
// LINE 544:
	asm( 
"	      00462ca6    mov eax,1"
"	      00462cab    jmp near ptr 00463601h"
);
// LINE 547:
	asm( 
"	      00462cb0    jmp near ptr 004635FAh"
"	      00462cb5    cmp dword ptr [ebp+8],6"
"	      00462cb9    jne near ptr 00462FFEh"
);
// LINE 549:
	asm( 
"	      00462cbf    mov dword ptr [ebp-4],0"
);
// LINE 551:
	asm( 
"	      00462cc6    mov eax,[ebp-160h]"
"	      00462ccc    mov dword ptr [eax+28h],0"
);
// LINE 552:
	asm( 
"	      00462cd3    mov eax,[ebp-160h]"
"	      00462cd9    mov dword ptr [eax+4340h],1"
);
// LINE 553:
	asm( 
"	      00462ce3    jmp near ptr 00462CE8h"
"	      00462ce8    cmp dword ptr ds:[604498h],0"
"	      00462cef    je near ptr 00462D01h"
);
// LINE 554:
	asm( 
"	      00462cf5    push 1"
"	      00462cf7    mov ecx,604480h"
"	      00462cfc    call 00437EE7h"
);
// LINE 555:
	asm( 
"	      00462d01    push 2Eh"
"	      00462d03    mov eax,[ebp-160h]"
"	      00462d09    mov ecx,[ebp-160h]"
"	      00462d0f    mov ecx,[ecx+34h]"
"	      00462d12    mov edx,[ecx]"
"	      00462d14    mov ecx,[eax+34h]"
"	      00462d17    call dword ptr [edx+70h]"
"	      00462d1a    push 6"
"	      00462d1c    lea ecx,[ebp-20h]"
"	      00462d1f    call 004BD692h"
"	      00462d24    mov [ebp-0F4h],eax"
);
// LINE 556:
	asm( 
"	      00462d2a    mov eax,[ebp-160h]"
"	      00462d30    mov eax,[eax+4338h]"
"	      00462d36    mov [ebp-0E4h],eax"
"	      00462d3c    mov eax,[ebp-0E4h]"
"	      00462d42    mov [ebp-0DCh],eax"
"	      00462d48    jmp near ptr 00462D4Dh"
"	      00462d4d    jmp near ptr 00462D52h"
"	      00462d52    mov eax,[ebp-0DCh]"
"	      00462d58    mov [ebp-0F0h],eax"
"	      00462d5e    mov ecx,[ebp-160h]"
"	      00462d64    add ecx,4338h"
"	      00462d6a    call 00466CB0h"
"	      00462d6f    mov [ebp-0E8h],eax"
"	      00462d75    jmp near ptr 00462D7Ah"
"	      00462d7a    mov eax,[ebp-0E8h]"
"	      00462d80    add eax,8"
"	      00462d83    mov [ebp-0ECh],eax"
"	      00462d89    jmp near ptr 00462D8Eh"
"	      00462d8e    cmp dword ptr [ebp-0ECh],0"
"	      00462d95    je near ptr 00462DB2h"
"	      00462d9b    mov eax,[ebp-0F4h]"
"	      00462da1    push eax"
"	      00462da2    mov ecx,[ebp-0ECh]"
"	      00462da8    call 004BD6B5h"
"	      00462dad    jmp near ptr 00462DB2h"
"	      00462db2    jmp near ptr 00462DB7h"
"	      00462db7    mov eax,[ebp-0F0h]"
"	      00462dbd    mov ecx,[ebp-0E8h]"
"	      00462dc3    mov [ecx],eax"
"	      00462dc5    mov eax,[ebp-0F0h]"
"	      00462dcb    mov eax,[eax+4]"
"	      00462dce    mov ecx,[ebp-0E8h]"
"	      00462dd4    mov [ecx+4],eax"
"	      00462dd7    mov eax,[ebp-0E8h]"
"	      00462ddd    mov ecx,[ebp-0F0h]"
"	      00462de3    mov ecx,[ecx+4]"
"	      00462de6    mov [ecx],eax"
"	      00462de8    mov eax,[ebp-0E8h]"
"	      00462dee    mov ecx,[ebp-0F0h]"
"	      00462df4    mov [ecx+4],eax"
"	      00462df7    mov eax,[ebp-160h]"
"	      00462dfd    inc dword ptr [eax+433Ch]"
"	      00462e03    mov eax,[ebp-0E8h]"
"	      00462e09    mov [ebp-0E0h],eax"
"	      00462e0f    jmp near ptr 00462E14h"
"	      00462e14    jmp near ptr 00462E19h"
"	      00462e19    jmp near ptr 00462E1Eh"
);
// LINE 557:
	asm( 
"	      00462e1e    mov eax,[ebp-160h]"
"	      00462e24    mov ecx,[ebp-160h]"
"	      00462e2a    mov [ecx+0ACh],eax"
);
// LINE 558:
	asm( 
"	      00462e30    mov eax,[ebp-160h]"
"	      00462e36    mov eax,[eax+38h]"
"	      00462e39    mov ecx,[ebp-160h]"
"	      00462e3f    mov [ecx+0B0h],eax"
);
// LINE 559:
	asm( 
"	      00462e45    mov ecx,[ebp-160h]"
"	      00462e4b    add ecx,0A0h"
"	      00462e51    call 004BE898h"
);
// LINE 560:
	asm( 
"	      00462e56    mov ecx,[ebp-160h]"
"	      00462e5c    add ecx,0A0h"
"	      00462e62    call 004BE305h"
);
// LINE 561:
	asm( 
"	      00462e67    mov ecx,[ebp-160h]"
"	      00462e6d    add ecx,0A0h"
"	      00462e73    call 004BFFDAh"
);
// LINE 565:
	asm( 
"	      00462e78    cmp dword ptr ds:[5B4794h],0"
"	      00462e7f    je near ptr 00462E94h"
);
// LINE 566:
	asm( 
"	      00462e85    push 1"
"	      00462e87    call 004EB5CAh"
"	      00462e8c    add esp,4"
);
// LINE 567:
	asm( 
"	      00462e8f    jmp near ptr 00462EFDh"
);
// LINE 568:
	asm( 
"	      00462e94    mov dword ptr [ebp-4],1"
);
// LINE 569:
	asm( 
"	      00462e9b    mov dword ptr ds:[5B4794h],1"
);
// LINE 570:
	asm( 
"	      00462ea5    mov ecx,[ebp-160h]"
"	      00462eab    call 004BBB17h"
"	      00462eb0    test eax,eax"
"	      00462eb2    jne near ptr 00462EFDh"
);
// LINE 572:
	asm( 
"	      00462eb8    mov eax,[ebp-160h]"
"	      00462ebe    mov dword ptr [eax+0B4h],1"
);
// LINE 576:
	asm( 
"	      00462ec8    mov eax,[ebp-160h]"
"	      00462ece    mov ecx,[ebp-160h]"
"	      00462ed4    mov ecx,[ecx+38h]"
"	      00462ed7    mov edx,[ecx]"
"	      00462ed9    mov ecx,[eax+38h]"
"	      00462edc    call dword ptr [edx+64h]"
);
// LINE 577:
	asm( 
"	      00462edf    push 1"
"	      00462ee1    push 1Fh"
"	      00462ee3    push 7DBh"
"	      00462ee8    mov ecx,[ebp-160h]"
"	      00462eee    call 0043F2B9h"
);
// LINE 578:
	asm( 
"	      00462ef3    mov eax,1"
"	      00462ef8    jmp near ptr 00463601h"
);
// LINE 585:
	asm( 
"	      00462efd    mov eax,[ebp-160h]"
"	      00462f03    cmp dword ptr [eax+20h],0"
"	      00462f07    je near ptr 00462F64h"
);
// LINE 586:
	asm( 
"	      00462f0d    mov eax,[ebp-160h]"
"	      00462f13    mov dword ptr [eax+20h],0"
);
// LINE 587:
	asm( 
"	      00462f1a    mov eax,[ebp-160h]"
"	      00462f20    add eax,4174h"
"	      00462f25    push eax"
"	      00462f26    mov ecx,606E78h"
"	      00462f2b    call 004EC1DDh"
);
// LINE 588:
	asm( 
"	      00462f30    mov eax,[ebp-160h]"
"	      00462f36    add eax,4174h"
"	      00462f3b    push eax"
"	      00462f3c    call 004EB877h"
"	      00462f41    add esp,4"
);
// LINE 589:
	asm( 
"	      00462f44    mov ecx,[ebp-160h]"
"	      00462f4a    mov eax,[ebp-160h]"
"	      00462f50    mov eax,[eax+4174h]"
"	      00462f56    add ecx,4174h"
"	      00462f5c    call dword ptr [eax+10h]"
);
// LINE 591:
	asm( 
"	      00462f5f    jmp near ptr 00462F89h"
);
// LINE 592:
	asm( 
"	      00462f64    push 0"
"	      00462f66    call 004EB877h"
"	      00462f6b    add esp,4"
);
// LINE 593:
	asm( 
"	      00462f6e    mov ecx,[ebp-160h]"
"	      00462f74    mov eax,[ebp-160h]"
"	      00462f7a    mov eax,[eax+4174h]"
"	      00462f80    add ecx,4174h"
"	      00462f86    call dword ptr [eax+10h]"
);
// LINE 599:
	asm( 
"	      00462f89    cmp dword ptr ds:[5992A4h],0"
"	      00462f90    jne near ptr 00462FCDh"
);
// LINE 600:
	asm( 
"	      00462f96    mov dword ptr ds:[5992A4h],1"
);
// LINE 601:
	asm( 
"	      00462fa0    mov eax,[ebp-160h]"
"	      00462fa6    mov eax,[eax]"
"	      00462fa8    mov ecx,[ebp-160h]"
"	      00462fae    call dword ptr [eax+20h]"
"	      00462fb1    test eax,eax"
"	      00462fb3    je near ptr 00462FCDh"
);
// LINE 602:
	asm( 
"	      00462fb9    push 1"
"	      00462fbb    push 1Eh"
"	      00462fbd    push 7DAh"
"	      00462fc2    mov ecx,[ebp-160h]"
"	      00462fc8    call 0043F2B9h"
);
// LINE 604:
	asm( 
"	      00462fcd    cmp dword ptr [ebp-4],0"
"	      00462fd1    je near ptr 00462FE2h"
);
// LINE 605:
	asm( 
"	      00462fd7    mov ecx,[ebp-160h]"
"	      00462fdd    call 00440B3Fh"
);
// LINE 606:
	asm( 
"	      00462fe2    mov eax,[ebp-160h]"
"	      00462fe8    mov dword ptr [eax+1Ch],1"
);
// LINE 607:
	asm( 
"	      00462fef    mov eax,1"
"	      00462ff4    jmp near ptr 00463601h"
);
// LINE 609:
	asm( 
"	      00462ff9    jmp near ptr 004635FAh"
"	      00462ffe    cmp dword ptr [ebp+8],7"
"	      00463002    jne near ptr 0046319Ah"
);
// LINE 610:
	asm( 
"	      00463008    mov eax,[ebp-160h]"
"	      0046300e    mov dword ptr [eax+4340h],1"
);
// LINE 611:
	asm( 
"	      00463018    push 0"
"	      0046301a    mov eax,[ebp-160h]"
"	      00463020    mov ecx,[ebp-160h]"
"	      00463026    mov ecx,[ecx+34h]"
"	      00463029    mov edx,[ecx]"
"	      0046302b    mov ecx,[eax+34h]"
"	      0046302e    call dword ptr [edx+70h]"
"	      00463031    push 7"
"	      00463033    lea ecx,[ebp-24h]"
"	      00463036    call 004BD692h"
"	      0046303b    mov [ebp-110h],eax"
);
// LINE 612:
	asm( 
"	      00463041    mov eax,[ebp-160h]"
"	      00463047    mov eax,[eax+4338h]"
"	      0046304d    mov [ebp-100h],eax"
"	      00463053    mov eax,[ebp-100h]"
"	      00463059    mov [ebp-0F8h],eax"
"	      0046305f    jmp near ptr 00463064h"
"	      00463064    jmp near ptr 00463069h"
"	      00463069    mov eax,[ebp-0F8h]"
"	      0046306f    mov [ebp-10Ch],eax"
"	      00463075    mov ecx,[ebp-160h]"
"	      0046307b    add ecx,4338h"
"	      00463081    call 00466CB0h"
"	      00463086    mov [ebp-104h],eax"
"	      0046308c    jmp near ptr 00463091h"
"	      00463091    mov eax,[ebp-104h]"
"	      00463097    add eax,8"
"	      0046309a    mov [ebp-108h],eax"
"	      004630a0    jmp near ptr 004630A5h"
"	      004630a5    cmp dword ptr [ebp-108h],0"
"	      004630ac    je near ptr 004630C9h"
"	      004630b2    mov eax,[ebp-110h]"
"	      004630b8    push eax"
"	      004630b9    mov ecx,[ebp-108h]"
"	      004630bf    call 004BD6B5h"
"	      004630c4    jmp near ptr 004630C9h"
"	      004630c9    jmp near ptr 004630CEh"
"	      004630ce    mov eax,[ebp-10Ch]"
"	      004630d4    mov ecx,[ebp-104h]"
"	      004630da    mov [ecx],eax"
"	      004630dc    mov eax,[ebp-10Ch]"
"	      004630e2    mov eax,[eax+4]"
"	      004630e5    mov ecx,[ebp-104h]"
"	      004630eb    mov [ecx+4],eax"
"	      004630ee    mov eax,[ebp-104h]"
"	      004630f4    mov ecx,[ebp-10Ch]"
"	      004630fa    mov ecx,[ecx+4]"
"	      004630fd    mov [ecx],eax"
"	      004630ff    mov eax,[ebp-104h]"
"	      00463105    mov ecx,[ebp-10Ch]"
"	      0046310b    mov [ecx+4],eax"
"	      0046310e    mov eax,[ebp-160h]"
"	      00463114    inc dword ptr [eax+433Ch]"
"	      0046311a    mov eax,[ebp-104h]"
"	      00463120    mov [ebp-0FCh],eax"
"	      00463126    jmp near ptr 0046312Bh"
"	      0046312b    jmp near ptr 00463130h"
"	      00463130    jmp near ptr 00463135h"
);
// LINE 613:
	asm( 
"	      00463135    mov eax,[ebp-160h]"
"	      0046313b    mov ecx,[ebp-160h]"
"	      00463141    mov [ecx+0BC4h],eax"
);
// LINE 614:
	asm( 
"	      00463147    mov eax,[ebp-160h]"
"	      0046314d    mov eax,[eax+38h]"
"	      00463150    mov ecx,[ebp-160h]"
"	      00463156    mov [ecx+0BC8h],eax"
);
// LINE 615:
	asm( 
"	      0046315c    mov ecx,[ebp-160h]"
"	      00463162    add ecx,0BB8h"
"	      00463168    call 004C1317h"
);
// LINE 616:
	asm( 
"	      0046316d    mov ecx,[ebp-160h]"
"	      00463173    add ecx,0BB8h"
"	      00463179    call 004C1542h"
);
// LINE 617:
	asm( 
"	      0046317e    mov eax,[ebp-160h]"
"	      00463184    mov dword ptr [eax+1Ch],1"
);
// LINE 618:
	asm( 
"	      0046318b    mov eax,1"
"	      00463190    jmp near ptr 00463601h"
);
// LINE 621:
	asm( 
"	      00463195    jmp near ptr 004635FAh"
"	      0046319a    cmp dword ptr [ebp+8],8"
"	      0046319e    jne near ptr 00463329h"
);
// LINE 622:
	asm( 
"	      004631a4    mov eax,[ebp-160h]"
"	      004631aa    mov dword ptr [eax+4340h],1"
);
// LINE 623:
	asm( 
"	      004631b4    push 0"
"	      004631b6    mov eax,[ebp-160h]"
"	      004631bc    mov ecx,[ebp-160h]"
"	      004631c2    mov ecx,[ecx+34h]"
"	      004631c5    mov edx,[ecx]"
"	      004631c7    mov ecx,[eax+34h]"
"	      004631ca    call dword ptr [edx+70h]"
"	      004631cd    push 8"
"	      004631cf    lea ecx,[ebp-28h]"
"	      004631d2    call 004BD692h"
"	      004631d7    mov [ebp-12Ch],eax"
);
// LINE 624:
	asm( 
"	      004631dd    mov eax,[ebp-160h]"
"	      004631e3    mov eax,[eax+4338h]"
"	      004631e9    mov [ebp-11Ch],eax"
"	      004631ef    mov eax,[ebp-11Ch]"
"	      004631f5    mov [ebp-114h],eax"
"	      004631fb    jmp near ptr 00463200h"
"	      00463200    jmp near ptr 00463205h"
"	      00463205    mov eax,[ebp-114h]"
"	      0046320b    mov [ebp-128h],eax"
"	      00463211    mov ecx,[ebp-160h]"
"	      00463217    add ecx,4338h"
"	      0046321d    call 00466CB0h"
"	      00463222    mov [ebp-120h],eax"
"	      00463228    jmp near ptr 0046322Dh"
"	      0046322d    mov eax,[ebp-120h]"
"	      00463233    add eax,8"
"	      00463236    mov [ebp-124h],eax"
"	      0046323c    jmp near ptr 00463241h"
"	      00463241    cmp dword ptr [ebp-124h],0"
"	      00463248    je near ptr 00463265h"
"	      0046324e    mov eax,[ebp-12Ch]"
"	      00463254    push eax"
"	      00463255    mov ecx,[ebp-124h]"
"	      0046325b    call 004BD6B5h"
"	      00463260    jmp near ptr 00463265h"
"	      00463265    jmp near ptr 0046326Ah"
"	      0046326a    mov eax,[ebp-128h]"
"	      00463270    mov ecx,[ebp-120h]"
"	      00463276    mov [ecx],eax"
"	      00463278    mov eax,[ebp-128h]"
"	      0046327e    mov eax,[eax+4]"
"	      00463281    mov ecx,[ebp-120h]"
"	      00463287    mov [ecx+4],eax"
"	      0046328a    mov eax,[ebp-120h]"
"	      00463290    mov ecx,[ebp-128h]"
"	      00463296    mov ecx,[ecx+4]"
"	      00463299    mov [ecx],eax"
"	      0046329b    mov eax,[ebp-120h]"
"	      004632a1    mov ecx,[ebp-128h]"
"	      004632a7    mov [ecx+4],eax"
"	      004632aa    mov eax,[ebp-160h]"
"	      004632b0    inc dword ptr [eax+433Ch]"
"	      004632b6    mov eax,[ebp-120h]"
"	      004632bc    mov [ebp-118h],eax"
"	      004632c2    jmp near ptr 004632C7h"
"	      004632c7    jmp near ptr 004632CCh"
"	      004632cc    jmp near ptr 004632D1h"
);
// LINE 625:
	asm( 
"	      004632d1    mov eax,[ebp-160h]"
"	      004632d7    mov ecx,[ebp-160h]"
"	      004632dd    mov [ecx+1684h],eax"
);
// LINE 626:
	asm( 
"	      004632e3    mov eax,[ebp-160h]"
"	      004632e9    mov eax,[eax+38h]"
"	      004632ec    mov ecx,[ebp-160h]"
"	      004632f2    mov [ecx+1688h],eax"
);
// LINE 627:
	asm( 
"	      004632f8    mov ecx,[ebp-160h]"
"	      004632fe    add ecx,1678h"
"	      00463304    call 004C1B8Dh"
);
// LINE 628:
	asm( 
"	      00463309    mov ecx,[ebp-160h]"
"	      0046330f    add ecx,1678h"
"	      00463315    call 004C1DB8h"
);
// LINE 629:
	asm( 
"	      0046331a    mov eax,1"
"	      0046331f    jmp near ptr 00463601h"
);
// LINE 631:
	asm( 
"	      00463324    jmp near ptr 004635FAh"
"	      00463329    cmp dword ptr [ebp+8],9"
"	      0046332d    jne near ptr 00463494h"
);
// LINE 632:
	asm( 
"	      00463333    mov eax,[ebp-160h]"
"	      00463339    mov dword ptr [eax+4340h],1"
);
// LINE 633:
	asm( 
"	      00463343    push 0"
"	      00463345    mov eax,[ebp-160h]"
"	      0046334b    mov ecx,[ebp-160h]"
"	      00463351    mov ecx,[ecx+34h]"
"	      00463354    mov edx,[ecx]"
"	      00463356    mov ecx,[eax+34h]"
"	      00463359    call dword ptr [edx+70h]"
"	      0046335c    push 9"
"	      0046335e    lea ecx,[ebp-2Ch]"
"	      00463361    call 004BD692h"
"	      00463366    mov [ebp-144h],eax"
);
// LINE 634:
	asm( 
"	      0046336c    mov eax,[ebp-160h]"
"	      00463372    mov eax,[eax+4338h]"
"	      00463378    mov [ebp-138h],eax"
"	      0046337e    mov eax,[ebp-138h]"
"	      00463384    mov [ebp-130h],eax"
"	      0046338a    jmp near ptr 0046338Fh"
"	      0046338f    jmp near ptr 00463394h"
"	      00463394    mov eax,[ebp-130h]"
"	      0046339a    mov [ebp-140h],eax"
"	      004633a0    mov ecx,[ebp-160h]"
"	      004633a6    add ecx,4338h"
"	      004633ac    call 00466CB0h"
"	      004633b1    mov [ebp-13Ch],eax"
"	      004633b7    jmp near ptr 004633BCh"
"	      004633bc    mov eax,[ebp-144h]"
"	      004633c2    push eax"
"	      004633c3    mov eax,[ebp-13Ch]"
"	      004633c9    add eax,8"
"	      004633cc    push eax"
"	      004633cd    call 00466F30h"
"	      004633d2    add esp,8"
"	      004633d5    mov eax,[ebp-140h]"
"	      004633db    mov ecx,[ebp-13Ch]"
"	      004633e1    mov [ecx],eax"
"	      004633e3    mov eax,[ebp-140h]"
"	      004633e9    mov eax,[eax+4]"
"	      004633ec    mov ecx,[ebp-13Ch]"
"	      004633f2    mov [ecx+4],eax"
"	      004633f5    mov eax,[ebp-13Ch]"
"	      004633fb    mov ecx,[ebp-140h]"
"	      00463401    mov ecx,[ecx+4]"
"	      00463404    mov [ecx],eax"
"	      00463406    mov eax,[ebp-13Ch]"
"	      0046340c    mov ecx,[ebp-140h]"
"	      00463412    mov [ecx+4],eax"
"	      00463415    mov eax,[ebp-160h]"
"	      0046341b    inc dword ptr [eax+433Ch]"
"	      00463421    mov eax,[ebp-13Ch]"
"	      00463427    mov [ebp-134h],eax"
"	      0046342d    jmp near ptr 00463432h"
"	      00463432    jmp near ptr 00463437h"
"	      00463437    jmp near ptr 0046343Ch"
);
// LINE 635:
	asm( 
"	      0046343c    mov eax,[ebp-160h]"
"	      00463442    mov ecx,[ebp-160h]"
"	      00463448    mov [ecx+2144h],eax"
);
// LINE 636:
	asm( 
"	      0046344e    mov eax,[ebp-160h]"
"	      00463454    mov eax,[eax+38h]"
"	      00463457    mov ecx,[ebp-160h]"
"	      0046345d    mov [ecx+2148h],eax"
);
// LINE 637:
	asm( 
"	      00463463    mov ecx,[ebp-160h]"
"	      00463469    add ecx,2138h"
"	      0046346f    call 004C2515h"
);
// LINE 638:
	asm( 
"	      00463474    mov ecx,[ebp-160h]"
"	      0046347a    add ecx,2138h"
"	      00463480    call 004C2740h"
);
// LINE 639:
	asm( 
"	      00463485    mov eax,1"
"	      0046348a    jmp near ptr 00463601h"
);
// LINE 641:
	asm( 
"	      0046348f    jmp near ptr 004635FAh"
"	      00463494    cmp dword ptr [ebp+8],0Bh"
"	      00463498    jne near ptr 004635FAh"
);
// LINE 642:
	asm( 
"	      0046349e    mov eax,[ebp-160h]"
"	      004634a4    mov dword ptr [eax+4340h],1"
);
// LINE 643:
	asm( 
"	      004634ae    push 0"
"	      004634b0    mov eax,[ebp-160h]"
"	      004634b6    mov ecx,[ebp-160h]"
"	      004634bc    mov ecx,[ecx+34h]"
"	      004634bf    mov edx,[ecx]"
"	      004634c1    mov ecx,[eax+34h]"
"	      004634c4    call dword ptr [edx+70h]"
"	      004634c7    push 0Bh"
"	      004634c9    lea ecx,[ebp-30h]"
"	      004634cc    call 004BD692h"
"	      004634d1    mov [ebp-15Ch],eax"
);
// LINE 644:
	asm( 
"	      004634d7    mov eax,[ebp-160h]"
"	      004634dd    mov eax,[eax+4338h]"
"	      004634e3    mov [ebp-150h],eax"
"	      004634e9    mov eax,[ebp-150h]"
"	      004634ef    mov [ebp-148h],eax"
"	      004634f5    jmp near ptr 004634FAh"
"	      004634fa    jmp near ptr 004634FFh"
"	      004634ff    mov eax,[ebp-148h]"
"	      00463505    mov [ebp-158h],eax"
"	      0046350b    mov ecx,[ebp-160h]"
"	      00463511    add ecx,4338h"
"	      00463517    call 00466CB0h"
"	      0046351c    mov [ebp-154h],eax"
"	      00463522    jmp near ptr 00463527h"
"	      00463527    mov eax,[ebp-15Ch]"
"	      0046352d    push eax"
"	      0046352e    mov eax,[ebp-154h]"
"	      00463534    add eax,8"
"	      00463537    push eax"
"	      00463538    call 00466F30h"
"	      0046353d    add esp,8"
"	      00463540    mov eax,[ebp-158h]"
"	      00463546    mov ecx,[ebp-154h]"
"	      0046354c    mov [ecx],eax"
"	      0046354e    mov eax,[ebp-158h]"
"	      00463554    mov eax,[eax+4]"
"	      00463557    mov ecx,[ebp-154h]"
"	      0046355d    mov [ecx+4],eax"
"	      00463560    mov eax,[ebp-154h]"
"	      00463566    mov ecx,[ebp-158h]"
"	      0046356c    mov ecx,[ecx+4]"
"	      0046356f    mov [ecx],eax"
"	      00463571    mov eax,[ebp-154h]"
"	      00463577    mov ecx,[ebp-158h]"
"	      0046357d    mov [ecx+4],eax"
"	      00463580    mov eax,[ebp-160h]"
"	      00463586    inc dword ptr [eax+433Ch]"
"	      0046358c    mov eax,[ebp-154h]"
"	      00463592    mov [ebp-14Ch],eax"
"	      00463598    jmp near ptr 0046359Dh"
"	      0046359d    jmp near ptr 004635A2h"
"	      004635a2    jmp near ptr 004635A7h"
);
// LINE 645:
	asm( 
"	      004635a7    mov eax,[ebp-160h]"
"	      004635ad    mov ecx,[ebp-160h]"
"	      004635b3    mov [ecx+2C04h],eax"
);
// LINE 646:
	asm( 
"	      004635b9    mov eax,[ebp-160h]"
"	      004635bf    mov eax,[eax+38h]"
"	      004635c2    mov ecx,[ebp-160h]"
"	      004635c8    mov [ecx+2C08h],eax"
);
// LINE 647:
	asm( 
"	      004635ce    mov ecx,[ebp-160h]"
"	      004635d4    add ecx,2BF8h"
"	      004635da    call 004C2E9Dh"
);
// LINE 648:
	asm( 
"	      004635df    mov ecx,[ebp-160h]"
"	      004635e5    add ecx,2BF8h"
"	      004635eb    call 004C30C8h"
);
// LINE 649:
	asm( 
"	      004635f0    mov eax,1"
"	      004635f5    jmp near ptr 00463601h"
);
// LINE 651:
	asm( 
"	      004635fa    xor eax,eax"
"	      004635fc    jmp near ptr 00463601h"
);
// LINE 652:
	asm( 
"	      00463601    pop edi"
"	      00463602    pop esi"
"	      00463603    pop ebx"
"	      00463604    leave"
"	      00463605    ret 4"
);
}

// FUNCTION: COPTER_D 0x00463608
public: virtual int __thiscall CGameApp::ExitMode(int) {
// LINE 660:
	asm( 
"	      00463608    push ebp"
"	      00463609    mov ebp,esp"
"	      0046360b    sub esp,70h"
"	      0046360e    push ebx"
"	      0046360f    push esi"
"	      00463610    push edi"
"	      00463611    mov [ebp-70h],ecx"
);
// LINE 661:
	asm( 
"	      00463614    cmp dword ptr [ebp+8],0"
"	      00463618    jne near ptr 0046366Eh"
);
// LINE 662:
	asm( 
"	      0046361e    mov eax,[ebp-70h]"
"	      00463621    mov eax,[eax+4338h]"
"	      00463627    mov [ebp-10h],eax"
"	      0046362a    mov eax,[ebp-10h]"
"	      0046362d    mov [ebp-0Ch],eax"
"	      00463630    jmp near ptr 00463635h"
"	      00463635    jmp near ptr 0046363Ah"
"	      0046363a    mov eax,[ebp-0Ch]"
"	      0046363d    mov eax,[eax+4]"
"	      00463640    mov [ebp-0Ch],eax"
"	      00463643    jmp near ptr 00463648h"
"	      00463648    mov eax,[ebp-0Ch]"
"	      0046364b    push eax"
"	      0046364c    mov ecx,[ebp-70h]"
"	      0046364f    add ecx,4338h"
"	      00463655    call 00466ED0h"
"	      0046365a    jmp near ptr 0046365Fh"
);
// LINE 663:
	asm( 
"	      0046365f    mov eax,1"
"	      00463664    jmp near ptr 00463BF2h"
);
// LINE 665:
	asm( 
"	      00463669    jmp near ptr 00463BEBh"
"	      0046366e    cmp dword ptr [ebp+8],2"
"	      00463672    jne near ptr 00463706h"
);
// LINE 666:
	asm( 
"	      00463678    mov eax,[ebp-70h]"
"	      0046367b    mov eax,[eax+4338h]"
"	      00463681    mov [ebp-18h],eax"
"	      00463684    mov eax,[ebp-18h]"
"	      00463687    mov [ebp-14h],eax"
"	      0046368a    jmp near ptr 0046368Fh"
"	      0046368f    jmp near ptr 00463694h"
"	      00463694    mov eax,[ebp-14h]"
"	      00463697    mov eax,[eax+4]"
"	      0046369a    mov [ebp-14h],eax"
"	      0046369d    jmp near ptr 004636A2h"
"	      004636a2    mov eax,[ebp-14h]"
"	      004636a5    mov [ebp-1Ch],eax"
"	      004636a8    mov eax,[ebp-1Ch]"
"	      004636ab    mov eax,[eax]"
"	      004636ad    mov ecx,[ebp-1Ch]"
"	      004636b0    mov ecx,[ecx+4]"
"	      004636b3    mov [ecx],eax"
"	      004636b5    mov eax,[ebp-1Ch]"
"	      004636b8    mov eax,[eax+4]"
"	      004636bb    mov ecx,[ebp-1Ch]"
"	      004636be    mov ecx,[ecx]"
"	      004636c0    mov [ecx+4],eax"
"	      004636c3    jmp near ptr 004636C8h"
"	      004636c8    jmp near ptr 004636CDh"
"	      004636cd    mov eax,ds:[59930Ch]"
"	      004636d2    mov ecx,[ebp-1Ch]"
"	      004636d5    mov [ecx],eax"
"	      004636d7    mov eax,[ebp-1Ch]"
"	      004636da    mov ds:[59930Ch],eax"
"	      004636df    jmp near ptr 004636E4h"
"	      004636e4    mov eax,[ebp-70h]"
"	      004636e7    dec dword ptr [eax+433Ch]"
"	      004636ed    jmp near ptr 004636F2h"
"	      004636f2    jmp near ptr 004636F7h"
);
// LINE 667:
	asm( 
"	      004636f7    mov eax,1"
"	      004636fc    jmp near ptr 00463BF2h"
);
// LINE 669:
	asm( 
"	      00463701    jmp near ptr 00463BEBh"
"	      00463706    cmp dword ptr [ebp+8],3"
"	      0046370a    jne near ptr 004637BDh"
);
// LINE 672:
	asm( 
"	      00463710    mov eax,[ebp-70h]"
"	      00463713    cmp dword ptr [eax+42C0h],0"
"	      0046371a    je near ptr 0046375Ah"
);
// LINE 673:
	asm( 
"	      00463720    mov eax,[ebp-70h]"
"	      00463723    mov eax,[eax+42C0h]"
"	      00463729    mov [ebp-8],eax"
"	      0046372c    mov eax,[ebp-8]"
"	      0046372f    mov [ebp-4],eax"
"	      00463732    cmp dword ptr [ebp-4],0"
"	      00463736    je near ptr 0046374Dh"
"	      0046373c    push 1"
"	      0046373e    mov eax,[ebp-4]"
"	      00463741    mov eax,[eax]"
"	      00463743    mov ecx,[ebp-4]"
"	      00463746    call dword ptr [eax]"
"	      00463748    jmp near ptr 0046374Dh"
);
// LINE 674:
	asm( 
"	      0046374d    mov eax,[ebp-70h]"
"	      00463750    mov dword ptr [eax+42C0h],0"
);
// LINE 678:
	asm( 
"	      0046375a    push 0"
"	      0046375c    mov eax,[ebp-70h]"
"	      0046375f    mov ecx,[ebp-70h]"
"	      00463762    mov ecx,[ecx+34h]"
"	      00463765    mov edx,[ecx]"
"	      00463767    mov ecx,[eax+34h]"
"	      0046376a    call dword ptr [edx+70h]"
);
// LINE 680:
	asm( 
"	      0046376d    mov eax,[ebp-70h]"
"	      00463770    mov eax,[eax+4338h]"
"	      00463776    mov [ebp-24h],eax"
"	      00463779    mov eax,[ebp-24h]"
"	      0046377c    mov [ebp-20h],eax"
"	      0046377f    jmp near ptr 00463784h"
"	      00463784    jmp near ptr 00463789h"
"	      00463789    mov eax,[ebp-20h]"
"	      0046378c    mov eax,[eax+4]"
"	      0046378f    mov [ebp-20h],eax"
"	      00463792    jmp near ptr 00463797h"
"	      00463797    mov eax,[ebp-20h]"
"	      0046379a    push eax"
"	      0046379b    mov ecx,[ebp-70h]"
"	      0046379e    add ecx,4338h"
"	      004637a4    call 00466ED0h"
"	      004637a9    jmp near ptr 004637AEh"
);
// LINE 681:
	asm( 
"	      004637ae    mov eax,1"
"	      004637b3    jmp near ptr 00463BF2h"
);
// LINE 683:
	asm( 
"	      004637b8    jmp near ptr 00463BEBh"
"	      004637bd    cmp dword ptr [ebp+8],4"
"	      004637c1    jne near ptr 0046387Bh"
);
// LINE 689:
	asm( 
"	      004637c7    push 0"
"	      004637c9    mov eax,[ebp-70h]"
"	      004637cc    mov ecx,[ebp-70h]"
"	      004637cf    mov ecx,[ecx+34h]"
"	      004637d2    mov edx,[ecx]"
"	      004637d4    mov ecx,[eax+34h]"
"	      004637d7    call dword ptr [edx+70h]"
);
// LINE 690:
	asm( 
"	      004637da    mov ecx,[ebp-70h]"
"	      004637dd    call 00466B32h"
);
// LINE 691:
	asm( 
"	      004637e2    mov ecx,[ebp-70h]"
"	      004637e5    add ecx,58h"
"	      004637e8    call 004BDC6Fh"
);
// LINE 692:
	asm( 
"	      004637ed    mov eax,[ebp-70h]"
"	      004637f0    mov eax,[eax+4338h]"
"	      004637f6    mov [ebp-2Ch],eax"
"	      004637f9    mov eax,[ebp-2Ch]"
"	      004637fc    mov [ebp-28h],eax"
"	      004637ff    jmp near ptr 00463804h"
"	      00463804    jmp near ptr 00463809h"
"	      00463809    mov eax,[ebp-28h]"
"	      0046380c    mov eax,[eax+4]"
"	      0046380f    mov [ebp-28h],eax"
"	      00463812    jmp near ptr 00463817h"
"	      00463817    mov eax,[ebp-28h]"
"	      0046381a    mov [ebp-30h],eax"
"	      0046381d    mov eax,[ebp-30h]"
"	      00463820    mov eax,[eax]"
"	      00463822    mov ecx,[ebp-30h]"
"	      00463825    mov ecx,[ecx+4]"
"	      00463828    mov [ecx],eax"
"	      0046382a    mov eax,[ebp-30h]"
"	      0046382d    mov eax,[eax+4]"
"	      00463830    mov ecx,[ebp-30h]"
"	      00463833    mov ecx,[ecx]"
"	      00463835    mov [ecx+4],eax"
"	      00463838    jmp near ptr 0046383Dh"
"	      0046383d    jmp near ptr 00463842h"
"	      00463842    mov eax,ds:[59930Ch]"
"	      00463847    mov ecx,[ebp-30h]"
"	      0046384a    mov [ecx],eax"
"	      0046384c    mov eax,[ebp-30h]"
"	      0046384f    mov ds:[59930Ch],eax"
"	      00463854    jmp near ptr 00463859h"
"	      00463859    mov eax,[ebp-70h]"
"	      0046385c    dec dword ptr [eax+433Ch]"
"	      00463862    jmp near ptr 00463867h"
"	      00463867    jmp near ptr 0046386Ch"
);
// LINE 693:
	asm( 
"	      0046386c    mov eax,1"
"	      00463871    jmp near ptr 00463BF2h"
);
// LINE 695:
	asm( 
"	      00463876    jmp near ptr 00463BEBh"
"	      0046387b    cmp dword ptr [ebp+8],5"
"	      0046387f    jne near ptr 004638F3h"
);
// LINE 697:
	asm( 
"	      00463885    push 0"
"	      00463887    mov eax,[ebp-70h]"
"	      0046388a    mov ecx,[ebp-70h]"
"	      0046388d    mov ecx,[ecx+34h]"
"	      00463890    mov edx,[ecx]"
"	      00463892    mov ecx,[eax+34h]"
"	      00463895    call dword ptr [edx+70h]"
);
// LINE 698:
	asm( 
"	      00463898    mov ecx,[ebp-70h]"
"	      0046389b    add ecx,70h"
"	      0046389e    call 004BDFA9h"
);
// LINE 699:
	asm( 
"	      004638a3    mov eax,[ebp-70h]"
"	      004638a6    mov eax,[eax+4338h]"
"	      004638ac    mov [ebp-38h],eax"
"	      004638af    mov eax,[ebp-38h]"
"	      004638b2    mov [ebp-34h],eax"
"	      004638b5    jmp near ptr 004638BAh"
"	      004638ba    jmp near ptr 004638BFh"
"	      004638bf    mov eax,[ebp-34h]"
"	      004638c2    mov eax,[eax+4]"
"	      004638c5    mov [ebp-34h],eax"
"	      004638c8    jmp near ptr 004638CDh"
"	      004638cd    mov eax,[ebp-34h]"
"	      004638d0    push eax"
"	      004638d1    mov ecx,[ebp-70h]"
"	      004638d4    add ecx,4338h"
"	      004638da    call 00466ED0h"
"	      004638df    jmp near ptr 004638E4h"
);
// LINE 700:
	asm( 
"	      004638e4    mov eax,1"
"	      004638e9    jmp near ptr 00463BF2h"
);
// LINE 702:
	asm( 
"	      004638ee    jmp near ptr 00463BEBh"
"	      004638f3    cmp dword ptr [ebp+8],6"
"	      004638f7    jne near ptr 004639D4h"
);
// LINE 706:
	asm( 
"	      004638fd    call 0050A406h"
);
// LINE 707:
	asm( 
"	      00463902    jmp near ptr 00463907h"
"	      00463907    cmp dword ptr ds:[60449Ch],0"
"	      0046390e    je near ptr 00463920h"
);
// LINE 708:
	asm( 
"	      00463914    push 0"
"	      00463916    mov ecx,604480h"
"	      0046391b    call 00437EE7h"
);
// LINE 709:
	asm( 
"	      00463920    call 00446E22h"
);
// LINE 710:
	asm( 
"	      00463925    push 0"
"	      00463927    mov eax,[ebp-70h]"
"	      0046392a    mov ecx,[ebp-70h]"
"	      0046392d    mov ecx,[ecx+34h]"
"	      00463930    mov edx,[ecx]"
"	      00463932    mov ecx,[eax+34h]"
"	      00463935    call dword ptr [edx+70h]"
);
// LINE 711:
	asm( 
"	      00463938    mov ecx,[ebp-70h]"
"	      0046393b    add ecx,0A0h"
"	      00463941    call 004BF681h"
);
// LINE 712:
	asm( 
"	      00463946    mov eax,[ebp-70h]"
"	      00463949    mov eax,[eax+4338h]"
"	      0046394f    mov [ebp-40h],eax"
"	      00463952    mov eax,[ebp-40h]"
"	      00463955    mov [ebp-3Ch],eax"
"	      00463958    jmp near ptr 0046395Dh"
"	      0046395d    jmp near ptr 00463962h"
"	      00463962    mov eax,[ebp-3Ch]"
"	      00463965    mov eax,[eax+4]"
"	      00463968    mov [ebp-3Ch],eax"
"	      0046396b    jmp near ptr 00463970h"
"	      00463970    mov eax,[ebp-3Ch]"
"	      00463973    mov [ebp-44h],eax"
"	      00463976    mov eax,[ebp-44h]"
"	      00463979    mov eax,[eax]"
"	      0046397b    mov ecx,[ebp-44h]"
"	      0046397e    mov ecx,[ecx+4]"
"	      00463981    mov [ecx],eax"
"	      00463983    mov eax,[ebp-44h]"
"	      00463986    mov eax,[eax+4]"
"	      00463989    mov ecx,[ebp-44h]"
"	      0046398c    mov ecx,[ecx]"
"	      0046398e    mov [ecx+4],eax"
"	      00463991    jmp near ptr 00463996h"
"	      00463996    jmp near ptr 0046399Bh"
"	      0046399b    mov eax,ds:[59930Ch]"
"	      004639a0    mov ecx,[ebp-44h]"
"	      004639a3    mov [ecx],eax"
"	      004639a5    mov eax,[ebp-44h]"
"	      004639a8    mov ds:[59930Ch],eax"
"	      004639ad    jmp near ptr 004639B2h"
"	      004639b2    mov eax,[ebp-70h]"
"	      004639b5    dec dword ptr [eax+433Ch]"
"	      004639bb    jmp near ptr 004639C0h"
"	      004639c0    jmp near ptr 004639C5h"
);
// LINE 713:
	asm( 
"	      004639c5    mov eax,1"
"	      004639ca    jmp near ptr 00463BF2h"
);
// LINE 715:
	asm( 
"	      004639cf    jmp near ptr 00463BEBh"
"	      004639d4    cmp dword ptr [ebp+8],7"
"	      004639d8    jne near ptr 00463A3Ch"
);
// LINE 717:
	asm( 
"	      004639de    mov ecx,[ebp-70h]"
"	      004639e1    add ecx,0BB8h"
"	      004639e7    call 004C13B9h"
);
// LINE 718:
	asm( 
"	      004639ec    mov eax,[ebp-70h]"
"	      004639ef    mov eax,[eax+4338h]"
"	      004639f5    mov [ebp-4Ch],eax"
"	      004639f8    mov eax,[ebp-4Ch]"
"	      004639fb    mov [ebp-48h],eax"
"	      004639fe    jmp near ptr 00463A03h"
"	      00463a03    jmp near ptr 00463A08h"
"	      00463a08    mov eax,[ebp-48h]"
"	      00463a0b    mov eax,[eax+4]"
"	      00463a0e    mov [ebp-48h],eax"
"	      00463a11    jmp near ptr 00463A16h"
"	      00463a16    mov eax,[ebp-48h]"
"	      00463a19    push eax"
"	      00463a1a    mov ecx,[ebp-70h]"
"	      00463a1d    add ecx,4338h"
"	      00463a23    call 00466ED0h"
"	      00463a28    jmp near ptr 00463A2Dh"
);
// LINE 719:
	asm( 
"	      00463a2d    mov eax,1"
"	      00463a32    jmp near ptr 00463BF2h"
);
// LINE 721:
	asm( 
"	      00463a37    jmp near ptr 00463BEBh"
"	      00463a3c    cmp dword ptr [ebp+8],8"
"	      00463a40    jne near ptr 00463AE2h"
);
// LINE 723:
	asm( 
"	      00463a46    mov ecx,[ebp-70h]"
"	      00463a49    add ecx,1678h"
"	      00463a4f    call 004C1C2Fh"
);
// LINE 724:
	asm( 
"	      00463a54    mov eax,[ebp-70h]"
"	      00463a57    mov eax,[eax+4338h]"
"	      00463a5d    mov [ebp-54h],eax"
"	      00463a60    mov eax,[ebp-54h]"
"	      00463a63    mov [ebp-50h],eax"
"	      00463a66    jmp near ptr 00463A6Bh"
"	      00463a6b    jmp near ptr 00463A70h"
"	      00463a70    mov eax,[ebp-50h]"
"	      00463a73    mov eax,[eax+4]"
"	      00463a76    mov [ebp-50h],eax"
"	      00463a79    jmp near ptr 00463A7Eh"
"	      00463a7e    mov eax,[ebp-50h]"
"	      00463a81    mov [ebp-58h],eax"
"	      00463a84    mov eax,[ebp-58h]"
"	      00463a87    mov eax,[eax]"
"	      00463a89    mov ecx,[ebp-58h]"
"	      00463a8c    mov ecx,[ecx+4]"
"	      00463a8f    mov [ecx],eax"
"	      00463a91    mov eax,[ebp-58h]"
"	      00463a94    mov eax,[eax+4]"
"	      00463a97    mov ecx,[ebp-58h]"
"	      00463a9a    mov ecx,[ecx]"
"	      00463a9c    mov [ecx+4],eax"
"	      00463a9f    jmp near ptr 00463AA4h"
"	      00463aa4    jmp near ptr 00463AA9h"
"	      00463aa9    mov eax,ds:[59930Ch]"
"	      00463aae    mov ecx,[ebp-58h]"
"	      00463ab1    mov [ecx],eax"
"	      00463ab3    mov eax,[ebp-58h]"
"	      00463ab6    mov ds:[59930Ch],eax"
"	      00463abb    jmp near ptr 00463AC0h"
"	      00463ac0    mov eax,[ebp-70h]"
"	      00463ac3    dec dword ptr [eax+433Ch]"
"	      00463ac9    jmp near ptr 00463ACEh"
"	      00463ace    jmp near ptr 00463AD3h"
);
// LINE 725:
	asm( 
"	      00463ad3    mov eax,1"
"	      00463ad8    jmp near ptr 00463BF2h"
);
// LINE 727:
	asm( 
"	      00463add    jmp near ptr 00463BEBh"
"	      00463ae2    cmp dword ptr [ebp+8],9"
"	      00463ae6    jne near ptr 00463B4Ah"
);
// LINE 729:
	asm( 
"	      00463aec    mov ecx,[ebp-70h]"
"	      00463aef    add ecx,2138h"
"	      00463af5    call 004C25B7h"
);
// LINE 730:
	asm( 
"	      00463afa    mov eax,[ebp-70h]"
"	      00463afd    mov eax,[eax+4338h]"
"	      00463b03    mov [ebp-60h],eax"
"	      00463b06    mov eax,[ebp-60h]"
"	      00463b09    mov [ebp-5Ch],eax"
"	      00463b0c    jmp near ptr 00463B11h"
"	      00463b11    jmp near ptr 00463B16h"
"	      00463b16    mov eax,[ebp-5Ch]"
"	      00463b19    mov eax,[eax+4]"
"	      00463b1c    mov [ebp-5Ch],eax"
"	      00463b1f    jmp near ptr 00463B24h"
"	      00463b24    mov eax,[ebp-5Ch]"
"	      00463b27    push eax"
"	      00463b28    mov ecx,[ebp-70h]"
"	      00463b2b    add ecx,4338h"
"	      00463b31    call 00466ED0h"
"	      00463b36    jmp near ptr 00463B3Bh"
);
// LINE 731:
	asm( 
"	      00463b3b    mov eax,1"
"	      00463b40    jmp near ptr 00463BF2h"
);
// LINE 733:
	asm( 
"	      00463b45    jmp near ptr 00463BEBh"
"	      00463b4a    cmp dword ptr [ebp+8],0Bh"
"	      00463b4e    jne near ptr 00463BEBh"
);
// LINE 735:
	asm( 
"	      00463b54    mov ecx,[ebp-70h]"
"	      00463b57    add ecx,2BF8h"
"	      00463b5d    call 004C2F3Fh"
);
// LINE 736:
	asm( 
"	      00463b62    mov eax,[ebp-70h]"
"	      00463b65    mov eax,[eax+4338h]"
"	      00463b6b    mov [ebp-68h],eax"
"	      00463b6e    mov eax,[ebp-68h]"
"	      00463b71    mov [ebp-64h],eax"
"	      00463b74    jmp near ptr 00463B79h"
"	      00463b79    jmp near ptr 00463B7Eh"
"	      00463b7e    mov eax,[ebp-64h]"
"	      00463b81    mov eax,[eax+4]"
"	      00463b84    mov [ebp-64h],eax"
"	      00463b87    jmp near ptr 00463B8Ch"
"	      00463b8c    mov eax,[ebp-64h]"
"	      00463b8f    mov [ebp-6Ch],eax"
"	      00463b92    mov eax,[ebp-6Ch]"
"	      00463b95    mov eax,[eax]"
"	      00463b97    mov ecx,[ebp-6Ch]"
"	      00463b9a    mov ecx,[ecx+4]"
"	      00463b9d    mov [ecx],eax"
"	      00463b9f    mov eax,[ebp-6Ch]"
"	      00463ba2    mov eax,[eax+4]"
"	      00463ba5    mov ecx,[ebp-6Ch]"
"	      00463ba8    mov ecx,[ecx]"
"	      00463baa    mov [ecx+4],eax"
"	      00463bad    jmp near ptr 00463BB2h"
"	      00463bb2    jmp near ptr 00463BB7h"
"	      00463bb7    mov eax,ds:[59930Ch]"
"	      00463bbc    mov ecx,[ebp-6Ch]"
"	      00463bbf    mov [ecx],eax"
"	      00463bc1    mov eax,[ebp-6Ch]"
"	      00463bc4    mov ds:[59930Ch],eax"
"	      00463bc9    jmp near ptr 00463BCEh"
"	      00463bce    mov eax,[ebp-70h]"
"	      00463bd1    dec dword ptr [eax+433Ch]"
"	      00463bd7    jmp near ptr 00463BDCh"
"	      00463bdc    jmp near ptr 00463BE1h"
);
// LINE 737:
	asm( 
"	      00463be1    mov eax,1"
"	      00463be6    jmp near ptr 00463BF2h"
);
// LINE 739:
	asm( 
"	      00463beb    xor eax,eax"
"	      00463bed    jmp near ptr 00463BF2h"
);
// LINE 740:
	asm( 
"	      00463bf2    pop edi"
"	      00463bf3    pop esi"
"	      00463bf4    pop ebx"
"	      00463bf5    leave"
"	      00463bf6    ret 4"
);
}

// FUNCTION: COPTER_D 0x00463bf9
public: virtual void __thiscall CGameApp::DestroyAllModes(void) {
// LINE 748:
	asm( 
"	      00463bf9    push ebp"
"	      00463bfa    mov ebp,esp"
"	      00463bfc    sub esp,34h"
"	      00463bff    push ebx"
"	      00463c00    push esi"
"	      00463c01    push edi"
"	      00463c02    mov [ebp-30h],ecx"
);
// LINE 753:
	asm( 
"	      00463c05    mov eax,[ebp-30h]"
"	      00463c08    cmp dword ptr [eax+42BCh],0"
"	      00463c0f    je near ptr 00463C5Ch"
);
// LINE 754:
	asm( 
"	      00463c15    mov eax,[ebp-30h]"
"	      00463c18    mov eax,[eax+42BCh]"
"	      00463c1e    mov [ebp-10h],eax"
"	      00463c21    mov eax,[ebp-10h]"
"	      00463c24    mov [ebp-0Ch],eax"
"	      00463c27    cmp dword ptr [ebp-0Ch],0"
"	      00463c2b    je near ptr 00463C4Fh"
"	      00463c31    mov ecx,[ebp-0Ch]"
"	      00463c34    call 00447456h"
"	      00463c39    mov eax,[ebp-0Ch]"
"	      00463c3c    push eax"
"	      00463c3d    call 0056A740h"
"	      00463c42    add esp,4"
"	      00463c45    jmp near ptr 00463C4Ah"
"	      00463c4a    jmp near ptr 00463C4Fh"
);
// LINE 755:
	asm( 
"	      00463c4f    mov eax,[ebp-30h]"
"	      00463c52    mov dword ptr [eax+42BCh],0"
);
// LINE 758:
	asm( 
"	      00463c5c    mov eax,[ebp-30h]"
"	      00463c5f    mov eax,[eax+4338h]"
"	      00463c65    mov eax,[eax]"
"	      00463c67    mov [ebp-28h],eax"
"	      00463c6a    mov eax,[ebp-28h]"
"	      00463c6d    mov [ebp-4],eax"
"	      00463c70    jmp near ptr 00463C75h"
"	      00463c75    jmp near ptr 00463C7Ah"
);
// LINE 759:
	asm( 
"	      00463c7a    mov eax,[ebp-30h]"
"	      00463c7d    mov eax,[eax+4338h]"
"	      00463c83    mov [ebp-1Ch],eax"
"	      00463c86    mov eax,[ebp-1Ch]"
"	      00463c89    mov [ebp-14h],eax"
"	      00463c8c    jmp near ptr 00463C91h"
"	      00463c91    jmp near ptr 00463C96h"
"	      00463c96    mov eax,[ebp-4]"
"	      00463c99    cmp [ebp-14h],eax"
"	      00463c9c    jne near ptr 00463CACh"
"	      00463ca2    jmp near ptr 00463CC0h"
"	      00463ca7    jmp near ptr 00463CACh"
"	      00463cac    jmp near ptr 00463CBBh"
"	      00463cb1    cmp dword ptr [ebp-20h],0"
"	      00463cb5    jne near ptr 00463CC0h"
"	      00463cbb    jmp near ptr 00463CC5h"
"	      00463cc0    jmp near ptr 00463DC1h"
"	      00463cc5    jmp near ptr 00463CD4h"
"	      00463cca    cmp dword ptr [ebp-24h],0"
"	      00463cce    je near ptr 00463DC1h"
);
// LINE 760:
	asm( 
"	      00463cd4    jmp near ptr 00463CD9h"
"	      00463cd9    mov eax,[ebp-4]"
"	      00463cdc    mov eax,[eax+8]"
"	      00463cdf    mov [ebp-8],eax"
);
// LINE 761:
	asm( 
"	      00463ce2    mov eax,[ebp-8]"
"	      00463ce5    mov [ebp-34h],eax"
"	      00463ce8    jmp near ptr 00463D66h"
);
// LINE 763:
	asm( 
"	      00463ced    mov ecx,[ebp-30h]"
"	      00463cf0    add ecx,58h"
"	      00463cf3    call 004BDC6Fh"
"	      00463cf8    jmp near ptr 00463CFDh"
);
// LINE 764:
	asm( 
"	      00463cfd    jmp near ptr 00463D9Eh"
);
// LINE 766:
	asm( 
"	      00463d02    mov ecx,[ebp-30h]"
"	      00463d05    add ecx,0A0h"
"	      00463d0b    call 004BFEBAh"
);
// LINE 767:
	asm( 
"	      00463d10    jmp near ptr 00463D9Eh"
);
// LINE 769:
	asm( 
"	      00463d15    mov ecx,[ebp-30h]"
"	      00463d18    add ecx,0BB8h"
"	      00463d1e    call 004C1595h"
);
// LINE 770:
	asm( 
"	      00463d23    jmp near ptr 00463D9Eh"
);
// LINE 772:
	asm( 
"	      00463d28    mov ecx,[ebp-30h]"
"	      00463d2b    add ecx,1678h"
"	      00463d31    call 004C1E0Bh"
);
// LINE 773:
	asm( 
"	      00463d36    jmp near ptr 00463D9Eh"
);
// LINE 775:
	asm( 
"	      00463d3b    mov ecx,[ebp-30h]"
"	      00463d3e    add ecx,2138h"
"	      00463d44    call 004C2793h"
);
// LINE 776:
	asm( 
"	      00463d49    jmp near ptr 00463D9Eh"
);
// LINE 778:
	asm( 
"	      00463d4e    mov ecx,[ebp-30h]"
"	      00463d51    add ecx,2BF8h"
"	      00463d57    call 004C311Bh"
);
// LINE 779:
	asm( 
"	      00463d5c    jmp near ptr 00463D9Eh"
);
// LINE 780:
	asm( 
"	      00463d61    jmp near ptr 00463D9Eh"
"	      00463d66    sub dword ptr [ebp-34h],4"
"	      00463d6a    cmp dword ptr [ebp-34h],7"
"	      00463d6e    ja near ptr 00463D9Eh"
"	      00463d74    mov eax,[ebp-34h]"
"	      00463d77    jmp dword ptr [eax*4+463D7Eh]"
"	      00463d7e    in eax,dx"
"	      00463d7f    cmp al,46h"
"	      00463d81    add [esi+200463Dh],bl"
"	      00463d87    cmp eax,3D150046h"
"	      00463d8c    inc esi"
"	      00463d8d    add [eax],ch"
"	      00463d8f    cmp eax,3D3B0046h"
"	      00463d94    inc esi"
"	      00463d95    add [esi+4E00463Dh],bl"
"	      00463d9b    (bad)"
);
// LINE 781:
	asm( 
"	      00463d9e    mov eax,[ebp-4]"
"	      00463da1    mov [ebp-2Ch],eax"
"	      00463da4    mov eax,[ebp-4]"
"	      00463da7    mov eax,[eax]"
"	      00463da9    mov [ebp-4],eax"
"	      00463dac    jmp near ptr 00463DB1h"
"	      00463db1    mov eax,[ebp-2Ch]"
"	      00463db4    mov [ebp-18h],eax"
"	      00463db7    jmp near ptr 00463DBCh"
);
// LINE 782:
	asm( 
"	      00463dbc    jmp near ptr 00463C7Ah"
);
// LINE 783:
	asm( 
"	      00463dc1    jmp near ptr 00463DC6h"
"	      00463dc6    pop edi"
"	      00463dc7    pop esi"
"	      00463dc8    pop ebx"
"	      00463dc9    leave"
"	      00463dca    ret"
);
}

// FUNCTION: COPTER_D 0x00463dcb
public: virtual void __thiscall CGameApp::ProcessCommand(int) {
// LINE 790:
	asm( 
"	      00463dcb    push ebp"
"	      00463dcc    mov ebp,esp"
"	      00463dce    sub esp,38h"
"	      00463dd1    push ebx"
"	      00463dd2    push esi"
"	      00463dd3    push edi"
"	      00463dd4    mov [ebp-38h],ecx"
);
// LINE 791:
	asm( 
"	      00463dd7    cmp dword ptr [ebp+8],37h"
"	      00463ddb    jne near ptr 00463DF6h"
);
// LINE 792:
	asm( 
"	      00463de1    mov eax,[ebp-38h]"
"	      00463de4    mov eax,[eax]"
"	      00463de6    mov ecx,[ebp-38h]"
"	      00463de9    call dword ptr [eax+5Ch]"
);
// LINE 793:
	asm( 
"	      00463dec    jmp near ptr 00464446h"
);
// LINE 795:
	asm( 
"	      00463df1    jmp near ptr 00463F0Dh"
"	      00463df6    cmp dword ptr [ebp+8],0C9h"
"	      00463dfd    jne near ptr 00463E15h"
);
// LINE 796:
	asm( 
"	      00463e03    mov ecx,[ebp-38h]"
"	      00463e06    call 00440F9Dh"
);
// LINE 797:
	asm( 
"	      00463e0b    jmp near ptr 00464446h"
);
// LINE 799:
	asm( 
"	      00463e10    jmp near ptr 00463F0Dh"
"	      00463e15    cmp dword ptr [ebp+8],0CAh"
"	      00463e1c    jne near ptr 00463E34h"
);
// LINE 800:
	asm( 
"	      00463e22    mov ecx,[ebp-38h]"
"	      00463e25    call 00440FFAh"
);
// LINE 801:
	asm( 
"	      00463e2a    jmp near ptr 00464446h"
);
// LINE 803:
	asm( 
"	      00463e2f    jmp near ptr 00463F0Dh"
"	      00463e34    cmp dword ptr [ebp+8],0CBh"
"	      00463e3b    jne near ptr 00463E7Ah"
);
// LINE 804:
	asm( 
"	      00463e41    mov eax,[ebp-38h]"
"	      00463e44    cmp dword ptr [eax+42C8h],0"
"	      00463e4b    jne near ptr 00463E63h"
"	      00463e51    mov eax,[ebp-38h]"
"	      00463e54    mov dword ptr [eax+42C8h],1"
"	      00463e5e    jmp near ptr 00463E70h"
"	      00463e63    mov eax,[ebp-38h]"
"	      00463e66    mov dword ptr [eax+42C8h],0"
);
// LINE 805:
	asm( 
"	      00463e70    jmp near ptr 00464446h"
);
// LINE 807:
	asm( 
"	      00463e75    jmp near ptr 00463F0Dh"
"	      00463e7a    cmp dword ptr [ebp+8],0CCh"
"	      00463e81    jne near ptr 00463EDAh"
);
// LINE 808:
	asm( 
"	      00463e87    mov eax,[ebp-38h]"
"	      00463e8a    mov eax,[eax+4338h]"
"	      00463e90    mov [ebp-0Ch],eax"
"	      00463e93    mov eax,[ebp-0Ch]"
"	      00463e96    mov [ebp-8],eax"
"	      00463e99    jmp near ptr 00463E9Eh"
"	      00463e9e    jmp near ptr 00463EA3h"
"	      00463ea3    mov eax,[ebp-8]"
"	      00463ea6    mov eax,[eax+4]"
"	      00463ea9    mov [ebp-8],eax"
"	      00463eac    jmp near ptr 00463EB1h"
"	      00463eb1    jmp near ptr 00463EB6h"
"	      00463eb6    jmp near ptr 00463EBBh"
"	      00463ebb    mov eax,[ebp-8]"
"	      00463ebe    cmp dword ptr [eax+8],4"
"	      00463ec2    jl near ptr 00463ED0h"
);
// LINE 809:
	asm( 
"	      00463ec8    mov ecx,[ebp-38h]"
"	      00463ecb    call 0043E2A5h"
);
// LINE 810:
	asm( 
"	      00463ed0    jmp near ptr 00464446h"
);
// LINE 812:
	asm( 
"	      00463ed5    jmp near ptr 00463F0Dh"
"	      00463eda    cmp dword ptr [ebp+8],36h"
"	      00463ede    jne near ptr 00463F0Dh"
);
// LINE 813:
	asm( 
"	      00463ee4    mov eax,[ebp-38h]"
"	      00463ee7    cmp dword ptr [eax+4320h],0"
"	      00463eee    jne near ptr 00463F03h"
);
// LINE 814:
	asm( 
"	      00463ef4    push 0Ah"
"	      00463ef6    mov ecx,[ebp-38h]"
"	      00463ef9    call 0048A370h"
);
// LINE 815:
	asm( 
"	      00463efe    jmp near ptr 00463F0Dh"
);
// LINE 816:
	asm( 
"	      00463f03    push 0"
"	      00463f05    mov ecx,[ebp-38h]"
"	      00463f08    call 0048A370h"
);
// LINE 818:
	asm( 
"	      00463f0d    mov eax,[ebp-38h]"
"	      00463f10    mov eax,[eax+4338h]"
"	      00463f16    mov [ebp-14h],eax"
"	      00463f19    mov eax,[ebp-14h]"
"	      00463f1c    mov [ebp-10h],eax"
"	      00463f1f    jmp near ptr 00463F24h"
"	      00463f24    jmp near ptr 00463F29h"
"	      00463f29    mov eax,[ebp-10h]"
"	      00463f2c    mov eax,[eax+4]"
"	      00463f2f    mov [ebp-10h],eax"
"	      00463f32    jmp near ptr 00463F37h"
"	      00463f37    jmp near ptr 00463F3Ch"
"	      00463f3c    jmp near ptr 00463F41h"
"	      00463f41    mov eax,[ebp-10h]"
"	      00463f44    cmp dword ptr [eax+8],7"
"	      00463f48    jne near ptr 00464005h"
);
// LINE 819:
	asm( 
"	      00463f4e    cmp dword ptr [ebp+8],1"
"	      00463f52    jne near ptr 00463F7Dh"
);
// LINE 821:
	asm( 
"	      00463f58    push 7"
"	      00463f5a    mov eax,[ebp-38h]"
"	      00463f5d    mov eax,[eax]"
"	      00463f5f    mov ecx,[ebp-38h]"
"	      00463f62    call dword ptr [eax+6Ch]"
);
// LINE 822:
	asm( 
"	      00463f65    mov ecx,[ebp-38h]"
"	      00463f68    add ecx,0A0h"
"	      00463f6e    call 004BE5D0h"
);
// LINE 823:
	asm( 
"	      00463f73    call 00544262h"
);
// LINE 825:
	asm( 
"	      00463f78    jmp near ptr 00464005h"
"	      00463f7d    cmp dword ptr [ebp+8],2"
"	      00463f81    jne near ptr 00463FACh"
);
// LINE 828:
	asm( 
"	      00463f87    mov ecx,[ebp-38h]"
"	      00463f8a    add ecx,0BB8h"
"	      00463f90    call 004C13F7h"
);
// LINE 829:
	asm( 
"	      00463f95    push 8"
"	      00463f97    mov eax,[ebp-38h]"
"	      00463f9a    mov eax,[eax]"
"	      00463f9c    mov ecx,[ebp-38h]"
"	      00463f9f    call dword ptr [eax+68h]"
);
// LINE 830:
	asm( 
"	      00463fa2    jmp near ptr 00464446h"
);
// LINE 832:
	asm( 
"	      00463fa7    jmp near ptr 00464005h"
"	      00463fac    cmp dword ptr [ebp+8],3"
"	      00463fb0    jne near ptr 00463FDBh"
);
// LINE 833:
	asm( 
"	      00463fb6    mov ecx,[ebp-38h]"
"	      00463fb9    add ecx,0BB8h"
"	      00463fbf    call 004C13F7h"
);
// LINE 834:
	asm( 
"	      00463fc4    push 9"
"	      00463fc6    mov eax,[ebp-38h]"
"	      00463fc9    mov eax,[eax]"
"	      00463fcb    mov ecx,[ebp-38h]"
"	      00463fce    call dword ptr [eax+68h]"
);
// LINE 835:
	asm( 
"	      00463fd1    jmp near ptr 00464446h"
);
// LINE 837:
	asm( 
"	      00463fd6    jmp near ptr 00464005h"
"	      00463fdb    cmp dword ptr [ebp+8],4"
"	      00463fdf    jne near ptr 00464005h"
);
// LINE 838:
	asm( 
"	      00463fe5    mov ecx,[ebp-38h]"
"	      00463fe8    add ecx,0BB8h"
"	      00463fee    call 004C13F7h"
);
// LINE 839:
	asm( 
"	      00463ff3    push 0Bh"
"	      00463ff5    mov eax,[ebp-38h]"
"	      00463ff8    mov eax,[eax]"
"	      00463ffa    mov ecx,[ebp-38h]"
"	      00463ffd    call dword ptr [eax+68h]"
);
// LINE 840:
	asm( 
"	      00464000    jmp near ptr 00464446h"
);
// LINE 844:
	asm( 
"	      00464005    mov eax,[ebp-38h]"
"	      00464008    mov eax,[eax+4338h]"
"	      0046400e    mov [ebp-1Ch],eax"
"	      00464011    mov eax,[ebp-1Ch]"
"	      00464014    mov [ebp-18h],eax"
"	      00464017    jmp near ptr 0046401Ch"
"	      0046401c    jmp near ptr 00464021h"
"	      00464021    mov eax,[ebp-18h]"
"	      00464024    mov eax,[eax+4]"
"	      00464027    mov [ebp-18h],eax"
"	      0046402a    jmp near ptr 0046402Fh"
"	      0046402f    jmp near ptr 00464034h"
"	      00464034    jmp near ptr 00464039h"
"	      00464039    mov eax,[ebp-18h]"
"	      0046403c    cmp dword ptr [eax+8],8"
"	      00464040    jne near ptr 0046406Bh"
);
// LINE 845:
	asm( 
"	      00464046    cmp dword ptr [ebp+8],1"
"	      0046404a    jne near ptr 0046406Bh"
);
// LINE 846:
	asm( 
"	      00464050    push 8"
"	      00464052    mov eax,[ebp-38h]"
"	      00464055    mov eax,[eax]"
"	      00464057    mov ecx,[ebp-38h]"
"	      0046405a    call dword ptr [eax+6Ch]"
);
// LINE 847:
	asm( 
"	      0046405d    mov ecx,[ebp-38h]"
"	      00464060    add ecx,0BB8h"
"	      00464066    call 004C143Ch"
);
// LINE 851:
	asm( 
"	      0046406b    mov eax,[ebp-38h]"
"	      0046406e    mov eax,[eax+4338h]"
"	      00464074    mov [ebp-24h],eax"
"	      00464077    mov eax,[ebp-24h]"
"	      0046407a    mov [ebp-20h],eax"
"	      0046407d    jmp near ptr 00464082h"
"	      00464082    jmp near ptr 00464087h"
"	      00464087    mov eax,[ebp-20h]"
"	      0046408a    mov eax,[eax+4]"
"	      0046408d    mov [ebp-20h],eax"
"	      00464090    jmp near ptr 00464095h"
"	      00464095    jmp near ptr 0046409Ah"
"	      0046409a    jmp near ptr 0046409Fh"
"	      0046409f    mov eax,[ebp-20h]"
"	      004640a2    cmp dword ptr [eax+8],9"
"	      004640a6    jne near ptr 004640D1h"
);
// LINE 852:
	asm( 
"	      004640ac    cmp dword ptr [ebp+8],1"
"	      004640b0    jne near ptr 004640D1h"
);
// LINE 853:
	asm( 
"	      004640b6    push 9"
"	      004640b8    mov eax,[ebp-38h]"
"	      004640bb    mov eax,[eax]"
"	      004640bd    mov ecx,[ebp-38h]"
"	      004640c0    call dword ptr [eax+6Ch]"
);
// LINE 854:
	asm( 
"	      004640c3    mov ecx,[ebp-38h]"
"	      004640c6    add ecx,0BB8h"
"	      004640cc    call 004C143Ch"
);
// LINE 858:
	asm( 
"	      004640d1    mov eax,[ebp-38h]"
"	      004640d4    mov eax,[eax+4338h]"
"	      004640da    mov [ebp-2Ch],eax"
"	      004640dd    mov eax,[ebp-2Ch]"
"	      004640e0    mov [ebp-28h],eax"
"	      004640e3    jmp near ptr 004640E8h"
"	      004640e8    jmp near ptr 004640EDh"
"	      004640ed    mov eax,[ebp-28h]"
"	      004640f0    mov eax,[eax+4]"
"	      004640f3    mov [ebp-28h],eax"
"	      004640f6    jmp near ptr 004640FBh"
"	      004640fb    jmp near ptr 00464100h"
"	      00464100    jmp near ptr 00464105h"
"	      00464105    mov eax,[ebp-28h]"
"	      00464108    cmp dword ptr [eax+8],0Bh"
"	      0046410c    jne near ptr 0046413Ch"
);
// LINE 859:
	asm( 
"	      00464112    cmp dword ptr [ebp+8],1"
"	      00464116    jne near ptr 00464137h"
);
// LINE 860:
	asm( 
"	      0046411c    push 0Bh"
"	      0046411e    mov eax,[ebp-38h]"
"	      00464121    mov eax,[eax]"
"	      00464123    mov ecx,[ebp-38h]"
"	      00464126    call dword ptr [eax+6Ch]"
);
// LINE 861:
	asm( 
"	      00464129    mov ecx,[ebp-38h]"
"	      0046412c    add ecx,0BB8h"
"	      00464132    call 004C143Ch"
);
// LINE 865:
	asm( 
"	      00464137    jmp near ptr 00464441h"
"	      0046413c    mov eax,[ebp-38h]"
"	      0046413f    mov eax,[eax+4338h]"
"	      00464145    mov [ebp-34h],eax"
"	      00464148    mov eax,[ebp-34h]"
"	      0046414b    mov [ebp-30h],eax"
"	      0046414e    jmp near ptr 00464153h"
"	      00464153    jmp near ptr 00464158h"
"	      00464158    mov eax,[ebp-30h]"
"	      0046415b    mov eax,[eax+4]"
"	      0046415e    mov [ebp-30h],eax"
"	      00464161    jmp near ptr 00464166h"
"	      00464166    jmp near ptr 0046416Bh"
"	      0046416b    jmp near ptr 00464170h"
"	      00464170    mov eax,[ebp-30h]"
"	      00464173    cmp dword ptr [eax+8],6"
"	      00464177    jne near ptr 00464441h"
);
// LINE 866:
	asm( 
"	      0046417d    cmp dword ptr [ebp+8],30h"
"	      00464181    jne near ptr 00464199h"
);
// LINE 867:
	asm( 
"	      00464187    mov ecx,[ebp-38h]"
"	      0046418a    call 00471E84h"
);
// LINE 868:
	asm( 
"	      0046418f    jmp near ptr 00464446h"
);
// LINE 870:
	asm( 
"	      00464194    jmp near ptr 00464441h"
"	      00464199    mov eax,[ebp-38h]"
"	      0046419c    cmp dword ptr [eax+0A4h],0"
"	      004641a3    jne near ptr 00464441h"
);
// LINE 874:
	asm( 
"	      004641a9    cmp dword ptr [ebp+8],3"
"	      004641ad    je near ptr 004641C7h"
"	      004641b3    cmp dword ptr [ebp+8],15h"
"	      004641b7    jl near ptr 004641EAh"
"	      004641bd    cmp dword ptr [ebp+8],19h"
"	      004641c1    jg near ptr 004641EAh"
);
// LINE 876:
	asm( 
"	      004641c7    cmp dword ptr ds:[5B4DB8h],3"
"	      004641ce    je near ptr 004641E0h"
);
// LINE 877:
	asm( 
"	      004641d4    mov eax,[ebp+8]"
"	      004641d7    push eax"
"	      004641d8    call 004F762Eh"
"	      004641dd    add esp,4"
);
// LINE 878:
	asm( 
"	      004641e0    jmp near ptr 00464446h"
);
// LINE 882:
	asm( 
"	      004641e5    jmp near ptr 00464441h"
);
// LINE 889:
	asm( 
"	      004641ea    cmp dword ptr [ebp+8],2Dh"
"	      004641ee    je near ptr 0046423Ah"
"	      004641f4    cmp dword ptr [ebp+8],2Eh"
"	      004641f8    je near ptr 0046423Ah"
"	      004641fe    cmp dword ptr [ebp+8],5"
"	      00464202    je near ptr 0046423Ah"
"	      00464208    cmp dword ptr [ebp+8],4"
"	      0046420c    je near ptr 0046423Ah"
"	      00464212    cmp dword ptr [ebp+8],2Fh"
"	      00464216    je near ptr 0046423Ah"
"	      0046421c    cmp dword ptr [ebp+8],14h"
"	      00464220    je near ptr 0046423Ah"
"	      00464226    cmp dword ptr [ebp+8],1Bh"
"	      0046422a    jl near ptr 00464285h"
"	      00464230    cmp dword ptr [ebp+8],20h"
"	      00464234    jg near ptr 00464285h"
);
// LINE 891:
	asm( 
"	      0046423a    mov eax,[ebp+8]"
"	      0046423d    push eax"
"	      0046423e    call 004EEFD9h"
"	      00464243    add esp,4"
);
// LINE 894:
	asm( 
"	      00464246    cmp dword ptr [ebp+8],2Dh"
"	      0046424a    jne near ptr 00464263h"
);
// LINE 895:
	asm( 
"	      00464250    mov eax,ds:[598E88h]"
"	      00464255    mov ecx,[ebp-38h]"
"	      00464258    mov [ecx+4328h],eax"
);
// LINE 896:
	asm( 
"	      0046425e    jmp near ptr 0046427Bh"
"	      00464263    cmp dword ptr [ebp+8],2Eh"
"	      00464267    jne near ptr 0046427Bh"
);
// LINE 897:
	asm( 
"	      0046426d    mov eax,ds:[598E8Ch]"
"	      00464272    mov ecx,[ebp-38h]"
"	      00464275    mov [ecx+432Ch],eax"
);
// LINE 898:
	asm( 
"	      0046427b    jmp near ptr 00464446h"
);
// LINE 900:
	asm( 
"	      00464280    jmp near ptr 00464441h"
);
// LINE 901:
	asm( 
"	      00464285    cmp dword ptr [ebp+8],22h"
"	      00464289    jl near ptr 004642CEh"
"	      0046428f    cmp dword ptr [ebp+8],25h"
"	      00464293    jg near ptr 004642CEh"
);
// LINE 903:
	asm( 
"	      00464299    cmp dword ptr ds:[5B4DB8h],3"
"	      004642a0    je near ptr 004642C4h"
"	      004642a6    call 00428F4Ah"
"	      004642ab    test byte ptr [eax+48h],2"
"	      004642af    je near ptr 004642C4h"
);
// LINE 904:
	asm( 
"	      004642b5    mov eax,[ebp+8]"
"	      004642b8    sub eax,22h"
"	      004642bb    push eax"
"	      004642bc    call 004F781Bh"
"	      004642c1    add esp,4"
);
// LINE 905:
	asm( 
"	      004642c4    jmp near ptr 00464446h"
);
// LINE 908:
	asm( 
"	      004642c9    jmp near ptr 00464441h"
"	      004642ce    cmp dword ptr [ebp+8],35h"
"	      004642d2    jne near ptr 004642EAh"
);
// LINE 909:
	asm( 
"	      004642d8    mov ecx,[ebp-38h]"
"	      004642db    call 00441BC0h"
);
// LINE 910:
	asm( 
"	      004642e0    jmp near ptr 00464446h"
);
// LINE 913:
	asm( 
"	      004642e5    jmp near ptr 00464441h"
"	      004642ea    cmp dword ptr [ebp+8],31h"
"	      004642ee    jne near ptr 00464329h"
);
// LINE 914:
	asm( 
"	      004642f4    mov eax,[ebp-38h]"
"	      004642f7    inc dword ptr [eax+4308h]"
"	      004642fd    mov eax,[ebp-38h]"
"	      00464300    cmp dword ptr [eax+4308h],2"
"	      00464307    jle near ptr 0046431Ah"
"	      0046430d    mov eax,[ebp-38h]"
"	      00464310    mov dword ptr [eax+4308h],0"
"	      0046431a    jmp near ptr 0046431Fh"
);
// LINE 915:
	asm( 
"	      0046431f    jmp near ptr 00464446h"
);
// LINE 917:
	asm( 
"	      00464324    jmp near ptr 00464441h"
"	      00464329    cmp dword ptr [ebp+8],32h"
"	      0046432d    jne near ptr 0046434Bh"
);
// LINE 918:
	asm( 
"	      00464333    mov ecx,[ebp-38h]"
"	      00464336    add ecx,0A0h"
"	      0046433c    call 004BFE36h"
);
// LINE 919:
	asm( 
"	      00464341    jmp near ptr 00464446h"
);
// LINE 921:
	asm( 
"	      00464346    jmp near ptr 00464441h"
"	      0046434b    cmp dword ptr [ebp+8],34h"
"	      0046434f    jne near ptr 0046436Dh"
);
// LINE 922:
	asm( 
"	      00464355    mov ecx,[ebp-38h]"
"	      00464358    add ecx,0A0h"
"	      0046435e    call 004BFE82h"
);
// LINE 923:
	asm( 
"	      00464363    jmp near ptr 00464446h"
);
// LINE 925:
	asm( 
"	      00464368    jmp near ptr 00464441h"
"	      0046436d    cmp dword ptr [ebp+8],33h"
"	      00464371    jne near ptr 004643B0h"
);
// LINE 926:
	asm( 
"	      00464377    mov eax,[ebp-38h]"
"	      0046437a    cmp dword ptr [eax+4330h],0"
"	      00464381    jne near ptr 00464399h"
"	      00464387    mov eax,[ebp-38h]"
"	      0046438a    mov dword ptr [eax+4330h],1"
"	      00464394    jmp near ptr 004643A6h"
"	      00464399    mov eax,[ebp-38h]"
"	      0046439c    mov dword ptr [eax+4330h],0"
);
// LINE 927:
	asm( 
"	      004643a6    jmp near ptr 00464446h"
);
// LINE 929:
	asm( 
"	      004643ab    jmp near ptr 00464441h"
"	      004643b0    cmp dword ptr [ebp+8],2Ah"
"	      004643b4    jne near ptr 00464405h"
);
// LINE 930:
	asm( 
"	      004643ba    cmp dword ptr ds:[5B4DB8h],3"
"	      004643c1    jne near ptr 004643CCh"
"	      004643c7    jmp near ptr 004643D1h"
"	      004643cc    jmp near ptr 004643FBh"
"	      004643d1    jmp near ptr 004643E0h"
"	      004643d6    cmp dword ptr [ebp-4],0"
"	      004643da    je near ptr 004643FBh"
);
// LINE 933:
	asm( 
"	      004643e0    mov ecx,[ebp-38h]"
"	      004643e3    add ecx,0A0h"
"	      004643e9    call 004BE358h"
);
// LINE 934:
	asm( 
"	      004643ee    push 7"
"	      004643f0    mov eax,[ebp-38h]"
"	      004643f3    mov eax,[eax]"
"	      004643f5    mov ecx,[ebp-38h]"
"	      004643f8    call dword ptr [eax+68h]"
);
// LINE 936:
	asm( 
"	      004643fb    jmp near ptr 00464446h"
);
// LINE 938:
	asm( 
"	      00464400    jmp near ptr 00464441h"
"	      00464405    cmp dword ptr [ebp+8],3Ah"
"	      00464409    jne near ptr 00464421h"
);
// LINE 939:
	asm( 
"	      0046440f    mov ecx,[ebp-38h]"
"	      00464412    call 0043F908h"
);
// LINE 940:
	asm( 
"	      00464417    jmp near ptr 00464446h"
);
// LINE 942:
	asm( 
"	      0046441c    jmp near ptr 00464441h"
"	      00464421    cmp dword ptr [ebp+8],38h"
"	      00464425    jne near ptr 00464441h"
);
// LINE 944:
	asm( 
"	      0046442b    mov eax,[ebp-38h]"
"	      0046442e    inc dword ptr [eax+0A4h]"
);
// LINE 945:
	asm( 
"	      00464434    mov ecx,[ebp-38h]"
"	      00464437    call 0044106Fh"
);
// LINE 946:
	asm( 
"	      0046443c    jmp near ptr 00464446h"
);
// LINE 956:
	asm( 
"	      00464441    jmp near ptr 00464446h"
"	      00464446    pop edi"
"	      00464447    pop esi"
"	      00464448    pop ebx"
"	      00464449    leave"
"	      0046444a    ret 4"
);
}

// FUNCTION: COPTER_D 0x0046444d
public: virtual void __thiscall CGameApp::DoKeyDown(long, char) {
// LINE 964:
	asm( 
"	      0046444d    push ebp"
"	      0046444e    mov ebp,esp"
"	      00464450    sub esp,44h"
"	      00464453    push ebx"
"	      00464454    push esi"
"	      00464455    push edi"
"	      00464456    mov [ebp-44h],ecx"
);
// LINE 970:
	asm( 
"	      00464459    lea eax,[ebp-8]"
"	      0046445c    push eax"
"	      0046445d    lea eax,[ebp-4]"
"	      00464460    push eax"
"	      00464461    mov eax,[ebp-44h]"
"	      00464464    add eax,36BCh"
"	      00464469    push eax"
"	      0046446a    mov eax,[ebp+8]"
"	      0046446d    push eax"
"	      0046446e    mov eax,ds:[599BC0h]"
"	      00464473    mov eax,[eax]"
"	      00464475    mov ecx,ds:[599BC0h]"
"	      0046447b    call dword ptr [eax+28h]"
);
// LINE 971:
	asm( 
"	      0046447e    cmp dword ptr [ebp-4],0"
"	      00464482    je near ptr 0046449Fh"
);
// LINE 972:
	asm( 
"	      00464488    mov eax,[ebp-4]"
"	      0046448b    push eax"
"	      0046448c    mov eax,[ebp-44h]"
"	      0046448f    mov eax,[eax]"
"	      00464491    mov ecx,[ebp-44h]"
"	      00464494    call dword ptr [eax+9Ch]"
);
// LINE 973:
	asm( 
"	      0046449a    jmp near ptr 00464878h"
);
// LINE 976:
	asm( 
"	      0046449f    mov eax,[ebp+0Ch]"
"	      004644a2    push eax"
"	      004644a3    mov eax,[ebp+8]"
"	      004644a6    push eax"
"	      004644a7    mov ecx,[ebp-44h]"
"	      004644aa    mov eax,[ebp-44h]"
"	      004644ad    mov eax,[eax+3Ch]"
"	      004644b0    add ecx,3Ch"
"	      004644b3    call dword ptr [eax+0Ch]"
"	      004644b6    test eax,eax"
"	      004644b8    je near ptr 004644C3h"
);
// LINE 977:
	asm( 
"	      004644be    jmp near ptr 00464878h"
);
// LINE 981:
	asm( 
"	      004644c3    mov eax,[ebp-44h]"
"	      004644c6    mov eax,[eax+4338h]"
"	      004644cc    mov [ebp-10h],eax"
"	      004644cf    mov eax,[ebp-10h]"
"	      004644d2    mov [ebp-0Ch],eax"
"	      004644d5    jmp near ptr 004644DAh"
"	      004644da    jmp near ptr 004644DFh"
"	      004644df    mov eax,[ebp-0Ch]"
"	      004644e2    mov eax,[eax+4]"
"	      004644e5    mov [ebp-0Ch],eax"
"	      004644e8    jmp near ptr 004644EDh"
"	      004644ed    jmp near ptr 004644F2h"
"	      004644f2    jmp near ptr 004644F7h"
"	      004644f7    mov eax,[ebp-0Ch]"
"	      004644fa    cmp dword ptr [eax+8],3"
"	      004644fe    jne near ptr 0046453Dh"
);
// LINE 983:
	asm( 
"	      00464504    mov eax,[ebp-44h]"
"	      00464507    cmp dword ptr [eax+42C0h],0"
"	      0046450e    je near ptr 00464538h"
"	      00464514    cmp dword ptr [ebp+8],1Bh"
"	      00464518    jne near ptr 00464538h"
);
// LINE 984:
	asm( 
"	      0046451e    push 3"
"	      00464520    mov eax,[ebp-44h]"
"	      00464523    mov eax,[eax]"
"	      00464525    mov ecx,[ebp-44h]"
"	      00464528    call dword ptr [eax+6Ch]"
);
// LINE 985:
	asm( 
"	      0046452b    push 4"
"	      0046452d    mov eax,[ebp-44h]"
"	      00464530    mov eax,[eax]"
"	      00464532    mov ecx,[ebp-44h]"
"	      00464535    call dword ptr [eax+68h]"
);
// LINE 994:
	asm( 
"	      00464538    jmp near ptr 00464873h"
"	      0046453d    mov eax,[ebp-44h]"
"	      00464540    mov eax,[eax+4338h]"
"	      00464546    mov [ebp-18h],eax"
"	      00464549    mov eax,[ebp-18h]"
"	      0046454c    mov [ebp-14h],eax"
"	      0046454f    jmp near ptr 00464554h"
"	      00464554    jmp near ptr 00464559h"
"	      00464559    mov eax,[ebp-14h]"
"	      0046455c    mov eax,[eax+4]"
"	      0046455f    mov [ebp-14h],eax"
"	      00464562    jmp near ptr 00464567h"
"	      00464567    jmp near ptr 0046456Ch"
"	      0046456c    jmp near ptr 00464571h"
"	      00464571    mov eax,[ebp-14h]"
"	      00464574    cmp dword ptr [eax+8],5"
"	      00464578    jne near ptr 004645BCh"
);
// LINE 996:
	asm( 
"	      0046457e    mov eax,[ebp-44h]"
"	      00464581    cmp dword ptr [eax+88h],1"
"	      00464588    jne near ptr 004645B2h"
"	      0046458e    cmp dword ptr [ebp+8],1Bh"
"	      00464592    jne near ptr 004645B2h"
);
// LINE 998:
	asm( 
"	      00464598    push 5"
"	      0046459a    mov eax,[ebp-44h]"
"	      0046459d    mov eax,[eax]"
"	      0046459f    mov ecx,[ebp-44h]"
"	      004645a2    call dword ptr [eax+6Ch]"
);
// LINE 999:
	asm( 
"	      004645a5    push 6"
"	      004645a7    mov eax,[ebp-44h]"
"	      004645aa    mov eax,[eax]"
"	      004645ac    mov ecx,[ebp-44h]"
"	      004645af    call dword ptr [eax+68h]"
);
// LINE 1001:
	asm( 
"	      004645b2    jmp near ptr 00464878h"
);
// LINE 1004:
	asm( 
"	      004645b7    jmp near ptr 00464873h"
"	      004645bc    mov eax,[ebp-44h]"
"	      004645bf    mov eax,[eax+4338h]"
"	      004645c5    mov [ebp-20h],eax"
"	      004645c8    mov eax,[ebp-20h]"
"	      004645cb    mov [ebp-1Ch],eax"
"	      004645ce    jmp near ptr 004645D3h"
"	      004645d3    jmp near ptr 004645D8h"
"	      004645d8    mov eax,[ebp-1Ch]"
"	      004645db    mov eax,[eax+4]"
"	      004645de    mov [ebp-1Ch],eax"
"	      004645e1    jmp near ptr 004645E6h"
"	      004645e6    jmp near ptr 004645EBh"
"	      004645eb    jmp near ptr 004645F0h"
"	      004645f0    mov eax,[ebp-1Ch]"
"	      004645f3    cmp dword ptr [eax+8],6"
"	      004645f7    jne near ptr 00464648h"
);
// LINE 1006:
	asm( 
"	      004645fd    lea eax,[ebp-8]"
"	      00464600    push eax"
"	      00464601    lea eax,[ebp-4]"
"	      00464604    push eax"
"	      00464605    mov eax,[ebp-44h]"
"	      00464608    add eax,110h"
"	      0046460d    push eax"
"	      0046460e    mov eax,[ebp+8]"
"	      00464611    push eax"
"	      00464612    mov eax,ds:[599BC0h]"
"	      00464617    mov eax,[eax]"
"	      00464619    mov ecx,ds:[599BC0h]"
"	      0046461f    call dword ptr [eax+28h]"
);
// LINE 1007:
	asm( 
"	      00464622    cmp dword ptr [ebp-4],0"
"	      00464626    je near ptr 00464643h"
);
// LINE 1008:
	asm( 
"	      0046462c    mov eax,[ebp-4]"
"	      0046462f    push eax"
"	      00464630    mov eax,[ebp-44h]"
"	      00464633    mov eax,[eax]"
"	      00464635    mov ecx,[ebp-44h]"
"	      00464638    call dword ptr [eax+9Ch]"
);
// LINE 1009:
	asm( 
"	      0046463e    jmp near ptr 00464878h"
);
// LINE 1012:
	asm( 
"	      00464643    jmp near ptr 00464873h"
"	      00464648    mov eax,[ebp-44h]"
"	      0046464b    mov eax,[eax+4338h]"
"	      00464651    mov [ebp-28h],eax"
"	      00464654    mov eax,[ebp-28h]"
"	      00464657    mov [ebp-24h],eax"
"	      0046465a    jmp near ptr 0046465Fh"
"	      0046465f    jmp near ptr 00464664h"
"	      00464664    mov eax,[ebp-24h]"
"	      00464667    mov eax,[eax+4]"
"	      0046466a    mov [ebp-24h],eax"
"	      0046466d    jmp near ptr 00464672h"
"	      00464672    jmp near ptr 00464677h"
"	      00464677    jmp near ptr 0046467Ch"
"	      0046467c    mov eax,[ebp-24h]"
"	      0046467f    cmp dword ptr [eax+8],7"
"	      00464683    jne near ptr 004646D4h"
);
// LINE 1014:
	asm( 
"	      00464689    lea eax,[ebp-8]"
"	      0046468c    push eax"
"	      0046468d    lea eax,[ebp-4]"
"	      00464690    push eax"
"	      00464691    mov eax,[ebp-44h]"
"	      00464694    add eax,0BD0h"
"	      00464699    push eax"
"	      0046469a    mov eax,[ebp+8]"
"	      0046469d    push eax"
"	      0046469e    mov eax,ds:[599BC0h]"
"	      004646a3    mov eax,[eax]"
"	      004646a5    mov ecx,ds:[599BC0h]"
"	      004646ab    call dword ptr [eax+28h]"
);
// LINE 1015:
	asm( 
"	      004646ae    cmp dword ptr [ebp-4],0"
"	      004646b2    je near ptr 004646CFh"
);
// LINE 1016:
	asm( 
"	      004646b8    mov eax,[ebp-4]"
"	      004646bb    push eax"
"	      004646bc    mov eax,[ebp-44h]"
"	      004646bf    mov eax,[eax]"
"	      004646c1    mov ecx,[ebp-44h]"
"	      004646c4    call dword ptr [eax+9Ch]"
);
// LINE 1017:
	asm( 
"	      004646ca    jmp near ptr 00464878h"
);
// LINE 1020:
	asm( 
"	      004646cf    jmp near ptr 00464873h"
"	      004646d4    mov eax,[ebp-44h]"
"	      004646d7    mov eax,[eax+4338h]"
"	      004646dd    mov [ebp-30h],eax"
"	      004646e0    mov eax,[ebp-30h]"
"	      004646e3    mov [ebp-2Ch],eax"
"	      004646e6    jmp near ptr 004646EBh"
"	      004646eb    jmp near ptr 004646F0h"
"	      004646f0    mov eax,[ebp-2Ch]"
"	      004646f3    mov eax,[eax+4]"
"	      004646f6    mov [ebp-2Ch],eax"
"	      004646f9    jmp near ptr 004646FEh"
"	      004646fe    jmp near ptr 00464703h"
"	      00464703    jmp near ptr 00464708h"
"	      00464708    mov eax,[ebp-2Ch]"
"	      0046470b    cmp dword ptr [eax+8],8"
"	      0046470f    jne near ptr 00464760h"
);
// LINE 1021:
	asm( 
"	      00464715    lea eax,[ebp-8]"
"	      00464718    push eax"
"	      00464719    lea eax,[ebp-4]"
"	      0046471c    push eax"
"	      0046471d    mov eax,[ebp-44h]"
"	      00464720    add eax,1690h"
"	      00464725    push eax"
"	      00464726    mov eax,[ebp+8]"
"	      00464729    push eax"
"	      0046472a    mov eax,ds:[599BC0h]"
"	      0046472f    mov eax,[eax]"
"	      00464731    mov ecx,ds:[599BC0h]"
"	      00464737    call dword ptr [eax+28h]"
);
// LINE 1022:
	asm( 
"	      0046473a    cmp dword ptr [ebp-4],0"
"	      0046473e    je near ptr 0046475Bh"
);
// LINE 1023:
	asm( 
"	      00464744    mov eax,[ebp-4]"
"	      00464747    push eax"
"	      00464748    mov eax,[ebp-44h]"
"	      0046474b    mov eax,[eax]"
"	      0046474d    mov ecx,[ebp-44h]"
"	      00464750    call dword ptr [eax+9Ch]"
);
// LINE 1024:
	asm( 
"	      00464756    jmp near ptr 00464878h"
);
// LINE 1027:
	asm( 
"	      0046475b    jmp near ptr 00464873h"
"	      00464760    mov eax,[ebp-44h]"
"	      00464763    mov eax,[eax+4338h]"
"	      00464769    mov [ebp-38h],eax"
"	      0046476c    mov eax,[ebp-38h]"
"	      0046476f    mov [ebp-34h],eax"
"	      00464772    jmp near ptr 00464777h"
"	      00464777    jmp near ptr 0046477Ch"
"	      0046477c    mov eax,[ebp-34h]"
"	      0046477f    mov eax,[eax+4]"
"	      00464782    mov [ebp-34h],eax"
"	      00464785    jmp near ptr 0046478Ah"
"	      0046478a    jmp near ptr 0046478Fh"
"	      0046478f    jmp near ptr 00464794h"
"	      00464794    mov eax,[ebp-34h]"
"	      00464797    cmp dword ptr [eax+8],9"
"	      0046479b    jne near ptr 004647ECh"
);
// LINE 1028:
	asm( 
"	      004647a1    lea eax,[ebp-8]"
"	      004647a4    push eax"
"	      004647a5    lea eax,[ebp-4]"
"	      004647a8    push eax"
"	      004647a9    mov eax,[ebp-44h]"
"	      004647ac    add eax,2150h"
"	      004647b1    push eax"
"	      004647b2    mov eax,[ebp+8]"
"	      004647b5    push eax"
"	      004647b6    mov eax,ds:[599BC0h]"
"	      004647bb    mov eax,[eax]"
"	      004647bd    mov ecx,ds:[599BC0h]"
"	      004647c3    call dword ptr [eax+28h]"
);
// LINE 1029:
	asm( 
"	      004647c6    cmp dword ptr [ebp-4],0"
"	      004647ca    je near ptr 004647E7h"
);
// LINE 1030:
	asm( 
"	      004647d0    mov eax,[ebp-4]"
"	      004647d3    push eax"
"	      004647d4    mov eax,[ebp-44h]"
"	      004647d7    mov eax,[eax]"
"	      004647d9    mov ecx,[ebp-44h]"
"	      004647dc    call dword ptr [eax+9Ch]"
);
// LINE 1031:
	asm( 
"	      004647e2    jmp near ptr 00464878h"
);
// LINE 1034:
	asm( 
"	      004647e7    jmp near ptr 00464873h"
"	      004647ec    mov eax,[ebp-44h]"
"	      004647ef    mov eax,[eax+4338h]"
"	      004647f5    mov [ebp-40h],eax"
"	      004647f8    mov eax,[ebp-40h]"
"	      004647fb    mov [ebp-3Ch],eax"
"	      004647fe    jmp near ptr 00464803h"
"	      00464803    jmp near ptr 00464808h"
"	      00464808    mov eax,[ebp-3Ch]"
"	      0046480b    mov eax,[eax+4]"
"	      0046480e    mov [ebp-3Ch],eax"
"	      00464811    jmp near ptr 00464816h"
"	      00464816    jmp near ptr 0046481Bh"
"	      0046481b    jmp near ptr 00464820h"
"	      00464820    mov eax,[ebp-3Ch]"
"	      00464823    cmp dword ptr [eax+8],0Bh"
"	      00464827    jne near ptr 00464873h"
);
// LINE 1035:
	asm( 
"	      0046482d    lea eax,[ebp-8]"
"	      00464830    push eax"
"	      00464831    lea eax,[ebp-4]"
"	      00464834    push eax"
"	      00464835    mov eax,[ebp-44h]"
"	      00464838    add eax,2C10h"
"	      0046483d    push eax"
"	      0046483e    mov eax,[ebp+8]"
"	      00464841    push eax"
"	      00464842    mov eax,ds:[599BC0h]"
"	      00464847    mov eax,[eax]"
"	      00464849    mov ecx,ds:[599BC0h]"
"	      0046484f    call dword ptr [eax+28h]"
);
// LINE 1036:
	asm( 
"	      00464852    cmp dword ptr [ebp-4],0"
"	      00464856    je near ptr 00464873h"
);
// LINE 1037:
	asm( 
"	      0046485c    mov eax,[ebp-4]"
"	      0046485f    push eax"
"	      00464860    mov eax,[ebp-44h]"
"	      00464863    mov eax,[eax]"
"	      00464865    mov ecx,[ebp-44h]"
"	      00464868    call dword ptr [eax+9Ch]"
);
// LINE 1038:
	asm( 
"	      0046486e    jmp near ptr 00464878h"
);
// LINE 1041:
	asm( 
"	      00464873    jmp near ptr 00464878h"
"	      00464878    pop edi"
"	      00464879    pop esi"
"	      0046487a    pop ebx"
"	      0046487b    leave"
"	      0046487c    ret 8"
);
}

// FUNCTION: COPTER_D 0x0046487f
public: virtual void __thiscall CGameApp::DoKeyUp(long, char) {
// LINE 1049:
	asm( 
"	      0046487f    push ebp"
"	      00464880    mov ebp,esp"
"	      00464882    sub esp,2Ch"
"	      00464885    push ebx"
"	      00464886    push esi"
"	      00464887    push edi"
"	      00464888    mov [ebp-2Ch],ecx"
);
// LINE 1050:
	asm( 
"	      0046488b    mov eax,[ebp+0Ch]"
"	      0046488e    push eax"
"	      0046488f    mov eax,[ebp+8]"
"	      00464892    push eax"
"	      00464893    mov ecx,[ebp-2Ch]"
"	      00464896    mov eax,[ebp-2Ch]"
"	      00464899    mov eax,[eax+3Ch]"
"	      0046489c    add ecx,3Ch"
"	      0046489f    call dword ptr [eax+10h]"
"	      004648a2    test eax,eax"
"	      004648a4    je near ptr 004648AFh"
);
// LINE 1051:
	asm( 
"	      004648aa    jmp near ptr 00464A9Eh"
);
// LINE 1054:
	asm( 
"	      004648af    mov eax,[ebp-2Ch]"
"	      004648b2    mov eax,[eax+4338h]"
"	      004648b8    mov [ebp-8],eax"
"	      004648bb    mov eax,[ebp-8]"
"	      004648be    mov [ebp-4],eax"
"	      004648c1    jmp near ptr 004648C6h"
"	      004648c6    jmp near ptr 004648CBh"
"	      004648cb    mov eax,[ebp-4]"
"	      004648ce    mov eax,[eax+4]"
"	      004648d1    mov [ebp-4],eax"
"	      004648d4    jmp near ptr 004648D9h"
"	      004648d9    jmp near ptr 004648DEh"
"	      004648de    jmp near ptr 004648E3h"
"	      004648e3    mov eax,[ebp-4]"
"	      004648e6    cmp dword ptr [eax+8],6"
"	      004648ea    jne near ptr 00464912h"
);
// LINE 1055:
	asm( 
"	      004648f0    mov eax,[ebp-2Ch]"
"	      004648f3    add eax,110h"
"	      004648f8    push eax"
"	      004648f9    mov eax,[ebp+8]"
"	      004648fc    push eax"
"	      004648fd    mov eax,ds:[599BC0h]"
"	      00464902    mov eax,[eax]"
"	      00464904    mov ecx,ds:[599BC0h]"
"	      0046490a    call dword ptr [eax+30h]"
);
// LINE 1056:
	asm( 
"	      0046490d    jmp near ptr 00464A99h"
"	      00464912    mov eax,[ebp-2Ch]"
"	      00464915    mov eax,[eax+4338h]"
"	      0046491b    mov [ebp-10h],eax"
"	      0046491e    mov eax,[ebp-10h]"
"	      00464921    mov [ebp-0Ch],eax"
"	      00464924    jmp near ptr 00464929h"
"	      00464929    jmp near ptr 0046492Eh"
"	      0046492e    mov eax,[ebp-0Ch]"
"	      00464931    mov eax,[eax+4]"
"	      00464934    mov [ebp-0Ch],eax"
"	      00464937    jmp near ptr 0046493Ch"
"	      0046493c    jmp near ptr 00464941h"
"	      00464941    jmp near ptr 00464946h"
"	      00464946    mov eax,[ebp-0Ch]"
"	      00464949    cmp dword ptr [eax+8],7"
"	      0046494d    jne near ptr 00464975h"
);
// LINE 1057:
	asm( 
"	      00464953    mov eax,[ebp-2Ch]"
"	      00464956    add eax,0BD0h"
"	      0046495b    push eax"
"	      0046495c    mov eax,[ebp+8]"
"	      0046495f    push eax"
"	      00464960    mov eax,ds:[599BC0h]"
"	      00464965    mov eax,[eax]"
"	      00464967    mov ecx,ds:[599BC0h]"
"	      0046496d    call dword ptr [eax+30h]"
);
// LINE 1058:
	asm( 
"	      00464970    jmp near ptr 00464A99h"
"	      00464975    mov eax,[ebp-2Ch]"
"	      00464978    mov eax,[eax+4338h]"
"	      0046497e    mov [ebp-18h],eax"
"	      00464981    mov eax,[ebp-18h]"
"	      00464984    mov [ebp-14h],eax"
"	      00464987    jmp near ptr 0046498Ch"
"	      0046498c    jmp near ptr 00464991h"
"	      00464991    mov eax,[ebp-14h]"
"	      00464994    mov eax,[eax+4]"
"	      00464997    mov [ebp-14h],eax"
"	      0046499a    jmp near ptr 0046499Fh"
"	      0046499f    jmp near ptr 004649A4h"
"	      004649a4    jmp near ptr 004649A9h"
"	      004649a9    mov eax,[ebp-14h]"
"	      004649ac    cmp dword ptr [eax+8],8"
"	      004649b0    jne near ptr 004649D8h"
);
// LINE 1059:
	asm( 
"	      004649b6    mov eax,[ebp-2Ch]"
"	      004649b9    add eax,1690h"
"	      004649be    push eax"
"	      004649bf    mov eax,[ebp+8]"
"	      004649c2    push eax"
"	      004649c3    mov eax,ds:[599BC0h]"
"	      004649c8    mov eax,[eax]"
"	      004649ca    mov ecx,ds:[599BC0h]"
"	      004649d0    call dword ptr [eax+30h]"
);
// LINE 1060:
	asm( 
"	      004649d3    jmp near ptr 00464A99h"
"	      004649d8    mov eax,[ebp-2Ch]"
"	      004649db    mov eax,[eax+4338h]"
"	      004649e1    mov [ebp-20h],eax"
"	      004649e4    mov eax,[ebp-20h]"
"	      004649e7    mov [ebp-1Ch],eax"
"	      004649ea    jmp near ptr 004649EFh"
"	      004649ef    jmp near ptr 004649F4h"
"	      004649f4    mov eax,[ebp-1Ch]"
"	      004649f7    mov eax,[eax+4]"
"	      004649fa    mov [ebp-1Ch],eax"
"	      004649fd    jmp near ptr 00464A02h"
"	      00464a02    jmp near ptr 00464A07h"
"	      00464a07    jmp near ptr 00464A0Ch"
"	      00464a0c    mov eax,[ebp-1Ch]"
"	      00464a0f    cmp dword ptr [eax+8],9"
"	      00464a13    jne near ptr 00464A3Bh"
);
// LINE 1061:
	asm( 
"	      00464a19    mov eax,[ebp-2Ch]"
"	      00464a1c    add eax,2150h"
"	      00464a21    push eax"
"	      00464a22    mov eax,[ebp+8]"
"	      00464a25    push eax"
"	      00464a26    mov eax,ds:[599BC0h]"
"	      00464a2b    mov eax,[eax]"
"	      00464a2d    mov ecx,ds:[599BC0h]"
"	      00464a33    call dword ptr [eax+30h]"
);
// LINE 1062:
	asm( 
"	      00464a36    jmp near ptr 00464A99h"
"	      00464a3b    mov eax,[ebp-2Ch]"
"	      00464a3e    mov eax,[eax+4338h]"
"	      00464a44    mov [ebp-28h],eax"
"	      00464a47    mov eax,[ebp-28h]"
"	      00464a4a    mov [ebp-24h],eax"
"	      00464a4d    jmp near ptr 00464A52h"
"	      00464a52    jmp near ptr 00464A57h"
"	      00464a57    mov eax,[ebp-24h]"
"	      00464a5a    mov eax,[eax+4]"
"	      00464a5d    mov [ebp-24h],eax"
"	      00464a60    jmp near ptr 00464A65h"
"	      00464a65    jmp near ptr 00464A6Ah"
"	      00464a6a    jmp near ptr 00464A6Fh"
"	      00464a6f    mov eax,[ebp-24h]"
"	      00464a72    cmp dword ptr [eax+8],0Bh"
"	      00464a76    jne near ptr 00464A99h"
);
// LINE 1063:
	asm( 
"	      00464a7c    mov eax,[ebp-2Ch]"
"	      00464a7f    add eax,2C10h"
"	      00464a84    push eax"
"	      00464a85    mov eax,[ebp+8]"
"	      00464a88    push eax"
"	      00464a89    mov eax,ds:[599BC0h]"
"	      00464a8e    mov eax,[eax]"
"	      00464a90    mov ecx,ds:[599BC0h]"
"	      00464a96    call dword ptr [eax+30h]"
);
// LINE 1064:
	asm( 
"	      00464a99    jmp near ptr 00464A9Eh"
"	      00464a9e    pop edi"
"	      00464a9f    pop esi"
"	      00464aa0    pop ebx"
"	      00464aa1    leave"
"	      00464aa2    ret 8"
);
}

// FUNCTION: COPTER_D 0x00464aa5
public: virtual void __thiscall CGameApp::DoCharacter(long) {
// LINE 1071:
	asm( 
"	      00464aa5    push ebp"
"	      00464aa6    mov ebp,esp"
"	      00464aa8    sub esp,4"
"	      00464aab    push ebx"
"	      00464aac    push esi"
"	      00464aad    push edi"
"	      00464aae    mov [ebp-4],ecx"
);
// LINE 1072:
	asm( 
"	      00464ab1    mov eax,[ebp+8]"
"	      00464ab4    push eax"
"	      00464ab5    mov ecx,[ebp-4]"
"	      00464ab8    mov eax,[ebp-4]"
"	      00464abb    mov eax,[eax+3Ch]"
"	      00464abe    add ecx,3Ch"
"	      00464ac1    call dword ptr [eax+8]"
);
// LINE 1073:
	asm( 
"	      00464ac4    jmp near ptr 00464AC9h"
"	      00464ac9    pop edi"
"	      00464aca    pop esi"
"	      00464acb    pop ebx"
"	      00464acc    leave"
"	      00464acd    ret 4"
);
}

// FUNCTION: COPTER_D 0x00464ad0
public: virtual void __thiscall CGameApp::DoCursorDown(int, int, int) {
// LINE 1079:
	asm( 
"	      00464ad0    push ebp"
"	      00464ad1    mov ebp,esp"
"	      00464ad3    sub esp,4"
"	      00464ad6    push ebx"
"	      00464ad7    push esi"
"	      00464ad8    push edi"
"	      00464ad9    mov [ebp-4],ecx"
);
// LINE 1080:
	asm( 
"	      00464adc    mov eax,[ebp+10h]"
"	      00464adf    push eax"
"	      00464ae0    mov eax,[ebp+0Ch]"
"	      00464ae3    push eax"
"	      00464ae4    mov eax,[ebp+8]"
"	      00464ae7    push eax"
"	      00464ae8    mov ecx,[ebp-4]"
"	      00464aeb    mov eax,[ebp-4]"
"	      00464aee    mov eax,[eax+3Ch]"
"	      00464af1    add ecx,3Ch"
"	      00464af4    call dword ptr [eax+14h]"
);
// LINE 1081:
	asm( 
"	      00464af7    jmp near ptr 00464AFCh"
"	      00464afc    pop edi"
"	      00464afd    pop esi"
"	      00464afe    pop ebx"
"	      00464aff    leave"
"	      00464b00    ret 0Ch"
);
}

// FUNCTION: COPTER_D 0x00464b03
public: virtual void __thiscall CGameApp::DoCursorUp(int, int, int) {
// LINE 1088:
	asm( 
"	      00464b03    push ebp"
"	      00464b04    mov ebp,esp"
"	      00464b06    sub esp,4"
"	      00464b09    push ebx"
"	      00464b0a    push esi"
"	      00464b0b    push edi"
"	      00464b0c    mov [ebp-4],ecx"
);
// LINE 1089:
	asm( 
"	      00464b0f    mov eax,[ebp+10h]"
"	      00464b12    push eax"
"	      00464b13    mov eax,[ebp+0Ch]"
"	      00464b16    push eax"
"	      00464b17    mov eax,[ebp+8]"
"	      00464b1a    push eax"
"	      00464b1b    mov ecx,[ebp-4]"
"	      00464b1e    mov eax,[ebp-4]"
"	      00464b21    mov eax,[eax+3Ch]"
"	      00464b24    add ecx,3Ch"
"	      00464b27    call dword ptr [eax+18h]"
);
// LINE 1090:
	asm( 
"	      00464b2a    jmp near ptr 00464B2Fh"
"	      00464b2f    pop edi"
"	      00464b30    pop esi"
"	      00464b31    pop ebx"
"	      00464b32    leave"
"	      00464b33    ret 0Ch"
);
}

// FUNCTION: COPTER_D 0x00464b36
public: virtual void __thiscall CGameApp::DoCursorMove(int, int) {
// LINE 1097:
	asm( 
"	      00464b36    push ebp"
"	      00464b37    mov ebp,esp"
"	      00464b39    sub esp,4"
"	      00464b3c    push ebx"
"	      00464b3d    push esi"
"	      00464b3e    push edi"
"	      00464b3f    mov [ebp-4],ecx"
);
// LINE 1098:
	asm( 
"	      00464b42    mov eax,[ebp+0Ch]"
"	      00464b45    push eax"
"	      00464b46    mov eax,[ebp+8]"
"	      00464b49    push eax"
"	      00464b4a    mov ecx,[ebp-4]"
"	      00464b4d    mov eax,[ebp-4]"
"	      00464b50    mov eax,[eax+3Ch]"
"	      00464b53    add ecx,3Ch"
"	      00464b56    call dword ptr [eax+1Ch]"
);
// LINE 1099:
	asm( 
"	      00464b59    jmp near ptr 00464B5Eh"
"	      00464b5e    pop edi"
"	      00464b5f    pop esi"
"	      00464b60    pop ebx"
"	      00464b61    leave"
"	      00464b62    ret 8"
);
}

// FUNCTION: COPTER_D 0x00464b65
public: virtual void __thiscall CGameApp::ClearCommands(void) {
// LINE 1107:
	asm( 
"	      00464b65    push ebp"
"	      00464b66    mov ebp,esp"
"	      00464b68    sub esp,2Ch"
"	      00464b6b    push ebx"
"	      00464b6c    push esi"
"	      00464b6d    push edi"
"	      00464b6e    mov [ebp-2Ch],ecx"
);
// LINE 1110:
	asm( 
"	      00464b71    mov eax,[ebp-2Ch]"
"	      00464b74    mov eax,[eax+4338h]"
"	      00464b7a    mov [ebp-8],eax"
"	      00464b7d    mov eax,[ebp-8]"
"	      00464b80    mov [ebp-4],eax"
"	      00464b83    jmp near ptr 00464B88h"
"	      00464b88    jmp near ptr 00464B8Dh"
"	      00464b8d    mov eax,[ebp-4]"
"	      00464b90    mov eax,[eax+4]"
"	      00464b93    mov [ebp-4],eax"
"	      00464b96    jmp near ptr 00464B9Bh"
"	      00464b9b    jmp near ptr 00464BA0h"
"	      00464ba0    jmp near ptr 00464BA5h"
"	      00464ba5    mov eax,[ebp-4]"
"	      00464ba8    cmp dword ptr [eax+8],6"
"	      00464bac    jne near ptr 00464BC5h"
);
// LINE 1111:
	asm( 
"	      00464bb2    mov ecx,[ebp-2Ch]"
"	      00464bb5    add ecx,110h"
"	      00464bbb    call 0048B631h"
);
// LINE 1112:
	asm( 
"	      00464bc0    jmp near ptr 00464D10h"
"	      00464bc5    mov eax,[ebp-2Ch]"
"	      00464bc8    mov eax,[eax+4338h]"
"	      00464bce    mov [ebp-10h],eax"
"	      00464bd1    mov eax,[ebp-10h]"
"	      00464bd4    mov [ebp-0Ch],eax"
"	      00464bd7    jmp near ptr 00464BDCh"
"	      00464bdc    jmp near ptr 00464BE1h"
"	      00464be1    mov eax,[ebp-0Ch]"
"	      00464be4    mov eax,[eax+4]"
"	      00464be7    mov [ebp-0Ch],eax"
"	      00464bea    jmp near ptr 00464BEFh"
"	      00464bef    jmp near ptr 00464BF4h"
"	      00464bf4    jmp near ptr 00464BF9h"
"	      00464bf9    mov eax,[ebp-0Ch]"
"	      00464bfc    cmp dword ptr [eax+8],7"
"	      00464c00    jne near ptr 00464C19h"
);
// LINE 1113:
	asm( 
"	      00464c06    mov ecx,[ebp-2Ch]"
"	      00464c09    add ecx,0BD0h"
"	      00464c0f    call 0048B631h"
);
// LINE 1114:
	asm( 
"	      00464c14    jmp near ptr 00464D10h"
"	      00464c19    mov eax,[ebp-2Ch]"
"	      00464c1c    mov eax,[eax+4338h]"
"	      00464c22    mov [ebp-18h],eax"
"	      00464c25    mov eax,[ebp-18h]"
"	      00464c28    mov [ebp-14h],eax"
"	      00464c2b    jmp near ptr 00464C30h"
"	      00464c30    jmp near ptr 00464C35h"
"	      00464c35    mov eax,[ebp-14h]"
"	      00464c38    mov eax,[eax+4]"
"	      00464c3b    mov [ebp-14h],eax"
"	      00464c3e    jmp near ptr 00464C43h"
"	      00464c43    jmp near ptr 00464C48h"
"	      00464c48    jmp near ptr 00464C4Dh"
"	      00464c4d    mov eax,[ebp-14h]"
"	      00464c50    cmp dword ptr [eax+8],8"
"	      00464c54    jne near ptr 00464C6Dh"
);
// LINE 1115:
	asm( 
"	      00464c5a    mov ecx,[ebp-2Ch]"
"	      00464c5d    add ecx,1690h"
"	      00464c63    call 0048B631h"
);
// LINE 1116:
	asm( 
"	      00464c68    jmp near ptr 00464D10h"
"	      00464c6d    mov eax,[ebp-2Ch]"
"	      00464c70    mov eax,[eax+4338h]"
"	      00464c76    mov [ebp-20h],eax"
"	      00464c79    mov eax,[ebp-20h]"
"	      00464c7c    mov [ebp-1Ch],eax"
"	      00464c7f    jmp near ptr 00464C84h"
"	      00464c84    jmp near ptr 00464C89h"
"	      00464c89    mov eax,[ebp-1Ch]"
"	      00464c8c    mov eax,[eax+4]"
"	      00464c8f    mov [ebp-1Ch],eax"
"	      00464c92    jmp near ptr 00464C97h"
"	      00464c97    jmp near ptr 00464C9Ch"
"	      00464c9c    jmp near ptr 00464CA1h"
"	      00464ca1    mov eax,[ebp-1Ch]"
"	      00464ca4    cmp dword ptr [eax+8],9"
"	      00464ca8    jne near ptr 00464CC1h"
);
// LINE 1117:
	asm( 
"	      00464cae    mov ecx,[ebp-2Ch]"
"	      00464cb1    add ecx,2150h"
"	      00464cb7    call 0048B631h"
);
// LINE 1118:
	asm( 
"	      00464cbc    jmp near ptr 00464D10h"
"	      00464cc1    mov eax,[ebp-2Ch]"
"	      00464cc4    mov eax,[eax+4338h]"
"	      00464cca    mov [ebp-28h],eax"
"	      00464ccd    mov eax,[ebp-28h]"
"	      00464cd0    mov [ebp-24h],eax"
"	      00464cd3    jmp near ptr 00464CD8h"
"	      00464cd8    jmp near ptr 00464CDDh"
"	      00464cdd    mov eax,[ebp-24h]"
"	      00464ce0    mov eax,[eax+4]"
"	      00464ce3    mov [ebp-24h],eax"
"	      00464ce6    jmp near ptr 00464CEBh"
"	      00464ceb    jmp near ptr 00464CF0h"
"	      00464cf0    jmp near ptr 00464CF5h"
"	      00464cf5    mov eax,[ebp-24h]"
"	      00464cf8    cmp dword ptr [eax+8],0Bh"
"	      00464cfc    jne near ptr 00464D10h"
);
// LINE 1119:
	asm( 
"	      00464d02    mov ecx,[ebp-2Ch]"
"	      00464d05    add ecx,2C10h"
"	      00464d0b    call 0048B631h"
);
// LINE 1120:
	asm( 
"	      00464d10    jmp near ptr 00464D15h"
"	      00464d15    pop edi"
"	      00464d16    pop esi"
"	      00464d17    pop ebx"
"	      00464d18    leave"
"	      00464d19    ret"
);
}

// FUNCTION: COPTER_D 0x00464d1a
public: void __thiscall CGameApp::ProcessSystemCloseRequest(void) {
// LINE 1128:
	asm( 
"	      00464d1a    push ebp"
"	      00464d1b    mov ebp,esp"
"	      00464d1d    sub esp,0Ch"
"	      00464d20    push ebx"
"	      00464d21    push esi"
"	      00464d22    push edi"
"	      00464d23    mov [ebp-0Ch],ecx"
);
// LINE 1129:
	asm( 
"	      00464d26    mov eax,[ebp-0Ch]"
"	      00464d29    cmp dword ptr [eax+18h],0"
"	      00464d2d    je near ptr 00464D38h"
);
// LINE 1130:
	asm( 
"	      00464d33    jmp near ptr 00464DAEh"
);
// LINE 1131:
	asm( 
"	      00464d38    mov eax,[ebp-0Ch]"
"	      00464d3b    mov dword ptr [eax+18h],1"
);
// LINE 1132:
	asm( 
"	      00464d42    mov eax,[ebp-0Ch]"
"	      00464d45    mov eax,[eax+4338h]"
"	      00464d4b    mov [ebp-8],eax"
"	      00464d4e    mov eax,[ebp-8]"
"	      00464d51    mov [ebp-4],eax"
"	      00464d54    jmp near ptr 00464D59h"
"	      00464d59    jmp near ptr 00464D5Eh"
"	      00464d5e    mov eax,[ebp-4]"
"	      00464d61    mov eax,[eax+4]"
"	      00464d64    mov [ebp-4],eax"
"	      00464d67    jmp near ptr 00464D6Ch"
"	      00464d6c    jmp near ptr 00464D71h"
"	      00464d71    jmp near ptr 00464D76h"
"	      00464d76    mov eax,[ebp-4]"
"	      00464d79    cmp dword ptr [eax+8],6"
"	      00464d7d    jl near ptr 00464D9Ch"
);
// LINE 1133:
	asm( 
"	      00464d83    push 20002h"
"	      00464d88    push 3"
"	      00464d8a    push 7DEh"
"	      00464d8f    mov ecx,[ebp-0Ch]"
"	      00464d92    call 0043F2B9h"
);
// LINE 1134:
	asm( 
"	      00464d97    jmp near ptr 00464DA9h"
);
// LINE 1136:
	asm( 
"	      00464d9c    push 1"
"	      00464d9e    mov eax,[ebp-0Ch]"
"	      00464da1    mov eax,[eax]"
"	      00464da3    mov ecx,[ebp-0Ch]"
"	      00464da6    call dword ptr [eax+68h]"
);
// LINE 1138:
	asm( 
"	      00464da9    jmp near ptr 00464DAEh"
"	      00464dae    pop edi"
"	      00464daf    pop esi"
"	      00464db0    pop ebx"
"	      00464db1    leave"
"	      00464db2    ret"
);
}

// FUNCTION: COPTER_D 0x00464db3
public: virtual int __thiscall CGameApp::CheckForWarpToCareerLevel(void) {
// LINE 1144:
	asm( 
"	      00464db3    push ebp"
"	      00464db4    mov ebp,esp"
"	      00464db6    sub esp,8"
"	      00464db9    push ebx"
"	      00464dba    push esi"
"	      00464dbb    push edi"
"	      00464dbc    mov [ebp-8],ecx"
);
// LINE 1147:
	asm( 
"	      00464dbf    cmp dword ptr ds:[5C3814h],0"
"	      00464dc6    je near ptr 00464DF6h"
);
// LINE 1148:
	asm( 
"	      00464dcc    mov eax,ds:[5C3814h]"
"	      00464dd1    dec eax"
"	      00464dd2    mov [ebp-4],eax"
);
// LINE 1149:
	asm( 
"	      00464dd5    mov dword ptr ds:[5C3814h],0"
);
// LINE 1150:
	asm( 
"	      00464ddf    mov eax,[ebp-4]"
"	      00464de2    push eax"
"	      00464de3    mov eax,[ebp-8]"
"	      00464de6    mov eax,[eax]"
"	      00464de8    mov ecx,[ebp-8]"
"	      00464deb    call dword ptr [eax+88h]"
"	      00464df1    jmp near ptr 00464DFDh"
);
// LINE 1152:
	asm( 
"	      00464df6    xor eax,eax"
"	      00464df8    jmp near ptr 00464DFDh"
);
// LINE 1153:
	asm( 
"	      00464dfd    pop edi"
"	      00464dfe    pop esi"
"	      00464dff    pop ebx"
"	      00464e00    leave"
"	      00464e01    ret"
);
}

// FUNCTION: COPTER_D 0x00464e02
public: virtual int __thiscall CGameApp::WarpToCareerLevel(int) {
// LINE 1163:
	asm( 
"	      00464e02    push ebp"
"	      00464e03    mov ebp,esp"
"	      00464e05    sub esp,0Ch"
"	      00464e08    push ebx"
"	      00464e09    push esi"
"	      00464e0a    push edi"
"	      00464e0b    mov [ebp-0Ch],ecx"
);
// LINE 1164:
	asm( 
"	      00464e0e    cmp dword ptr [ebp+8],0"
"	      00464e12    jl near ptr 00464E22h"
"	      00464e18    cmp dword ptr [ebp+8],1Fh"
"	      00464e1c    jl near ptr 00464E29h"
);
// LINE 1165:
	asm( 
"	      00464e22    xor eax,eax"
"	      00464e24    jmp near ptr 00464EABh"
);
// LINE 1166:
	asm( 
"	      00464e29    mov eax,[ebp-0Ch]"
"	      00464e2c    mov eax,[eax+4338h]"
"	      00464e32    mov [ebp-8],eax"
"	      00464e35    mov eax,[ebp-8]"
"	      00464e38    mov [ebp-4],eax"
"	      00464e3b    jmp near ptr 00464E40h"
"	      00464e40    jmp near ptr 00464E45h"
"	      00464e45    mov eax,[ebp-4]"
"	      00464e48    mov eax,[eax+4]"
"	      00464e4b    mov [ebp-4],eax"
"	      00464e4e    jmp near ptr 00464E53h"
"	      00464e53    jmp near ptr 00464E58h"
"	      00464e58    jmp near ptr 00464E5Dh"
"	      00464e5d    mov eax,[ebp-4]"
"	      00464e60    cmp dword ptr [eax+8],6"
"	      00464e64    je near ptr 00464E71h"
);
// LINE 1167:
	asm( 
"	      00464e6a    xor eax,eax"
"	      00464e6c    jmp near ptr 00464EABh"
);
// LINE 1168:
	asm( 
"	      00464e71    push 6"
"	      00464e73    mov eax,[ebp-0Ch]"
"	      00464e76    mov eax,[eax]"
"	      00464e78    mov ecx,[ebp-0Ch]"
"	      00464e7b    call dword ptr [eax+6Ch]"
);
// LINE 1169:
	asm( 
"	      00464e7e    mov eax,[ebp+8]"
"	      00464e81    push eax"
"	      00464e82    call 00429760h"
"	      00464e87    add esp,4"
);
// LINE 1170:
	asm( 
"	      00464e8a    mov eax,[ebp-0Ch]"
"	      00464e8d    mov dword ptr [eax+20h],0"
);
// LINE 1171:
	asm( 
"	      00464e94    push 6"
"	      00464e96    mov eax,[ebp-0Ch]"
"	      00464e99    mov eax,[eax]"
"	      00464e9b    mov ecx,[ebp-0Ch]"
"	      00464e9e    call dword ptr [eax+68h]"
);
// LINE 1172:
	asm( 
"	      00464ea1    mov eax,1"
"	      00464ea6    jmp near ptr 00464EABh"
);
// LINE 1173:
	asm( 
"	      00464eab    pop edi"
"	      00464eac    pop esi"
"	      00464ead    pop ebx"
"	      00464eae    leave"
"	      00464eaf    ret 4"
);
}

// FUNCTION: COPTER_D 0x00464eb2
public: virtual int __thiscall CGameApp::GraduateUserToNextCareerLevel(void) {
// LINE 1181:
	asm( 
"	      00464eb2    push ebp"
"	      00464eb3    mov ebp,esp"
"	      00464eb5    sub esp,18h"
"	      00464eb8    push ebx"
"	      00464eb9    push esi"
"	      00464eba    push edi"
"	      00464ebb    mov [ebp-18h],ecx"
);
// LINE 1182:
	asm( 
"	      00464ebe    mov eax,[ebp-18h]"
"	      00464ec1    mov eax,[eax+4338h]"
"	      00464ec7    mov [ebp-14h],eax"
"	      00464eca    mov eax,[ebp-14h]"
"	      00464ecd    mov [ebp-10h],eax"
"	      00464ed0    jmp near ptr 00464ED5h"
"	      00464ed5    jmp near ptr 00464EDAh"
"	      00464eda    mov eax,[ebp-10h]"
"	      00464edd    mov eax,[eax+4]"
"	      00464ee0    mov [ebp-10h],eax"
"	      00464ee3    jmp near ptr 00464EE8h"
"	      00464ee8    jmp near ptr 00464EEDh"
"	      00464eed    jmp near ptr 00464EF2h"
"	      00464ef2    mov eax,[ebp-10h]"
"	      00464ef5    cmp dword ptr [eax+8],6"
"	      00464ef9    je near ptr 00464F06h"
);
// LINE 1183:
	asm( 
"	      00464eff    xor eax,eax"
"	      00464f01    jmp near ptr 00465019h"
);
// LINE 1185:
	asm( 
"	      00464f06    cmp dword ptr ds:[5C2AB4h],1Eh"
"	      00464f0d    jl near ptr 00464F26h"
);
// LINE 1186:
	asm( 
"	      00464f13    mov eax,[ebp-18h]"
"	      00464f16    mov eax,[eax]"
"	      00464f18    mov ecx,[ebp-18h]"
"	      00464f1b    call dword ptr [eax+90h]"
"	      00464f21    jmp near ptr 00465019h"
);
// LINE 1192:
	asm( 
"	      00464f26    mov dword ptr ds:[5C33D0h],0"
"	      00464f30    mov dword ptr ds:[5C33DCh],0"
"	      00464f3a    mov dword ptr ds:[5C33D8h],0"
"	      00464f44    jmp near ptr 00464F49h"
"	      00464f49    jmp near ptr 00464F4Eh"
"	      00464f4e    cmp dword ptr ds:[5C33D8h],0"
"	      00464f55    je near ptr 00464F60h"
"	      00464f5b    jmp near ptr 00464FCFh"
"	      00464f60    cmp dword ptr ds:[5C33D4h],1"
"	      00464f67    jne near ptr 00464F82h"
"	      00464f6d    call dword ptr ds:[6C3908h]"
"	      00464f73    mov ds:[5C33D8h],eax"
"	      00464f78    jmp near ptr 00464FCAh"
"	      00464f7d    jmp near ptr 00464FCAh"
"	      00464f82    cmp dword ptr ds:[5C33D4h],0"
"	      00464f89    jne near ptr 00464FB1h"
"	      00464f8f    lea eax,[ebp-0Ch]"
"	      00464f92    push eax"
"	      00464f93    call dword ptr ds:[6C365Ch]"
"	      00464f99    mov eax,[ebp-0Ch]"
"	      00464f9c    mov [ebp-4],eax"
"	      00464f9f    mov eax,[ebp-4]"
"	      00464fa2    mov ds:[5C33D8h],eax"
"	      00464fa7    jmp near ptr 00464FCAh"
"	      00464fac    jmp near ptr 00464FCAh"
"	      00464fb1    call dword ptr ds:[6C3908h]"
"	      00464fb7    mov ecx,3E8h"
"	      00464fbc    sub edx,edx"
"	      00464fbe    div ecx"
"	      00464fc0    mov ds:[5C33D8h],eax"
"	      00464fc5    jmp near ptr 00464FCAh"
"	      00464fca    jmp near ptr 00464FCFh"
"	      00464fcf    jmp near ptr 00464FD4h"
"	      00464fd4    jmp near ptr 00464FD9h"
"	      00464fd9    jmp near ptr 00464FDEh"
);
// LINE 1193:
	asm( 
"	      00464fde    push 6"
"	      00464fe0    mov eax,[ebp-18h]"
"	      00464fe3    mov eax,[eax]"
"	      00464fe5    mov ecx,[ebp-18h]"
"	      00464fe8    call dword ptr [eax+6Ch]"
);
// LINE 1194:
	asm( 
"	      00464feb    mov eax,[ebp-18h]"
"	      00464fee    mov dword ptr [eax+20h],0"
);
// LINE 1195:
	asm( 
"	      00464ff5    mov eax,[ebp-18h]"
"	      00464ff8    mov dword ptr [eax+9Ch],0"
);
// LINE 1196:
	asm( 
"	      00465002    push 5"
"	      00465004    mov eax,[ebp-18h]"
"	      00465007    mov eax,[eax]"
"	      00465009    mov ecx,[ebp-18h]"
"	      0046500c    call dword ptr [eax+68h]"
);
// LINE 1197:
	asm( 
"	      0046500f    mov eax,1"
"	      00465014    jmp near ptr 00465019h"
);
// LINE 1198:
	asm( 
"	      00465019    pop edi"
"	      0046501a    pop esi"
"	      0046501b    pop ebx"
"	      0046501c    leave"
"	      0046501d    ret"
);
}

// FUNCTION: COPTER_D 0x0046501e
public: virtual int __thiscall CGameApp::GraduateUserFromAllCareerLevels(void) {
// LINE 1206:
	asm( 
"	      0046501e    push ebp"
"	      0046501f    mov ebp,esp"
"	      00465021    sub esp,0Ch"
"	      00465024    push ebx"
"	      00465025    push esi"
"	      00465026    push edi"
"	      00465027    mov [ebp-0Ch],ecx"
);
// LINE 1207:
	asm( 
"	      0046502a    mov eax,[ebp-0Ch]"
"	      0046502d    mov eax,[eax+4338h]"
"	      00465033    mov [ebp-8],eax"
"	      00465036    mov eax,[ebp-8]"
"	      00465039    mov [ebp-4],eax"
"	      0046503c    jmp near ptr 00465041h"
"	      00465041    jmp near ptr 00465046h"
"	      00465046    mov eax,[ebp-4]"
"	      00465049    mov eax,[eax+4]"
"	      0046504c    mov [ebp-4],eax"
"	      0046504f    jmp near ptr 00465054h"
"	      00465054    jmp near ptr 00465059h"
"	      00465059    jmp near ptr 0046505Eh"
"	      0046505e    mov eax,[ebp-4]"
"	      00465061    cmp dword ptr [eax+8],6"
"	      00465065    je near ptr 00465072h"
);
// LINE 1208:
	asm( 
"	      0046506b    xor eax,eax"
"	      0046506d    jmp near ptr 0046507Ch"
);
// LINE 1209:
	asm( 
"	      00465072    mov eax,1"
"	      00465077    jmp near ptr 0046507Ch"
);
// LINE 1210:
	asm( 
"	      0046507c    pop edi"
"	      0046507d    pop esi"
"	      0046507e    pop ebx"
"	      0046507f    leave"
"	      00465080    ret"
);
}

// FUNCTION: COPTER_D 0x00465081
public: virtual void __thiscall CGameApp::NotifyUserOfGraduation(void) {
// LINE 1216:
	asm( 
"	      00465081    push ebp"
"	      00465082    mov ebp,esp"
"	      00465084    sub esp,1D0h"
"	      0046508a    push ebx"
"	      0046508b    push esi"
"	      0046508c    push edi"
"	      0046508d    mov [ebp-1D0h],ecx"
"	      00465093    mov dword ptr [ebp-19Ch],0"
);
// LINE 1222:
	asm( 
"	      0046509d    push 0"
"	      0046509f    push 226h"
"	      004650a4    call 0042B15Fh"
"	      004650a9    add esp,8"
"	      004650ac    mov [ebp-4],eax"
);
// LINE 1223:
	asm( 
"	      004650af    push 0FFFh"
"	      004650b4    lea eax,[ebp-188h]"
"	      004650ba    push eax"
"	      004650bb    mov eax,[ebp-4]"
"	      004650be    push eax"
"	      004650bf    mov eax,ds:[5C28C8h]"
"	      004650c4    push eax"
"	      004650c5    call dword ptr ds:[6C38B4h]"
"	      004650cb    mov [ebp-1C8h],eax"
"	      004650d1    cmp dword ptr [ebp-1C8h],0"
"	      004650d8    jne near ptr 00465122h"
"	      004650de    push 0FFFh"
"	      004650e3    lea eax,[ebp-188h]"
"	      004650e9    push eax"
"	      004650ea    mov ecx,3E8h"
"	      004650ef    mov eax,[ebp-4]"
"	      004650f2    sub edx,edx"
"	      004650f4    div ecx"
"	      004650f6    push edx"
"	      004650f7    mov eax,ds:[5C28C8h]"
"	      004650fc    push eax"
"	      004650fd    call dword ptr ds:[6C38B4h]"
"	      00465103    mov [ebp-1C8h],eax"
"	      00465109    push 597200h"
"	      0046510e    lea eax,[ebp-188h]"
"	      00465114    push eax"
"	      00465115    call 0056CEC0h"
"	      0046511a    add esp,8"
"	      0046511d    jmp near ptr 00465127h"
"	      00465122    jmp near ptr 00465127h"
);
// LINE 1224:
	asm( 
"	      00465127    lea eax,[ebp-188h]"
"	      0046512d    push eax"
"	      0046512e    mov ecx,604530h"
"	      00465133    call 0046DCCDh"
);
// LINE 1225:
	asm( 
"	      00465138    push 0"
"	      0046513a    push 227h"
"	      0046513f    call 0042B15Fh"
"	      00465144    add esp,8"
"	      00465147    mov [ebp-4],eax"
);
// LINE 1226:
	asm( 
"	      0046514a    push 0FFFh"
"	      0046514f    lea eax,[ebp-188h]"
"	      00465155    push eax"
"	      00465156    mov eax,[ebp-4]"
"	      00465159    push eax"
"	      0046515a    mov eax,ds:[5C28C8h]"
"	      0046515f    push eax"
"	      00465160    call dword ptr ds:[6C38B4h]"
"	      00465166    mov [ebp-1CCh],eax"
"	      0046516c    cmp dword ptr [ebp-1CCh],0"
"	      00465173    jne near ptr 004651BDh"
"	      00465179    push 0FFFh"
"	      0046517e    lea eax,[ebp-188h]"
"	      00465184    push eax"
"	      00465185    mov ecx,3E8h"
"	      0046518a    mov eax,[ebp-4]"
"	      0046518d    sub edx,edx"
"	      0046518f    div ecx"
"	      00465191    push edx"
"	      00465192    mov eax,ds:[5C28C8h]"
"	      00465197    push eax"
"	      00465198    call dword ptr ds:[6C38B4h]"
"	      0046519e    mov [ebp-1CCh],eax"
"	      004651a4    push 597200h"
"	      004651a9    lea eax,[ebp-188h]"
"	      004651af    push eax"
"	      004651b0    call 0056CEC0h"
"	      004651b5    add esp,8"
"	      004651b8    jmp near ptr 004651C2h"
"	      004651bd    jmp near ptr 004651C2h"
);
// LINE 1227:
	asm( 
"	      004651c2    lea eax,[ebp-188h]"
"	      004651c8    push eax"
"	      004651c9    mov ecx,604530h"
"	      004651ce    call 0046DCCDh"
);
// LINE 1230:
	asm( 
"	      004651d3    lea eax,[ebp-108h]"
"	      004651d9    push eax"
"	      004651da    mov eax,ds:[599290h]"
"	      004651df    push eax"
"	      004651e0    push 0"
"	      004651e2    push 2"
"	      004651e4    call 0049172Bh"
"	      004651e9    add esp,10h"
);
// LINE 1231:
	asm( 
"	      004651ec    push 7Ah"
"	      004651ee    call 0056A600h"
"	      004651f3    add esp,4"
"	      004651f6    mov [ebp-190h],eax"
"	      004651fc    cmp dword ptr [ebp-190h],0"
"	      00465203    je near ptr 0046533Dh"
"	      00465209    or dword ptr [ebp-19Ch],1"
"	      00465210    push 10h"
"	      00465212    call 0056A600h"
"	      00465217    add esp,4"
"	      0046521a    mov [ebp-1BCh],eax"
"	      00465220    cmp dword ptr [ebp-1BCh],0"
"	      00465227    je near ptr 004652F9h"
"	      0046522d    lea eax,[ebp-108h]"
"	      00465233    push eax"
"	      00465234    call 0056ABE0h"
"	      00465239    add esp,4"
"	      0046523c    mov ecx,[ebp-1BCh]"
"	      00465242    mov [ecx+4],eax"
"	      00465245    jmp near ptr 0046524Ah"
"	      0046524a    mov eax,[ebp-1BCh]"
"	      00465250    mov eax,[eax+4]"
"	      00465253    mov ecx,[ebp-1BCh]"
"	      00465259    mov [ecx+8],eax"
"	      0046525c    mov eax,[ebp-1BCh]"
"	      00465262    cmp dword ptr [eax+8],0"
"	      00465266    je near ptr 004652CAh"
"	      0046526c    mov eax,[ebp-1BCh]"
"	      00465272    mov eax,[eax+8]"
"	      00465275    push eax"
"	      00465276    call 0056A600h"
"	      0046527b    add esp,4"
"	      0046527e    mov ecx,[ebp-1BCh]"
"	      00465284    mov [ecx],eax"
"	      00465286    mov eax,[ebp-1BCh]"
"	      0046528c    mov eax,[eax+4]"
"	      0046528f    mov [ebp-1C0h],eax"
"	      00465295    mov eax,[ebp-1BCh]"
"	      0046529b    mov eax,[eax]"
"	      0046529d    mov [ebp-1C4h],eax"
"	      004652a3    mov eax,[ebp-1C0h]"
"	      004652a9    push eax"
"	      004652aa    lea eax,[ebp-108h]"
"	      004652b0    push eax"
"	      004652b1    mov eax,[ebp-1C4h]"
"	      004652b7    push eax"
"	      004652b8    call 0056A800h"
"	      004652bd    add esp,0Ch"
"	      004652c0    jmp near ptr 004652C5h"
"	      004652c5    jmp near ptr 004652D6h"
"	      004652ca    mov eax,[ebp-1BCh]"
"	      004652d0    mov dword ptr [eax],0"
"	      004652d6    mov eax,[ebp-1BCh]"
"	      004652dc    mov dword ptr [eax+0Ch],1"
"	      004652e3    jmp near ptr 004652E8h"
"	      004652e8    mov eax,[ebp-1BCh]"
"	      004652ee    mov [ebp-194h],eax"
"	      004652f4    jmp near ptr 00465303h"
"	      004652f9    mov dword ptr [ebp-194h],0"
"	      00465303    mov dword ptr [ebp-198h],0"
"	      0046530d    jmp near ptr 00465312h"
"	      00465312    lea eax,[ebp-198h]"
"	      00465318    mov [ebp-1A0h],eax"
"	      0046531e    push 0"
"	      00465320    mov eax,[ebp-1A0h]"
"	      00465326    push eax"
"	      00465327    mov ecx,[ebp-190h]"
"	      0046532d    call 0042F00Fh"
"	      00465332    mov [ebp-18Ch],eax"
"	      00465338    jmp near ptr 00465347h"
"	      0046533d    mov dword ptr [ebp-18Ch],0"
"	      00465347    test byte ptr [ebp-19Ch],1"
"	      0046534e    je near ptr 00465451h"
"	      00465354    and dword ptr [ebp-19Ch],0FFFFFFFEh"
"	      0046535b    mov eax,[ebp-194h]"
"	      00465361    dec dword ptr [eax+0Ch]"
"	      00465364    mov eax,[ebp-194h]"
"	      0046536a    cmp dword ptr [eax+0Ch],0"
"	      0046536e    jne near ptr 0046540Eh"
"	      00465374    mov eax,[ebp-194h]"
"	      0046537a    mov [ebp-1B0h],eax"
"	      00465380    mov eax,[ebp-1B0h]"
"	      00465386    mov [ebp-1ACh],eax"
"	      0046538c    cmp dword ptr [ebp-1ACh],0"
"	      00465393    je near ptr 0046540Eh"
"	      00465399    mov eax,[ebp-1ACh]"
"	      0046539f    cmp dword ptr [eax+8],0"
"	      004653a3    je near ptr 004653EBh"
"	      004653a9    mov eax,[ebp-1ACh]"
"	      004653af    mov eax,[eax]"
"	      004653b1    mov [ebp-1B4h],eax"
"	      004653b7    mov eax,[ebp-1B4h]"
"	      004653bd    mov [ebp-1B8h],eax"
"	      004653c3    mov eax,[ebp-1B8h]"
"	      004653c9    push eax"
"	      004653ca    call 0056A740h"
"	      004653cf    add esp,4"
"	      004653d2    mov eax,[ebp-1ACh]"
"	      004653d8    mov dword ptr [eax+8],0"
"	      004653df    mov eax,[ebp-1ACh]"
"	      004653e5    mov dword ptr [eax],0"
"	      004653eb    jmp near ptr 004653F0h"
"	      004653f0    jmp near ptr 004653F5h"
"	      004653f5    mov eax,[ebp-1ACh]"
"	      004653fb    push eax"
"	      004653fc    call 0056A740h"
"	      00465401    add esp,4"
"	      00465404    jmp near ptr 00465409h"
"	      00465409    jmp near ptr 0046540Eh"
"	      0046540e    jmp near ptr 00465413h"
"	      00465413    cmp dword ptr [ebp-198h],0"
"	      0046541a    je near ptr 00465447h"
"	      00465420    mov eax,[ebp-198h]"
"	      00465426    mov [ebp-1A4h],eax"
"	      0046542c    mov eax,[ebp-1A4h]"
"	      00465432    mov [ebp-1A8h],eax"
"	      00465438    mov eax,[ebp-1A8h]"
"	      0046543e    push eax"
"	      0046543f    call 0056A740h"
"	      00465444    add esp,4"
"	      00465447    jmp near ptr 0046544Ch"
"	      0046544c    jmp near ptr 00465451h"
);
// LINE 1232:
	asm( 
"	      00465451    mov eax,[ebp-18Ch]"
"	      00465457    push eax"
"	      00465458    push 43E250h"
"	      0046545d    mov eax,[ebp-18Ch]"
"	      00465463    mov eax,[eax]"
"	      00465465    mov ecx,[ebp-18Ch]"
"	      0046546b    call dword ptr [eax+14h]"
);
// LINE 1233:
	asm( 
"	      0046546e    mov eax,ds:[5C37F0h]"
"	      00465473    push eax"
"	      00465474    mov eax,[ebp-18Ch]"
"	      0046547a    mov eax,[eax]"
"	      0046547c    mov ecx,[ebp-18Ch]"
"	      00465482    call dword ptr [eax+24h]"
);
// LINE 1234:
	asm( 
"	      00465485    push 1"
"	      00465487    push 0"
"	      00465489    mov eax,[ebp-18Ch]"
"	      0046548f    mov eax,[eax]"
"	      00465491    mov ecx,[ebp-18Ch]"
"	      00465497    call dword ptr [eax+8]"
);
// LINE 1235:
	asm( 
"	      0046549a    jmp near ptr 0046549Fh"
"	      0046549f    pop edi"
"	      004654a0    pop esi"
"	      004654a1    pop ebx"
"	      004654a2    leave"
"	      004654a3    ret"
);
}

// FUNCTION: COPTER_D 0x004654a4
public: virtual int __thiscall CGameApp::DoMessage(class GraphicWindow *, long, long, void *) {
// LINE 1241:
	asm( 
"	      004654a4    push ebp"
"	      004654a5    mov ebp,esp"
"	      004654a7    sub esp,50h"
"	      004654aa    push ebx"
"	      004654ab    push esi"
"	      004654ac    push edi"
"	      004654ad    mov [ebp-50h],ecx"
);
// LINE 1242:
	asm( 
"	      004654b0    mov eax,[ebp-50h]"
"	      004654b3    mov eax,[eax+4324h]"
"	      004654b9    mov [ebp-30h],eax"
"	      004654bc    mov eax,[ebp-30h]"
"	      004654bf    mov [ebp-2Ch],eax"
"	      004654c2    jmp near ptr 004654C7h"
"	      004654c7    jmp near ptr 004654CCh"
"	      004654cc    mov eax,[ebp-2Ch]"
"	      004654cf    mov eax,[eax+4]"
"	      004654d2    mov [ebp-2Ch],eax"
"	      004654d5    jmp near ptr 004654DAh"
"	      004654da    jmp near ptr 004654DFh"
"	      004654df    jmp near ptr 004654E4h"
"	      004654e4    mov eax,[ebp-2Ch]"
"	      004654e7    mov eax,[eax+8]"
"	      004654ea    mov [ebp-4],eax"
);
// LINE 1245:
	asm( 
"	      004654ed    cmp dword ptr [ebp+0Ch],7DAh"
"	      004654f4    je near ptr 00465507h"
"	      004654fa    cmp dword ptr [ebp+0Ch],7D9h"
"	      00465501    jne near ptr 0046558Fh"
);
// LINE 1246:
	asm( 
"	      00465507    mov ecx,[ebp-50h]"
"	      0046550a    sub ecx,14h"
"	      0046550d    call 0043F8CCh"
);
// LINE 1247:
	asm( 
"	      00465512    mov eax,[ebp-50h]"
"	      00465515    cmp dword ptr [eax+10h],0"
"	      00465519    je near ptr 00465544h"
);
// LINE 1248:
	asm( 
"	      0046551f    mov ecx,[ebp-50h]"
"	      00465522    mov eax,[ebp-50h]"
"	      00465525    mov eax,[eax-14h]"
"	      00465528    sub ecx,14h"
"	      0046552b    call dword ptr [eax+78h]"
);
// LINE 1249:
	asm( 
"	      0046552e    push 1"
"	      00465530    mov ecx,[ebp-50h]"
"	      00465533    mov eax,[ebp-50h]"
"	      00465536    mov eax,[eax-14h]"
"	      00465539    sub ecx,14h"
"	      0046553c    call dword ptr [eax+68h]"
);
// LINE 1251:
	asm( 
"	      0046553f    jmp near ptr 0046558Ah"
"	      00465544    mov eax,[ebp-50h]"
"	      00465547    cmp dword ptr [eax+14h],0"
"	      0046554b    je near ptr 0046558Ah"
);
// LINE 1252:
	asm( 
"	      00465551    mov eax,[ebp-50h]"
"	      00465554    mov dword ptr [eax+14h],0"
);
// LINE 1253:
	asm( 
"	      0046555b    mov eax,[ebp-50h]"
"	      0046555e    mov dword ptr [eax+90h],0"
);
// LINE 1254:
	asm( 
"	      00465568    push 6"
"	      0046556a    mov ecx,[ebp-50h]"
"	      0046556d    mov eax,[ebp-50h]"
"	      00465570    mov eax,[eax-14h]"
"	      00465573    sub ecx,14h"
"	      00465576    call dword ptr [eax+6Ch]"
);
// LINE 1255:
	asm( 
"	      00465579    push 4"
"	      0046557b    mov ecx,[ebp-50h]"
"	      0046557e    mov eax,[ebp-50h]"
"	      00465581    mov eax,[eax-14h]"
"	      00465584    sub ecx,14h"
"	      00465587    call dword ptr [eax+68h]"
);
// LINE 1258:
	asm( 
"	      0046558a    jmp near ptr 00465ECDh"
"	      0046558f    cmp dword ptr [ebp+0Ch],7DFh"
"	      00465596    jne near ptr 004656F4h"
);
// LINE 1259:
	asm( 
"	      0046559c    mov ecx,[ebp-50h]"
"	      0046559f    sub ecx,14h"
"	      004655a2    call 0043F8CCh"
);
// LINE 1260:
	asm( 
"	      004655a7    cmp dword ptr [ebp+10h],1"
"	      004655ab    jne near ptr 004656EFh"
);
// LINE 1261:
	asm( 
"	      004655b1    push 10h"
"	      004655b3    call 0056A600h"
"	      004655b8    add esp,4"
"	      004655bb    mov [ebp-34h],eax"
"	      004655be    cmp dword ptr [ebp-34h],0"
"	      004655c2    je near ptr 00465601h"
"	      004655c8    mov eax,[ebp-34h]"
"	      004655cb    mov dword ptr [eax+4],0"
"	      004655d2    mov eax,[ebp-34h]"
"	      004655d5    mov eax,[eax+4]"
"	      004655d8    mov ecx,[ebp-34h]"
"	      004655db    mov [ecx+8],eax"
"	      004655de    mov eax,[ebp-34h]"
"	      004655e1    mov dword ptr [eax],0"
"	      004655e7    mov eax,[ebp-34h]"
"	      004655ea    mov dword ptr [eax+0Ch],1"
"	      004655f1    jmp near ptr 004655F6h"
"	      004655f6    mov eax,[ebp-34h]"
"	      004655f9    mov [ebp-0Ch],eax"
"	      004655fc    jmp near ptr 00465608h"
"	      00465601    mov dword ptr [ebp-0Ch],0"
"	      00465608    mov dword ptr [ebp-10h],0"
"	      0046560f    jmp near ptr 00465614h"
);
// LINE 1262:
	asm( 
"	      00465614    lea eax,[ebp-10h]"
"	      00465617    push eax"
"	      00465618    mov eax,[ebp+8]"
"	      0046561b    mov eax,[eax]"
"	      0046561d    mov ecx,[ebp+8]"
"	      00465620    call dword ptr [eax+0D8h]"
);
// LINE 1263:
	asm( 
"	      00465626    lea eax,[ebp-10h]"
"	      00465629    push eax"
"	      0046562a    mov ecx,[ebp-50h]"
"	      0046562d    sub ecx,14h"
"	      00465630    call 0043FBCDh"
"	      00465635    mov [ebp-18h],eax"
"	      00465638    mov eax,[ebp-0Ch]"
"	      0046563b    dec dword ptr [eax+0Ch]"
"	      0046563e    mov eax,[ebp-0Ch]"
"	      00465641    cmp dword ptr [eax+0Ch],0"
"	      00465645    jne near ptr 004656BBh"
"	      0046564b    mov eax,[ebp-0Ch]"
"	      0046564e    mov [ebp-44h],eax"
"	      00465651    mov eax,[ebp-44h]"
"	      00465654    mov [ebp-40h],eax"
"	      00465657    cmp dword ptr [ebp-40h],0"
"	      0046565b    je near ptr 004656BBh"
"	      00465661    mov eax,[ebp-40h]"
"	      00465664    cmp dword ptr [eax+8],0"
"	      00465668    je near ptr 0046569Bh"
"	      0046566e    mov eax,[ebp-40h]"
"	      00465671    mov eax,[eax]"
"	      00465673    mov [ebp-48h],eax"
"	      00465676    mov eax,[ebp-48h]"
"	      00465679    mov [ebp-4Ch],eax"
"	      0046567c    mov eax,[ebp-4Ch]"
"	      0046567f    push eax"
"	      00465680    call 0056A740h"
"	      00465685    add esp,4"
"	      00465688    mov eax,[ebp-40h]"
"	      0046568b    mov dword ptr [eax+8],0"
"	      00465692    mov eax,[ebp-40h]"
"	      00465695    mov dword ptr [eax],0"
"	      0046569b    jmp near ptr 004656A0h"
"	      004656a0    jmp near ptr 004656A5h"
"	      004656a5    mov eax,[ebp-40h]"
"	      004656a8    push eax"
"	      004656a9    call 0056A740h"
"	      004656ae    add esp,4"
"	      004656b1    jmp near ptr 004656B6h"
"	      004656b6    jmp near ptr 004656BBh"
"	      004656bb    jmp near ptr 004656C0h"
"	      004656c0    cmp dword ptr [ebp-10h],0"
"	      004656c4    je near ptr 004656E2h"
"	      004656ca    mov eax,[ebp-10h]"
"	      004656cd    mov [ebp-38h],eax"
"	      004656d0    mov eax,[ebp-38h]"
"	      004656d3    mov [ebp-3Ch],eax"
"	      004656d6    mov eax,[ebp-3Ch]"
"	      004656d9    push eax"
"	      004656da    call 0056A740h"
"	      004656df    add esp,4"
"	      004656e2    jmp near ptr 004656E7h"
"	      004656e7    mov eax,[ebp-18h]"
"	      004656ea    jmp near ptr 00465ED4h"
);
// LINE 1266:
	asm( 
"	      004656ef    jmp near ptr 00465ECDh"
"	      004656f4    cmp dword ptr [ebp+0Ch],7E0h"
"	      004656fb    jne near ptr 00465738h"
);
// LINE 1267:
	asm( 
"	      00465701    mov ecx,[ebp-50h]"
"	      00465704    sub ecx,14h"
"	      00465707    call 0043F8CCh"
);
// LINE 1268:
	asm( 
"	      0046570c    mov ecx,[ebp-50h]"
"	      0046570f    mov eax,[ebp-50h]"
"	      00465712    mov eax,[eax-14h]"
"	      00465715    sub ecx,14h"
"	      00465718    call dword ptr [eax+78h]"
);
// LINE 1269:
	asm( 
"	      0046571b    push 1"
"	      0046571d    mov ecx,[ebp-50h]"
"	      00465720    mov eax,[ebp-50h]"
"	      00465723    mov eax,[eax-14h]"
"	      00465726    sub ecx,14h"
"	      00465729    call dword ptr [eax+68h]"
);
// LINE 1270:
	asm( 
"	      0046572c    xor eax,eax"
"	      0046572e    jmp near ptr 00465ED4h"
);
// LINE 1272:
	asm( 
"	      00465733    jmp near ptr 00465ECDh"
"	      00465738    cmp dword ptr [ebp+0Ch],7D2h"
"	      0046573f    jne near ptr 00465771h"
);
// LINE 1273:
	asm( 
"	      00465745    mov eax,[ebp+14h]"
"	      00465748    push eax"
"	      00465749    mov eax,[ebp+10h]"
"	      0046574c    push eax"
"	      0046574d    mov eax,[ebp+0Ch]"
"	      00465750    push eax"
"	      00465751    mov eax,[ebp+8]"
"	      00465754    push eax"
"	      00465755    mov ecx,[ebp-50h]"
"	      00465758    mov eax,[ebp-50h]"
"	      0046575b    mov eax,[eax-14h]"
"	      0046575e    sub ecx,14h"
"	      00465761    call dword ptr [eax+80h]"
"	      00465767    jmp near ptr 00465ED4h"
);
// LINE 1276:
	asm( 
"	      0046576c    jmp near ptr 00465ECDh"
"	      00465771    cmp dword ptr [ebp+0Ch],7D3h"
"	      00465778    jne near ptr 004657A7h"
);
// LINE 1277:
	asm( 
"	      0046577e    mov eax,[ebp+14h]"
"	      00465781    push eax"
"	      00465782    mov eax,[ebp+10h]"
"	      00465785    push eax"
"	      00465786    mov eax,[ebp+0Ch]"
"	      00465789    push eax"
"	      0046578a    mov eax,[ebp+8]"
"	      0046578d    push eax"
"	      0046578e    mov ecx,[ebp-50h]"
"	      00465791    mov eax,[ebp-50h]"
"	      00465794    mov eax,[eax-14h]"
"	      00465797    sub ecx,14h"
"	      0046579a    call dword ptr [eax+7Ch]"
"	      0046579d    jmp near ptr 00465ED4h"
);
// LINE 1280:
	asm( 
"	      004657a2    jmp near ptr 00465ECDh"
"	      004657a7    cmp dword ptr [ebp+0Ch],7D7h"
"	      004657ae    jne near ptr 00465890h"
);
// LINE 1281:
	asm( 
"	      004657b4    cmp dword ptr [ebp+10h],3EAh"
"	      004657bb    je near ptr 004657CEh"
"	      004657c1    cmp dword ptr [ebp+10h],3E9h"
"	      004657c8    jne near ptr 00465881h"
);
// LINE 1282:
	asm( 
"	      004657ce    mov eax,[ebp+8]"
"	      004657d1    mov eax,[eax+74h]"
"	      004657d4    mov [ebp-14h],eax"
"	      004657d7    jmp near ptr 004657DCh"
);
// LINE 1283:
	asm( 
"	      004657dc    mov eax,[ebp+8]"
"	      004657df    mov eax,[eax]"
"	      004657e1    mov ecx,[ebp+8]"
"	      004657e4    call dword ptr [eax+6Ch]"
);
// LINE 1284:
	asm( 
"	      004657e7    cmp dword ptr [ebp+10h],3EAh"
"	      004657ee    jne near ptr 0046581Bh"
);
// LINE 1285:
	asm( 
"	      004657f4    push 5"
"	      004657f6    mov ecx,[ebp-50h]"
"	      004657f9    mov eax,[ebp-50h]"
"	      004657fc    mov eax,[eax-14h]"
"	      004657ff    sub ecx,14h"
"	      00465802    call dword ptr [eax+6Ch]"
);
// LINE 1286:
	asm( 
"	      00465805    push 4"
"	      00465807    mov ecx,[ebp-50h]"
"	      0046580a    mov eax,[ebp-50h]"
"	      0046580d    mov eax,[eax-14h]"
"	      00465810    sub ecx,14h"
"	      00465813    call dword ptr [eax+68h]"
);
// LINE 1288:
	asm( 
"	      00465816    jmp near ptr 00465881h"
);
// LINE 1289:
	asm( 
"	      0046581b    mov eax,[ebp-50h]"
"	      0046581e    cmp dword ptr [eax+88h],0"
"	      00465825    je near ptr 0046583Ch"
);
// LINE 1290:
	asm( 
"	      0046582b    mov eax,[ebp-14h]"
"	      0046582e    push eax"
"	      0046582f    call 0042939Bh"
"	      00465834    add esp,4"
);
// LINE 1291:
	asm( 
"	      00465837    jmp near ptr 00465848h"
);
// LINE 1292:
	asm( 
"	      0046583c    mov eax,[ebp-14h]"
"	      0046583f    push eax"
"	      00465840    call 00429760h"
"	      00465845    add esp,4"
);
// LINE 1298:
	asm( 
"	      00465848    mov eax,[ebp-14h]"
"	      0046584b    push eax"
"	      0046584c    mov ecx,[ebp-50h]"
"	      0046584f    sub ecx,14h"
"	      00465852    call 004665ADh"
"	      00465857    test eax,eax"
"	      00465859    jne near ptr 00465881h"
);
// LINE 1299:
	asm( 
"	      0046585f    push 5"
"	      00465861    mov ecx,[ebp-50h]"
"	      00465864    mov eax,[ebp-50h]"
"	      00465867    mov eax,[eax-14h]"
"	      0046586a    sub ecx,14h"
"	      0046586d    call dword ptr [eax+6Ch]"
);
// LINE 1300:
	asm( 
"	      00465870    push 6"
"	      00465872    mov ecx,[ebp-50h]"
"	      00465875    mov eax,[ebp-50h]"
"	      00465878    mov eax,[eax-14h]"
"	      0046587b    sub ecx,14h"
"	      0046587e    call dword ptr [eax+68h]"
);
// LINE 1304:
	asm( 
"	      00465881    mov eax,1"
"	      00465886    jmp near ptr 00465ED4h"
);
// LINE 1306:
	asm( 
"	      0046588b    jmp near ptr 00465ECDh"
"	      00465890    cmp dword ptr [ebp+0Ch],7DEh"
"	      00465897    jne near ptr 0046592Ah"
);
// LINE 1307:
	asm( 
"	      0046589d    mov ecx,[ebp-50h]"
"	      004658a0    sub ecx,14h"
"	      004658a3    call 0043F8CCh"
);
// LINE 1308:
	asm( 
"	      004658a8    cmp dword ptr [ebp+10h],2"
"	      004658ac    jne near ptr 00465911h"
);
// LINE 1309:
	asm( 
"	      004658b2    mov eax,[ebp-50h]"
"	      004658b5    mov dword ptr [eax+10h],1"
);
// LINE 1314:
	asm( 
"	      004658bc    cmp dword ptr [ebp-4],6"
"	      004658c0    jl near ptr 004658E2h"
);
// LINE 1315:
	asm( 
"	      004658c6    push 20002h"
"	      004658cb    push 31h"
"	      004658cd    push 7DDh"
"	      004658d2    mov ecx,[ebp-50h]"
"	      004658d5    sub ecx,14h"
"	      004658d8    call 0043F2B9h"
);
// LINE 1316:
	asm( 
"	      004658dd    jmp near ptr 0046590Ch"
);
// LINE 1317:
	asm( 
"	      004658e2    mov eax,[ebp-50h]"
"	      004658e5    mov dword ptr [eax+4],0"
);
// LINE 1318:
	asm( 
"	      004658ec    mov ecx,[ebp-50h]"
"	      004658ef    mov eax,[ebp-50h]"
"	      004658f2    mov eax,[eax-14h]"
"	      004658f5    sub ecx,14h"
"	      004658f8    call dword ptr [eax+78h]"
);
// LINE 1319:
	asm( 
"	      004658fb    push 1"
"	      004658fd    mov ecx,[ebp-50h]"
"	      00465900    mov eax,[ebp-50h]"
"	      00465903    mov eax,[eax-14h]"
"	      00465906    sub ecx,14h"
"	      00465909    call dword ptr [eax+68h]"
);
// LINE 1322:
	asm( 
"	      0046590c    jmp near ptr 0046591Bh"
);
// LINE 1323:
	asm( 
"	      00465911    mov eax,[ebp-50h]"
"	      00465914    mov dword ptr [eax+4],0"
);
// LINE 1324:
	asm( 
"	      0046591b    mov eax,1"
"	      00465920    jmp near ptr 00465ED4h"
);
// LINE 1326:
	asm( 
"	      00465925    jmp near ptr 00465ECDh"
"	      0046592a    cmp dword ptr [ebp+0Ch],7D4h"
"	      00465931    jne near ptr 004659A7h"
);
// LINE 1327:
	asm( 
"	      00465937    cmp dword ptr [ebp+10h],3EAh"
"	      0046593e    je near ptr 00465951h"
"	      00465944    cmp dword ptr [ebp+10h],3E9h"
"	      0046594b    jne near ptr 00465998h"
);
// LINE 1328:
	asm( 
"	      00465951    mov eax,[ebp+10h]"
"	      00465954    sub eax,3E9h"
"	      00465959    cmp eax,1"
"	      0046595c    sbb eax,eax"
"	      0046595e    neg eax"
"	      00465960    push eax"
"	      00465961    mov eax,[ebp+8]"
"	      00465964    push eax"
"	      00465965    mov ecx,[ebp-50h]"
"	      00465968    sub ecx,14h"
"	      0046596b    call 0044150Bh"
"	      00465970    push 7D3h"
"	      00465975    mov eax,[ebp-50h]"
"	      00465978    mov ecx,[ebp-50h]"
"	      0046597b    mov ecx,[ecx+24h]"
"	      0046597e    mov edx,[ecx]"
"	      00465980    mov ecx,[eax+24h]"
"	      00465983    call dword ptr [edx+74h]"
"	      00465986    mov [ebp-1Ch],eax"
);
// LINE 1329:
	asm( 
"	      00465989    mov eax,[ebp-1Ch]"
"	      0046598c    mov dword ptr [eax+54h],1"
"	      00465993    jmp near ptr 00465998h"
);
// LINE 1331:
	asm( 
"	      00465998    mov eax,1"
"	      0046599d    jmp near ptr 00465ED4h"
);
// LINE 1334:
	asm( 
"	      004659a2    jmp near ptr 00465ECDh"
"	      004659a7    cmp dword ptr [ebp+0Ch],7D8h"
"	      004659ae    jne near ptr 00465A24h"
);
// LINE 1335:
	asm( 
"	      004659b4    cmp dword ptr [ebp+10h],3EAh"
"	      004659bb    je near ptr 004659CEh"
"	      004659c1    cmp dword ptr [ebp+10h],3E9h"
"	      004659c8    jne near ptr 00465A15h"
);
// LINE 1336:
	asm( 
"	      004659ce    mov eax,[ebp+10h]"
"	      004659d1    sub eax,3E9h"
"	      004659d6    cmp eax,1"
"	      004659d9    sbb eax,eax"
"	      004659db    neg eax"
"	      004659dd    push eax"
"	      004659de    mov eax,[ebp+8]"
"	      004659e1    push eax"
"	      004659e2    mov ecx,[ebp-50h]"
"	      004659e5    sub ecx,14h"
"	      004659e8    call 00441B5Fh"
"	      004659ed    push 7D3h"
"	      004659f2    mov eax,[ebp-50h]"
"	      004659f5    mov ecx,[ebp-50h]"
"	      004659f8    mov ecx,[ecx+24h]"
"	      004659fb    mov edx,[ecx]"
"	      004659fd    mov ecx,[eax+24h]"
"	      00465a00    call dword ptr [edx+74h]"
"	      00465a03    mov [ebp-20h],eax"
);
// LINE 1337:
	asm( 
"	      00465a06    mov eax,[ebp-20h]"
"	      00465a09    mov dword ptr [eax+54h],1"
"	      00465a10    jmp near ptr 00465A15h"
);
// LINE 1339:
	asm( 
"	      00465a15    mov eax,1"
"	      00465a1a    jmp near ptr 00465ED4h"
);
// LINE 1342:
	asm( 
"	      00465a1f    jmp near ptr 00465ECDh"
"	      00465a24    cmp dword ptr [ebp+0Ch],7D5h"
"	      00465a2b    jne near ptr 00465AA1h"
);
// LINE 1343:
	asm( 
"	      00465a31    cmp dword ptr [ebp+10h],3EAh"
"	      00465a38    je near ptr 00465A4Bh"
"	      00465a3e    cmp dword ptr [ebp+10h],3E9h"
"	      00465a45    jne near ptr 00465A92h"
);
// LINE 1344:
	asm( 
"	      00465a4b    mov eax,[ebp+10h]"
"	      00465a4e    sub eax,3E9h"
"	      00465a53    cmp eax,1"
"	      00465a56    sbb eax,eax"
"	      00465a58    neg eax"
"	      00465a5a    push eax"
"	      00465a5b    mov eax,[ebp+8]"
"	      00465a5e    push eax"
"	      00465a5f    mov ecx,[ebp-50h]"
"	      00465a62    sub ecx,14h"
"	      00465a65    call 00441715h"
"	      00465a6a    push 7D3h"
"	      00465a6f    mov eax,[ebp-50h]"
"	      00465a72    mov ecx,[ebp-50h]"
"	      00465a75    mov ecx,[ecx+24h]"
"	      00465a78    mov edx,[ecx]"
"	      00465a7a    mov ecx,[eax+24h]"
"	      00465a7d    call dword ptr [edx+74h]"
"	      00465a80    mov [ebp-24h],eax"
);
// LINE 1345:
	asm( 
"	      00465a83    mov eax,[ebp-24h]"
"	      00465a86    mov dword ptr [eax+54h],1"
"	      00465a8d    jmp near ptr 00465A92h"
);
// LINE 1347:
	asm( 
"	      00465a92    mov eax,1"
"	      00465a97    jmp near ptr 00465ED4h"
);
// LINE 1350:
	asm( 
"	      00465a9c    jmp near ptr 00465ECDh"
"	      00465aa1    cmp dword ptr [ebp+0Ch],7D6h"
"	      00465aa8    jne near ptr 00465B1Eh"
);
// LINE 1351:
	asm( 
"	      00465aae    cmp dword ptr [ebp+10h],3EAh"
"	      00465ab5    je near ptr 00465AC8h"
"	      00465abb    cmp dword ptr [ebp+10h],3E9h"
"	      00465ac2    jne near ptr 00465B0Fh"
);
// LINE 1352:
	asm( 
"	      00465ac8    mov eax,[ebp+10h]"
"	      00465acb    sub eax,3E9h"
"	      00465ad0    cmp eax,1"
"	      00465ad3    sbb eax,eax"
"	      00465ad5    neg eax"
"	      00465ad7    push eax"
"	      00465ad8    mov eax,[ebp+8]"
"	      00465adb    push eax"
"	      00465adc    mov ecx,[ebp-50h]"
"	      00465adf    sub ecx,14h"
"	      00465ae2    call 004419B8h"
"	      00465ae7    push 7D3h"
"	      00465aec    mov eax,[ebp-50h]"
"	      00465aef    mov ecx,[ebp-50h]"
"	      00465af2    mov ecx,[ecx+24h]"
"	      00465af5    mov edx,[ecx]"
"	      00465af7    mov ecx,[eax+24h]"
"	      00465afa    call dword ptr [edx+74h]"
"	      00465afd    mov [ebp-28h],eax"
);
// LINE 1353:
	asm( 
"	      00465b00    mov eax,[ebp-28h]"
"	      00465b03    mov dword ptr [eax+54h],1"
"	      00465b0a    jmp near ptr 00465B0Fh"
);
// LINE 1355:
	asm( 
"	      00465b0f    mov eax,1"
"	      00465b14    jmp near ptr 00465ED4h"
);
// LINE 1357:
	asm( 
"	      00465b19    jmp near ptr 00465ECDh"
"	      00465b1e    cmp dword ptr [ebp+0Ch],7E1h"
"	      00465b25    jne near ptr 00465B73h"
);
// LINE 1358:
	asm( 
"	      00465b2b    cmp dword ptr [ebp+10h],3EAh"
"	      00465b32    je near ptr 00465B45h"
"	      00465b38    cmp dword ptr [ebp+10h],3E9h"
"	      00465b3f    jne near ptr 00465B64h"
);
// LINE 1359:
	asm( 
"	      00465b45    mov eax,[ebp+10h]"
"	      00465b48    sub eax,3E9h"
"	      00465b4d    cmp eax,1"
"	      00465b50    sbb eax,eax"
"	      00465b52    neg eax"
"	      00465b54    push eax"
"	      00465b55    mov eax,[ebp+8]"
"	      00465b58    push eax"
"	      00465b59    mov ecx,[ebp-50h]"
"	      00465b5c    sub ecx,14h"
"	      00465b5f    call 00441D86h"
);
// LINE 1360:
	asm( 
"	      00465b64    mov eax,1"
"	      00465b69    jmp near ptr 00465ED4h"
);
// LINE 1362:
	asm( 
"	      00465b6e    jmp near ptr 00465ECDh"
"	      00465b73    cmp dword ptr [ebp+0Ch],2711h"
"	      00465b7a    jne near ptr 00465B9Dh"
"	      00465b80    cmp dword ptr [ebp+10h],3E9h"
"	      00465b87    jne near ptr 00465B9Dh"
);
// LINE 1363:
	asm( 
"	      00465b8d    mov ecx,[ebp-50h]"
"	      00465b90    sub ecx,14h"
"	      00465b93    call 00441C9Fh"
);
// LINE 1365:
	asm( 
"	      00465b98    jmp near ptr 00465ECDh"
"	      00465b9d    cmp dword ptr [ebp+0Ch],835h"
"	      00465ba4    jne near ptr 00465C69h"
);
// LINE 1366:
	asm( 
"	      00465baa    cmp dword ptr [ebp+10h],1"
"	      00465bae    jne near ptr 00465C64h"
);
// LINE 1367:
	asm( 
"	      00465bb4    mov eax,[ebp+14h]"
"	      00465bb7    cmp dword ptr [eax],0"
"	      00465bba    jne near ptr 00465BE4h"
);
// LINE 1368:
	asm( 
"	      00465bc0    mov ecx,[ebp-50h]"
"	      00465bc3    add ecx,0BA4h"
"	      00465bc9    call 004C13F7h"
);
// LINE 1369:
	asm( 
"	      00465bce    push 8"
"	      00465bd0    mov ecx,[ebp-50h]"
"	      00465bd3    mov eax,[ebp-50h]"
"	      00465bd6    mov eax,[eax-14h]"
"	      00465bd9    sub ecx,14h"
"	      00465bdc    call dword ptr [eax+68h]"
);
// LINE 1371:
	asm( 
"	      00465bdf    jmp near ptr 00465C64h"
"	      00465be4    mov eax,[ebp+14h]"
"	      00465be7    cmp dword ptr [eax],1"
"	      00465bea    jne near ptr 00465C14h"
);
// LINE 1372:
	asm( 
"	      00465bf0    mov ecx,[ebp-50h]"
"	      00465bf3    add ecx,0BA4h"
"	      00465bf9    call 004C13F7h"
);
// LINE 1373:
	asm( 
"	      00465bfe    push 9"
"	      00465c00    mov ecx,[ebp-50h]"
"	      00465c03    mov eax,[ebp-50h]"
"	      00465c06    mov eax,[eax-14h]"
"	      00465c09    sub ecx,14h"
"	      00465c0c    call dword ptr [eax+68h]"
);
// LINE 1375:
	asm( 
"	      00465c0f    jmp near ptr 00465C64h"
"	      00465c14    mov eax,[ebp+14h]"
"	      00465c17    cmp dword ptr [eax],2"
"	      00465c1a    jne near ptr 00465C44h"
);
// LINE 1376:
	asm( 
"	      00465c20    mov ecx,[ebp-50h]"
"	      00465c23    add ecx,0BA4h"
"	      00465c29    call 004C13F7h"
);
// LINE 1377:
	asm( 
"	      00465c2e    push 0Bh"
"	      00465c30    mov ecx,[ebp-50h]"
"	      00465c33    mov eax,[ebp-50h]"
"	      00465c36    mov eax,[eax-14h]"
"	      00465c39    sub ecx,14h"
"	      00465c3c    call dword ptr [eax+68h]"
);
// LINE 1379:
	asm( 
"	      00465c3f    jmp near ptr 00465C64h"
"	      00465c44    mov eax,[ebp+14h]"
"	      00465c47    cmp dword ptr [eax],63h"
"	      00465c4a    jne near ptr 00465C64h"
);
// LINE 1380:
	asm( 
"	      00465c50    push 1"
"	      00465c52    mov ecx,[ebp-50h]"
"	      00465c55    mov eax,[ebp-50h]"
"	      00465c58    mov eax,[eax-14h]"
"	      00465c5b    sub ecx,14h"
"	      00465c5e    call dword ptr [eax+9Ch]"
);
// LINE 1384:
	asm( 
"	      00465c64    jmp near ptr 00465ECDh"
"	      00465c69    cmp dword ptr [ebp+0Ch],836h"
"	      00465c70    jne near ptr 00465C99h"
);
// LINE 1385:
	asm( 
"	      00465c76    cmp dword ptr [ebp+10h],3"
"	      00465c7a    jne near ptr 00465C94h"
);
// LINE 1386:
	asm( 
"	      00465c80    push 1"
"	      00465c82    mov ecx,[ebp-50h]"
"	      00465c85    mov eax,[ebp-50h]"
"	      00465c88    mov eax,[eax-14h]"
"	      00465c8b    sub ecx,14h"
"	      00465c8e    call dword ptr [eax+9Ch]"
);
// LINE 1388:
	asm( 
"	      00465c94    jmp near ptr 00465ECDh"
"	      00465c99    cmp dword ptr [ebp+0Ch],838h"
"	      00465ca0    jne near ptr 00465CC9h"
);
// LINE 1389:
	asm( 
"	      00465ca6    cmp dword ptr [ebp+10h],1"
"	      00465caa    jne near ptr 00465CC4h"
);
// LINE 1390:
	asm( 
"	      00465cb0    push 1"
"	      00465cb2    mov ecx,[ebp-50h]"
"	      00465cb5    mov eax,[ebp-50h]"
"	      00465cb8    mov eax,[eax-14h]"
"	      00465cbb    sub ecx,14h"
"	      00465cbe    call dword ptr [eax+9Ch]"
);
// LINE 1392:
	asm( 
"	      00465cc4    jmp near ptr 00465ECDh"
"	      00465cc9    cmp dword ptr [ebp+0Ch],7DBh"
"	      00465cd0    jne near ptr 00465CFDh"
);
// LINE 1395:
	asm( 
"	      00465cd6    push 6"
"	      00465cd8    mov ecx,[ebp-50h]"
"	      00465cdb    mov eax,[ebp-50h]"
"	      00465cde    mov eax,[eax-14h]"
"	      00465ce1    sub ecx,14h"
"	      00465ce4    call dword ptr [eax+6Ch]"
);
// LINE 1396:
	asm( 
"	      00465ce7    push 1"
"	      00465ce9    mov ecx,[ebp-50h]"
"	      00465cec    mov eax,[ebp-50h]"
"	      00465cef    mov eax,[eax-14h]"
"	      00465cf2    sub ecx,14h"
"	      00465cf5    call dword ptr [eax+68h]"
);
// LINE 1398:
	asm( 
"	      00465cf8    jmp near ptr 00465ECDh"
"	      00465cfd    cmp dword ptr [ebp+0Ch],7DCh"
"	      00465d04    jne near ptr 00465D48h"
);
// LINE 1401:
	asm( 
"	      00465d0a    cmp dword ptr [ebp+10h],2"
"	      00465d0e    jne near ptr 00465D1Fh"
);
// LINE 1402:
	asm( 
"	      00465d14    mov ecx,[ebp-50h]"
"	      00465d17    sub ecx,14h"
"	      00465d1a    call 00427F98h"
);
// LINE 1403:
	asm( 
"	      00465d1f    mov eax,[ebp-4]"
"	      00465d22    push eax"
"	      00465d23    mov ecx,[ebp-50h]"
"	      00465d26    mov eax,[ebp-50h]"
"	      00465d29    mov eax,[eax-14h]"
"	      00465d2c    sub ecx,14h"
"	      00465d2f    call dword ptr [eax+6Ch]"
);
// LINE 1404:
	asm( 
"	      00465d32    push 1"
"	      00465d34    mov ecx,[ebp-50h]"
"	      00465d37    mov eax,[ebp-50h]"
"	      00465d3a    mov eax,[eax-14h]"
"	      00465d3d    sub ecx,14h"
"	      00465d40    call dword ptr [eax+68h]"
);
// LINE 1406:
	asm( 
"	      00465d43    jmp near ptr 00465ECDh"
"	      00465d48    cmp dword ptr [ebp+0Ch],7DDh"
"	      00465d4f    jne near ptr 00465ECDh"
);
// LINE 1407:
	asm( 
"	      00465d55    mov eax,[ebp-50h]"
"	      00465d58    mov dword ptr [eax+4],0"
);
// LINE 1408:
	asm( 
"	      00465d5f    mov ecx,[ebp-50h]"
"	      00465d62    sub ecx,14h"
"	      00465d65    call 0043F8CCh"
);
// LINE 1409:
	asm( 
"	      00465d6a    cmp dword ptr [ebp+10h],2"
"	      00465d6e    jne near ptr 00465E55h"
);
// LINE 1410:
	asm( 
"	      00465d74    call 0042913Fh"
"	      00465d79    test eax,eax"
"	      00465d7b    jne near ptr 00465DF0h"
);
// LINE 1411:
	asm( 
"	      00465d81    mov ecx,[ebp-50h]"
"	      00465d84    sub ecx,14h"
"	      00465d87    call 00427F98h"
"	      00465d8c    mov [ebp-8],eax"
);
// LINE 1412:
	asm( 
"	      00465d8f    cmp dword ptr [ebp-8],0"
"	      00465d93    je near ptr 00465DC3h"
"	      00465d99    cmp dword ptr [ebp-8],9"
"	      00465d9d    je near ptr 00465DC3h"
);
// LINE 1413:
	asm( 
"	      00465da3    mov eax,[ebp-8]"
"	      00465da6    push eax"
"	      00465da7    mov ecx,[ebp-50h]"
"	      00465daa    sub ecx,14h"
"	      00465dad    call 00428C38h"
);
// LINE 1414:
	asm( 
"	      00465db2    mov eax,[ebp-50h]"
"	      00465db5    mov dword ptr [eax+14h],0"
);
// LINE 1415:
	asm( 
"	      00465dbc    xor eax,eax"
"	      00465dbe    jmp near ptr 00465ED4h"
);
// LINE 1417:
	asm( 
"	      00465dc3    cmp dword ptr [ebp-8],0"
"	      00465dc7    jne near ptr 00465DEBh"
);
// LINE 1418:
	asm( 
"	      00465dcd    push 1"
"	      00465dcf    push 30h"
"	      00465dd1    push 7DAh"
"	      00465dd6    mov ecx,[ebp-50h]"
"	      00465dd9    sub ecx,14h"
"	      00465ddc    call 0043F2B9h"
);
// LINE 1419:
	asm( 
"	      00465de1    mov eax,1"
"	      00465de6    jmp near ptr 00465ED4h"
);
// LINE 1422:
	asm( 
"	      00465deb    jmp near ptr 00465E55h"
);
// LINE 1423:
	asm( 
"	      00465df0    push 5C2918h"
"	      00465df5    push 5C33E8h"
"	      00465dfa    mov ecx,[ebp-50h]"
"	      00465dfd    sub ecx,14h"
"	      00465e00    call 00427BF4h"
"	      00465e05    mov [ebp-8],eax"
);
// LINE 1424:
	asm( 
"	      00465e08    cmp dword ptr [ebp-8],0"
"	      00465e0c    je near ptr 00465E37h"
);
// LINE 1425:
	asm( 
"	      00465e12    mov eax,[ebp-8]"
"	      00465e15    push eax"
"	      00465e16    mov ecx,[ebp-50h]"
"	      00465e19    sub ecx,14h"
"	      00465e1c    call 00428C38h"
);
// LINE 1426:
	asm( 
"	      00465e21    mov eax,[ebp-50h]"
"	      00465e24    mov dword ptr [eax+14h],0"
);
// LINE 1427:
	asm( 
"	      00465e2b    xor eax,eax"
"	      00465e2d    jmp near ptr 00465ED4h"
);
// LINE 1429:
	asm( 
"	      00465e32    jmp near ptr 00465E55h"
);
// LINE 1430:
	asm( 
"	      00465e37    push 1"
"	      00465e39    push 30h"
"	      00465e3b    push 7DAh"
"	      00465e40    mov ecx,[ebp-50h]"
"	      00465e43    sub ecx,14h"
"	      00465e46    call 0043F2B9h"
);
// LINE 1431:
	asm( 
"	      00465e4b    mov eax,1"
"	      00465e50    jmp near ptr 00465ED4h"
);
// LINE 1441:
	asm( 
"	      00465e55    mov eax,[ebp-50h]"
"	      00465e58    cmp dword ptr [eax+10h],0"
"	      00465e5c    je near ptr 00465E87h"
);
// LINE 1442:
	asm( 
"	      00465e62    mov ecx,[ebp-50h]"
"	      00465e65    mov eax,[ebp-50h]"
"	      00465e68    mov eax,[eax-14h]"
"	      00465e6b    sub ecx,14h"
"	      00465e6e    call dword ptr [eax+78h]"
);
// LINE 1443:
	asm( 
"	      00465e71    push 1"
"	      00465e73    mov ecx,[ebp-50h]"
"	      00465e76    mov eax,[ebp-50h]"
"	      00465e79    mov eax,[eax-14h]"
"	      00465e7c    sub ecx,14h"
"	      00465e7f    call dword ptr [eax+68h]"
);
// LINE 1445:
	asm( 
"	      00465e82    jmp near ptr 00465ECDh"
"	      00465e87    mov eax,[ebp-50h]"
"	      00465e8a    cmp dword ptr [eax+14h],0"
"	      00465e8e    je near ptr 00465ECDh"
);
// LINE 1446:
	asm( 
"	      00465e94    mov eax,[ebp-50h]"
"	      00465e97    mov dword ptr [eax+14h],0"
);
// LINE 1447:
	asm( 
"	      00465e9e    mov eax,[ebp-50h]"
"	      00465ea1    mov dword ptr [eax+90h],0"
);
// LINE 1448:
	asm( 
"	      00465eab    push 6"
"	      00465ead    mov ecx,[ebp-50h]"
"	      00465eb0    mov eax,[ebp-50h]"
"	      00465eb3    mov eax,[eax-14h]"
"	      00465eb6    sub ecx,14h"
"	      00465eb9    call dword ptr [eax+6Ch]"
);
// LINE 1449:
	asm( 
"	      00465ebc    push 4"
"	      00465ebe    mov ecx,[ebp-50h]"
"	      00465ec1    mov eax,[ebp-50h]"
"	      00465ec4    mov eax,[eax-14h]"
"	      00465ec7    sub ecx,14h"
"	      00465eca    call dword ptr [eax+68h]"
);
// LINE 1452:
	asm( 
"	      00465ecd    xor eax,eax"
"	      00465ecf    jmp near ptr 00465ED4h"
);
// LINE 1453:
	asm( 
"	      00465ed4    pop edi"
"	      00465ed5    pop esi"
"	      00465ed6    pop ebx"
"	      00465ed7    leave"
"	      00465ed8    ret 10h"
);
}

// FUNCTION: COPTER_D 0x00465edb
public: virtual int __thiscall CGameApp::DoMainMenuMessage(class GraphicWindow *, long, long, void *) {
// LINE 1461:
	asm( 
"	      00465edb    push ebp"
"	      00465edc    mov ebp,esp"
"	      00465ede    sub esp,634h"
"	      00465ee4    push ebx"
"	      00465ee5    push esi"
"	      00465ee6    push edi"
"	      00465ee7    mov [ebp-634h],ecx"
);
// LINE 1469:
	asm( 
"	      00465eed    mov eax,[ebp-634h]"
"	      00465ef3    mov eax,[eax+4338h]"
"	      00465ef9    mov [ebp-630h],eax"
"	      00465eff    mov eax,[ebp-630h]"
"	      00465f05    mov [ebp-62Ch],eax"
"	      00465f0b    jmp near ptr 00465F10h"
"	      00465f10    jmp near ptr 00465F15h"
"	      00465f15    mov eax,[ebp-62Ch]"
"	      00465f1b    mov eax,[eax+4]"
"	      00465f1e    mov [ebp-62Ch],eax"
"	      00465f24    jmp near ptr 00465F29h"
"	      00465f29    jmp near ptr 00465F2Eh"
"	      00465f2e    jmp near ptr 00465F33h"
"	      00465f33    mov eax,[ebp-62Ch]"
"	      00465f39    mov eax,[eax+8]"
"	      00465f3c    mov [ebp-20Ch],eax"
);
// LINE 1471:
	asm( 
"	      00465f42    cmp dword ptr [ebp+10h],3EAh"
"	      00465f49    jne near ptr 00465FBDh"
);
// LINE 1475:
	asm( 
"	      00465f4f    lea eax,[ebp-510h]"
"	      00465f55    push eax"
"	      00465f56    push 5992F0h"
"	      00465f5b    push 0"
"	      00465f5d    push 4"
"	      00465f5f    call 0049172Bh"
"	      00465f64    add esp,10h"
);
// LINE 1476:
	asm( 
"	      00465f67    lea eax,[ebp-510h]"
"	      00465f6d    push eax"
"	      00465f6e    call 00429582h"
"	      00465f73    add esp,4"
);
// LINE 1477:
	asm( 
"	      00465f76    mov eax,[ebp+8]"
"	      00465f79    mov eax,[eax]"
"	      00465f7b    mov ecx,[ebp+8]"
"	      00465f7e    call dword ptr [eax+6Ch]"
);
// LINE 1478:
	asm( 
"	      00465f81    push 4"
"	      00465f83    mov eax,[ebp-634h]"
"	      00465f89    mov eax,[eax]"
"	      00465f8b    mov ecx,[ebp-634h]"
"	      00465f91    call dword ptr [eax+6Ch]"
);
// LINE 1479:
	asm( 
"	      00465f94    push 6"
"	      00465f96    mov eax,[ebp-634h]"
"	      00465f9c    mov eax,[eax]"
"	      00465f9e    mov ecx,[ebp-634h]"
"	      00465fa4    call dword ptr [eax+68h]"
);
// LINE 1480:
	asm( 
"	      00465fa7    mov eax,1"
"	      00465fac    jmp near ptr 004662F3h"
);
// LINE 1482:
	asm( 
"	      00465fb1    xor eax,eax"
"	      00465fb3    jmp near ptr 004662F3h"
);
// LINE 1484:
	asm( 
"	      00465fb8    jmp near ptr 004662E9h"
"	      00465fbd    cmp dword ptr [ebp+10h],3E9h"
"	      00465fc4    jne near ptr 004662E9h"
);
// LINE 1486:
	asm( 
"	      00465fca    mov eax,[ebp+14h]"
"	      00465fcd    mov eax,[eax]"
"	      00465fcf    mov [ebp-514h],eax"
);
// LINE 1488:
	asm( 
"	      00465fd5    cmp dword ptr [ebp-514h],0"
"	      00465fdc    jne near ptr 00466028h"
);
// LINE 1490:
	asm( 
"	      00465fe2    mov eax,[ebp+8]"
"	      00465fe5    mov eax,[eax]"
"	      00465fe7    mov ecx,[ebp+8]"
"	      00465fea    call dword ptr [eax+6Ch]"
);
// LINE 1491:
	asm( 
"	      00465fed    mov eax,[ebp-634h]"
"	      00465ff3    mov dword ptr [eax+9Ch],1"
);
// LINE 1492:
	asm( 
"	      00465ffd    push 4"
"	      00465fff    mov eax,[ebp-634h]"
"	      00466005    mov eax,[eax]"
"	      00466007    mov ecx,[ebp-634h]"
"	      0046600d    call dword ptr [eax+6Ch]"
);
// LINE 1493:
	asm( 
"	      00466010    push 5"
"	      00466012    mov eax,[ebp-634h]"
"	      00466018    mov eax,[eax]"
"	      0046601a    mov ecx,[ebp-634h]"
"	      00466020    call dword ptr [eax+68h]"
);
// LINE 1495:
	asm( 
"	      00466023    jmp near ptr 004662DFh"
);
// LINE 1497:
	asm( 
"	      00466028    cmp dword ptr [ebp-514h],2"
"	      0046602f    je near ptr 0046604Fh"
"	      00466035    cmp dword ptr [ebp-514h],3"
"	      0046603c    je near ptr 0046604Fh"
"	      00466042    cmp dword ptr [ebp-514h],1"
"	      00466049    jne near ptr 00466297h"
);
// LINE 1504:
	asm( 
"	      0046604f    mov al,ds:[599300h]"
"	      00466054    mov [ebp-618h],al"
"	      0046605a    lea edi,[ebp-617h]"
"	      00466060    xor eax,eax"
"	      00466062    mov ecx,40h"
"	      00466067    rep stosd"
"	      00466069    stosw"
"	      0046606b    stosb"
);
// LINE 1507:
	asm( 
"	      0046606c    cmp dword ptr [ebp-514h],2"
"	      00466073    jne near ptr 00466092h"
);
// LINE 1508:
	asm( 
"	      00466079    mov dword ptr [ebp-61Ch],28h"
);
// LINE 1509:
	asm( 
"	      00466083    mov dword ptr [ebp-624h],29h"
);
// LINE 1511:
	asm( 
"	      0046608d    jmp near ptr 004660CCh"
"	      00466092    cmp dword ptr [ebp-514h],3"
"	      00466099    jne near ptr 004660B8h"
);
// LINE 1512:
	asm( 
"	      0046609f    mov dword ptr [ebp-61Ch],2Ah"
);
// LINE 1513:
	asm( 
"	      004660a9    mov dword ptr [ebp-624h],2Bh"
);
// LINE 1515:
	asm( 
"	      004660b3    jmp near ptr 004660CCh"
);
// LINE 1516:
	asm( 
"	      004660b8    mov dword ptr [ebp-61Ch],2Ch"
);
// LINE 1517:
	asm( 
"	      004660c2    mov dword ptr [ebp-624h],2Dh"
);
// LINE 1521:
	asm( 
"	      004660cc    push 6EEEEEEh"
"	      004660d1    mov eax,ds:[599BC4h]"
"	      004660d6    mov eax,[eax]"
"	      004660d8    mov ecx,ds:[599BC4h]"
"	      004660de    call dword ptr [eax+1Ch]"
"	      004660e1    mov [ebp-208h],eax"
);
// LINE 1522:
	asm( 
"	      004660e7    push 0"
"	      004660e9    mov eax,[ebp-61Ch]"
"	      004660ef    push eax"
"	      004660f0    call 0042B15Fh"
"	      004660f5    add esp,8"
"	      004660f8    mov [ebp-61Ch],eax"
);
// LINE 1523:
	asm( 
"	      004660fe    push 0"
"	      00466100    mov eax,[ebp-624h]"
"	      00466106    push eax"
"	      00466107    call 0042B15Fh"
"	      0046610c    add esp,8"
"	      0046610f    mov [ebp-624h],eax"
);
// LINE 1524:
	asm( 
"	      00466115    mov eax,[ebp-208h]"
"	      0046611b    push eax"
"	      0046611c    mov eax,[ebp-624h]"
"	      00466122    push eax"
"	      00466123    mov eax,[ebp-61Ch]"
"	      00466129    push eax"
"	      0046612a    lea eax,[ebp-618h]"
"	      00466130    push eax"
"	      00466131    call 00490439h"
"	      00466136    add esp,10h"
"	      00466139    mov [ebp-628h],eax"
);
// LINE 1525:
	asm( 
"	      0046613f    cmp dword ptr [ebp-628h],0"
"	      00466146    je near ptr 00466153h"
);
// LINE 1526:
	asm( 
"	      0046614c    xor eax,eax"
"	      0046614e    jmp near ptr 004662F3h"
);
// LINE 1530:
	asm( 
"	      00466153    lea eax,[ebp-100h]"
"	      00466159    push eax"
"	      0046615a    lea eax,[ebp-40Ch]"
"	      00466160    push eax"
"	      00466161    lea eax,[ebp-30Ch]"
"	      00466167    push eax"
"	      00466168    lea eax,[ebp-104h]"
"	      0046616e    push eax"
"	      0046616f    lea eax,[ebp-618h]"
"	      00466175    push eax"
"	      00466176    call 0056DDF0h"
"	      0046617b    add esp,14h"
);
// LINE 1531:
	asm( 
"	      0046617e    lea eax,[ebp-104h]"
"	      00466184    push eax"
"	      00466185    lea eax,[ebp-204h]"
"	      0046618b    push eax"
"	      0046618c    call 0056CEB0h"
"	      00466191    add esp,8"
);
// LINE 1532:
	asm( 
"	      00466194    lea eax,[ebp-30Ch]"
"	      0046619a    push eax"
"	      0046619b    lea eax,[ebp-204h]"
"	      004661a1    push eax"
"	      004661a2    call 0056CEC0h"
"	      004661a7    add esp,8"
);
// LINE 1533:
	asm( 
"	      004661aa    lea eax,[ebp-204h]"
"	      004661b0    push eax"
"	      004661b1    call 0056ABE0h"
"	      004661b6    add esp,4"
"	      004661b9    inc eax"
"	      004661ba    push eax"
"	      004661bb    lea eax,[ebp-204h]"
"	      004661c1    push eax"
"	      004661c2    push 6EEEEEEh"
"	      004661c7    mov eax,ds:[599BC4h]"
"	      004661cc    mov eax,[eax]"
"	      004661ce    mov ecx,ds:[599BC4h]"
"	      004661d4    call dword ptr [eax+2Ch]"
);
// LINE 1538:
	asm( 
"	      004661d7    lea eax,[ebp-620h]"
"	      004661dd    push eax"
"	      004661de    lea eax,[ebp-618h]"
"	      004661e4    push eax"
"	      004661e5    mov ecx,[ebp-634h]"
"	      004661eb    call 00427550h"
"	      004661f0    mov [ebp-628h],eax"
);
// LINE 1539:
	asm( 
"	      004661f6    cmp dword ptr [ebp-628h],0"
"	      004661fd    je near ptr 0046621Ch"
);
// LINE 1540:
	asm( 
"	      00466203    mov eax,[ebp-628h]"
"	      00466209    push eax"
"	      0046620a    mov ecx,[ebp-634h]"
"	      00466210    call 00428C38h"
);
// LINE 1541:
	asm( 
"	      00466215    xor eax,eax"
"	      00466217    jmp near ptr 004662F3h"
);
// LINE 1545:
	asm( 
"	      0046621c    mov eax,[ebp-620h]"
"	      00466222    push eax"
"	      00466223    lea eax,[ebp-618h]"
"	      00466229    push eax"
"	      0046622a    mov ecx,[ebp-634h]"
"	      00466230    call 004275E3h"
"	      00466235    mov [ebp-628h],eax"
);
// LINE 1546:
	asm( 
"	      0046623b    cmp dword ptr [ebp-628h],0"
"	      00466242    je near ptr 00466261h"
);
// LINE 1547:
	asm( 
"	      00466248    mov eax,[ebp-628h]"
"	      0046624e    push eax"
"	      0046624f    mov ecx,[ebp-634h]"
"	      00466255    call 00428C38h"
);
// LINE 1548:
	asm( 
"	      0046625a    xor eax,eax"
"	      0046625c    jmp near ptr 004662F3h"
);
// LINE 1551:
	asm( 
"	      00466261    mov eax,[ebp+8]"
"	      00466264    mov eax,[eax]"
"	      00466266    mov ecx,[ebp+8]"
"	      00466269    call dword ptr [eax+6Ch]"
);
// LINE 1552:
	asm( 
"	      0046626c    push 4"
"	      0046626e    mov eax,[ebp-634h]"
"	      00466274    mov eax,[eax]"
"	      00466276    mov ecx,[ebp-634h]"
"	      0046627c    call dword ptr [eax+6Ch]"
);
// LINE 1553:
	asm( 
"	      0046627f    push 6"
"	      00466281    mov eax,[ebp-634h]"
"	      00466287    mov eax,[eax]"
"	      00466289    mov ecx,[ebp-634h]"
"	      0046628f    call dword ptr [eax+68h]"
);
// LINE 1555:
	asm( 
"	      00466292    jmp near ptr 004662DFh"
"	      00466297    cmp dword ptr [ebp-514h],4"
"	      0046629e    jne near ptr 004662DFh"
);
// LINE 1557:
	asm( 
"	      004662a4    mov eax,[ebp+8]"
"	      004662a7    mov eax,[eax]"
"	      004662a9    mov ecx,[ebp+8]"
"	      004662ac    call dword ptr [eax+6Ch]"
);
// LINE 1558:
	asm( 
"	      004662af    push 4"
"	      004662b1    mov eax,[ebp-634h]"
"	      004662b7    mov eax,[eax]"
"	      004662b9    mov ecx,[ebp-634h]"
"	      004662bf    call dword ptr [eax+6Ch]"
);
// LINE 1559:
	asm( 
"	      004662c2    push 1"
"	      004662c4    mov eax,[ebp-634h]"
"	      004662ca    mov eax,[eax]"
"	      004662cc    mov ecx,[ebp-634h]"
"	      004662d2    call dword ptr [eax+68h]"
);
// LINE 1560:
	asm( 
"	      004662d5    mov eax,1"
"	      004662da    jmp near ptr 004662F3h"
);
// LINE 1562:
	asm( 
"	      004662df    mov eax,1"
"	      004662e4    jmp near ptr 004662F3h"
);
// LINE 1564:
	asm( 
"	      004662e9    mov eax,1"
"	      004662ee    jmp near ptr 004662F3h"
);
// LINE 1565:
	asm( 
"	      004662f3    pop edi"
"	      004662f4    pop esi"
"	      004662f5    pop ebx"
"	      004662f6    leave"
"	      004662f7    ret 10h"
);
}

// FUNCTION: COPTER_D 0x004662fa
public: virtual int __thiscall CGameApp::DoPlayMenuMessage(class GraphicWindow *, long, long, void *) {
// LINE 1573:
	asm( 
"	      004662fa    push ebp"
"	      004662fb    mov ebp,esp"
"	      004662fd    sub esp,18h"
"	      00466300    push ebx"
"	      00466301    push esi"
"	      00466302    push edi"
"	      00466303    mov [ebp-18h],ecx"
);
// LINE 1574:
	asm( 
"	      00466306    mov eax,[ebp-18h]"
"	      00466309    mov eax,[eax+4338h]"
"	      0046630f    mov [ebp-14h],eax"
"	      00466312    mov eax,[ebp-14h]"
"	      00466315    mov [ebp-10h],eax"
"	      00466318    jmp near ptr 0046631Dh"
"	      0046631d    jmp near ptr 00466322h"
"	      00466322    mov eax,[ebp-10h]"
"	      00466325    mov eax,[eax+4]"
"	      00466328    mov [ebp-10h],eax"
"	      0046632b    jmp near ptr 00466330h"
"	      00466330    jmp near ptr 00466335h"
"	      00466335    jmp near ptr 0046633Ah"
"	      0046633a    mov eax,[ebp-10h]"
"	      0046633d    mov eax,[eax+8]"
"	      00466340    mov [ebp-4],eax"
);
// LINE 1577:
	asm( 
"	      00466343    cmp dword ptr [ebp+10h],3EAh"
"	      0046634a    jne near ptr 00466373h"
);
// LINE 1578:
	asm( 
"	      00466350    mov eax,[ebp-18h]"
"	      00466353    dec dword ptr [eax+0A4h]"
);
// LINE 1579:
	asm( 
"	      00466359    mov eax,[ebp+8]"
"	      0046635c    mov eax,[eax]"
"	      0046635e    mov ecx,[ebp+8]"
"	      00466361    call dword ptr [eax+6Ch]"
);
// LINE 1580:
	asm( 
"	      00466364    mov eax,1"
"	      00466369    jmp near ptr 004665A6h"
);
// LINE 1583:
	asm( 
"	      0046636e    jmp near ptr 0046659Fh"
"	      00466373    cmp dword ptr [ebp+10h],3E9h"
"	      0046637a    jne near ptr 0046659Fh"
);
// LINE 1585:
	asm( 
"	      00466380    mov eax,[ebp+14h]"
"	      00466383    mov eax,[eax]"
"	      00466385    mov [ebp-0Ch],eax"
);
// LINE 1587:
	asm( 
"	      00466388    cmp dword ptr [ebp-0Ch],0"
"	      0046638c    jne near ptr 004663B3h"
);
// LINE 1588:
	asm( 
"	      00466392    mov eax,[ebp+8]"
"	      00466395    mov dword ptr [eax+54h],0"
"	      0046639c    jmp near ptr 004663A1h"
);
// LINE 1589:
	asm( 
"	      004663a1    mov ecx,[ebp-18h]"
"	      004663a4    call 00441A89h"
);
// LINE 1590:
	asm( 
"	      004663a9    mov eax,1"
"	      004663ae    jmp near ptr 004665A6h"
);
// LINE 1592:
	asm( 
"	      004663b3    cmp dword ptr [ebp-0Ch],1"
"	      004663b7    jne near ptr 004663E3h"
);
// LINE 1593:
	asm( 
"	      004663bd    mov eax,[ebp+8]"
"	      004663c0    mov dword ptr [eax+54h],0"
"	      004663c7    jmp near ptr 004663CCh"
);
// LINE 1594:
	asm( 
"	      004663cc    mov ecx,[ebp-18h]"
"	      004663cf    call 004415C7h"
);
// LINE 1595:
	asm( 
"	      004663d4    mov eax,1"
"	      004663d9    jmp near ptr 004665A6h"
);
// LINE 1597:
	asm( 
"	      004663de    jmp near ptr 0046659Fh"
"	      004663e3    cmp dword ptr [ebp-0Ch],2"
"	      004663e7    jne near ptr 00466413h"
);
// LINE 1598:
	asm( 
"	      004663ed    mov eax,[ebp+8]"
"	      004663f0    mov dword ptr [eax+54h],0"
"	      004663f7    jmp near ptr 004663FCh"
);
// LINE 1599:
	asm( 
"	      004663fc    mov ecx,[ebp-18h]"
"	      004663ff    call 004417FEh"
);
// LINE 1600:
	asm( 
"	      00466404    mov eax,1"
"	      00466409    jmp near ptr 004665A6h"
);
// LINE 1602:
	asm( 
"	      0046640e    jmp near ptr 0046659Fh"
"	      00466413    cmp dword ptr [ebp-0Ch],3"
"	      00466417    jne near ptr 00466443h"
);
// LINE 1603:
	asm( 
"	      0046641d    mov eax,[ebp+8]"
"	      00466420    mov dword ptr [eax+54h],0"
"	      00466427    jmp near ptr 0046642Ch"
);
// LINE 1604:
	asm( 
"	      0046642c    mov ecx,[ebp-18h]"
"	      0046642f    call 004413E5h"
);
// LINE 1605:
	asm( 
"	      00466434    mov eax,1"
"	      00466439    jmp near ptr 004665A6h"
);
// LINE 1607:
	asm( 
"	      0046643e    jmp near ptr 0046659Fh"
"	      00466443    cmp dword ptr [ebp-0Ch],4"
"	      00466447    jne near ptr 004664DEh"
);
// LINE 1608:
	asm( 
"	      0046644d    call 0042913Fh"
"	      00466452    test eax,eax"
"	      00466454    jne near ptr 00466487h"
);
// LINE 1609:
	asm( 
"	      0046645a    mov ecx,[ebp-18h]"
"	      0046645d    call 00427F98h"
"	      00466462    mov [ebp-8],eax"
);
// LINE 1610:
	asm( 
"	      00466465    cmp dword ptr [ebp-8],0"
"	      00466469    je near ptr 00466482h"
);
// LINE 1611:
	asm( 
"	      0046646f    mov eax,[ebp-8]"
"	      00466472    push eax"
"	      00466473    mov ecx,[ebp-18h]"
"	      00466476    call 00428C38h"
);
// LINE 1612:
	asm( 
"	      0046647b    xor eax,eax"
"	      0046647d    jmp near ptr 004665A6h"
);
// LINE 1615:
	asm( 
"	      00466482    jmp near ptr 004664CFh"
);
// LINE 1616:
	asm( 
"	      00466487    push 5C2918h"
"	      0046648c    push 5C33E8h"
"	      00466491    mov ecx,[ebp-18h]"
"	      00466494    call 00427BF4h"
"	      00466499    mov [ebp-8],eax"
);
// LINE 1617:
	asm( 
"	      0046649c    cmp dword ptr [ebp-8],0"
"	      004664a0    je near ptr 004664BEh"
);
// LINE 1618:
	asm( 
"	      004664a6    mov eax,[ebp-8]"
"	      004664a9    push eax"
"	      004664aa    mov ecx,[ebp-18h]"
"	      004664ad    call 00428C38h"
);
// LINE 1619:
	asm( 
"	      004664b2    xor eax,eax"
"	      004664b4    jmp near ptr 004665A6h"
);
// LINE 1621:
	asm( 
"	      004664b9    jmp near ptr 004664CFh"
);
// LINE 1622:
	asm( 
"	      004664be    push 1"
"	      004664c0    push 30h"
"	      004664c2    push 7DAh"
"	      004664c7    mov ecx,[ebp-18h]"
"	      004664ca    call 0043F2B9h"
);
// LINE 1624:
	asm( 
"	      004664cf    mov eax,1"
"	      004664d4    jmp near ptr 004665A6h"
);
// LINE 1626:
	asm( 
"	      004664d9    jmp near ptr 0046659Fh"
"	      004664de    cmp dword ptr [ebp-0Ch],5"
"	      004664e2    jne near ptr 00466549h"
);
// LINE 1627:
	asm( 
"	      004664e8    mov ecx,[ebp-18h]"
"	      004664eb    call 00427F98h"
"	      004664f0    mov [ebp-8],eax"
);
// LINE 1628:
	asm( 
"	      004664f3    cmp dword ptr [ebp-8],0"
"	      004664f7    je near ptr 0046651Fh"
"	      004664fd    cmp dword ptr [ebp-8],9"
"	      00466501    je near ptr 0046651Fh"
);
// LINE 1629:
	asm( 
"	      00466507    mov eax,[ebp-8]"
"	      0046650a    push eax"
"	      0046650b    mov ecx,[ebp-18h]"
"	      0046650e    call 00428C38h"
);
// LINE 1630:
	asm( 
"	      00466513    xor eax,eax"
"	      00466515    jmp near ptr 004665A6h"
);
// LINE 1632:
	asm( 
"	      0046651a    jmp near ptr 0046653Ah"
"	      0046651f    cmp dword ptr [ebp-8],9"
"	      00466523    je near ptr 0046653Ah"
);
// LINE 1633:
	asm( 
"	      00466529    push 1"
"	      0046652b    push 30h"
"	      0046652d    push 7DAh"
"	      00466532    mov ecx,[ebp-18h]"
"	      00466535    call 0043F2B9h"
);
// LINE 1634:
	asm( 
"	      0046653a    mov eax,1"
"	      0046653f    jmp near ptr 004665A6h"
);
// LINE 1637:
	asm( 
"	      00466544    jmp near ptr 0046659Fh"
"	      00466549    cmp dword ptr [ebp-0Ch],6"
"	      0046654d    jne near ptr 00466581h"
);
// LINE 1638:
	asm( 
"	      00466553    mov eax,[ebp+8]"
"	      00466556    mov eax,[eax]"
"	      00466558    mov ecx,[ebp+8]"
"	      0046655b    call dword ptr [eax+6Ch]"
);
// LINE 1639:
	asm( 
"	      0046655e    mov eax,[ebp-18h]"
"	      00466561    mov dword ptr [eax+28h],1"
);
// LINE 1640:
	asm( 
"	      00466568    push 20002h"
"	      0046656d    push 31h"
"	      0046656f    push 7DDh"
"	      00466574    mov ecx,[ebp-18h]"
"	      00466577    call 0043F2B9h"
);
// LINE 1642:
	asm( 
"	      0046657c    jmp near ptr 0046659Fh"
"	      00466581    cmp dword ptr [ebp-0Ch],7"
"	      00466585    jne near ptr 0046659Fh"
);
// LINE 1643:
	asm( 
"	      0046658b    mov eax,[ebp+8]"
"	      0046658e    mov eax,[eax]"
"	      00466590    mov ecx,[ebp+8]"
"	      00466593    call dword ptr [eax+6Ch]"
);
// LINE 1644:
	asm( 
"	      00466596    mov eax,[ebp-18h]"
"	      00466599    dec dword ptr [eax+0A4h]"
);
// LINE 1647:
	asm( 
"	      0046659f    xor eax,eax"
"	      004665a1    jmp near ptr 004665A6h"
);
// LINE 1648:
	asm( 
"	      004665a6    pop edi"
"	      004665a7    pop esi"
"	      004665a8    pop ebx"
"	      004665a9    leave"
"	      004665aa    ret 10h"
);
}

// FUNCTION: COPTER_D 0x004665ad
public: int __thiscall CGameApp::StartVideoForCitySelection(long) {
// LINE 1658:
	asm( 
"	      004665ad    push ebp"
"	      004665ae    mov ebp,esp"
"	      004665b0    sub esp,33Ch"
"	      004665b6    push ebx"
"	      004665b7    push esi"
"	      004665b8    push edi"
"	      004665b9    mov [ebp-32Ch],ecx"
);
// LINE 1663:
	asm( 
"	      004665bf    push 0"
"	      004665c1    mov eax,[ebp-32Ch]"
"	      004665c7    mov ecx,[ebp-32Ch]"
"	      004665cd    mov ecx,[ecx+34h]"
"	      004665d0    mov edx,[ecx]"
"	      004665d2    mov ecx,[eax+34h]"
"	      004665d5    call dword ptr [edx+70h]"
);
// LINE 1665:
	asm( 
"	      004665d8    lea eax,[ebp-208h]"
"	      004665de    push eax"
"	      004665df    mov eax,[ebp+8]"
"	      004665e2    shl eax,3"
"	      004665e5    mov eax,[eax+eax*8+5C2B5Ch]"
"	      004665ec    push eax"
"	      004665ed    push 3"
"	      004665ef    call 00429170h"
"	      004665f4    add esp,0Ch"
);
// LINE 1667:
	asm( 
"	      004665f7    lea eax,[ebp-108h]"
"	      004665fd    push eax"
"	      004665fe    lea eax,[ebp-208h]"
"	      00466604    push eax"
"	      00466605    push 0"
"	      00466607    push 1"
"	      00466609    call 0049172Bh"
"	      0046660e    add esp,10h"
);
// LINE 1669:
	asm( 
"	      00466611    mov dword ptr [ebp-214h],0FFFFFFFFh"
"	      0046661b    mov dword ptr [ebp-210h],1"
"	      00466625    mov dword ptr [ebp-31Ch],590468h"
"	      0046662f    mov dword ptr ds:[5C0920h],8000h"
"	      00466639    lea eax,[ebp-108h]"
"	      0046663f    push eax"
"	      00466640    lea eax,[ebp-318h]"
"	      00466646    push eax"
"	      00466647    call 0056CEB0h"
"	      0046664c    add esp,8"
"	      0046664f    jmp near ptr 0046665Bh"
"	      00466654    mov byte ptr [ebp-318h],0"
"	      0046665b    jmp near ptr 00466660h"
"	      00466660    push 0"
"	      00466662    lea ecx,[ebp-31Ch]"
"	      00466668    call 004A06E6h"
"	      0046666d    test eax,eax"
"	      0046666f    jne near ptr 00466684h"
"	      00466675    mov dword ptr [ebp-20Ch],1"
"	      0046667f    jmp near ptr 0046668Eh"
"	      00466684    mov dword ptr [ebp-20Ch],0"
"	      0046668e    mov dword ptr [ebp-31Ch],590468h"
"	      00466698    cmp dword ptr [ebp-214h],0FFFFFFFFh"
"	      0046669f    jle near ptr 004666AAh"
"	      004666a5    jmp near ptr 004666AFh"
"	      004666aa    jmp near ptr 004666DDh"
"	      004666af    jmp near ptr 004666C1h"
"	      004666b4    cmp dword ptr [ebp-328h],0"
"	      004666bb    je near ptr 004666DDh"
"	      004666c1    cmp dword ptr [ebp-210h],0"
"	      004666c8    je near ptr 004666DDh"
"	      004666ce    mov eax,[ebp-214h]"
"	      004666d4    push eax"
"	      004666d5    call 00578E50h"
"	      004666da    add esp,4"
"	      004666dd    jmp near ptr 004666E2h"
"	      004666e2    mov eax,[ebp-20Ch]"
"	      004666e8    mov [ebp-324h],eax"
"	      004666ee    cmp dword ptr [ebp-324h],0"
"	      004666f5    je near ptr 00466702h"
);
// LINE 1670:
	asm( 
"	      004666fb    xor eax,eax"
"	      004666fd    jmp near ptr 004668A6h"
);
// LINE 1673:
	asm( 
"	      00466702    push 27Ch"
"	      00466707    call 0056A600h"
"	      0046670c    add esp,4"
"	      0046670f    mov [ebp-320h],eax"
"	      00466715    cmp dword ptr [ebp-320h],0"
"	      0046671c    je near ptr 0046673Eh"
"	      00466722    mov ecx,[ebp-320h]"
"	      00466728    call 00498EE8h"
"	      0046672d    mov ecx,[ebp-32Ch]"
"	      00466733    mov [ecx+84h],eax"
"	      00466739    jmp near ptr 0046674Eh"
"	      0046673e    mov eax,[ebp-32Ch]"
"	      00466744    mov dword ptr [eax+84h],0"
);
// LINE 1674:
	asm( 
"	      0046674e    push 0FFFFFFFFh"
"	      00466750    push 0FE000h"
"	      00466755    lea eax,[ebp-108h]"
"	      0046675b    push eax"
"	      0046675c    mov eax,[ebp-32Ch]"
"	      00466762    mov ecx,[ebp-32Ch]"
"	      00466768    mov ecx,[ecx+84h]"
"	      0046676e    mov edx,[ecx]"
"	      00466770    mov ecx,[eax+84h]"
"	      00466776    call dword ptr [edx+10h]"
);
// LINE 1675:
	asm( 
"	      00466779    mov eax,[ebp-32Ch]"
"	      0046677f    mov dword ptr [eax+88h],1"
);
// LINE 1678:
	asm( 
"	      00466789    jmp near ptr 0046678Eh"
"	      0046678e    jmp near ptr 00466793h"
"	      00466793    mov eax,[ebp-32Ch]"
"	      00466799    mov eax,[eax+34h]"
"	      0046679c    mov eax,[eax+8]"
"	      0046679f    mov [ebp-330h],eax"
"	      004667a5    fild dword ptr [ebp-330h]"
"	      004667ab    mov eax,[ebp-32Ch]"
"	      004667b1    mov eax,[eax+84h]"
"	      004667b7    mov eax,[eax+148h]"
"	      004667bd    mov [ebp-334h],eax"
"	      004667c3    fidiv dword ptr [ebp-334h]"
"	      004667c9    fstp dword ptr [ebp-4]"
);
// LINE 1679:
	asm( 
"	      004667cc    mov eax,[ebp-32Ch]"
"	      004667d2    mov dword ptr [eax+8Ch],0"
);
// LINE 1680:
	asm( 
"	      004667dc    jmp near ptr 004667E1h"
"	      004667e1    jmp near ptr 004667E6h"
"	      004667e6    mov eax,[ebp-32Ch]"
"	      004667ec    mov eax,[eax+34h]"
"	      004667ef    mov eax,[eax+0Ch]"
"	      004667f2    cdq"
"	      004667f3    sub eax,edx"
"	      004667f5    sar eax,1"
"	      004667f8    mov ebx,eax"
"	      004667fa    mov eax,[ebp-32Ch]"
"	      00466800    mov eax,[eax+84h]"
"	      00466806    mov eax,[eax+14Ch]"
"	      0046680c    mov [ebp-338h],eax"
"	      00466812    fild dword ptr [ebp-338h]"
"	      00466818    fmul dword ptr [ebp-4]"
"	      0046681b    call 0056EBE8h"
"	      00466820    cdq"
"	      00466821    sub eax,edx"
"	      00466823    sar eax,1"
"	      00466826    sub ebx,eax"
"	      00466828    and ebx,0FFFFFFFEh"
"	      0046682b    mov eax,[ebp-32Ch]"
"	      00466831    mov [eax+90h],ebx"
);
// LINE 1681:
	asm( 
"	      00466837    mov eax,[ebp-32Ch]"
"	      0046683d    mov eax,[eax+34h]"
"	      00466840    mov eax,[eax+8]"
"	      00466843    mov ecx,[ebp-32Ch]"
"	      00466849    mov [ecx+94h],eax"
"	      0046684f    jmp near ptr 00466854h"
);
// LINE 1682:
	asm( 
"	      00466854    jmp near ptr 00466859h"
"	      00466859    mov eax,[ebp-32Ch]"
"	      0046685f    mov eax,[eax+84h]"
"	      00466865    mov eax,[eax+14Ch]"
"	      0046686b    mov [ebp-33Ch],eax"
"	      00466871    fild dword ptr [ebp-33Ch]"
"	      00466877    fmul dword ptr [ebp-4]"
"	      0046687a    call 0056EBE8h"
"	      0046687f    mov ecx,[ebp-32Ch]"
"	      00466885    mov ecx,[ecx+90h]"
"	      0046688b    add ecx,eax"
"	      0046688d    and ecx,0FFFFFFFEh"
"	      00466890    mov eax,[ebp-32Ch]"
"	      00466896    mov [eax+98h],ecx"
);
// LINE 1684:
	asm( 
"	      0046689c    mov eax,1"
"	      004668a1    jmp near ptr 004668A6h"
);
// LINE 1685:
	asm( 
"	      004668a6    pop edi"
"	      004668a7    pop esi"
"	      004668a8    pop ebx"
"	      004668a9    leave"
"	      004668aa    ret 4"
);
}

// FUNCTION: COPTER_D 0x004668ad
public: void __thiscall CGameApp::ComposeCareerCityVideoFrame(void) {
// LINE 1692:
	asm( 
"	      004668ad    push ebp"
"	      004668ae    mov ebp,esp"
"	      004668b0    sub esp,8"
"	      004668b3    push ebx"
"	      004668b4    push esi"
"	      004668b5    push edi"
"	      004668b6    mov [ebp-8],ecx"
);
// LINE 1703:
	asm( 
"	      004668b9    jmp near ptr 004668BEh"
"	      004668be    jmp near ptr 004668C3h"
"	      004668c3    mov eax,[ebp-8]"
"	      004668c6    mov eax,[eax+84h]"
"	      004668cc    mov eax,[eax+14Ch]"
"	      004668d2    push eax"
"	      004668d3    mov eax,[ebp-8]"
"	      004668d6    mov eax,[eax+84h]"
"	      004668dc    mov eax,[eax+148h]"
"	      004668e2    push eax"
"	      004668e3    push 0"
"	      004668e5    push 0"
"	      004668e7    mov eax,[ebp-8]"
"	      004668ea    mov eax,[eax+98h]"
"	      004668f0    push eax"
"	      004668f1    mov eax,[ebp-8]"
"	      004668f4    mov eax,[eax+94h]"
"	      004668fa    push eax"
"	      004668fb    mov eax,[ebp-8]"
"	      004668fe    mov eax,[eax+90h]"
"	      00466904    push eax"
"	      00466905    mov eax,[ebp-8]"
"	      00466908    mov eax,[eax+8Ch]"
"	      0046690e    push eax"
"	      0046690f    mov eax,[ebp-8]"
"	      00466912    mov eax,[eax+34h]"
"	      00466915    push eax"
"	      00466916    mov eax,[ebp-8]"
"	      00466919    mov ecx,[eax+84h]"
"	      0046691f    mov eax,[ebp-8]"
"	      00466922    mov eax,[eax+84h]"
"	      00466928    mov eax,[eax+140h]"
"	      0046692e    add ecx,140h"
"	      00466934    call dword ptr [eax+10h]"
"	      00466937    mov [ebp-4],eax"
);
// LINE 1704:
	asm( 
"	      0046693a    cmp dword ptr [ebp-4],0"
"	      0046693e    je near ptr 0046695Eh"
);
// LINE 1705:
	asm( 
"	      00466944    push 5"
"	      00466946    mov eax,[ebp-8]"
"	      00466949    mov eax,[eax]"
"	      0046694b    mov ecx,[ebp-8]"
"	      0046694e    call dword ptr [eax+6Ch]"
);
// LINE 1706:
	asm( 
"	      00466951    push 6"
"	      00466953    mov eax,[ebp-8]"
"	      00466956    mov eax,[eax]"
"	      00466958    mov ecx,[ebp-8]"
"	      0046695b    call dword ptr [eax+68h]"
);
// LINE 1708:
	asm( 
"	      0046695e    jmp near ptr 00466963h"
"	      00466963    pop edi"
"	      00466964    pop esi"
"	      00466965    pop ebx"
"	      00466966    leave"
"	      00466967    ret"
);
}

// FUNCTION: COPTER_D 0x00466968
public: int __thiscall CGameApp::StartVideoForMainMenu(void) {
// LINE 1714:
	asm( 
"	      00466968    push ebp"
"	      00466969    mov ebp,esp"
"	      0046696b    sub esp,228h"
"	      00466971    push ebx"
"	      00466972    push esi"
"	      00466973    push edi"
"	      00466974    mov [ebp-228h],ecx"
);
// LINE 1717:
	asm( 
"	      0046697a    lea eax,[ebp-104h]"
"	      00466980    push eax"
"	      00466981    mov eax,ds:[59928Ch]"
"	      00466986    push eax"
"	      00466987    push 0"
"	      00466989    push 1"
"	      0046698b    call 0049172Bh"
"	      00466990    add esp,10h"
);
// LINE 1719:
	asm( 
"	      00466993    mov dword ptr [ebp-110h],0FFFFFFFFh"
"	      0046699d    mov dword ptr [ebp-10Ch],1"
"	      004669a7    mov dword ptr [ebp-218h],590468h"
"	      004669b1    mov dword ptr ds:[5C0920h],8000h"
"	      004669bb    lea eax,[ebp-104h]"
"	      004669c1    push eax"
"	      004669c2    lea eax,[ebp-214h]"
"	      004669c8    push eax"
"	      004669c9    call 0056CEB0h"
"	      004669ce    add esp,8"
"	      004669d1    jmp near ptr 004669DDh"
"	      004669d6    mov byte ptr [ebp-214h],0"
"	      004669dd    jmp near ptr 004669E2h"
"	      004669e2    push 0"
"	      004669e4    lea ecx,[ebp-218h]"
"	      004669ea    call 004A06E6h"
"	      004669ef    test eax,eax"
"	      004669f1    jne near ptr 00466A06h"
"	      004669f7    mov dword ptr [ebp-108h],1"
"	      00466a01    jmp near ptr 00466A10h"
"	      00466a06    mov dword ptr [ebp-108h],0"
"	      00466a10    mov dword ptr [ebp-218h],590468h"
"	      00466a1a    cmp dword ptr [ebp-110h],0FFFFFFFFh"
"	      00466a21    jle near ptr 00466A2Ch"
"	      00466a27    jmp near ptr 00466A31h"
"	      00466a2c    jmp near ptr 00466A5Fh"
"	      00466a31    jmp near ptr 00466A43h"
"	      00466a36    cmp dword ptr [ebp-224h],0"
"	      00466a3d    je near ptr 00466A5Fh"
"	      00466a43    cmp dword ptr [ebp-10Ch],0"
"	      00466a4a    je near ptr 00466A5Fh"
"	      00466a50    mov eax,[ebp-110h]"
"	      00466a56    push eax"
"	      00466a57    call 00578E50h"
"	      00466a5c    add esp,4"
"	      00466a5f    jmp near ptr 00466A64h"
"	      00466a64    mov eax,[ebp-108h]"
"	      00466a6a    mov [ebp-220h],eax"
"	      00466a70    cmp dword ptr [ebp-220h],0"
"	      00466a77    je near ptr 00466A91h"
);
// LINE 1720:
	asm( 
"	      00466a7d    mov eax,[ebp-228h]"
"	      00466a83    mov dword ptr [eax+6Ch],0"
);
// LINE 1721:
	asm( 
"	      00466a8a    xor eax,eax"
"	      00466a8c    jmp near ptr 00466B2Dh"
);
// LINE 1725:
	asm( 
"	      00466a91    push 27Ch"
"	      00466a96    call 0056A600h"
"	      00466a9b    add esp,4"
"	      00466a9e    mov [ebp-21Ch],eax"
"	      00466aa4    cmp dword ptr [ebp-21Ch],0"
"	      00466aab    je near ptr 00466ACAh"
"	      00466ab1    mov ecx,[ebp-21Ch]"
"	      00466ab7    call 00498EE8h"
"	      00466abc    mov ecx,[ebp-228h]"
"	      00466ac2    mov [ecx+6Ch],eax"
"	      00466ac5    jmp near ptr 00466AD7h"
"	      00466aca    mov eax,[ebp-228h]"
"	      00466ad0    mov dword ptr [eax+6Ch],0"
);
// LINE 1726:
	asm( 
"	      00466ad7    mov eax,[ebp-228h]"
"	      00466add    mov ecx,[ebp-228h]"
"	      00466ae3    mov ecx,[ecx+6Ch]"
"	      00466ae6    mov edx,[ecx]"
"	      00466ae8    mov ecx,[eax+6Ch]"
"	      00466aeb    call dword ptr [edx+24h]"
);
// LINE 1727:
	asm( 
"	      00466aee    push 0FFFFFFFFh"
"	      00466af0    push 0FE000h"
"	      00466af5    lea eax,[ebp-104h]"
"	      00466afb    push eax"
"	      00466afc    mov eax,[ebp-228h]"
"	      00466b02    mov ecx,[ebp-228h]"
"	      00466b08    mov ecx,[ecx+6Ch]"
"	      00466b0b    mov edx,[ecx]"
"	      00466b0d    mov ecx,[eax+6Ch]"
"	      00466b10    call dword ptr [edx+10h]"
);
// LINE 1728:
	asm( 
"	      00466b13    mov eax,[ebp-228h]"
"	      00466b19    mov eax,[eax+6Ch]"
"	      00466b1c    mov dword ptr [eax+8],1"
);
// LINE 1730:
	asm( 
"	      00466b23    mov eax,1"
"	      00466b28    jmp near ptr 00466B2Dh"
);
// LINE 1731:
	asm( 
"	      00466b2d    pop edi"
"	      00466b2e    pop esi"
"	      00466b2f    pop ebx"
"	      00466b30    leave"
"	      00466b31    ret"
);
}

// FUNCTION: COPTER_D 0x00466b32
public: void __thiscall CGameApp::EndVideoForMainMenu(void) {
// LINE 1737:
	asm( 
"	      00466b32    push ebp"
"	      00466b33    mov ebp,esp"
"	      00466b35    sub esp,0Ch"
"	      00466b38    push ebx"
"	      00466b39    push esi"
"	      00466b3a    push edi"
"	      00466b3b    mov [ebp-0Ch],ecx"
);
// LINE 1738:
	asm( 
"	      00466b3e    mov eax,[ebp-0Ch]"
"	      00466b41    cmp dword ptr [eax+6Ch],0"
"	      00466b45    je near ptr 00466B8Ah"
);
// LINE 1739:
	asm( 
"	      00466b4b    mov eax,[ebp-0Ch]"
"	      00466b4e    mov ecx,[eax+6Ch]"
"	      00466b51    call 00497FF3h"
);
// LINE 1740:
	asm( 
"	      00466b56    mov eax,[ebp-0Ch]"
"	      00466b59    mov eax,[eax+6Ch]"
"	      00466b5c    mov [ebp-8],eax"
"	      00466b5f    mov eax,[ebp-8]"
"	      00466b62    mov [ebp-4],eax"
"	      00466b65    cmp dword ptr [ebp-4],0"
"	      00466b69    je near ptr 00466B80h"
"	      00466b6f    push 1"
"	      00466b71    mov eax,[ebp-4]"
"	      00466b74    mov eax,[eax]"
"	      00466b76    mov ecx,[ebp-4]"
"	      00466b79    call dword ptr [eax]"
"	      00466b7b    jmp near ptr 00466B80h"
);
// LINE 1741:
	asm( 
"	      00466b80    mov eax,[ebp-0Ch]"
"	      00466b83    mov dword ptr [eax+6Ch],0"
);
// LINE 1743:
	asm( 
"	      00466b8a    jmp near ptr 00466B8Fh"
"	      00466b8f    pop edi"
"	      00466b90    pop esi"
"	      00466b91    pop ebx"
"	      00466b92    leave"
"	      00466b93    ret"
);
}

// FUNCTION: COPTER_D 0x00466b94
public: void __thiscall CGameApp::ComposeMainMenuVideoFrame(void) {
// LINE 1749:
	asm( 
"	      00466b94    push ebp"
"	      00466b95    mov ebp,esp"
"	      00466b97    sub esp,8"
"	      00466b9a    push ebx"
"	      00466b9b    push esi"
"	      00466b9c    push edi"
"	      00466b9d    mov [ebp-8],ecx"
);
// LINE 1752:
	asm( 
"	      00466ba0    mov eax,[ebp-8]"
"	      00466ba3    cmp dword ptr [eax+6Ch],0"
"	      00466ba7    je near ptr 00466C10h"
);
// LINE 1756:
	asm( 
"	      00466bad    jmp near ptr 00466BB2h"
"	      00466bb2    jmp near ptr 00466BB7h"
"	      00466bb7    mov eax,[ebp-8]"
"	      00466bba    mov eax,[eax+6Ch]"
"	      00466bbd    mov eax,[eax+14Ch]"
"	      00466bc3    push eax"
"	      00466bc4    mov eax,[ebp-8]"
"	      00466bc7    mov eax,[eax+6Ch]"
"	      00466bca    mov eax,[eax+148h]"
"	      00466bd0    push eax"
"	      00466bd1    push 0"
"	      00466bd3    push 0"
"	      00466bd5    push 0"
"	      00466bd7    push 0"
"	      00466bd9    mov eax,[ebp-8]"
"	      00466bdc    mov eax,[eax+34h]"
"	      00466bdf    push eax"
"	      00466be0    mov eax,[ebp-8]"
"	      00466be3    mov ecx,[eax+6Ch]"
"	      00466be6    mov eax,[ebp-8]"
"	      00466be9    mov eax,[eax+6Ch]"
"	      00466bec    mov eax,[eax+140h]"
"	      00466bf2    add ecx,140h"
"	      00466bf8    call dword ptr [eax+0Ch]"
"	      00466bfb    mov [ebp-4],eax"
);
// LINE 1757:
	asm( 
"	      00466bfe    cmp dword ptr [ebp-4],0"
"	      00466c02    je near ptr 00466C10h"
);
// LINE 1758:
	asm( 
"	      00466c08    mov ecx,[ebp-8]"
"	      00466c0b    call 00466B32h"
);
// LINE 1761:
	asm( 
"	      00466c10    jmp near ptr 00466C15h"
"	      00466c15    pop edi"
"	      00466c16    pop esi"
"	      00466c17    pop ebx"
"	      00466c18    leave"
"	      00466c19    ret"
);
}



// Contribution: 1:00065c20-00065ca9 Module: 44, 16 byte alignment, code, (comdat), execute, read, 
// FUNCTION: COPTER_D 0x00466c20
// PFile::`scalar deleting destructor'



// Contribution: 1:00065cb0-00065ec5 Module: 44, 16 byte alignment, code, (comdat), execute, read, 


// Contribution: 1:00065ed0-00065f29 Module: 44, 16 byte alignment, code, (comdat), execute, read, 


// Contribution: 1:00065f30-00065f68 Module: 44, 16 byte alignment, code, (comdat), execute, read, 


// Contribution: 2:00001464-00001467 Module: 44, 4 byte alignment, initialized_data, read, 


// Contribution: 2:00001468-0000146b Module: 44, 4 byte alignment, initialized_data, (comdat), read, 
// GLOBAL: COPTER_D 0x00590468
// ??_7PFile@@6B@


// Contribution: 2:00006c00-00006c57 Module: 44, 8 byte alignment, initialized_data, read, 


// Contribution: 3:00002284-00002300 Module: 44, 4 byte alignment, initialized_data, read, write, 
// GLOBAL: COPTER_D 0x00599284
// SZ_SMACKER_INTRO_FILE_NAME
// GLOBAL: COPTER_D 0x00599288
// SZ_COPTER_MAIN_PREFERENCES_FILE_NAME
// GLOBAL: COPTER_D 0x0059928c
// SZ_MAIN_MENU_VIDEO_FILE_NAME
// GLOBAL: COPTER_D 0x00599290
// SZ_GRADUATION_NOTIFICATION_SOUND_FILE_NAME


// Contribution: 3:00002304-00002307 Module: 44, 4 byte alignment, initialized_data, (comdat), read, write, 
// GLOBAL: COPTER_D 0x00599304
// list<CopterGameMode>::last


// Contribution: 3:00002308-0000230b Module: 44, 4 byte alignment, initialized_data, (comdat), read, write, 
// GLOBAL: COPTER_D 0x00599308
// list<CopterGameMode>::next_avail


// Contribution: 3:0000230c-0000230f Module: 44, 4 byte alignment, initialized_data, (comdat), read, write, 
// GLOBAL: COPTER_D 0x0059930c
// list<CopterGameMode>::free_list


// Contribution: 3:00002310-00002313 Module: 44, 4 byte alignment, initialized_data, (comdat), read, write, 
// GLOBAL: COPTER_D 0x00599310
// list<CopterGameMode>::buffer_list
