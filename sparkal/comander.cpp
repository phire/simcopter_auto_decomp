// Module: Comander.obj
// Source: C:\Copter\source\sparkal\Comander.cpp
// autogenerated by simcopter_tool from PDB file

// Type: class ICommander (forward reference);
class ICommander{
public:
	void ICommander();
	// vtable: 0
	intro void ~ICommander();
	// vtable: 4
	intro unsigned long Idle();
	// vtable: 8
	intro unsigned long OnCharacter(char, int32_t);
	// vtable: 12
	intro unsigned long OnMouseDown(int32_t, int32_t);
	// vtable: 16
	intro unsigned long OnMouseUp(int32_t, int32_t);
	// vtable: 20
	intro unsigned long OnMouseMove(int32_t, int32_t);
	// vtable: 24
	intro unsigned long OnWindowActivate();
	// vtable: 28
	intro unsigned long OnWindowDeactivate();
	// vtable: 32
	intro class CSparkalWindow* SetWindow(class CSparkalWindow*);
	class CSparkalWindow* GetWindow();
protected:
	class CSparkalWindow* mpWindow;
};

// Type: void;

// Type: class CSparkalWindow (forward reference);

// Type: class CDefaultCommander (forward reference);
class CDefaultCommander : public ICommander
{
public:
	void CDefaultCommander();
	virtual void ~CDefaultCommander();
	virtual unsigned long Idle();
	virtual unsigned long OnCharacter(char, int32_t);
	virtual unsigned long OnMouseDown(int32_t, int32_t);
	virtual unsigned long OnMouseUp(int32_t, int32_t);
	virtual unsigned long OnMouseMove(int32_t, int32_t);
	virtual unsigned long OnWindowActivate();
	virtual unsigned long OnWindowDeactivate();
};

// Type: unsigned long;

// Type: char;

// Type: int32_t;

// Type: uint32_t;

// Type: class ICommander;
class ICommander{
public:
	void ICommander();
	// vtable: 0
	intro void ~ICommander();
	// vtable: 4
	intro unsigned long Idle();
	// vtable: 8
	intro unsigned long OnCharacter(char, int32_t);
	// vtable: 12
	intro unsigned long OnMouseDown(int32_t, int32_t);
	// vtable: 16
	intro unsigned long OnMouseUp(int32_t, int32_t);
	// vtable: 20
	intro unsigned long OnMouseMove(int32_t, int32_t);
	// vtable: 24
	intro unsigned long OnWindowActivate();
	// vtable: 28
	intro unsigned long OnWindowDeactivate();
	// vtable: 32
	intro class CSparkalWindow* SetWindow(class CSparkalWindow*);
	class CSparkalWindow* GetWindow();
protected:
	class CSparkalWindow* mpWindow;
};



// Contribution: 1:00099d30-00099eff Module: 14, 16 byte alignment, code, execute, read, 
// FUNCTION: COPTER_D 0x0049ad30
void ICommander::ICommander() {
	__asm        mov    eax, this;
	__asm        mov    dword ptr [eax], 0x5912A8;
// LINE 15:
	__asm        mov    eax, this;
	__asm        mov    dword ptr [eax+4], 0;
// LINE 16:
	__asm        jmp    near ptr 0x0049AD54;
	__asm        mov    eax, this;
}

// FUNCTION: COPTER_D 0x0049ad5c
void ICommander::~ICommander() {
	__asm        mov    eax, this;
	__asm        mov    dword ptr [eax], 0x5912A8;
// LINE 25:
	__asm        jmp    near ptr 0x0049AD76;
}

// FUNCTION: COPTER_D 0x0049ad7b
class CSparkalWindow* ICommander::SetWindow(class CSparkalWindow* pWindow) {
	class CSparkalWindow* ReturnWindow;

// LINE 29:
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+4];
	__asm        mov    ReturnWindow, eax;
// LINE 31:
	__asm        mov    eax, this;
	__asm        mov    ecx, pWindow;
	__asm        cmp    [eax+4], ecx;
	__asm        jne    near ptr 0x0049ADAB;
// LINE 32:
	__asm        mov    ReturnWindow, 0;
// LINE 33:
	__asm        jmp    near ptr 0x0049ADB4;
// LINE 34:
	__asm        mov    eax, pWindow;
	__asm        mov    ecx, this;
	__asm        mov    [ecx+4], eax;
// LINE 36:
	__asm        mov    eax, ReturnWindow;
	__asm        jmp    near ptr 0x0049ADBC;
// LINE 37:
}

// FUNCTION: COPTER_D 0x0049adc3
void CDefaultCommander::CDefaultCommander() {
	__asm        mov    ecx, this;
	__asm        call   0x0049AD30;
	__asm        mov    eax, this;
	__asm        mov    dword ptr [eax], 0x5912D0;
// LINE 45:
	__asm        jmp    near ptr 0x0049ADE5;
	__asm        mov    eax, this;
}

// FUNCTION: COPTER_D 0x0049aded
void CDefaultCommander::~CDefaultCommander() {
	__asm        mov    eax, this;
	__asm        mov    dword ptr [eax], 0x5912D0;
// LINE 49:
	__asm        jmp    near ptr 0x0049AE07;
	__asm        mov    ecx, this;
	__asm        call   0x0049AD5C;
}

// FUNCTION: COPTER_D 0x0049ae14
unsigned long CDefaultCommander::Idle() {
// LINE 56:
	__asm        xor    eax, eax;
	__asm        jmp    near ptr 0x0049AE27;
// LINE 57:
}

// FUNCTION: COPTER_D 0x0049ae2c
unsigned long CDefaultCommander::OnCharacter(char Character, int32_t RepeatCount) {
// LINE 61:
	__asm        xor    eax, eax;
	__asm        jmp    near ptr 0x0049AE3F;
// LINE 62:
}

// FUNCTION: COPTER_D 0x0049ae46
unsigned long CDefaultCommander::OnMouseDown(int32_t x, int32_t y) {
// LINE 66:
	__asm        xor    eax, eax;
	__asm        jmp    near ptr 0x0049AE59;
// LINE 67:
}

// FUNCTION: COPTER_D 0x0049ae60
unsigned long CDefaultCommander::OnMouseUp(int32_t x, int32_t y) {
// LINE 71:
	__asm        xor    eax, eax;
	__asm        jmp    near ptr 0x0049AE73;
// LINE 72:
}

// FUNCTION: COPTER_D 0x0049ae7a
unsigned long CDefaultCommander::OnMouseMove(int32_t x, int32_t y) {
// LINE 76:
	__asm        xor    eax, eax;
	__asm        jmp    near ptr 0x0049AE8D;
// LINE 77:
}

// FUNCTION: COPTER_D 0x0049ae94
unsigned long CDefaultCommander::OnWindowActivate() {
// LINE 81:
	__asm        mov    eax, this;
	__asm        cmp    dword ptr [eax+4], 0;
	__asm        jne    near ptr 0x0049AEC6;
	__asm        push   0x51;
	__asm        push   0x59A29C;
	__asm        push   0x59A2C4;
	__asm        call   0x0056DA30;
	__asm        add    esp, 0xC;
	__asm        jmp    near ptr 0x0049AECB;
	__asm        jmp    near ptr 0x0049AECB;
// LINE 82:
	__asm        push   0;
	__asm        mov    eax, this;
	__asm        mov    ecx, this;
	__asm        mov    ecx, [ecx+4];
	__asm        mov    edx, [ecx];
	__asm        mov    ecx, [eax+4];
	__asm        call   dword ptr [edx+0xC];
	__asm        jmp    near ptr 0x0049AEE3;
// LINE 83:
}

// FUNCTION: COPTER_D 0x0049aee8
unsigned long CDefaultCommander::OnWindowDeactivate() {
// LINE 87:
	__asm        xor    eax, eax;
	__asm        jmp    near ptr 0x0049AEFB;
// LINE 88:
}



// Contribution: 1:00099f00-00099f38 Module: 14, 16 byte alignment, code, (comdat), execute, read, 
// FUNCTION: COPTER_D 0x0049af00
// ICommander::`scalar deleting destructor'



// Contribution: 1:00099f40-00099f78 Module: 14, 16 byte alignment, code, (comdat), execute, read, 
// FUNCTION: COPTER_D 0x0049af40
// CDefaultCommander::`scalar deleting destructor'



// Contribution: 2:000022a8-000022cb Module: 14, 8 byte alignment, initialized_data, (comdat), read, 
// GLOBAL: COPTER_D 0x005912a8
// ??_7ICommander@@6B@


// Contribution: 2:000022d0-000022f3 Module: 14, 8 byte alignment, initialized_data, (comdat), read, 
// GLOBAL: COPTER_D 0x005912d0
// ??_7CDefaultCommander@@6B@


// Contribution: 3:0000329c-000032cc Module: 14, 4 byte alignment, initialized_data, read, write, 
