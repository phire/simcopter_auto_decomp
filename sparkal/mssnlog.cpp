// Module: mssnlog.obj
// Source: C:\Copter\source\sparkal\mssnlog.cpp
// autogenerated by simcopter_tool from PDB file



// Contribution: 1:0006aca0-0006d4f0 Module: 40, 16 byte alignment, code, execute, read, 
// FUNCTION: COPTER_D 0x0046bca0
void MissionLogWindow::MissionLogWindow(int32_t nNewID, class GraphicWindow* windowNewParent, class GraphicWindowOwner* myNewOwner, int32_t bAddToParentList) {
// LINE 47:
	asm( 
"	      0046bca0    push ebp"
"	      0046bca1    mov ebp,esp"
"	      0046bca3    sub esp,50h"
"	      0046bca6    push ebx"
"	      0046bca7    push esi"
"	      0046bca8    push edi"
"	      0046bca9    mov [ebp-50h],ecx"
"	      0046bcac    jmp near ptr 0046BCB1h"
"	      0046bcb1    jmp near ptr 0046BCB6h"
"	      0046bcb6    mov eax,[ebp+0Ch]"
"	      0046bcb9    mov eax,[eax+1Ch]"
"	      0046bcbc    mov ecx,[ebp+0Ch]"
"	      0046bcbf    sub eax,[ecx+14h]"
"	      0046bcc2    mov [ebp-48h],eax"
"	      0046bcc5    mov eax,[ebp+0Ch]"
"	      0046bcc8    mov eax,[eax+18h]"
"	      0046bccb    mov ecx,[ebp+0Ch]"
"	      0046bcce    sub eax,[ecx+10h]"
"	      0046bcd1    mov [ebp-4Ch],eax"
"	      0046bcd4    jmp near ptr 0046BCD9h"
"	      0046bcd9    mov dword ptr [ebp-10h],0"
"	      0046bce0    mov dword ptr [ebp-0Ch],0"
"	      0046bce7    mov eax,[ebp-4Ch]"
"	      0046bcea    mov [ebp-8],eax"
"	      0046bced    mov eax,[ebp-48h]"
"	      0046bcf0    mov [ebp-4],eax"
"	      0046bcf3    jmp near ptr 0046BCF8h"
"	      0046bcf8    mov eax,[ebp+14h]"
"	      0046bcfb    push eax"
"	      0046bcfc    mov eax,[ebp+10h]"
"	      0046bcff    push eax"
"	      0046bd00    mov eax,[ebp+0Ch]"
"	      0046bd03    push eax"
"	      0046bd04    mov eax,[ebp+8]"
"	      0046bd07    push eax"
"	      0046bd08    lea eax,[ebp-10h]"
"	      0046bd0b    push eax"
"	      0046bd0c    mov ecx,[ebp-50h]"
"	      0046bd0f    call 004A33EEh"
"	      0046bd14    mov eax,[ebp-50h]"
"	      0046bd17    mov dword ptr [eax+74h],0"
"	      0046bd1e    mov eax,[ebp-50h]"
"	      0046bd21    mov dword ptr [eax+78h],0"
"	      0046bd28    mov eax,[ebp-50h]"
"	      0046bd2b    mov dword ptr [eax+7Ch],0"
"	      0046bd32    mov eax,[ebp-50h]"
"	      0046bd35    mov dword ptr [eax],590708h"
"	      0046bd3b    mov eax,ds:[599448h]"
"	      0046bd40    mov [ebp-44h],eax"
);
// LINE 48:
	asm( 
"	      0046bd43    jmp near ptr 0046BD48h"
"	      0046bd48    mov eax,[ebp-44h]"
"	      0046bd4b    push eax"
"	      0046bd4c    call 0056ABE0h"
"	      0046bd51    add esp,4"
"	      0046bd54    mov [ebp-40h],eax"
"	      0046bd57    cmp dword ptr [ebp-40h],0FFFFFFFFh"
"	      0046bd5b    jne near ptr 0046BD93h"
"	      0046bd61    push 5971E4h"
"	      0046bd66    mov ecx,638C00h"
"	      0046bd6b    call 00569960h"
"	      0046bd70    mov [ebp-20h],eax"
"	      0046bd73    mov eax,[ebp-20h]"
"	      0046bd76    push eax"
"	      0046bd77    call 004011B0h"
"	      0046bd7c    add esp,4"
"	      0046bd7f    jmp near ptr 0046BD84h"
"	      0046bd84    push 1"
"	      0046bd86    call 00569430h"
"	      0046bd8b    add esp,4"
"	      0046bd8e    jmp near ptr 0046BD93h"
"	      0046bd93    jmp near ptr 0046BD98h"
"	      0046bd98    mov eax,[ebp-50h]"
"	      0046bd9b    mov eax,[eax+60h]"
"	      0046bd9e    cmp dword ptr [eax+0Ch],1"
"	      0046bda2    ja near ptr 0046BDC9h"
"	      0046bda8    cmp dword ptr [ebp-40h],0"
"	      0046bdac    je near ptr 0046BF4Ah"
"	      0046bdb2    jmp near ptr 0046BDB7h"
"	      0046bdb7    mov eax,[ebp-50h]"
"	      0046bdba    mov eax,[eax+60h]"
"	      0046bdbd    mov ecx,[ebp-40h]"
"	      0046bdc0    cmp [eax+8],ecx"
"	      0046bdc3    jae near ptr 0046BF4Ah"
"	      0046bdc9    push 10h"
"	      0046bdcb    call 0056A600h"
"	      0046bdd0    add esp,4"
"	      0046bdd3    mov [ebp-18h],eax"
"	      0046bdd6    cmp dword ptr [ebp-18h],0"
"	      0046bdda    je near ptr 0046BEA4h"
"	      0046bde0    cmp dword ptr [ebp-40h],0FFFFFFFFh"
"	      0046bde4    jne near ptr 0046BE1Ch"
"	      0046bdea    push 5971E4h"
"	      0046bdef    mov ecx,638C00h"
"	      0046bdf4    call 00569960h"
"	      0046bdf9    mov [ebp-3Ch],eax"
"	      0046bdfc    mov eax,[ebp-3Ch]"
"	      0046bdff    push eax"
"	      0046be00    call 004011B0h"
"	      0046be05    add esp,4"
"	      0046be08    jmp near ptr 0046BE0Dh"
"	      0046be0d    push 1"
"	      0046be0f    call 00569430h"
"	      0046be14    add esp,4"
"	      0046be17    jmp near ptr 0046BE1Ch"
"	      0046be1c    mov eax,[ebp-40h]"
"	      0046be1f    mov ecx,[ebp-18h]"
"	      0046be22    mov [ecx+4],eax"
"	      0046be25    mov eax,[ebp-18h]"
"	      0046be28    mov eax,[eax+4]"
"	      0046be2b    mov ecx,[ebp-18h]"
"	      0046be2e    mov [ecx+8],eax"
"	      0046be31    mov eax,[ebp-18h]"
"	      0046be34    cmp dword ptr [eax+8],0"
"	      0046be38    je near ptr 0046BE81h"
"	      0046be3e    mov eax,[ebp-18h]"
"	      0046be41    mov eax,[eax+8]"
"	      0046be44    push eax"
"	      0046be45    call 0056A600h"
"	      0046be4a    add esp,4"
"	      0046be4d    mov ecx,[ebp-18h]"
"	      0046be50    mov [ecx],eax"
"	      0046be52    mov eax,[ebp-18h]"
"	      0046be55    mov eax,[eax+4]"
"	      0046be58    mov [ebp-34h],eax"
"	      0046be5b    mov eax,[ebp-18h]"
"	      0046be5e    mov eax,[eax]"
"	      0046be60    mov [ebp-38h],eax"
"	      0046be63    mov eax,[ebp-34h]"
"	      0046be66    push eax"
"	      0046be67    mov eax,[ebp-44h]"
"	      0046be6a    push eax"
"	      0046be6b    mov eax,[ebp-38h]"
"	      0046be6e    push eax"
"	      0046be6f    call 0056A800h"
"	      0046be74    add esp,0Ch"
"	      0046be77    jmp near ptr 0046BE7Ch"
"	      0046be7c    jmp near ptr 0046BE8Ah"
"	      0046be81    mov eax,[ebp-18h]"
"	      0046be84    mov dword ptr [eax],0"
"	      0046be8a    mov eax,[ebp-18h]"
"	      0046be8d    mov dword ptr [eax+0Ch],1"
"	      0046be94    jmp near ptr 0046BE99h"
"	      0046be99    mov eax,[ebp-18h]"
"	      0046be9c    mov [ebp-14h],eax"
"	      0046be9f    jmp near ptr 0046BEABh"
"	      0046bea4    mov dword ptr [ebp-14h],0"
"	      0046beab    mov eax,[ebp-50h]"
"	      0046beae    mov eax,[eax+60h]"
"	      0046beb1    dec dword ptr [eax+0Ch]"
"	      0046beb4    mov eax,[ebp-50h]"
"	      0046beb7    mov eax,[eax+60h]"
"	      0046beba    cmp dword ptr [eax+0Ch],0"
"	      0046bebe    jne near ptr 0046BF37h"
"	      0046bec4    mov eax,[ebp-50h]"
"	      0046bec7    mov eax,[eax+60h]"
"	      0046beca    mov [ebp-28h],eax"
"	      0046becd    mov eax,[ebp-28h]"
"	      0046bed0    mov [ebp-24h],eax"
"	      0046bed3    cmp dword ptr [ebp-24h],0"
"	      0046bed7    je near ptr 0046BF37h"
"	      0046bedd    mov eax,[ebp-24h]"
"	      0046bee0    cmp dword ptr [eax+8],0"
"	      0046bee4    je near ptr 0046BF17h"
"	      0046beea    mov eax,[ebp-24h]"
"	      0046beed    mov eax,[eax]"
"	      0046beef    mov [ebp-2Ch],eax"
"	      0046bef2    mov eax,[ebp-2Ch]"
"	      0046bef5    mov [ebp-30h],eax"
"	      0046bef8    mov eax,[ebp-30h]"
"	      0046befb    push eax"
"	      0046befc    call 0056A740h"
"	      0046bf01    add esp,4"
"	      0046bf04    mov eax,[ebp-24h]"
"	      0046bf07    mov dword ptr [eax+8],0"
"	      0046bf0e    mov eax,[ebp-24h]"
"	      0046bf11    mov dword ptr [eax],0"
"	      0046bf17    jmp near ptr 0046BF1Ch"
"	      0046bf1c    jmp near ptr 0046BF21h"
"	      0046bf21    mov eax,[ebp-24h]"
"	      0046bf24    push eax"
"	      0046bf25    call 0056A740h"
"	      0046bf2a    add esp,4"
"	      0046bf2d    jmp near ptr 0046BF32h"
"	      0046bf32    jmp near ptr 0046BF37h"
"	      0046bf37    jmp near ptr 0046BF3Ch"
"	      0046bf3c    mov eax,[ebp-14h]"
"	      0046bf3f    mov ecx,[ebp-50h]"
"	      0046bf42    mov [ecx+60h],eax"
"	      0046bf45    jmp near ptr 0046BF7Dh"
"	      0046bf4a    cmp dword ptr [ebp-40h],0"
"	      0046bf4e    je near ptr 0046BF7Dh"
"	      0046bf54    jmp near ptr 0046BF59h"
"	      0046bf59    mov eax,[ebp-50h]"
"	      0046bf5c    mov eax,[eax+60h]"
"	      0046bf5f    mov eax,[eax]"
"	      0046bf61    mov [ebp-1Ch],eax"
"	      0046bf64    mov eax,[ebp-40h]"
"	      0046bf67    push eax"
"	      0046bf68    mov eax,[ebp-44h]"
"	      0046bf6b    push eax"
"	      0046bf6c    mov eax,[ebp-1Ch]"
"	      0046bf6f    push eax"
"	      0046bf70    call 0056A800h"
"	      0046bf75    add esp,0Ch"
"	      0046bf78    jmp near ptr 0046BF7Dh"
"	      0046bf7d    mov eax,[ebp-40h]"
"	      0046bf80    mov ecx,[ebp-50h]"
"	      0046bf83    mov ecx,[ecx+60h]"
"	      0046bf86    mov [ecx+4],eax"
"	      0046bf89    jmp near ptr 0046BF8Eh"
"	      0046bf8e    jmp near ptr 0046BF93h"
);
// LINE 50:
	asm( 
"	      0046bf93    push 1"
"	      0046bf95    mov ecx,[ebp-50h]"
"	      0046bf98    call 0046CA4Ch"
);
// LINE 51:
	asm( 
"	      0046bf9d    mov ecx,[ebp-50h]"
"	      0046bfa0    call 004A6BCDh"
);
// LINE 52:
	asm( 
"	      0046bfa5    jmp near ptr 0046BFAAh"
"	      0046bfaa    mov eax,[ebp-50h]"
"	      0046bfad    pop edi"
"	      0046bfae    pop esi"
"	      0046bfaf    pop ebx"
"	      0046bfb0    leave"
"	      0046bfb1    ret 10h"
);
}

// FUNCTION: COPTER_D 0x0046bfb4
void MissionLogWindow::~MissionLogWindow() {
// LINE 58:
	asm( 
"	      0046bfb4    push ebp"
"	      0046bfb5    mov ebp,esp"
"	      0046bfb7    sub esp,4"
"	      0046bfba    push ebx"
"	      0046bfbb    push esi"
"	      0046bfbc    push edi"
"	      0046bfbd    mov [ebp-4],ecx"
"	      0046bfc0    mov eax,[ebp-4]"
"	      0046bfc3    mov dword ptr [eax],590708h"
);
// LINE 59:
	asm( 
"	      0046bfc9    mov ecx,[ebp-4]"
"	      0046bfcc    call 0046CAF6h"
);
// LINE 60:
	asm( 
"	      0046bfd1    jmp near ptr 0046BFD6h"
"	      0046bfd6    mov ecx,[ebp-4]"
"	      0046bfd9    call 004A4045h"
"	      0046bfde    pop edi"
"	      0046bfdf    pop esi"
"	      0046bfe0    pop ebx"
"	      0046bfe1    leave"
"	      0046bfe2    ret"
);
}

// FUNCTION: COPTER_D 0x0046bfe3
int32_t MissionLogWindow::Initialize() {
	class ButtonWindow* tempButtonWindow;
	class basic_string<char> sText;
	int32_t nFullStringID;
	struct SparkalColor tempSparkalColor;

// LINE 66:
	asm( 
"	      0046bfe3    push ebp"
"	      0046bfe4    mov ebp,esp"
"	      0046bfe6    mov eax,30B4h"
"	      0046bfeb    call 0056AC60h"
"	      0046bff0    push ebx"
"	      0046bff1    push esi"
"	      0046bff2    push edi"
"	      0046bff3    mov [ebp-30B4h],ecx"
);
// LINE 68:
	asm( 
"	      0046bff9    push 10h"
"	      0046bffb    call 0056A600h"
"	      0046c000    add esp,4"
"	      0046c003    mov [ebp-6Ch],eax"
"	      0046c006    cmp dword ptr [ebp-6Ch],0"
"	      0046c00a    je near ptr 0046C049h"
"	      0046c010    mov eax,[ebp-6Ch]"
"	      0046c013    mov dword ptr [eax+4],0"
"	      0046c01a    mov eax,[ebp-6Ch]"
"	      0046c01d    mov eax,[eax+4]"
"	      0046c020    mov ecx,[ebp-6Ch]"
"	      0046c023    mov [ecx+8],eax"
"	      0046c026    mov eax,[ebp-6Ch]"
"	      0046c029    mov dword ptr [eax],0"
"	      0046c02f    mov eax,[ebp-6Ch]"
"	      0046c032    mov dword ptr [eax+0Ch],1"
"	      0046c039    jmp near ptr 0046C03Eh"
"	      0046c03e    mov eax,[ebp-6Ch]"
"	      0046c041    mov [ebp-0Ch],eax"
"	      0046c044    jmp near ptr 0046C050h"
"	      0046c049    mov dword ptr [ebp-0Ch],0"
"	      0046c050    mov dword ptr [ebp-10h],0"
"	      0046c057    jmp near ptr 0046C05Ch"
);
// LINE 71:
	asm( 
"	      0046c05c    mov ecx,[ebp-30B4h]"
"	      0046c062    call 004A44D4h"
);
// LINE 75:
	asm( 
"	      0046c067    push 94h"
"	      0046c06c    call 0056A600h"
"	      0046c071    add esp,4"
"	      0046c074    mov [ebp-18h],eax"
"	      0046c077    cmp dword ptr [ebp-18h],0"
"	      0046c07b    je near ptr 0046C0D3h"
"	      0046c081    jmp near ptr 0046C086h"
"	      0046c086    mov dword ptr [ebp-28h],50h"
"	      0046c08d    mov dword ptr [ebp-24h],17Ch"
"	      0046c094    mov dword ptr [ebp-20h],51h"
"	      0046c09b    mov dword ptr [ebp-1Ch],17Dh"
"	      0046c0a2    jmp near ptr 0046C0A7h"
"	      0046c0a7    push 1"
"	      0046c0a9    mov eax,[ebp-30B4h]"
"	      0046c0af    push eax"
"	      0046c0b0    mov eax,ds:[59944Ch]"
"	      0046c0b5    push eax"
"	      0046c0b6    mov eax,[ebp-30B4h]"
"	      0046c0bc    push eax"
"	      0046c0bd    push 1"
"	      0046c0bf    lea eax,[ebp-28h]"
"	      0046c0c2    push eax"
"	      0046c0c3    mov ecx,[ebp-18h]"
"	      0046c0c6    call 00471847h"
"	      0046c0cb    mov [ebp-14h],eax"
"	      0046c0ce    jmp near ptr 0046C0DAh"
"	      0046c0d3    mov dword ptr [ebp-14h],0"
);
// LINE 76:
	asm( 
"	      0046c0da    push 0"
"	      0046c0dc    push 212h"
"	      0046c0e1    call 0042B15Fh"
"	      0046c0e6    add esp,8"
"	      0046c0e9    mov [ebp-8],eax"
);
// LINE 77:
	asm( 
"	      0046c0ec    push 0FFFh"
"	      0046c0f1    lea eax,[ebp-107Ch]"
"	      0046c0f7    push eax"
"	      0046c0f8    mov eax,[ebp-8]"
"	      0046c0fb    push eax"
"	      0046c0fc    mov eax,ds:[5C28C8h]"
"	      0046c101    push eax"
"	      0046c102    call dword ptr ds:[6C38B4h]"
"	      0046c108    mov [ebp-1080h],eax"
"	      0046c10e    cmp dword ptr [ebp-1080h],0"
"	      0046c115    jne near ptr 0046C199h"
"	      0046c11b    push 0FFFh"
"	      0046c120    lea eax,[ebp-107Ch]"
"	      0046c126    push eax"
"	      0046c127    mov ecx,3E8h"
"	      0046c12c    mov eax,[ebp-8]"
"	      0046c12f    sub edx,edx"
"	      0046c131    div ecx"
"	      0046c133    push edx"
"	      0046c134    mov eax,ds:[5C28C8h]"
"	      0046c139    push eax"
"	      0046c13a    call dword ptr ds:[6C38B4h]"
"	      0046c140    mov [ebp-1080h],eax"
"	      0046c146    jmp near ptr 0046C14Bh"
"	      0046c14b    lea eax,[ebp-107Ch]"
"	      0046c151    push eax"
"	      0046c152    call 0056ABE0h"
"	      0046c157    add esp,4"
"	      0046c15a    push eax"
"	      0046c15b    lea eax,[ebp-107Ch]"
"	      0046c161    push eax"
"	      0046c162    lea ecx,[ebp-10h]"
"	      0046c165    call 0040FEE0h"
"	      0046c16a    jmp near ptr 0046C16Fh"
"	      0046c16f    jmp near ptr 0046C174h"
"	      0046c174    push 597200h"
"	      0046c179    call 0056ABE0h"
"	      0046c17e    add esp,4"
"	      0046c181    push eax"
"	      0046c182    push 597200h"
"	      0046c187    lea ecx,[ebp-10h]"
"	      0046c18a    call 00410130h"
"	      0046c18f    jmp near ptr 0046C194h"
"	      0046c194    jmp near ptr 0046C2E9h"
"	      0046c199    jmp near ptr 0046C19Eh"
"	      0046c19e    lea eax,[ebp-107Ch]"
"	      0046c1a4    push eax"
"	      0046c1a5    call 0056ABE0h"
"	      0046c1aa    add esp,4"
"	      0046c1ad    mov [ebp-1094h],eax"
"	      0046c1b3    cmp dword ptr [ebp-1094h],0FFFFFFFFh"
"	      0046c1ba    jne near ptr 0046C1F8h"
"	      0046c1c0    push 5971E4h"
"	      0046c1c5    mov ecx,638C00h"
"	      0046c1ca    call 00569960h"
"	      0046c1cf    mov [ebp-1090h],eax"
"	      0046c1d5    mov eax,[ebp-1090h]"
"	      0046c1db    push eax"
"	      0046c1dc    call 004011B0h"
"	      0046c1e1    add esp,4"
"	      0046c1e4    jmp near ptr 0046C1E9h"
"	      0046c1e9    push 1"
"	      0046c1eb    call 00569430h"
"	      0046c1f0    add esp,4"
"	      0046c1f3    jmp near ptr 0046C1F8h"
"	      0046c1f8    jmp near ptr 0046C1FDh"
"	      0046c1fd    mov eax,[ebp-0Ch]"
"	      0046c200    cmp dword ptr [eax+0Ch],1"
"	      0046c204    ja near ptr 0046C22Eh"
"	      0046c20a    cmp dword ptr [ebp-1094h],0"
"	      0046c211    je near ptr 0046C28Fh"
"	      0046c217    jmp near ptr 0046C21Ch"
"	      0046c21c    mov eax,[ebp-0Ch]"
"	      0046c21f    mov ecx,[ebp-1094h]"
"	      0046c225    cmp [eax+8],ecx"
"	      0046c228    jae near ptr 0046C28Fh"
"	      0046c22e    push 10h"
"	      0046c230    call 0056A600h"
"	      0046c235    add esp,4"
"	      0046c238    mov [ebp-1088h],eax"
"	      0046c23e    cmp dword ptr [ebp-1088h],0"
"	      0046c245    je near ptr 0046C26Fh"
"	      0046c24b    mov eax,[ebp-1094h]"
"	      0046c251    push eax"
"	      0046c252    lea eax,[ebp-107Ch]"
"	      0046c258    push eax"
"	      0046c259    mov ecx,[ebp-1088h]"
"	      0046c25f    call 0041E090h"
"	      0046c264    mov [ebp-1084h],eax"
"	      0046c26a    jmp near ptr 0046C279h"
"	      0046c26f    mov dword ptr [ebp-1084h],0"
"	      0046c279    lea ecx,[ebp-10h]"
"	      0046c27c    call 00412080h"
"	      0046c281    mov eax,[ebp-1084h]"
"	      0046c287    mov [ebp-0Ch],eax"
"	      0046c28a    jmp near ptr 0046C2CEh"
"	      0046c28f    cmp dword ptr [ebp-1094h],0"
"	      0046c296    je near ptr 0046C2CEh"
"	      0046c29c    jmp near ptr 0046C2A1h"
"	      0046c2a1    mov eax,[ebp-0Ch]"
"	      0046c2a4    mov eax,[eax]"
"	      0046c2a6    mov [ebp-108Ch],eax"
"	      0046c2ac    mov eax,[ebp-1094h]"
"	      0046c2b2    push eax"
"	      0046c2b3    lea eax,[ebp-107Ch]"
"	      0046c2b9    push eax"
"	      0046c2ba    mov eax,[ebp-108Ch]"
"	      0046c2c0    push eax"
"	      0046c2c1    call 0056A800h"
"	      0046c2c6    add esp,0Ch"
"	      0046c2c9    jmp near ptr 0046C2CEh"
"	      0046c2ce    mov eax,[ebp-1094h]"
"	      0046c2d4    mov ecx,[ebp-0Ch]"
"	      0046c2d7    mov [ecx+4],eax"
"	      0046c2da    jmp near ptr 0046C2DFh"
"	      0046c2df    jmp near ptr 0046C2E4h"
"	      0046c2e4    jmp near ptr 0046C2E9h"
);
// LINE 78:
	asm( 
"	      0046c2e9    lea eax,[ebp-10h]"
"	      0046c2ec    push eax"
"	      0046c2ed    mov eax,[ebp-14h]"
"	      0046c2f0    mov eax,[eax]"
"	      0046c2f2    mov ecx,[ebp-14h]"
"	      0046c2f5    call dword ptr [eax+48h]"
);
// LINE 79:
	asm( 
"	      0046c2f8    mov eax,[ebp-14h]"
"	      0046c2fb    mov eax,[eax]"
"	      0046c2fd    mov ecx,[ebp-14h]"
"	      0046c300    call dword ptr [eax+4]"
);
// LINE 83:
	asm( 
"	      0046c303    push 94h"
"	      0046c308    call 0056A600h"
"	      0046c30d    add esp,4"
"	      0046c310    mov [ebp-2Ch],eax"
"	      0046c313    cmp dword ptr [ebp-2Ch],0"
"	      0046c317    je near ptr 0046C36Fh"
"	      0046c31d    jmp near ptr 0046C322h"
"	      0046c322    mov dword ptr [ebp-3Ch],118h"
"	      0046c329    mov dword ptr [ebp-38h],17Ch"
"	      0046c330    mov dword ptr [ebp-34h],119h"
"	      0046c337    mov dword ptr [ebp-30h],17Dh"
"	      0046c33e    jmp near ptr 0046C343h"
"	      0046c343    push 1"
"	      0046c345    mov eax,[ebp-30B4h]"
"	      0046c34b    push eax"
"	      0046c34c    mov eax,ds:[59944Ch]"
"	      0046c351    push eax"
"	      0046c352    mov eax,[ebp-30B4h]"
"	      0046c358    push eax"
"	      0046c359    push 2"
"	      0046c35b    lea eax,[ebp-3Ch]"
"	      0046c35e    push eax"
"	      0046c35f    mov ecx,[ebp-2Ch]"
"	      0046c362    call 00471847h"
"	      0046c367    mov [ebp-14h],eax"
"	      0046c36a    jmp near ptr 0046C376h"
"	      0046c36f    mov dword ptr [ebp-14h],0"
);
// LINE 84:
	asm( 
"	      0046c376    push 0"
"	      0046c378    push 213h"
"	      0046c37d    call 0042B15Fh"
"	      0046c382    add esp,8"
"	      0046c385    mov [ebp-8],eax"
);
// LINE 85:
	asm( 
"	      0046c388    push 0FFFh"
"	      0046c38d    lea eax,[ebp-2094h]"
"	      0046c393    push eax"
"	      0046c394    mov eax,[ebp-8]"
"	      0046c397    push eax"
"	      0046c398    mov eax,ds:[5C28C8h]"
"	      0046c39d    push eax"
"	      0046c39e    call dword ptr ds:[6C38B4h]"
"	      0046c3a4    mov [ebp-2098h],eax"
"	      0046c3aa    cmp dword ptr [ebp-2098h],0"
"	      0046c3b1    jne near ptr 0046C435h"
"	      0046c3b7    push 0FFFh"
"	      0046c3bc    lea eax,[ebp-2094h]"
"	      0046c3c2    push eax"
"	      0046c3c3    mov ecx,3E8h"
"	      0046c3c8    mov eax,[ebp-8]"
"	      0046c3cb    sub edx,edx"
"	      0046c3cd    div ecx"
"	      0046c3cf    push edx"
"	      0046c3d0    mov eax,ds:[5C28C8h]"
"	      0046c3d5    push eax"
"	      0046c3d6    call dword ptr ds:[6C38B4h]"
"	      0046c3dc    mov [ebp-2098h],eax"
"	      0046c3e2    jmp near ptr 0046C3E7h"
"	      0046c3e7    lea eax,[ebp-2094h]"
"	      0046c3ed    push eax"
"	      0046c3ee    call 0056ABE0h"
"	      0046c3f3    add esp,4"
"	      0046c3f6    push eax"
"	      0046c3f7    lea eax,[ebp-2094h]"
"	      0046c3fd    push eax"
"	      0046c3fe    lea ecx,[ebp-10h]"
"	      0046c401    call 0040FEE0h"
"	      0046c406    jmp near ptr 0046C40Bh"
"	      0046c40b    jmp near ptr 0046C410h"
"	      0046c410    push 597200h"
"	      0046c415    call 0056ABE0h"
"	      0046c41a    add esp,4"
"	      0046c41d    push eax"
"	      0046c41e    push 597200h"
"	      0046c423    lea ecx,[ebp-10h]"
"	      0046c426    call 00410130h"
"	      0046c42b    jmp near ptr 0046C430h"
"	      0046c430    jmp near ptr 0046C463h"
"	      0046c435    jmp near ptr 0046C43Ah"
"	      0046c43a    lea eax,[ebp-2094h]"
"	      0046c440    push eax"
"	      0046c441    call 0056ABE0h"
"	      0046c446    add esp,4"
"	      0046c449    push eax"
"	      0046c44a    lea eax,[ebp-2094h]"
"	      0046c450    push eax"
"	      0046c451    lea ecx,[ebp-10h]"
"	      0046c454    call 0040FEE0h"
"	      0046c459    jmp near ptr 0046C45Eh"
"	      0046c45e    jmp near ptr 0046C463h"
);
// LINE 86:
	asm( 
"	      0046c463    lea eax,[ebp-10h]"
"	      0046c466    push eax"
"	      0046c467    mov eax,[ebp-14h]"
"	      0046c46a    mov eax,[eax]"
"	      0046c46c    mov ecx,[ebp-14h]"
"	      0046c46f    call dword ptr [eax+48h]"
);
// LINE 87:
	asm( 
"	      0046c472    mov eax,[ebp-14h]"
"	      0046c475    mov eax,[eax]"
"	      0046c477    mov ecx,[ebp-14h]"
"	      0046c47a    call dword ptr [eax+4]"
);
// LINE 91:
	asm( 
"	      0046c47d    push 94h"
"	      0046c482    call 0056A600h"
"	      0046c487    add esp,4"
"	      0046c48a    mov [ebp-40h],eax"
"	      0046c48d    cmp dword ptr [ebp-40h],0"
"	      0046c491    je near ptr 0046C4E9h"
"	      0046c497    jmp near ptr 0046C49Ch"
"	      0046c49c    mov dword ptr [ebp-50h],1E0h"
"	      0046c4a3    mov dword ptr [ebp-4Ch],17Ch"
"	      0046c4aa    mov dword ptr [ebp-48h],1E1h"
"	      0046c4b1    mov dword ptr [ebp-44h],17Dh"
"	      0046c4b8    jmp near ptr 0046C4BDh"
"	      0046c4bd    push 1"
"	      0046c4bf    mov eax,[ebp-30B4h]"
"	      0046c4c5    push eax"
"	      0046c4c6    mov eax,ds:[59944Ch]"
"	      0046c4cb    push eax"
"	      0046c4cc    mov eax,[ebp-30B4h]"
"	      0046c4d2    push eax"
"	      0046c4d3    push 3"
"	      0046c4d5    lea eax,[ebp-50h]"
"	      0046c4d8    push eax"
"	      0046c4d9    mov ecx,[ebp-40h]"
"	      0046c4dc    call 00471847h"
"	      0046c4e1    mov [ebp-14h],eax"
"	      0046c4e4    jmp near ptr 0046C4F0h"
"	      0046c4e9    mov dword ptr [ebp-14h],0"
);
// LINE 92:
	asm( 
"	      0046c4f0    push 0"
"	      0046c4f2    push 214h"
"	      0046c4f7    call 0042B15Fh"
"	      0046c4fc    add esp,8"
"	      0046c4ff    mov [ebp-8],eax"
);
// LINE 93:
	asm( 
"	      0046c502    push 0FFFh"
"	      0046c507    lea eax,[ebp-3098h]"
"	      0046c50d    push eax"
"	      0046c50e    mov eax,[ebp-8]"
"	      0046c511    push eax"
"	      0046c512    mov eax,ds:[5C28C8h]"
"	      0046c517    push eax"
"	      0046c518    call dword ptr ds:[6C38B4h]"
"	      0046c51e    mov [ebp-309Ch],eax"
"	      0046c524    cmp dword ptr [ebp-309Ch],0"
"	      0046c52b    jne near ptr 0046C5AFh"
"	      0046c531    push 0FFFh"
"	      0046c536    lea eax,[ebp-3098h]"
"	      0046c53c    push eax"
"	      0046c53d    mov ecx,3E8h"
"	      0046c542    mov eax,[ebp-8]"
"	      0046c545    sub edx,edx"
"	      0046c547    div ecx"
"	      0046c549    push edx"
"	      0046c54a    mov eax,ds:[5C28C8h]"
"	      0046c54f    push eax"
"	      0046c550    call dword ptr ds:[6C38B4h]"
"	      0046c556    mov [ebp-309Ch],eax"
"	      0046c55c    jmp near ptr 0046C561h"
"	      0046c561    lea eax,[ebp-3098h]"
"	      0046c567    push eax"
"	      0046c568    call 0056ABE0h"
"	      0046c56d    add esp,4"
"	      0046c570    push eax"
"	      0046c571    lea eax,[ebp-3098h]"
"	      0046c577    push eax"
"	      0046c578    lea ecx,[ebp-10h]"
"	      0046c57b    call 0040FEE0h"
"	      0046c580    jmp near ptr 0046C585h"
"	      0046c585    jmp near ptr 0046C58Ah"
"	      0046c58a    push 597200h"
"	      0046c58f    call 0056ABE0h"
"	      0046c594    add esp,4"
"	      0046c597    push eax"
"	      0046c598    push 597200h"
"	      0046c59d    lea ecx,[ebp-10h]"
"	      0046c5a0    call 00410130h"
"	      0046c5a5    jmp near ptr 0046C5AAh"
"	      0046c5aa    jmp near ptr 0046C6FFh"
"	      0046c5af    jmp near ptr 0046C5B4h"
"	      0046c5b4    lea eax,[ebp-3098h]"
"	      0046c5ba    push eax"
"	      0046c5bb    call 0056ABE0h"
"	      0046c5c0    add esp,4"
"	      0046c5c3    mov [ebp-30B0h],eax"
"	      0046c5c9    cmp dword ptr [ebp-30B0h],0FFFFFFFFh"
"	      0046c5d0    jne near ptr 0046C60Eh"
"	      0046c5d6    push 5971E4h"
"	      0046c5db    mov ecx,638C00h"
"	      0046c5e0    call 00569960h"
"	      0046c5e5    mov [ebp-30ACh],eax"
"	      0046c5eb    mov eax,[ebp-30ACh]"
"	      0046c5f1    push eax"
"	      0046c5f2    call 004011B0h"
"	      0046c5f7    add esp,4"
"	      0046c5fa    jmp near ptr 0046C5FFh"
"	      0046c5ff    push 1"
"	      0046c601    call 00569430h"
"	      0046c606    add esp,4"
"	      0046c609    jmp near ptr 0046C60Eh"
"	      0046c60e    jmp near ptr 0046C613h"
"	      0046c613    mov eax,[ebp-0Ch]"
"	      0046c616    cmp dword ptr [eax+0Ch],1"
"	      0046c61a    ja near ptr 0046C644h"
"	      0046c620    cmp dword ptr [ebp-30B0h],0"
"	      0046c627    je near ptr 0046C6A5h"
"	      0046c62d    jmp near ptr 0046C632h"
"	      0046c632    mov eax,[ebp-0Ch]"
"	      0046c635    mov ecx,[ebp-30B0h]"
"	      0046c63b    cmp [eax+8],ecx"
"	      0046c63e    jae near ptr 0046C6A5h"
"	      0046c644    push 10h"
"	      0046c646    call 0056A600h"
"	      0046c64b    add esp,4"
"	      0046c64e    mov [ebp-30A4h],eax"
"	      0046c654    cmp dword ptr [ebp-30A4h],0"
"	      0046c65b    je near ptr 0046C685h"
"	      0046c661    mov eax,[ebp-30B0h]"
"	      0046c667    push eax"
"	      0046c668    lea eax,[ebp-3098h]"
"	      0046c66e    push eax"
"	      0046c66f    mov ecx,[ebp-30A4h]"
"	      0046c675    call 0041E090h"
"	      0046c67a    mov [ebp-30A0h],eax"
"	      0046c680    jmp near ptr 0046C68Fh"
"	      0046c685    mov dword ptr [ebp-30A0h],0"
"	      0046c68f    lea ecx,[ebp-10h]"
"	      0046c692    call 00412080h"
"	      0046c697    mov eax,[ebp-30A0h]"
"	      0046c69d    mov [ebp-0Ch],eax"
"	      0046c6a0    jmp near ptr 0046C6E4h"
"	      0046c6a5    cmp dword ptr [ebp-30B0h],0"
"	      0046c6ac    je near ptr 0046C6E4h"
"	      0046c6b2    jmp near ptr 0046C6B7h"
"	      0046c6b7    mov eax,[ebp-0Ch]"
"	      0046c6ba    mov eax,[eax]"
"	      0046c6bc    mov [ebp-30A8h],eax"
"	      0046c6c2    mov eax,[ebp-30B0h]"
"	      0046c6c8    push eax"
"	      0046c6c9    lea eax,[ebp-3098h]"
"	      0046c6cf    push eax"
"	      0046c6d0    mov eax,[ebp-30A8h]"
"	      0046c6d6    push eax"
"	      0046c6d7    call 0056A800h"
"	      0046c6dc    add esp,0Ch"
"	      0046c6df    jmp near ptr 0046C6E4h"
"	      0046c6e4    mov eax,[ebp-30B0h]"
"	      0046c6ea    mov ecx,[ebp-0Ch]"
"	      0046c6ed    mov [ecx+4],eax"
"	      0046c6f0    jmp near ptr 0046C6F5h"
"	      0046c6f5    jmp near ptr 0046C6FAh"
"	      0046c6fa    jmp near ptr 0046C6FFh"
);
// LINE 94:
	asm( 
"	      0046c6ff    lea eax,[ebp-10h]"
"	      0046c702    push eax"
"	      0046c703    mov eax,[ebp-14h]"
"	      0046c706    mov eax,[eax]"
"	      0046c708    mov ecx,[ebp-14h]"
"	      0046c70b    call dword ptr [eax+48h]"
);
// LINE 95:
	asm( 
"	      0046c70e    mov eax,[ebp-14h]"
"	      0046c711    mov eax,[eax]"
"	      0046c713    mov ecx,[ebp-14h]"
"	      0046c716    call dword ptr [eax+4]"
);
// LINE 97:
	asm( 
"	      0046c719    push 0CCh"
"	      0046c71e    call 0056A600h"
"	      0046c723    add esp,4"
"	      0046c726    mov [ebp-54h],eax"
"	      0046c729    cmp dword ptr [ebp-54h],0"
"	      0046c72d    je near ptr 0046C785h"
"	      0046c733    jmp near ptr 0046C738h"
"	      0046c738    mov dword ptr [ebp-64h],42h"
"	      0046c73f    mov dword ptr [ebp-60h],54h"
"	      0046c746    mov dword ptr [ebp-5Ch],250h"
"	      0046c74d    mov dword ptr [ebp-58h],172h"
"	      0046c754    jmp near ptr 0046C759h"
"	      0046c759    push 1"
"	      0046c75b    mov eax,[ebp-30B4h]"
"	      0046c761    push eax"
"	      0046c762    mov eax,[ebp-30B4h]"
"	      0046c768    push eax"
"	      0046c769    push 4"
"	      0046c76b    lea eax,[ebp-64h]"
"	      0046c76e    push eax"
"	      0046c76f    mov ecx,[ebp-54h]"
"	      0046c772    call 004B4462h"
"	      0046c777    mov ecx,[ebp-30B4h]"
"	      0046c77d    mov [ecx+74h],eax"
"	      0046c780    jmp near ptr 0046C792h"
"	      0046c785    mov eax,[ebp-30B4h]"
"	      0046c78b    mov dword ptr [eax+74h],0"
);
// LINE 98:
	asm( 
"	      0046c792    mov eax,[ebp-30B4h]"
"	      0046c798    mov ecx,[ebp-30B4h]"
"	      0046c79e    mov ecx,[ecx+74h]"
"	      0046c7a1    mov edx,[ecx]"
"	      0046c7a3    mov ecx,[eax+74h]"
"	      0046c7a6    call dword ptr [edx+4]"
);
// LINE 99:
	asm( 
"	      0046c7a9    push 0"
"	      0046c7ab    push 0"
"	      0046c7ad    push 12h"
"	      0046c7af    mov eax,[ebp-30B4h]"
"	      0046c7b5    mov ecx,[ebp-30B4h]"
"	      0046c7bb    mov ecx,[ecx+74h]"
"	      0046c7be    mov edx,[ecx]"
"	      0046c7c0    mov ecx,[eax+74h]"
"	      0046c7c3    call dword ptr [edx+128h]"
);
// LINE 100:
	asm( 
"	      0046c7c9    push 0"
"	      0046c7cb    mov eax,[ebp-30B4h]"
"	      0046c7d1    mov ecx,[ebp-30B4h]"
"	      0046c7d7    mov ecx,[ecx+74h]"
"	      0046c7da    mov edx,[ecx]"
"	      0046c7dc    mov ecx,[eax+74h]"
"	      0046c7df    call dword ptr [edx+28h]"
);
// LINE 101:
	asm( 
"	      0046c7e2    push 0"
"	      0046c7e4    mov eax,[ebp-30B4h]"
"	      0046c7ea    mov ecx,[ebp-30B4h]"
"	      0046c7f0    mov ecx,[ecx+74h]"
"	      0046c7f3    mov edx,[ecx]"
"	      0046c7f5    mov ecx,[eax+74h]"
"	      0046c7f8    call dword ptr [edx+11Ch]"
);
// LINE 102:
	asm( 
"	      0046c7fe    jmp near ptr 0046C803h"
);
// LINE 103:
	asm( 
"	      0046c803    mov byte ptr [ebp-4],0"
"	      0046c807    mov al,[ebp-4]"
"	      0046c80a    mov [ebp-3],al"
"	      0046c80d    mov al,[ebp-3]"
"	      0046c810    mov [ebp-2],al"
);
// LINE 104:
	asm( 
"	      0046c813    lea eax,[ebp-4]"
"	      0046c816    push eax"
"	      0046c817    lea eax,[ebp-4]"
"	      0046c81a    push eax"
"	      0046c81b    mov eax,[ebp-30B4h]"
"	      0046c821    mov ecx,[ebp-30B4h]"
"	      0046c827    mov ecx,[ecx+74h]"
"	      0046c82a    mov edx,[ecx]"
"	      0046c82c    mov ecx,[eax+74h]"
"	      0046c82f    call dword ptr [edx+124h]"
);
// LINE 105:
	asm( 
"	      0046c835    mov eax,[ebp-30B4h]"
"	      0046c83b    mov ecx,[ebp-30B4h]"
"	      0046c841    mov ecx,[ecx+74h]"
"	      0046c844    mov edx,[ecx]"
"	      0046c846    mov ecx,[eax+74h]"
"	      0046c849    call dword ptr [edx+0D8h]"
);
// LINE 106:
	asm( 
"	      0046c84f    mov eax,ds:[599450h]"
"	      0046c854    push eax"
"	      0046c855    push 0"
"	      0046c857    push 1"
"	      0046c859    mov eax,[ebp-30B4h]"
"	      0046c85f    mov ecx,[ebp-30B4h]"
"	      0046c865    mov ecx,[ecx+74h]"
"	      0046c868    mov edx,[ecx]"
"	      0046c86a    mov ecx,[eax+74h]"
"	      0046c86d    call dword ptr [edx+12Ch]"
);
// LINE 108:
	asm( 
"	      0046c873    mov ecx,[ebp-30B4h]"
"	      0046c879    call 0046CD45h"
);
// LINE 110:
	asm( 
"	      0046c87e    mov dword ptr [ebp-68h],1"
"	      0046c885    mov eax,[ebp-0Ch]"
"	      0046c888    dec dword ptr [eax+0Ch]"
"	      0046c88b    mov eax,[ebp-0Ch]"
"	      0046c88e    cmp dword ptr [eax+0Ch],0"
"	      0046c892    jne near ptr 0046C8D1h"
"	      0046c898    mov eax,[ebp-0Ch]"
"	      0046c89b    mov [ebp-7Ch],eax"
"	      0046c89e    mov eax,[ebp-7Ch]"
"	      0046c8a1    mov [ebp-78h],eax"
"	      0046c8a4    cmp dword ptr [ebp-78h],0"
"	      0046c8a8    je near ptr 0046C8D1h"
"	      0046c8ae    mov ecx,[ebp-78h]"
"	      0046c8b1    call 0041F4B0h"
"	      0046c8b6    jmp near ptr 0046C8BBh"
"	      0046c8bb    mov eax,[ebp-78h]"
"	      0046c8be    push eax"
"	      0046c8bf    call 0056A740h"
"	      0046c8c4    add esp,4"
"	      0046c8c7    jmp near ptr 0046C8CCh"
"	      0046c8cc    jmp near ptr 0046C8D1h"
"	      0046c8d1    jmp near ptr 0046C8D6h"
"	      0046c8d6    cmp dword ptr [ebp-10h],0"
"	      0046c8da    je near ptr 0046C8F8h"
"	      0046c8e0    mov eax,[ebp-10h]"
"	      0046c8e3    mov [ebp-70h],eax"
"	      0046c8e6    mov eax,[ebp-70h]"
"	      0046c8e9    mov [ebp-74h],eax"
"	      0046c8ec    mov eax,[ebp-74h]"
"	      0046c8ef    push eax"
"	      0046c8f0    call 0056A740h"
"	      0046c8f5    add esp,4"
"	      0046c8f8    jmp near ptr 0046C8FDh"
"	      0046c8fd    mov eax,[ebp-68h]"
"	      0046c900    jmp near ptr 0046C905h"
);
// LINE 111:
	asm( 
"	      0046c905    pop edi"
"	      0046c906    pop esi"
"	      0046c907    pop ebx"
"	      0046c908    leave"
"	      0046c909    ret"
);
}

// FUNCTION: COPTER_D 0x0046c90a
int32_t MissionLogWindow::ReadPalette(struct SparkalColor* pColorTable) {
// LINE 118:
	asm( 
"	      0046c90a    push ebp"
"	      0046c90b    mov ebp,esp"
"	      0046c90d    sub esp,24h"
"	      0046c910    push ebx"
"	      0046c911    push esi"
"	      0046c912    push edi"
"	      0046c913    mov [ebp-24h],ecx"
);
// LINE 119:
	asm( 
"	      0046c916    mov eax,[ebp-24h]"
"	      0046c919    cmp dword ptr [eax+64h],0"
"	      0046c91d    je near ptr 0046C93Eh"
"	      0046c923    mov eax,[ebp-24h]"
"	      0046c926    mov eax,[eax+64h]"
"	      0046c929    mov [ebp-4],eax"
"	      0046c92c    mov eax,[ebp-4]"
"	      0046c92f    mov [ebp-0Ch],eax"
"	      0046c932    mov eax,[ebp-0Ch]"
"	      0046c935    push eax"
"	      0046c936    call 0056A740h"
"	      0046c93b    add esp,4"
"	      0046c93e    jmp near ptr 0046C943h"
"	      0046c943    mov eax,[ebp-24h]"
"	      0046c946    mov eax,[eax+68h]"
"	      0046c949    mov eax,[eax+4]"
"	      0046c94c    inc eax"
"	      0046c94d    push eax"
"	      0046c94e    call 0056A600h"
"	      0046c953    add esp,4"
"	      0046c956    mov ecx,[ebp-24h]"
"	      0046c959    mov [ecx+64h],eax"
"	      0046c95c    jmp near ptr 0046C961h"
"	      0046c961    mov eax,[ebp-24h]"
"	      0046c964    mov eax,[eax+68h]"
"	      0046c967    cmp dword ptr [eax+4],0"
"	      0046c96b    je near ptr 0046C9DAh"
"	      0046c971    jmp near ptr 0046C976h"
"	      0046c976    jmp near ptr 0046C97Bh"
"	      0046c97b    mov eax,[ebp-24h]"
"	      0046c97e    mov eax,[eax+68h]"
"	      0046c981    cmp dword ptr [eax+4],0"
"	      0046c985    je near ptr 0046C9A0h"
"	      0046c98b    mov eax,[ebp-24h]"
"	      0046c98e    mov eax,[eax+68h]"
"	      0046c991    mov eax,[eax]"
"	      0046c993    mov [ebp-18h],eax"
"	      0046c996    jmp near ptr 0046C9ACh"
"	      0046c99b    jmp near ptr 0046C9ACh"
"	      0046c9a0    mov dword ptr [ebp-18h],0"
"	      0046c9a7    jmp near ptr 0046C9ACh"
"	      0046c9ac    mov eax,[ebp-24h]"
"	      0046c9af    mov eax,[eax+68h]"
"	      0046c9b2    mov eax,[eax+4]"
"	      0046c9b5    mov [ebp-1Ch],eax"
"	      0046c9b8    mov eax,[ebp-24h]"
"	      0046c9bb    mov eax,[eax+64h]"
"	      0046c9be    mov [ebp-20h],eax"
"	      0046c9c1    mov eax,[ebp-1Ch]"
"	      0046c9c4    push eax"
"	      0046c9c5    mov eax,[ebp-18h]"
"	      0046c9c8    push eax"
"	      0046c9c9    mov eax,[ebp-20h]"
"	      0046c9cc    push eax"
"	      0046c9cd    call 0056A800h"
"	      0046c9d2    add esp,0Ch"
"	      0046c9d5    jmp near ptr 0046C9DAh"
"	      0046c9da    jmp near ptr 0046C9DFh"
"	      0046c9df    mov byte ptr [ebp-8],0"
"	      0046c9e3    jmp near ptr 0046C9E8h"
"	      0046c9e8    lea eax,[ebp-8]"
"	      0046c9eb    mov [ebp-10h],eax"
"	      0046c9ee    jmp near ptr 0046C9F3h"
"	      0046c9f3    mov eax,[ebp-24h]"
"	      0046c9f6    mov eax,[eax+68h]"
"	      0046c9f9    mov eax,[eax+4]"
"	      0046c9fc    mov ecx,[ebp-24h]"
"	      0046c9ff    add eax,[ecx+64h]"
"	      0046ca02    mov [ebp-14h],eax"
"	      0046ca05    mov eax,[ebp-10h]"
"	      0046ca08    mov al,[eax]"
"	      0046ca0a    mov ecx,[ebp-14h]"
"	      0046ca0d    mov [ecx],al"
"	      0046ca0f    jmp near ptr 0046CA14h"
"	      0046ca14    jmp near ptr 0046CA19h"
"	      0046ca19    mov eax,[ebp+8]"
"	      0046ca1c    push eax"
"	      0046ca1d    mov eax,[ebp-24h]"
"	      0046ca20    mov eax,[eax+64h]"
"	      0046ca23    push eax"
"	      0046ca24    call 004704DBh"
"	      0046ca29    add esp,8"
"	      0046ca2c    test eax,eax"
"	      0046ca2e    jne near ptr 0046CA3Eh"
"	      0046ca34    mov eax,1"
"	      0046ca39    jmp near ptr 0046CA40h"
"	      0046ca3e    xor eax,eax"
"	      0046ca40    jmp near ptr 0046CA45h"
);
// LINE 120:
	asm( 
"	      0046ca45    pop edi"
"	      0046ca46    pop esi"
"	      0046ca47    pop ebx"
"	      0046ca48    leave"
"	      0046ca49    ret 4"
);
}

// FUNCTION: COPTER_D 0x0046ca4c
int32_t MissionLogWindow::CreateImage(int32_t __formal) {
	char[260] szBackgroundBufferPath;

// LINE 126:
	asm( 
"	      0046ca4c    push ebp"
"	      0046ca4d    mov ebp,esp"
"	      0046ca4f    sub esp,10Ch"
"	      0046ca55    push ebx"
"	      0046ca56    push esi"
"	      0046ca57    push edi"
"	      0046ca58    mov [ebp-10Ch],ecx"
);
// LINE 129:
	asm( 
"	      0046ca5e    push 0"
"	      0046ca60    mov ecx,[ebp-10Ch]"
"	      0046ca66    call 004A4AA0h"
);
// LINE 131:
	asm( 
"	      0046ca6b    mov eax,[ebp-10Ch]"
"	      0046ca71    cmp dword ptr [eax+78h],0"
"	      0046ca75    jne near ptr 0046CAE1h"
);
// LINE 132:
	asm( 
"	      0046ca7b    lea eax,[ebp-104h]"
"	      0046ca81    push eax"
"	      0046ca82    mov eax,ds:[599454h]"
"	      0046ca87    push eax"
"	      0046ca88    push 0"
"	      0046ca8a    push 6"
"	      0046ca8c    call 0049172Bh"
"	      0046ca91    add esp,10h"
);
// LINE 133:
	asm( 
"	      0046ca94    push 134h"
"	      0046ca99    call 0056A600h"
"	      0046ca9e    add esp,4"
"	      0046caa1    mov [ebp-108h],eax"
"	      0046caa7    cmp dword ptr [ebp-108h],0"
"	      0046caae    je near ptr 0046CAD4h"
"	      0046cab4    lea eax,[ebp-104h]"
"	      0046caba    push eax"
"	      0046cabb    mov ecx,[ebp-108h]"
"	      0046cac1    call 0046E6DFh"
"	      0046cac6    mov ecx,[ebp-10Ch]"
"	      0046cacc    mov [ecx+78h],eax"
"	      0046cacf    jmp near ptr 0046CAE1h"
"	      0046cad4    mov eax,[ebp-10Ch]"
"	      0046cada    mov dword ptr [eax+78h],0"
);
// LINE 135:
	asm( 
"	      0046cae1    mov eax,[ebp-10Ch]"
"	      0046cae7    mov eax,[eax+40h]"
"	      0046caea    jmp near ptr 0046CAEFh"
);
// LINE 136:
	asm( 
"	      0046caef    pop edi"
"	      0046caf0    pop esi"
"	      0046caf1    pop ebx"
"	      0046caf2    leave"
"	      0046caf3    ret 4"
);
}

// FUNCTION: COPTER_D 0x0046caf6
void MissionLogWindow::DestroyImage() {
// LINE 142:
	asm( 
"	      0046caf6    push ebp"
"	      0046caf7    mov ebp,esp"
"	      0046caf9    sub esp,0Ch"
"	      0046cafc    push ebx"
"	      0046cafd    push esi"
"	      0046cafe    push edi"
"	      0046caff    mov [ebp-0Ch],ecx"
);
// LINE 143:
	asm( 
"	      0046cb02    mov eax,[ebp-0Ch]"
"	      0046cb05    cmp dword ptr [eax+78h],0"
"	      0046cb09    je near ptr 0046CB50h"
);
// LINE 144:
	asm( 
"	      0046cb0f    mov eax,[ebp-0Ch]"
"	      0046cb12    mov eax,[eax+78h]"
"	      0046cb15    mov [ebp-8],eax"
"	      0046cb18    mov eax,[ebp-8]"
"	      0046cb1b    mov [ebp-4],eax"
"	      0046cb1e    cmp dword ptr [ebp-4],0"
"	      0046cb22    je near ptr 0046CB46h"
"	      0046cb28    mov ecx,[ebp-4]"
"	      0046cb2b    call 0046EC7Ah"
"	      0046cb30    mov eax,[ebp-4]"
"	      0046cb33    push eax"
"	      0046cb34    call 0056A740h"
"	      0046cb39    add esp,4"
"	      0046cb3c    jmp near ptr 0046CB41h"
"	      0046cb41    jmp near ptr 0046CB46h"
);
// LINE 145:
	asm( 
"	      0046cb46    mov eax,[ebp-0Ch]"
"	      0046cb49    mov dword ptr [eax+78h],0"
);
// LINE 147:
	asm( 
"	      0046cb50    mov ecx,[ebp-0Ch]"
"	      0046cb53    call 004A4CABh"
);
// LINE 148:
	asm( 
"	      0046cb58    jmp near ptr 0046CB5Dh"
"	      0046cb5d    pop edi"
"	      0046cb5e    pop esi"
"	      0046cb5f    pop ebx"
"	      0046cb60    leave"
"	      0046cb61    ret"
);
}

// FUNCTION: COPTER_D 0x0046cb62
int32_t MissionLogWindow::ComposeSelf() {
// LINE 159:
	asm( 
"	      0046cb62    push ebp"
"	      0046cb63    mov ebp,esp"
"	      0046cb65    sub esp,4"
"	      0046cb68    push ebx"
"	      0046cb69    push esi"
"	      0046cb6a    push edi"
"	      0046cb6b    mov [ebp-4],ecx"
);
// LINE 160:
	asm( 
"	      0046cb6e    mov eax,[ebp-4]"
"	      0046cb71    cmp dword ptr [eax+54h],0"
"	      0046cb75    jne near ptr 0046CB82h"
);
// LINE 161:
	asm( 
"	      0046cb7b    xor eax,eax"
"	      0046cb7d    jmp near ptr 0046CC3Fh"
);
// LINE 164:
	asm( 
"	      0046cb82    mov eax,[ebp-4]"
"	      0046cb85    mov eax,[eax]"
"	      0046cb87    mov ecx,[ebp-4]"
"	      0046cb8a    call dword ptr [eax+0C0h]"
"	      0046cb90    test eax,eax"
"	      0046cb92    je near ptr 0046CBE0h"
);
// LINE 165:
	asm( 
"	      0046cb98    push 1"
"	      0046cb9a    push 0"
"	      0046cb9c    mov eax,[ebp-4]"
"	      0046cb9f    mov eax,[eax]"
"	      0046cba1    mov ecx,[ebp-4]"
"	      0046cba4    call dword ptr [eax+30h]"
);
// LINE 166:
	asm( 
"	      0046cba7    mov eax,[ebp-4]"
"	      0046cbaa    mov eax,[eax]"
"	      0046cbac    mov ecx,[ebp-4]"
"	      0046cbaf    call dword ptr [eax+0BCh]"
);
// LINE 167:
	asm( 
"	      0046cbb5    jmp near ptr 0046CBBAh"
"	      0046cbba    mov eax,[ebp-4]"
"	      0046cbbd    mov eax,[eax+74h]"
"	      0046cbc0    cmp dword ptr [eax+48h],0"
"	      0046cbc4    je near ptr 0046CBD2h"
);
// LINE 168:
	asm( 
"	      0046cbca    mov ecx,[ebp-4]"
"	      0046cbcd    call 0046CC44h"
);
// LINE 169:
	asm( 
"	      0046cbd2    mov eax,[ebp-4]"
"	      0046cbd5    mov eax,[eax]"
"	      0046cbd7    mov ecx,[ebp-4]"
"	      0046cbda    call dword ptr [eax+0B8h]"
);
// LINE 171:
	asm( 
"	      0046cbe0    mov eax,[ebp-4]"
"	      0046cbe3    cmp dword ptr [eax+40h],0"
"	      0046cbe7    je near ptr 0046CC35h"
);
// LINE 173:
	asm( 
"	      0046cbed    jmp near ptr 0046CBF2h"
"	      0046cbf2    jmp near ptr 0046CBF7h"
"	      0046cbf7    mov eax,[ebp-4]"
"	      0046cbfa    mov eax,[eax+40h]"
"	      0046cbfd    mov eax,[eax+0Ch]"
"	      0046cc00    push eax"
"	      0046cc01    mov eax,[ebp-4]"
"	      0046cc04    mov eax,[eax+40h]"
"	      0046cc07    mov eax,[eax+8]"
"	      0046cc0a    push eax"
"	      0046cc0b    push 0"
"	      0046cc0d    push 0"
"	      0046cc0f    mov eax,[ebp-4]"
"	      0046cc12    mov eax,[eax+24h]"
"	      0046cc15    push eax"
"	      0046cc16    mov eax,[ebp-4]"
"	      0046cc19    mov eax,[eax+20h]"
"	      0046cc1c    push eax"
"	      0046cc1d    mov eax,[ebp-4]"
"	      0046cc20    mov eax,[eax+44h]"
"	      0046cc23    push eax"
"	      0046cc24    mov eax,[ebp-4]"
"	      0046cc27    mov ecx,[ebp-4]"
"	      0046cc2a    mov ecx,[ecx+40h]"
"	      0046cc2d    mov edx,[ecx]"
"	      0046cc2f    mov ecx,[eax+40h]"
"	      0046cc32    call dword ptr [edx+0Ch]"
);
// LINE 175:
	asm( 
"	      0046cc35    mov eax,1"
"	      0046cc3a    jmp near ptr 0046CC3Fh"
);
// LINE 176:
	asm( 
"	      0046cc3f    pop edi"
"	      0046cc40    pop esi"
"	      0046cc41    pop ebx"
"	      0046cc42    leave"
"	      0046cc43    ret"
);
}

// FUNCTION: COPTER_D 0x0046cc44
void MissionLogWindow::DrawBackground() {
	long y;
	int32_t i;
	long x;

// LINE 186:
	asm( 
"	      0046cc44    push ebp"
"	      0046cc45    mov ebp,esp"
"	      0046cc47    sub esp,10h"
"	      0046cc4a    push ebx"
"	      0046cc4b    push esi"
"	      0046cc4c    push edi"
"	      0046cc4d    mov [ebp-10h],ecx"
);
// LINE 192:
	asm( 
"	      0046cc50    mov dword ptr [ebp-8],0"
"	      0046cc57    mov dword ptr [ebp-4],42h"
"	      0046cc5e    mov dword ptr [ebp-0Ch],50h"
"	      0046cc65    jmp near ptr 0046CC6Dh"
"	      0046cc6a    inc dword ptr [ebp-8]"
"	      0046cc6d    cmp dword ptr [ebp-8],15h"
"	      0046cc71    jge near ptr 0046CCABh"
);
// LINE 193:
	asm( 
"	      0046cc77    push 122h"
"	      0046cc7c    push 18h"
"	      0046cc7e    push 0"
"	      0046cc80    push 0"
"	      0046cc82    mov eax,[ebp-0Ch]"
"	      0046cc85    push eax"
"	      0046cc86    mov eax,[ebp-4]"
"	      0046cc89    push eax"
"	      0046cc8a    mov eax,[ebp-10h]"
"	      0046cc8d    mov eax,[eax+40h]"
"	      0046cc90    push eax"
"	      0046cc91    mov eax,[ebp-10h]"
"	      0046cc94    mov ecx,[ebp-10h]"
"	      0046cc97    mov ecx,[ecx+78h]"
"	      0046cc9a    mov edx,[ecx]"
"	      0046cc9c    mov ecx,[eax+78h]"
"	      0046cc9f    call dword ptr [edx+0Ch]"
);
// LINE 194:
	asm( 
"	      0046cca2    add dword ptr [ebp-4],18h"
);
// LINE 195:
	asm( 
"	      0046cca6    jmp near ptr 0046CC6Ah"
);
// LINE 196:
	asm( 
"	      0046ccab    jmp near ptr 0046CCB0h"
"	      0046ccb0    pop edi"
"	      0046ccb1    pop esi"
"	      0046ccb2    pop ebx"
"	      0046ccb3    leave"
"	      0046ccb4    ret"
);
}

// FUNCTION: COPTER_D 0x0046ccb5
int32_t MissionLogWindow::DoMessage(class GraphicWindow* gwSource, long lWindowID, long lMessage, void * __ptr32 pMessageData) {
	long lMyMessage;

// LINE 203:
	asm( 
"	      0046ccb5    push ebp"
"	      0046ccb6    mov ebp,esp"
"	      0046ccb8    sub esp,8"
"	      0046ccbb    push ebx"
"	      0046ccbc    push esi"
"	      0046ccbd    push edi"
"	      0046ccbe    mov [ebp-8],ecx"
);
// LINE 206:
	asm( 
"	      0046ccc1    cmp dword ptr [ebp+0Ch],1"
"	      0046ccc5    jne near ptr 0046CCE5h"
);
// LINE 207:
	asm( 
"	      0046cccb    mov eax,[ebp-8]"
"	      0046ccce    cmp dword ptr [eax+7Ch],0"
"	      0046ccd2    je near ptr 0046CCE0h"
);
// LINE 208:
	asm( 
"	      0046ccd8    mov ecx,[ebp-8]"
"	      0046ccdb    call 0046CD45h"
);
// LINE 210:
	asm( 
"	      0046cce0    jmp near ptr 0046CD34h"
"	      0046cce5    cmp dword ptr [ebp+0Ch],2"
"	      0046cce9    jne near ptr 0046CD09h"
);
// LINE 211:
	asm( 
"	      0046ccef    mov eax,[ebp-8]"
"	      0046ccf2    cmp dword ptr [eax+7Ch],1"
"	      0046ccf6    je near ptr 0046CD04h"
);
// LINE 212:
	asm( 
"	      0046ccfc    mov ecx,[ebp-8]"
"	      0046ccff    call 0046CF77h"
);
// LINE 214:
	asm( 
"	      0046cd04    jmp near ptr 0046CD34h"
"	      0046cd09    cmp dword ptr [ebp+0Ch],3"
"	      0046cd0d    jne near ptr 0046CD34h"
);
// LINE 215:
	asm( 
"	      0046cd13    lea eax,[ebp-4]"
"	      0046cd16    push eax"
"	      0046cd17    push 1"
"	      0046cd19    mov eax,[ebp-8]"
"	      0046cd1c    mov eax,[eax+4]"
"	      0046cd1f    push eax"
"	      0046cd20    mov eax,[ebp-8]"
"	      0046cd23    push eax"
"	      0046cd24    mov eax,[ebp-8]"
"	      0046cd27    mov ecx,[ebp-8]"
"	      0046cd2a    mov ecx,[ecx+38h]"
"	      0046cd2d    mov edx,[ecx]"
"	      0046cd2f    mov ecx,[eax+38h]"
"	      0046cd32    call dword ptr [edx]"
);
// LINE 217:
	asm( 
"	      0046cd34    mov eax,1"
"	      0046cd39    jmp near ptr 0046CD3Eh"
);
// LINE 218:
	asm( 
"	      0046cd3e    pop edi"
"	      0046cd3f    pop esi"
"	      0046cd40    pop ebx"
"	      0046cd41    leave"
"	      0046cd42    ret 10h"
);
}

// FUNCTION: COPTER_D 0x0046cd45
void MissionLogWindow::SortByTimeDate() {
	class list<tagLogBase *>::iterator iterator;
	class basic_string<char> sCurrentText;

// LINE 224:
	asm( 
"	      0046cd45    push ebp"
"	      0046cd46    mov ebp,esp"
"	      0046cd48    sub esp,54h"
"	      0046cd4b    push ebx"
"	      0046cd4c    push esi"
"	      0046cd4d    push edi"
"	      0046cd4e    mov [ebp-54h],ecx"
);
// LINE 225:
	asm( 
"	      0046cd51    jmp near ptr 0046CD56h"
);
// LINE 226:
	asm( 
"	      0046cd56    push 10h"
"	      0046cd58    call 0056A600h"
"	      0046cd5d    add esp,4"
"	      0046cd60    mov [ebp-34h],eax"
"	      0046cd63    cmp dword ptr [ebp-34h],0"
"	      0046cd67    je near ptr 0046CDA6h"
"	      0046cd6d    mov eax,[ebp-34h]"
"	      0046cd70    mov dword ptr [eax+4],0"
"	      0046cd77    mov eax,[ebp-34h]"
"	      0046cd7a    mov eax,[eax+4]"
"	      0046cd7d    mov ecx,[ebp-34h]"
"	      0046cd80    mov [ecx+8],eax"
"	      0046cd83    mov eax,[ebp-34h]"
"	      0046cd86    mov dword ptr [eax],0"
"	      0046cd8c    mov eax,[ebp-34h]"
"	      0046cd8f    mov dword ptr [eax+0Ch],1"
"	      0046cd96    jmp near ptr 0046CD9Bh"
"	      0046cd9b    mov eax,[ebp-34h]"
"	      0046cd9e    mov [ebp-4],eax"
"	      0046cda1    jmp near ptr 0046CDADh"
"	      0046cda6    mov dword ptr [ebp-4],0"
"	      0046cdad    mov dword ptr [ebp-8],0"
"	      0046cdb4    jmp near ptr 0046CDB9h"
);
// LINE 228:
	asm( 
"	      0046cdb9    mov ecx,606E78h"
"	      0046cdbe    call 004ECCD1h"
);
// LINE 229:
	asm( 
"	      0046cdc3    mov eax,[ebp-54h]"
"	      0046cdc6    mov ecx,[ebp-54h]"
"	      0046cdc9    mov ecx,[ecx+74h]"
"	      0046cdcc    mov edx,[ecx]"
"	      0046cdce    mov ecx,[eax+74h]"
"	      0046cdd1    call dword ptr [edx+0CCh]"
"	      0046cdd7    mov eax,ds:[606E78h]"
"	      0046cddc    mov [ebp-30h],eax"
);
// LINE 230:
	asm( 
"	      0046cddf    mov eax,[ebp-30h]"
"	      0046cde2    mov eax,[eax]"
"	      0046cde4    mov eax,[eax]"
"	      0046cde6    mov [ebp-2Ch],eax"
"	      0046cde9    mov eax,[ebp-2Ch]"
"	      0046cdec    mov [ebp-10h],eax"
"	      0046cdef    jmp near ptr 0046CDF4h"
"	      0046cdf4    jmp near ptr 0046CDF9h"
"	      0046cdf9    mov eax,[ebp-10h]"
"	      0046cdfc    mov [ebp-0Ch],eax"
);
// LINE 23:
	asm( 
"	      0046cdff    mov eax,ds:[606E78h]"
"	      0046ce04    mov [ebp-20h],eax"
);
// LINE 231:
	asm( 
"	      0046ce07    mov eax,[ebp-20h]"
"	      0046ce0a    mov eax,[eax]"
"	      0046ce0c    mov [ebp-1Ch],eax"
"	      0046ce0f    mov eax,[ebp-1Ch]"
"	      0046ce12    mov [ebp-14h],eax"
"	      0046ce15    jmp near ptr 0046CE1Ah"
"	      0046ce1a    jmp near ptr 0046CE1Fh"
"	      0046ce1f    mov eax,[ebp-0Ch]"
"	      0046ce22    cmp [ebp-14h],eax"
"	      0046ce25    jne near ptr 0046CE35h"
"	      0046ce2b    jmp near ptr 0046CE49h"
"	      0046ce30    jmp near ptr 0046CE35h"
"	      0046ce35    jmp near ptr 0046CE44h"
"	      0046ce3a    cmp dword ptr [ebp-24h],0"
"	      0046ce3e    jne near ptr 0046CE49h"
"	      0046ce44    jmp near ptr 0046CE4Eh"
"	      0046ce49    jmp near ptr 0046CEB4h"
"	      0046ce4e    jmp near ptr 0046CE5Dh"
"	      0046ce53    cmp dword ptr [ebp-28h],0"
"	      0046ce57    je near ptr 0046CEB4h"
);
// LINE 232:
	asm( 
"	      0046ce5d    jmp near ptr 0046CE62h"
"	      0046ce62    push 1"
"	      0046ce64    lea eax,[ebp-8]"
"	      0046ce67    push eax"
"	      0046ce68    mov eax,[ebp-0Ch]"
"	      0046ce6b    mov eax,[eax+8]"
"	      0046ce6e    push eax"
"	      0046ce6f    call 004EDB4Eh"
"	      0046ce74    add esp,0Ch"
);
// LINE 233:
	asm( 
"	      0046ce77    push 0FFFFFFFFh"
"	      0046ce79    lea eax,[ebp-8]"
"	      0046ce7c    push eax"
"	      0046ce7d    mov eax,[ebp-54h]"
"	      0046ce80    mov ecx,[ebp-54h]"
"	      0046ce83    mov ecx,[ecx+74h]"
"	      0046ce86    mov edx,[ecx]"
"	      0046ce88    mov ecx,[eax+74h]"
"	      0046ce8b    call dword ptr [edx+0D4h]"
);
// LINE 234:
	asm( 
"	      0046ce91    mov eax,[ebp-0Ch]"
"	      0046ce94    mov [ebp-50h],eax"
"	      0046ce97    mov eax,[ebp-0Ch]"
"	      0046ce9a    mov eax,[eax]"
"	      0046ce9c    mov [ebp-0Ch],eax"
"	      0046ce9f    jmp near ptr 0046CEA4h"
"	      0046cea4    mov eax,[ebp-50h]"
"	      0046cea7    mov [ebp-18h],eax"
"	      0046ceaa    jmp near ptr 0046CEAFh"
);
// LINE 235:
	asm( 
"	      0046ceaf    jmp near ptr 0046CDFFh"
);
// LINE 236:
	asm( 
"	      0046ceb4    mov eax,[ebp-54h]"
"	      0046ceb7    mov dword ptr [eax+7Ch],0"
);
// LINE 237:
	asm( 
"	      0046cebe    mov eax,[ebp-4]"
"	      0046cec1    dec dword ptr [eax+0Ch]"
"	      0046cec4    mov eax,[ebp-4]"
"	      0046cec7    cmp dword ptr [eax+0Ch],0"
"	      0046cecb    jne near ptr 0046CF41h"
"	      0046ced1    mov eax,[ebp-4]"
"	      0046ced4    mov [ebp-44h],eax"
"	      0046ced7    mov eax,[ebp-44h]"
"	      0046ceda    mov [ebp-40h],eax"
"	      0046cedd    cmp dword ptr [ebp-40h],0"
"	      0046cee1    je near ptr 0046CF41h"
"	      0046cee7    mov eax,[ebp-40h]"
"	      0046ceea    cmp dword ptr [eax+8],0"
"	      0046ceee    je near ptr 0046CF21h"
"	      0046cef4    mov eax,[ebp-40h]"
"	      0046cef7    mov eax,[eax]"
"	      0046cef9    mov [ebp-48h],eax"
"	      0046cefc    mov eax,[ebp-48h]"
"	      0046ceff    mov [ebp-4Ch],eax"
"	      0046cf02    mov eax,[ebp-4Ch]"
"	      0046cf05    push eax"
"	      0046cf06    call 0056A740h"
"	      0046cf0b    add esp,4"
"	      0046cf0e    mov eax,[ebp-40h]"
"	      0046cf11    mov dword ptr [eax+8],0"
"	      0046cf18    mov eax,[ebp-40h]"
"	      0046cf1b    mov dword ptr [eax],0"
"	      0046cf21    jmp near ptr 0046CF26h"
"	      0046cf26    jmp near ptr 0046CF2Bh"
"	      0046cf2b    mov eax,[ebp-40h]"
"	      0046cf2e    push eax"
"	      0046cf2f    call 0056A740h"
"	      0046cf34    add esp,4"
"	      0046cf37    jmp near ptr 0046CF3Ch"
"	      0046cf3c    jmp near ptr 0046CF41h"
"	      0046cf41    jmp near ptr 0046CF46h"
"	      0046cf46    cmp dword ptr [ebp-8],0"
"	      0046cf4a    je near ptr 0046CF68h"
"	      0046cf50    mov eax,[ebp-8]"
"	      0046cf53    mov [ebp-38h],eax"
"	      0046cf56    mov eax,[ebp-38h]"
"	      0046cf59    mov [ebp-3Ch],eax"
"	      0046cf5c    mov eax,[ebp-3Ch]"
"	      0046cf5f    push eax"
"	      0046cf60    call 0056A740h"
"	      0046cf65    add esp,4"
"	      0046cf68    jmp near ptr 0046CF6Dh"
"	      0046cf6d    jmp near ptr 0046CF72h"
"	      0046cf72    pop edi"
"	      0046cf73    pop esi"
"	      0046cf74    pop ebx"
"	      0046cf75    leave"
"	      0046cf76    ret"
);
}

// FUNCTION: COPTER_D 0x0046cf77
void MissionLogWindow::SortByType() {
	unsigned long nCurrentMissionID;
	class list<tagLogBase *>::iterator iterator;
	class basic_string<char> sCurrentText;

// LINE 244:
	asm( 
"	      0046cf77    push ebp"
"	      0046cf78    mov ebp,esp"
"	      0046cf7a    sub esp,84h"
"	      0046cf80    push ebx"
"	      0046cf81    push esi"
"	      0046cf82    push edi"
"	      0046cf83    mov [ebp-84h],ecx"
);
// LINE 245:
	asm( 
"	      0046cf89    jmp near ptr 0046CF8Eh"
);
// LINE 246:
	asm( 
"	      0046cf8e    push 10h"
"	      0046cf90    call 0056A600h"
"	      0046cf95    add esp,4"
"	      0046cf98    mov [ebp-40h],eax"
"	      0046cf9b    cmp dword ptr [ebp-40h],0"
"	      0046cf9f    je near ptr 0046CFDEh"
"	      0046cfa5    mov eax,[ebp-40h]"
"	      0046cfa8    mov dword ptr [eax+4],0"
"	      0046cfaf    mov eax,[ebp-40h]"
"	      0046cfb2    mov eax,[eax+4]"
"	      0046cfb5    mov ecx,[ebp-40h]"
"	      0046cfb8    mov [ecx+8],eax"
"	      0046cfbb    mov eax,[ebp-40h]"
"	      0046cfbe    mov dword ptr [eax],0"
"	      0046cfc4    mov eax,[ebp-40h]"
"	      0046cfc7    mov dword ptr [eax+0Ch],1"
"	      0046cfce    jmp near ptr 0046CFD3h"
"	      0046cfd3    mov eax,[ebp-40h]"
"	      0046cfd6    mov [ebp-4],eax"
"	      0046cfd9    jmp near ptr 0046CFE5h"
"	      0046cfde    mov dword ptr [ebp-4],0"
"	      0046cfe5    mov dword ptr [ebp-8],0"
"	      0046cfec    jmp near ptr 0046CFF1h"
);
// LINE 249:
	asm( 
"	      0046cff1    mov ecx,606E78h"
"	      0046cff6    call 004ED1FDh"
);
// LINE 250:
	asm( 
"	      0046cffb    mov eax,[ebp-84h]"
"	      0046d001    mov ecx,[ebp-84h]"
"	      0046d007    mov ecx,[ecx+74h]"
"	      0046d00a    mov edx,[ecx]"
"	      0046d00c    mov ecx,[eax+74h]"
"	      0046d00f    call dword ptr [edx+0CCh]"
"	      0046d015    mov eax,ds:[606E78h]"
"	      0046d01a    mov [ebp-3Ch],eax"
);
// LINE 251:
	asm( 
"	      0046d01d    mov eax,[ebp-3Ch]"
"	      0046d020    mov eax,[eax]"
"	      0046d022    mov eax,[eax]"
"	      0046d024    mov [ebp-38h],eax"
"	      0046d027    mov eax,[ebp-38h]"
"	      0046d02a    mov [ebp-14h],eax"
"	      0046d02d    jmp near ptr 0046D032h"
"	      0046d032    jmp near ptr 0046D037h"
"	      0046d037    mov eax,[ebp-14h]"
"	      0046d03a    mov [ebp-0Ch],eax"
);
// LINE 252:
	asm( 
"	      0046d03d    jmp near ptr 0046D042h"
"	      0046d042    mov eax,[ebp-0Ch]"
"	      0046d045    mov eax,[eax+8]"
"	      0046d048    mov eax,[eax+8]"
"	      0046d04b    mov [ebp-10h],eax"
);
// LINE 23:
	asm( 
"	      0046d04e    mov eax,ds:[606E78h]"
"	      0046d053    mov [ebp-2Ch],eax"
);
// LINE 253:
	asm( 
"	      0046d056    mov eax,[ebp-2Ch]"
"	      0046d059    mov eax,[eax]"
"	      0046d05b    mov [ebp-28h],eax"
"	      0046d05e    mov eax,[ebp-28h]"
"	      0046d061    mov [ebp-18h],eax"
"	      0046d064    jmp near ptr 0046D069h"
"	      0046d069    jmp near ptr 0046D06Eh"
"	      0046d06e    mov eax,[ebp-18h]"
"	      0046d071    cmp [ebp-0Ch],eax"
"	      0046d074    jne near ptr 0046D084h"
"	      0046d07a    jmp near ptr 0046D098h"
"	      0046d07f    jmp near ptr 0046D084h"
"	      0046d084    jmp near ptr 0046D093h"
"	      0046d089    cmp dword ptr [ebp-30h],0"
"	      0046d08d    jne near ptr 0046D098h"
"	      0046d093    jmp near ptr 0046D09Dh"
"	      0046d098    jmp near ptr 0046D2C2h"
"	      0046d09d    jmp near ptr 0046D0ACh"
"	      0046d0a2    cmp dword ptr [ebp-34h],0"
"	      0046d0a6    je near ptr 0046D2C2h"
);
// LINE 254:
	asm( 
"	      0046d0ac    jmp near ptr 0046D0B1h"
"	      0046d0b1    mov eax,[ebp-0Ch]"
"	      0046d0b4    mov eax,[eax+8]"
"	      0046d0b7    mov ecx,[ebp-10h]"
"	      0046d0ba    cmp [eax+8],ecx"
"	      0046d0bd    je near ptr 0046D265h"
);
// LINE 255:
	asm( 
"	      0046d0c3    push 10h"
"	      0046d0c5    call 0056A600h"
"	      0046d0ca    add esp,4"
"	      0046d0cd    mov [ebp-78h],eax"
"	      0046d0d0    cmp dword ptr [ebp-78h],0"
"	      0046d0d4    je near ptr 0046D172h"
"	      0046d0da    push 599494h"
"	      0046d0df    call 0056ABE0h"
"	      0046d0e4    add esp,4"
"	      0046d0e7    mov ecx,[ebp-78h]"
"	      0046d0ea    mov [ecx+4],eax"
"	      0046d0ed    jmp near ptr 0046D0F2h"
"	      0046d0f2    mov eax,[ebp-78h]"
"	      0046d0f5    mov eax,[eax+4]"
"	      0046d0f8    mov ecx,[ebp-78h]"
"	      0046d0fb    mov [ecx+8],eax"
"	      0046d0fe    mov eax,[ebp-78h]"
"	      0046d101    cmp dword ptr [eax+8],0"
"	      0046d105    je near ptr 0046D14Fh"
"	      0046d10b    mov eax,[ebp-78h]"
"	      0046d10e    mov eax,[eax+8]"
"	      0046d111    push eax"
"	      0046d112    call 0056A600h"
"	      0046d117    add esp,4"
"	      0046d11a    mov ecx,[ebp-78h]"
"	      0046d11d    mov [ecx],eax"
"	      0046d11f    mov eax,[ebp-78h]"
"	      0046d122    mov eax,[eax+4]"
"	      0046d125    mov [ebp-7Ch],eax"
"	      0046d128    mov eax,[ebp-78h]"
"	      0046d12b    mov eax,[eax]"
"	      0046d12d    mov [ebp-80h],eax"
"	      0046d130    mov eax,[ebp-7Ch]"
"	      0046d133    push eax"
"	      0046d134    push 599494h"
"	      0046d139    mov eax,[ebp-80h]"
"	      0046d13c    push eax"
"	      0046d13d    call 0056A800h"
"	      0046d142    add esp,0Ch"
"	      0046d145    jmp near ptr 0046D14Ah"
"	      0046d14a    jmp near ptr 0046D158h"
"	      0046d14f    mov eax,[ebp-78h]"
"	      0046d152    mov dword ptr [eax],0"
"	      0046d158    mov eax,[ebp-78h]"
"	      0046d15b    mov dword ptr [eax+0Ch],1"
"	      0046d162    jmp near ptr 0046D167h"
"	      0046d167    mov eax,[ebp-78h]"
"	      0046d16a    mov [ebp-1Ch],eax"
"	      0046d16d    jmp near ptr 0046D179h"
"	      0046d172    mov dword ptr [ebp-1Ch],0"
"	      0046d179    mov dword ptr [ebp-20h],0"
"	      0046d180    jmp near ptr 0046D185h"
"	      0046d185    push 0FFFFFFFFh"
"	      0046d187    lea eax,[ebp-20h]"
"	      0046d18a    push eax"
"	      0046d18b    mov eax,[ebp-84h]"
"	      0046d191    mov ecx,[ebp-84h]"
"	      0046d197    mov ecx,[ecx+74h]"
"	      0046d19a    mov edx,[ecx]"
"	      0046d19c    mov ecx,[eax+74h]"
"	      0046d19f    call dword ptr [edx+0D4h]"
"	      0046d1a5    mov eax,[ebp-1Ch]"
"	      0046d1a8    dec dword ptr [eax+0Ch]"
"	      0046d1ab    mov eax,[ebp-1Ch]"
"	      0046d1ae    cmp dword ptr [eax+0Ch],0"
"	      0046d1b2    jne near ptr 0046D228h"
"	      0046d1b8    mov eax,[ebp-1Ch]"
"	      0046d1bb    mov [ebp-50h],eax"
"	      0046d1be    mov eax,[ebp-50h]"
"	      0046d1c1    mov [ebp-4Ch],eax"
"	      0046d1c4    cmp dword ptr [ebp-4Ch],0"
"	      0046d1c8    je near ptr 0046D228h"
"	      0046d1ce    mov eax,[ebp-4Ch]"
"	      0046d1d1    cmp dword ptr [eax+8],0"
"	      0046d1d5    je near ptr 0046D208h"
"	      0046d1db    mov eax,[ebp-4Ch]"
"	      0046d1de    mov eax,[eax]"
"	      0046d1e0    mov [ebp-54h],eax"
"	      0046d1e3    mov eax,[ebp-54h]"
"	      0046d1e6    mov [ebp-58h],eax"
"	      0046d1e9    mov eax,[ebp-58h]"
"	      0046d1ec    push eax"
"	      0046d1ed    call 0056A740h"
"	      0046d1f2    add esp,4"
"	      0046d1f5    mov eax,[ebp-4Ch]"
"	      0046d1f8    mov dword ptr [eax+8],0"
"	      0046d1ff    mov eax,[ebp-4Ch]"
"	      0046d202    mov dword ptr [eax],0"
"	      0046d208    jmp near ptr 0046D20Dh"
"	      0046d20d    jmp near ptr 0046D212h"
"	      0046d212    mov eax,[ebp-4Ch]"
"	      0046d215    push eax"
"	      0046d216    call 0056A740h"
"	      0046d21b    add esp,4"
"	      0046d21e    jmp near ptr 0046D223h"
"	      0046d223    jmp near ptr 0046D228h"
"	      0046d228    jmp near ptr 0046D22Dh"
"	      0046d22d    cmp dword ptr [ebp-20h],0"
"	      0046d231    je near ptr 0046D24Fh"
"	      0046d237    mov eax,[ebp-20h]"
"	      0046d23a    mov [ebp-44h],eax"
"	      0046d23d    mov eax,[ebp-44h]"
"	      0046d240    mov [ebp-48h],eax"
"	      0046d243    mov eax,[ebp-48h]"
"	      0046d246    push eax"
"	      0046d247    call 0056A740h"
"	      0046d24c    add esp,4"
"	      0046d24f    jmp near ptr 0046D254h"
);
// LINE 256:
	asm( 
"	      0046d254    jmp near ptr 0046D259h"
"	      0046d259    mov eax,[ebp-0Ch]"
"	      0046d25c    mov eax,[eax+8]"
"	      0046d25f    mov eax,[eax+8]"
"	      0046d262    mov [ebp-10h],eax"
);
// LINE 258:
	asm( 
"	      0046d265    jmp near ptr 0046D26Ah"
"	      0046d26a    push 1"
"	      0046d26c    lea eax,[ebp-8]"
"	      0046d26f    push eax"
"	      0046d270    mov eax,[ebp-0Ch]"
"	      0046d273    mov eax,[eax+8]"
"	      0046d276    push eax"
"	      0046d277    call 004EDB4Eh"
"	      0046d27c    add esp,0Ch"
);
// LINE 259:
	asm( 
"	      0046d27f    push 0FFFFFFFFh"
"	      0046d281    lea eax,[ebp-8]"
"	      0046d284    push eax"
"	      0046d285    mov eax,[ebp-84h]"
"	      0046d28b    mov ecx,[ebp-84h]"
"	      0046d291    mov ecx,[ecx+74h]"
"	      0046d294    mov edx,[ecx]"
"	      0046d296    mov ecx,[eax+74h]"
"	      0046d299    call dword ptr [edx+0D4h]"
);
// LINE 260:
	asm( 
"	      0046d29f    mov eax,[ebp-0Ch]"
"	      0046d2a2    mov [ebp-74h],eax"
"	      0046d2a5    mov eax,[ebp-0Ch]"
"	      0046d2a8    mov eax,[eax]"
"	      0046d2aa    mov [ebp-0Ch],eax"
"	      0046d2ad    jmp near ptr 0046D2B2h"
"	      0046d2b2    mov eax,[ebp-74h]"
"	      0046d2b5    mov [ebp-24h],eax"
"	      0046d2b8    jmp near ptr 0046D2BDh"
);
// LINE 261:
	asm( 
"	      0046d2bd    jmp near ptr 0046D04Eh"
);
// LINE 262:
	asm( 
"	      0046d2c2    mov eax,[ebp-84h]"
"	      0046d2c8    mov dword ptr [eax+7Ch],1"
);
// LINE 263:
	asm( 
"	      0046d2cf    mov eax,[ebp-4]"
"	      0046d2d2    dec dword ptr [eax+0Ch]"
"	      0046d2d5    mov eax,[ebp-4]"
"	      0046d2d8    cmp dword ptr [eax+0Ch],0"
"	      0046d2dc    jne near ptr 0046D352h"
"	      0046d2e2    mov eax,[ebp-4]"
"	      0046d2e5    mov [ebp-68h],eax"
"	      0046d2e8    mov eax,[ebp-68h]"
"	      0046d2eb    mov [ebp-64h],eax"
"	      0046d2ee    cmp dword ptr [ebp-64h],0"
"	      0046d2f2    je near ptr 0046D352h"
"	      0046d2f8    mov eax,[ebp-64h]"
"	      0046d2fb    cmp dword ptr [eax+8],0"
"	      0046d2ff    je near ptr 0046D332h"
"	      0046d305    mov eax,[ebp-64h]"
"	      0046d308    mov eax,[eax]"
"	      0046d30a    mov [ebp-6Ch],eax"
"	      0046d30d    mov eax,[ebp-6Ch]"
"	      0046d310    mov [ebp-70h],eax"
"	      0046d313    mov eax,[ebp-70h]"
"	      0046d316    push eax"
"	      0046d317    call 0056A740h"
"	      0046d31c    add esp,4"
"	      0046d31f    mov eax,[ebp-64h]"
"	      0046d322    mov dword ptr [eax+8],0"
"	      0046d329    mov eax,[ebp-64h]"
"	      0046d32c    mov dword ptr [eax],0"
"	      0046d332    jmp near ptr 0046D337h"
"	      0046d337    jmp near ptr 0046D33Ch"
"	      0046d33c    mov eax,[ebp-64h]"
"	      0046d33f    push eax"
"	      0046d340    call 0056A740h"
"	      0046d345    add esp,4"
"	      0046d348    jmp near ptr 0046D34Dh"
"	      0046d34d    jmp near ptr 0046D352h"
"	      0046d352    jmp near ptr 0046D357h"
"	      0046d357    cmp dword ptr [ebp-8],0"
"	      0046d35b    je near ptr 0046D379h"
"	      0046d361    mov eax,[ebp-8]"
"	      0046d364    mov [ebp-5Ch],eax"
"	      0046d367    mov eax,[ebp-5Ch]"
"	      0046d36a    mov [ebp-60h],eax"
"	      0046d36d    mov eax,[ebp-60h]"
"	      0046d370    push eax"
"	      0046d371    call 0056A740h"
"	      0046d376    add esp,4"
"	      0046d379    jmp near ptr 0046D37Eh"
"	      0046d37e    jmp near ptr 0046D383h"
"	      0046d383    pop edi"
"	      0046d384    pop esi"
"	      0046d385    pop ebx"
"	      0046d386    leave"
"	      0046d387    ret"
);
}

// FUNCTION: COPTER_D 0x0046d388
void MessageDisplayManager::MessageDisplayManager() {
// LINE 291:
	asm( 
"	      0046d388    push ebp"
"	      0046d389    mov ebp,esp"
"	      0046d38b    sub esp,10h"
"	      0046d38e    push ebx"
"	      0046d38f    push esi"
"	      0046d390    push edi"
"	      0046d391    mov [ebp-10h],ecx"
"	      0046d394    jmp near ptr 0046D399h"
"	      0046d399    mov eax,[ebp-10h]"
"	      0046d39c    mov dword ptr [eax+4],14h"
"	      0046d3a3    mov eax,[ebp-10h]"
"	      0046d3a6    mov dword ptr [eax+8],14h"
"	      0046d3ad    jmp near ptr 0046D3B2h"
"	      0046d3b2    mov eax,[ebp-10h]"
"	      0046d3b5    mov dword ptr [eax+0Ch],3"
"	      0046d3bc    mov eax,[ebp-10h]"
"	      0046d3bf    mov dword ptr [eax+10h],0"
"	      0046d3c6    mov eax,[ebp-10h]"
"	      0046d3c9    mov dword ptr [eax+14h],1"
"	      0046d3d0    mov eax,[ebp-10h]"
"	      0046d3d3    mov dword ptr [eax+18h],0"
"	      0046d3da    mov eax,[ebp-10h]"
"	      0046d3dd    mov dword ptr [eax+1Ch],0"
"	      0046d3e4    mov eax,[ebp-10h]"
"	      0046d3e7    mov dword ptr [eax+20h],0"
"	      0046d3ee    mov eax,[ebp-10h]"
"	      0046d3f1    cmp dword ptr [eax+14h],0"
"	      0046d3f5    jne near ptr 0046D419h"
"	      0046d3fb    lea eax,[ebp-0Ch]"
"	      0046d3fe    push eax"
"	      0046d3ff    call dword ptr ds:[6C3668h]"
"	      0046d405    mov eax,[ebp-0Ch]"
"	      0046d408    mov [ebp-4],eax"
"	      0046d40b    mov eax,[ebp-4]"
"	      0046d40e    mov ecx,[ebp-10h]"
"	      0046d411    mov [ecx+20h],eax"
"	      0046d414    jmp near ptr 0046D419h"
"	      0046d419    jmp near ptr 0046D41Eh"
"	      0046d41e    mov ecx,[ebp-10h]"
"	      0046d421    add ecx,24h"
"	      0046d424    call 0049F780h"
"	      0046d429    mov eax,[ebp-10h]"
"	      0046d42c    mov dword ptr [eax+40h],14h"
"	      0046d433    mov eax,[ebp-10h]"
"	      0046d436    mov dword ptr [eax+44h],1388h"
"	      0046d43d    mov eax,[ebp-10h]"
"	      0046d440    mov dword ptr [eax+48h],0"
"	      0046d447    mov eax,[ebp-10h]"
"	      0046d44a    mov byte ptr [eax+50h],0FFh"
"	      0046d44e    mov eax,[ebp-10h]"
"	      0046d451    mov byte ptr [eax+51h],0FFh"
"	      0046d455    mov eax,[ebp-10h]"
"	      0046d458    mov byte ptr [eax+52h],0FFh"
"	      0046d45c    jmp near ptr 0046D461h"
"	      0046d461    mov eax,[ebp-10h]"
"	      0046d464    mov dword ptr [eax],5907D0h"
);
// LINE 292:
	asm( 
"	      0046d46a    push 0"
"	      0046d46c    push 0"
"	      0046d46e    push 14h"
"	      0046d470    mov ecx,[ebp-10h]"
"	      0046d473    add ecx,24h"
"	      0046d476    call 004A015Dh"
);
// LINE 293:
	asm( 
"	      0046d47b    mov ecx,[ebp-10h]"
"	      0046d47e    mov eax,[ebp-10h]"
"	      0046d481    mov eax,[eax+24h]"
"	      0046d484    add ecx,24h"
"	      0046d487    call dword ptr [eax]"
);
// LINE 294:
	asm( 
"	      0046d489    jmp near ptr 0046D48Eh"
"	      0046d48e    mov eax,[ebp-10h]"
"	      0046d491    pop edi"
"	      0046d492    pop esi"
"	      0046d493    pop ebx"
"	      0046d494    leave"
"	      0046d495    ret"
);
}

// FUNCTION: COPTER_D 0x0046d496
void MessageDisplayManager::~MessageDisplayManager() {
// LINE 299:
	asm( 
"	      0046d496    push ebp"
"	      0046d497    mov ebp,esp"
"	      0046d499    sub esp,2Ch"
"	      0046d49c    push ebx"
"	      0046d49d    push esi"
"	      0046d49e    push edi"
"	      0046d49f    mov [ebp-2Ch],ecx"
"	      0046d4a2    mov eax,[ebp-2Ch]"
"	      0046d4a5    mov dword ptr [eax],5907D0h"
);
// LINE 300:
	asm( 
"	      0046d4ab    mov eax,[ebp-2Ch]"
"	      0046d4ae    cmp dword ptr [eax+10h],0"
"	      0046d4b2    je near ptr 0046D5F8h"
);
// LINE 301:
	asm( 
"	      0046d4b8    mov eax,[ebp-2Ch]"
"	      0046d4bb    mov eax,[eax+10h]"
"	      0046d4be    mov [ebp-8],eax"
"	      0046d4c1    mov eax,[ebp-8]"
"	      0046d4c4    mov [ebp-4],eax"
"	      0046d4c7    cmp dword ptr [ebp-4],0"
"	      0046d4cb    je near ptr 0046D5EEh"
"	      0046d4d1    mov eax,[ebp-4]"
"	      0046d4d4    mov eax,[eax-4]"
"	      0046d4d7    mov [ebp-24h],eax"
"	      0046d4da    mov eax,[ebp-4]"
"	      0046d4dd    mov [ebp-28h],eax"
"	      0046d4e0    mov eax,[ebp-24h]"
"	      0046d4e3    shl eax,3"
"	      0046d4e6    add [ebp-28h],eax"
"	      0046d4e9    dec dword ptr [ebp-24h]"
"	      0046d4ec    js near ptr 0046D503h"
"	      0046d4f2    sub dword ptr [ebp-28h],8"
"	      0046d4f6    mov ecx,[ebp-28h]"
"	      0046d4f9    call 00412130h"
"	      0046d4fe    jmp near ptr 0046D4E9h"
"	      0046d503    jmp near ptr 0046D508h"
"	      0046d508    mov eax,[ebp-4]"
"	      0046d50b    sub eax,4"
"	      0046d50e    push eax"
"	      0046d50f    call 0056A740h"
"	      0046d514    add esp,4"
"	      0046d517    jmp near ptr 0046D5E4h"
"	      0046d51c    mov eax,[ebp-4]"
"	      0046d51f    mov eax,[eax+4]"
"	      0046d522    dec dword ptr [eax+0Ch]"
"	      0046d525    mov eax,[ebp-4]"
"	      0046d528    mov eax,[eax+4]"
"	      0046d52b    cmp dword ptr [eax+0Ch],0"
"	      0046d52f    jne near ptr 0046D5A8h"
"	      0046d535    mov eax,[ebp-4]"
"	      0046d538    mov eax,[eax+4]"
"	      0046d53b    mov [ebp-18h],eax"
"	      0046d53e    mov eax,[ebp-18h]"
"	      0046d541    mov [ebp-14h],eax"
"	      0046d544    cmp dword ptr [ebp-14h],0"
"	      0046d548    je near ptr 0046D5A8h"
"	      0046d54e    mov eax,[ebp-14h]"
"	      0046d551    cmp dword ptr [eax+8],0"
"	      0046d555    je near ptr 0046D588h"
"	      0046d55b    mov eax,[ebp-14h]"
"	      0046d55e    mov eax,[eax]"
"	      0046d560    mov [ebp-1Ch],eax"
"	      0046d563    mov eax,[ebp-1Ch]"
"	      0046d566    mov [ebp-20h],eax"
"	      0046d569    mov eax,[ebp-20h]"
"	      0046d56c    push eax"
"	      0046d56d    call 0056A740h"
"	      0046d572    add esp,4"
"	      0046d575    mov eax,[ebp-14h]"
"	      0046d578    mov dword ptr [eax+8],0"
"	      0046d57f    mov eax,[ebp-14h]"
"	      0046d582    mov dword ptr [eax],0"
"	      0046d588    jmp near ptr 0046D58Dh"
"	      0046d58d    jmp near ptr 0046D592h"
"	      0046d592    mov eax,[ebp-14h]"
"	      0046d595    push eax"
"	      0046d596    call 0056A740h"
"	      0046d59b    add esp,4"
"	      0046d59e    jmp near ptr 0046D5A3h"
"	      0046d5a3    jmp near ptr 0046D5A8h"
"	      0046d5a8    jmp near ptr 0046D5ADh"
"	      0046d5ad    mov eax,[ebp-4]"
"	      0046d5b0    cmp dword ptr [eax],0"
"	      0046d5b3    je near ptr 0046D5D3h"
"	      0046d5b9    mov eax,[ebp-4]"
"	      0046d5bc    mov eax,[eax]"
"	      0046d5be    mov [ebp-0Ch],eax"
"	      0046d5c1    mov eax,[ebp-0Ch]"
"	      0046d5c4    mov [ebp-10h],eax"
"	      0046d5c7    mov eax,[ebp-10h]"
"	      0046d5ca    push eax"
"	      0046d5cb    call 0056A740h"
"	      0046d5d0    add esp,4"
"	      0046d5d3    jmp near ptr 0046D5D8h"
"	      0046d5d8    mov eax,[ebp-4]"
"	      0046d5db    push eax"
"	      0046d5dc    call 0056A740h"
"	      0046d5e1    add esp,4"
"	      0046d5e4    jmp near ptr 0046D5E9h"
"	      0046d5e9    jmp near ptr 0046D5EEh"
);
// LINE 302:
	asm( 
"	      0046d5ee    mov eax,[ebp-2Ch]"
"	      0046d5f1    mov dword ptr [eax+10h],0"
);
// LINE 304:
	asm( 
"	      0046d5f8    jmp near ptr 0046D5FDh"
"	      0046d5fd    mov ecx,[ebp-2Ch]"
"	      0046d600    add ecx,24h"
"	      0046d603    call 0049FC4Eh"
"	      0046d608    jmp near ptr 0046D60Dh"
"	      0046d60d    pop edi"
"	      0046d60e    pop esi"
"	      0046d60f    pop ebx"
"	      0046d610    leave"
"	      0046d611    ret"
);
}

// FUNCTION: COPTER_D 0x0046d612
int32_t MessageDisplayManager::Initialize() {
// LINE 309:
	asm( 
"	      0046d612    push ebp"
"	      0046d613    mov ebp,esp"
"	      0046d615    sub esp,3Ch"
"	      0046d618    push ebx"
"	      0046d619    push esi"
"	      0046d61a    push edi"
"	      0046d61b    mov [ebp-3Ch],ecx"
);
// LINE 310:
	asm( 
"	      0046d61e    mov eax,[ebp-3Ch]"
"	      0046d621    cmp dword ptr [eax+0Ch],0"
"	      0046d625    jle near ptr 0046D7E9h"
);
// LINE 311:
// Block start:
	uint32_t $S71;
	asm( 
"	      0046d62b    mov eax,[ebp-3Ch]"
"	      0046d62e    cmp dword ptr [eax+10h],0"
"	      0046d632    je near ptr 0046D76Eh"
);
// LINE 312:
	asm( 
"	      0046d638    mov eax,[ebp-3Ch]"
"	      0046d63b    mov eax,[eax+10h]"
"	      0046d63e    mov [ebp-0Ch],eax"
"	      0046d641    mov eax,[ebp-0Ch]"
"	      0046d644    mov [ebp-8],eax"
"	      0046d647    cmp dword ptr [ebp-8],0"
"	      0046d64b    je near ptr 0046D76Eh"
"	      0046d651    mov eax,[ebp-8]"
"	      0046d654    mov eax,[eax-4]"
"	      0046d657    mov [ebp-34h],eax"
"	      0046d65a    mov eax,[ebp-8]"
"	      0046d65d    mov [ebp-38h],eax"
"	      0046d660    mov eax,[ebp-34h]"
"	      0046d663    shl eax,3"
"	      0046d666    add [ebp-38h],eax"
"	      0046d669    dec dword ptr [ebp-34h]"
"	      0046d66c    js near ptr 0046D683h"
"	      0046d672    sub dword ptr [ebp-38h],8"
"	      0046d676    mov ecx,[ebp-38h]"
"	      0046d679    call 00412130h"
"	      0046d67e    jmp near ptr 0046D669h"
"	      0046d683    jmp near ptr 0046D688h"
"	      0046d688    mov eax,[ebp-8]"
"	      0046d68b    sub eax,4"
"	      0046d68e    push eax"
"	      0046d68f    call 0056A740h"
"	      0046d694    add esp,4"
"	      0046d697    jmp near ptr 0046D764h"
"	      0046d69c    mov eax,[ebp-8]"
"	      0046d69f    mov eax,[eax+4]"
"	      0046d6a2    dec dword ptr [eax+0Ch]"
"	      0046d6a5    mov eax,[ebp-8]"
"	      0046d6a8    mov eax,[eax+4]"
"	      0046d6ab    cmp dword ptr [eax+0Ch],0"
"	      0046d6af    jne near ptr 0046D728h"
"	      0046d6b5    mov eax,[ebp-8]"
"	      0046d6b8    mov eax,[eax+4]"
"	      0046d6bb    mov [ebp-28h],eax"
"	      0046d6be    mov eax,[ebp-28h]"
"	      0046d6c1    mov [ebp-24h],eax"
"	      0046d6c4    cmp dword ptr [ebp-24h],0"
"	      0046d6c8    je near ptr 0046D728h"
"	      0046d6ce    mov eax,[ebp-24h]"
"	      0046d6d1    cmp dword ptr [eax+8],0"
"	      0046d6d5    je near ptr 0046D708h"
"	      0046d6db    mov eax,[ebp-24h]"
"	      0046d6de    mov eax,[eax]"
"	      0046d6e0    mov [ebp-2Ch],eax"
"	      0046d6e3    mov eax,[ebp-2Ch]"
"	      0046d6e6    mov [ebp-30h],eax"
"	      0046d6e9    mov eax,[ebp-30h]"
"	      0046d6ec    push eax"
"	      0046d6ed    call 0056A740h"
"	      0046d6f2    add esp,4"
"	      0046d6f5    mov eax,[ebp-24h]"
"	      0046d6f8    mov dword ptr [eax+8],0"
"	      0046d6ff    mov eax,[ebp-24h]"
"	      0046d702    mov dword ptr [eax],0"
"	      0046d708    jmp near ptr 0046D70Dh"
"	      0046d70d    jmp near ptr 0046D712h"
"	      0046d712    mov eax,[ebp-24h]"
"	      0046d715    push eax"
"	      0046d716    call 0056A740h"
"	      0046d71b    add esp,4"
"	      0046d71e    jmp near ptr 0046D723h"
"	      0046d723    jmp near ptr 0046D728h"
"	      0046d728    jmp near ptr 0046D72Dh"
"	      0046d72d    mov eax,[ebp-8]"
"	      0046d730    cmp dword ptr [eax],0"
"	      0046d733    je near ptr 0046D753h"
"	      0046d739    mov eax,[ebp-8]"
"	      0046d73c    mov eax,[eax]"
"	      0046d73e    mov [ebp-1Ch],eax"
"	      0046d741    mov eax,[ebp-1Ch]"
"	      0046d744    mov [ebp-20h],eax"
"	      0046d747    mov eax,[ebp-20h]"
"	      0046d74a    push eax"
"	      0046d74b    call 0056A740h"
"	      0046d750    add esp,4"
"	      0046d753    jmp near ptr 0046D758h"
"	      0046d758    mov eax,[ebp-8]"
"	      0046d75b    push eax"
"	      0046d75c    call 0056A740h"
"	      0046d761    add esp,4"
"	      0046d764    jmp near ptr 0046D769h"
"	      0046d769    jmp near ptr 0046D76Eh"
);
// LINE 313:
	asm( 
"	      0046d76e    mov eax,[ebp-3Ch]"
"	      0046d771    mov eax,[eax+0Ch]"
"	      0046d774    mov [ebp-4],eax"
"	      0046d777    mov eax,[ebp-4]"
"	      0046d77a    shl eax,3"
"	      0046d77d    add eax,4"
"	      0046d780    push eax"
"	      0046d781    call 0056A600h"
"	      0046d786    add esp,4"
"	      0046d789    mov [ebp-10h],eax"
"	      0046d78c    cmp dword ptr [ebp-10h],0"
"	      0046d790    je near ptr 0046D7DFh"
"	      0046d796    mov eax,[ebp-4]"
"	      0046d799    mov ecx,[ebp-10h]"
"	      0046d79c    mov [ecx],eax"
"	      0046d79e    mov eax,[ebp-10h]"
"	      0046d7a1    mov eax,[eax]"
"	      0046d7a3    mov [ebp-14h],eax"
"	      0046d7a6    mov eax,[ebp-10h]"
"	      0046d7a9    add eax,4"
"	      0046d7ac    mov [ebp-18h],eax"
"	      0046d7af    dec dword ptr [ebp-14h]"
"	      0046d7b2    js near ptr 0046D7C9h"
"	      0046d7b8    mov ecx,[ebp-18h]"
"	      0046d7bb    call 00411EE0h"
"	      0046d7c0    add dword ptr [ebp-18h],8"
"	      0046d7c4    jmp near ptr 0046D7AFh"
"	      0046d7c9    jmp near ptr 0046D7CEh"
"	      0046d7ce    mov eax,[ebp-10h]"
"	      0046d7d1    add eax,4"
"	      0046d7d4    mov ecx,[ebp-3Ch]"
"	      0046d7d7    mov [ecx+10h],eax"
"	      0046d7da    jmp near ptr 0046D7E9h"
"	      0046d7df    mov eax,[ebp-3Ch]"
"	      0046d7e2    mov dword ptr [eax+10h],0"
);
// LINE 315:
// Block end:
	asm( 
"	      0046d7e9    mov eax,[ebp-3Ch]"
"	      0046d7ec    mov dword ptr [eax+48h],0"
);
// LINE 316:
	asm( 
"	      0046d7f3    mov eax,1"
"	      0046d7f8    jmp near ptr 0046D7FDh"
);
// LINE 317:
	asm( 
"	      0046d7fd    pop edi"
"	      0046d7fe    pop esi"
"	      0046d7ff    pop ebx"
"	      0046d800    leave"
"	      0046d801    ret"
);
}

// FUNCTION: COPTER_D 0x0046d802
void MessageDisplayManager::DisplayCurrentMessages(class CBackBuffer* bufferDestination) {
	int32_t i;
	class MRect rectCurrentMessage;

// LINE 323:
	asm( 
"	      0046d802    push ebp"
"	      0046d803    mov ebp,esp"
"	      0046d805    sub esp,70h"
"	      0046d808    push ebx"
"	      0046d809    push esi"
"	      0046d80a    push edi"
"	      0046d80b    mov [ebp-70h],ecx"
);
// LINE 324:
	asm( 
"	      0046d80e    jmp near ptr 0046D813h"
"	      0046d813    jmp near ptr 0046D818h"
);
// LINE 327:
	asm( 
"	      0046d818    mov eax,[ebp-70h]"
"	      0046d81b    cmp dword ptr [eax+48h],0"
"	      0046d81f    jg near ptr 0046D82Ah"
);
// LINE 328:
	asm( 
"	      0046d825    jmp near ptr 0046DCC6h"
);
// LINE 330:
	asm( 
"	      0046d82a    mov eax,[ebp-70h]"
"	      0046d82d    mov eax,[eax+1Ch]"
"	      0046d830    mov [ebp-2Ch],eax"
"	      0046d833    jmp near ptr 0046D838h"
"	      0046d838    mov eax,[ebp-70h]"
"	      0046d83b    cmp dword ptr [eax+18h],0"
"	      0046d83f    je near ptr 0046D8BBh"
"	      0046d845    mov eax,[ebp-70h]"
"	      0046d848    cmp dword ptr [eax+14h],1"
"	      0046d84c    jne near ptr 0046D865h"
"	      0046d852    call dword ptr ds:[6C3908h]"
"	      0046d858    mov [ebp-3Ch],eax"
"	      0046d85b    jmp near ptr 0046D8A9h"
"	      0046d860    jmp near ptr 0046D8A9h"
"	      0046d865    mov eax,[ebp-70h]"
"	      0046d868    cmp dword ptr [eax+14h],0"
"	      0046d86c    jne near ptr 0046D892h"
"	      0046d872    lea eax,[ebp-38h]"
"	      0046d875    push eax"
"	      0046d876    call dword ptr ds:[6C365Ch]"
"	      0046d87c    mov eax,[ebp-38h]"
"	      0046d87f    mov [ebp-30h],eax"
"	      0046d882    mov eax,[ebp-30h]"
"	      0046d885    mov [ebp-3Ch],eax"
"	      0046d888    jmp near ptr 0046D8A9h"
"	      0046d88d    jmp near ptr 0046D8A9h"
"	      0046d892    call dword ptr ds:[6C3908h]"
"	      0046d898    mov ecx,3E8h"
"	      0046d89d    sub edx,edx"
"	      0046d89f    div ecx"
"	      0046d8a1    mov [ebp-3Ch],eax"
"	      0046d8a4    jmp near ptr 0046D8A9h"
"	      0046d8a9    mov eax,[ebp-3Ch]"
"	      0046d8ac    mov ecx,[ebp-70h]"
"	      0046d8af    sub eax,[ecx+18h]"
"	      0046d8b2    mov [ebp-28h],eax"
"	      0046d8b5    mov eax,[ebp-28h]"
"	      0046d8b8    add [ebp-2Ch],eax"
"	      0046d8bb    mov eax,[ebp-70h]"
"	      0046d8be    cmp dword ptr [eax+14h],0"
"	      0046d8c2    jne near ptr 0046D902h"
"	      0046d8c8    mov eax,[ebp-70h]"
"	      0046d8cb    cmp dword ptr [eax+20h],0"
"	      0046d8cf    je near ptr 0046D902h"
"	      0046d8d5    mov eax,[ebp-70h]"
"	      0046d8d8    mov eax,[eax+20h]"
"	      0046d8db    push eax"
"	      0046d8dc    push 0F4240h"
"	      0046d8e1    mov eax,[ebp-2Ch]"
"	      0046d8e4    push eax"
"	      0046d8e5    call dword ptr ds:[6C372Ch]"
"	      0046d8eb    mov [ebp-2Ch],eax"
"	      0046d8ee    mov eax,[ebp-70h]"
"	      0046d8f1    mov ecx,[ebp-2Ch]"
"	      0046d8f4    cmp [eax+44h],ecx"
"	      0046d8f7    jae near ptr 0046DBEEh"
"	      0046d8fd    jmp near ptr 0046D925h"
"	      0046d902    mov eax,[ebp-70h]"
"	      0046d905    mov ecx,[ebp-2Ch]"
"	      0046d908    cmp [eax+44h],ecx"
"	      0046d90b    jae near ptr 0046DBEEh"
"	      0046d911    jmp near ptr 0046D925h"
"	      0046d916    mov eax,[ebp-70h]"
"	      0046d919    mov ecx,[ebp-40h]"
"	      0046d91c    cmp [eax+44h],ecx"
"	      0046d91f    jae near ptr 0046DBEEh"
);
// LINE 331:
	asm( 
"	      0046d925    mov dword ptr [ebp-14h],0"
"	      0046d92c    jmp near ptr 0046D934h"
"	      0046d931    inc dword ptr [ebp-14h]"
"	      0046d934    mov eax,[ebp-70h]"
"	      0046d937    mov eax,[eax+48h]"
"	      0046d93a    dec eax"
"	      0046d93b    cmp eax,[ebp-14h]"
"	      0046d93e    jle near ptr 0046DB2Fh"
);
// LINE 332:
	asm( 
"	      0046d944    mov eax,[ebp-14h]"
"	      0046d947    lea eax,[eax*8+8]"
"	      0046d94e    mov ecx,[ebp-70h]"
"	      0046d951    add eax,[ecx+10h]"
"	      0046d954    mov [ebp-68h],eax"
"	      0046d957    mov eax,[ebp-70h]"
"	      0046d95a    mov eax,[eax+10h]"
"	      0046d95d    mov ecx,[ebp-14h]"
"	      0046d960    lea eax,[eax+ecx*8]"
"	      0046d963    mov [ebp-6Ch],eax"
"	      0046d966    mov eax,[ebp-68h]"
"	      0046d969    cmp [ebp-6Ch],eax"
"	      0046d96c    je near ptr 0046DB25h"
"	      0046d972    mov eax,[ebp-6Ch]"
"	      0046d975    mov eax,[eax+4]"
"	      0046d978    dec dword ptr [eax+0Ch]"
"	      0046d97b    mov eax,[ebp-6Ch]"
"	      0046d97e    mov eax,[eax+4]"
"	      0046d981    cmp dword ptr [eax+0Ch],0"
"	      0046d985    jne near ptr 0046D9FEh"
"	      0046d98b    mov eax,[ebp-6Ch]"
"	      0046d98e    mov eax,[eax+4]"
"	      0046d991    mov [ebp-4Ch],eax"
"	      0046d994    mov eax,[ebp-4Ch]"
"	      0046d997    mov [ebp-48h],eax"
"	      0046d99a    cmp dword ptr [ebp-48h],0"
"	      0046d99e    je near ptr 0046D9FEh"
"	      0046d9a4    mov eax,[ebp-48h]"
"	      0046d9a7    cmp dword ptr [eax+8],0"
"	      0046d9ab    je near ptr 0046D9DEh"
"	      0046d9b1    mov eax,[ebp-48h]"
"	      0046d9b4    mov eax,[eax]"
"	      0046d9b6    mov [ebp-50h],eax"
"	      0046d9b9    mov eax,[ebp-50h]"
"	      0046d9bc    mov [ebp-54h],eax"
"	      0046d9bf    mov eax,[ebp-54h]"
"	      0046d9c2    push eax"
"	      0046d9c3    call 0056A740h"
"	      0046d9c8    add esp,4"
"	      0046d9cb    mov eax,[ebp-48h]"
"	      0046d9ce    mov dword ptr [eax+8],0"
"	      0046d9d5    mov eax,[ebp-48h]"
"	      0046d9d8    mov dword ptr [eax],0"
"	      0046d9de    jmp near ptr 0046D9E3h"
"	      0046d9e3    jmp near ptr 0046D9E8h"
"	      0046d9e8    mov eax,[ebp-48h]"
"	      0046d9eb    push eax"
"	      0046d9ec    call 0056A740h"
"	      0046d9f1    add esp,4"
"	      0046d9f4    jmp near ptr 0046D9F9h"
"	      0046d9f9    jmp near ptr 0046D9FEh"
"	      0046d9fe    jmp near ptr 0046DA03h"
"	      0046da03    jmp near ptr 0046DA08h"
"	      0046da08    mov eax,[ebp-68h]"
"	      0046da0b    mov eax,[eax+4]"
"	      0046da0e    cmp dword ptr [eax+0Ch],0FFFFFFFFh"
"	      0046da12    je near ptr 0046DA32h"
"	      0046da18    mov eax,[ebp-68h]"
"	      0046da1b    mov eax,[eax+4]"
"	      0046da1e    mov ecx,[ebp-6Ch]"
"	      0046da21    mov [ecx+4],eax"
"	      0046da24    mov eax,[ebp-6Ch]"
"	      0046da27    mov eax,[eax+4]"
"	      0046da2a    inc dword ptr [eax+0Ch]"
"	      0046da2d    jmp near ptr 0046DB25h"
"	      0046da32    push 10h"
"	      0046da34    call 0056A600h"
"	      0046da39    add esp,4"
"	      0046da3c    mov [ebp-44h],eax"
"	      0046da3f    cmp dword ptr [ebp-44h],0"
"	      0046da43    je near ptr 0046DB1Bh"
"	      0046da49    jmp near ptr 0046DA4Eh"
"	      0046da4e    mov eax,[ebp-68h]"
"	      0046da51    mov eax,[eax+4]"
"	      0046da54    mov eax,[eax+4]"
"	      0046da57    mov [ebp-64h],eax"
"	      0046da5a    mov eax,[ebp-64h]"
"	      0046da5d    mov ecx,[ebp-44h]"
"	      0046da60    mov [ecx+4],eax"
"	      0046da63    mov eax,[ebp-44h]"
"	      0046da66    mov eax,[eax+4]"
"	      0046da69    mov ecx,[ebp-44h]"
"	      0046da6c    mov [ecx+8],eax"
"	      0046da6f    mov eax,[ebp-44h]"
"	      0046da72    cmp dword ptr [eax+8],0"
"	      0046da76    je near ptr 0046DAF5h"
"	      0046da7c    mov eax,[ebp-44h]"
"	      0046da7f    mov eax,[eax+8]"
"	      0046da82    push eax"
"	      0046da83    call 0056A600h"
"	      0046da88    add esp,4"
"	      0046da8b    mov ecx,[ebp-44h]"
"	      0046da8e    mov [ecx],eax"
"	      0046da90    jmp near ptr 0046DA95h"
"	      0046da95    mov eax,[ebp-68h]"
"	      0046da98    mov eax,[eax+4]"
"	      0046da9b    cmp dword ptr [eax+4],0"
"	      0046da9f    je near ptr 0046DABAh"
"	      0046daa5    mov eax,[ebp-68h]"
"	      0046daa8    mov eax,[eax+4]"
"	      0046daab    mov eax,[eax]"
"	      0046daad    mov [ebp-58h],eax"
"	      0046dab0    jmp near ptr 0046DAC6h"
"	      0046dab5    jmp near ptr 0046DAC6h"
"	      0046daba    mov dword ptr [ebp-58h],0"
"	      0046dac1    jmp near ptr 0046DAC6h"
"	      0046dac6    mov eax,[ebp-44h]"
"	      0046dac9    mov eax,[eax+4]"
"	      0046dacc    mov [ebp-5Ch],eax"
"	      0046dacf    mov eax,[ebp-44h]"
"	      0046dad2    mov eax,[eax]"
"	      0046dad4    mov [ebp-60h],eax"
"	      0046dad7    mov eax,[ebp-5Ch]"
"	      0046dada    push eax"
"	      0046dadb    mov eax,[ebp-58h]"
"	      0046dade    push eax"
"	      0046dadf    mov eax,[ebp-60h]"
"	      0046dae2    push eax"
"	      0046dae3    call 0056A800h"
"	      0046dae8    add esp,0Ch"
"	      0046daeb    jmp near ptr 0046DAF0h"
"	      0046daf0    jmp near ptr 0046DAFEh"
"	      0046daf5    mov eax,[ebp-44h]"
"	      0046daf8    mov dword ptr [eax],0"
"	      0046dafe    mov eax,[ebp-44h]"
"	      0046db01    mov dword ptr [eax+0Ch],1"
"	      0046db08    jmp near ptr 0046DB0Dh"
"	      0046db0d    mov eax,[ebp-44h]"
"	      0046db10    mov ecx,[ebp-6Ch]"
"	      0046db13    mov [ecx+4],eax"
"	      0046db16    jmp near ptr 0046DB25h"
"	      0046db1b    mov eax,[ebp-6Ch]"
"	      0046db1e    mov dword ptr [eax+4],0"
"	      0046db25    jmp near ptr 0046DB2Ah"
"	      0046db2a    jmp near ptr 0046D931h"
);
// LINE 333:
	asm( 
"	      0046db2f    mov eax,[ebp-70h]"
"	      0046db32    dec dword ptr [eax+48h]"
);
// LINE 334:
	asm( 
"	      0046db35    mov eax,[ebp-70h]"
"	      0046db38    cmp dword ptr [eax+48h],0"
"	      0046db3c    jg near ptr 0046DB47h"
);
// LINE 335:
	asm( 
"	      0046db42    jmp near ptr 0046DCC6h"
);
// LINE 336:
	asm( 
"	      0046db47    mov eax,[ebp-70h]"
"	      0046db4a    mov dword ptr [eax+1Ch],0"
"	      0046db51    mov eax,[ebp-70h]"
"	      0046db54    mov dword ptr [eax+18h],0"
"	      0046db5b    jmp near ptr 0046DB60h"
"	      0046db60    jmp near ptr 0046DB65h"
"	      0046db65    mov eax,[ebp-70h]"
"	      0046db68    cmp dword ptr [eax+18h],0"
"	      0046db6c    je near ptr 0046DB77h"
"	      0046db72    jmp near ptr 0046DBE9h"
"	      0046db77    mov eax,[ebp-70h]"
"	      0046db7a    cmp dword ptr [eax+14h],1"
"	      0046db7e    jne near ptr 0046DB9Ah"
"	      0046db84    call dword ptr ds:[6C3908h]"
"	      0046db8a    mov ecx,[ebp-70h]"
"	      0046db8d    mov [ecx+18h],eax"
"	      0046db90    jmp near ptr 0046DBE4h"
"	      0046db95    jmp near ptr 0046DBE4h"
"	      0046db9a    mov eax,[ebp-70h]"
"	      0046db9d    cmp dword ptr [eax+14h],0"
"	      0046dba1    jne near ptr 0046DBCAh"
"	      0046dba7    lea eax,[ebp-20h]"
"	      0046dbaa    push eax"
"	      0046dbab    call dword ptr ds:[6C365Ch]"
"	      0046dbb1    mov eax,[ebp-20h]"
"	      0046dbb4    mov [ebp-18h],eax"
"	      0046dbb7    mov eax,[ebp-18h]"
"	      0046dbba    mov ecx,[ebp-70h]"
"	      0046dbbd    mov [ecx+18h],eax"
"	      0046dbc0    jmp near ptr 0046DBE4h"
"	      0046dbc5    jmp near ptr 0046DBE4h"
"	      0046dbca    call dword ptr ds:[6C3908h]"
"	      0046dbd0    mov ecx,3E8h"
"	      0046dbd5    sub edx,edx"
"	      0046dbd7    div ecx"
"	      0046dbd9    mov ecx,[ebp-70h]"
"	      0046dbdc    mov [ecx+18h],eax"
"	      0046dbdf    jmp near ptr 0046DBE4h"
"	      0046dbe4    jmp near ptr 0046DBE9h"
"	      0046dbe9    jmp near ptr 0046DBEEh"
);
// LINE 339:
	asm( 
"	      0046dbee    mov eax,[ebp-70h]"
"	      0046dbf1    mov eax,[eax+4]"
"	      0046dbf4    mov [ebp-10h],eax"
);
// LINE 340:
	asm( 
"	      0046dbf7    mov eax,[ebp-70h]"
"	      0046dbfa    mov eax,[eax+8]"
"	      0046dbfd    mov [ebp-0Ch],eax"
);
// LINE 341:
	asm( 
"	      0046dc00    mov dword ptr [ebp-8],3E8h"
);
// LINE 342:
	asm( 
"	      0046dc07    mov dword ptr [ebp-4],3E8h"
);
// LINE 343:
	asm( 
"	      0046dc0e    mov eax,[ebp-70h]"
"	      0046dc11    mov eax,[eax+50h]"
"	      0046dc14    mov ecx,[ebp+8]"
"	      0046dc17    mov [ecx+38h],eax"
"	      0046dc1a    jmp near ptr 0046DC1Fh"
);
// LINE 345:
	asm( 
"	      0046dc1f    mov dword ptr [ebp-14h],0"
"	      0046dc26    jmp near ptr 0046DC2Eh"
"	      0046dc2b    inc dword ptr [ebp-14h]"
"	      0046dc2e    mov eax,[ebp-70h]"
"	      0046dc31    mov ecx,[ebp-14h]"
"	      0046dc34    cmp [eax+48h],ecx"
"	      0046dc37    jle near ptr 0046DCC1h"
);
// LINE 347:
	asm( 
"	      0046dc3d    jmp near ptr 0046DC42h"
"	      0046dc42    jmp near ptr 0046DC47h"
"	      0046dc47    mov eax,[ebp-70h]"
"	      0046dc4a    mov eax,[eax+10h]"
"	      0046dc4d    mov ecx,[ebp-14h]"
"	      0046dc50    mov eax,[eax+ecx*8+4]"
"	      0046dc54    cmp dword ptr [eax+4],0"
"	      0046dc58    je near ptr 0046DC7Ah"
"	      0046dc5e    mov eax,[ebp-70h]"
"	      0046dc61    mov eax,[eax+10h]"
"	      0046dc64    mov ecx,[ebp-14h]"
"	      0046dc67    mov eax,[eax+ecx*8+4]"
"	      0046dc6b    mov eax,[eax]"
"	      0046dc6d    mov [ebp-24h],eax"
"	      0046dc70    jmp near ptr 0046DC86h"
"	      0046dc75    jmp near ptr 0046DC86h"
"	      0046dc7a    mov dword ptr [ebp-24h],0"
"	      0046dc81    jmp near ptr 0046DC86h"
"	      0046dc86    mov eax,[ebp-70h]"
"	      0046dc89    add eax,24h"
"	      0046dc8c    push eax"
"	      0046dc8d    lea eax,[ebp-10h]"
"	      0046dc90    push eax"
"	      0046dc91    push 0"
"	      0046dc93    mov eax,[ebp-70h]"
"	      0046dc96    mov eax,[eax+10h]"
"	      0046dc99    mov ecx,[ebp-14h]"
"	      0046dc9c    mov eax,[eax+ecx*8+4]"
"	      0046dca0    mov eax,[eax+4]"
"	      0046dca3    push eax"
"	      0046dca4    mov eax,[ebp-24h]"
"	      0046dca7    push eax"
"	      0046dca8    mov eax,[ebp+8]"
"	      0046dcab    mov eax,[eax]"
"	      0046dcad    mov ecx,[ebp+8]"
"	      0046dcb0    call dword ptr [eax+48h]"
);
// LINE 348:
	asm( 
"	      0046dcb3    mov eax,[ebp-70h]"
"	      0046dcb6    mov eax,[eax+40h]"
"	      0046dcb9    add [ebp-0Ch],eax"
);
// LINE 349:
	asm( 
"	      0046dcbc    jmp near ptr 0046DC2Bh"
);
// LINE 350:
	asm( 
"	      0046dcc1    jmp near ptr 0046DCC6h"
"	      0046dcc6    pop edi"
"	      0046dcc7    pop esi"
"	      0046dcc8    pop ebx"
"	      0046dcc9    leave"
"	      0046dcca    ret 4"
);
}

// FUNCTION: COPTER_D 0x0046dccd
void MessageDisplayManager::AddNewMessage(char * szNewMessage) {
	int32_t i;

// LINE 356:
	asm( 
"	      0046dccd    push ebp"
"	      0046dcce    mov ebp,esp"
"	      0046dcd0    sub esp,88h"
"	      0046dcd6    push ebx"
"	      0046dcd7    push esi"
"	      0046dcd8    push edi"
"	      0046dcd9    mov [ebp-88h],ecx"
);
// LINE 359:
	asm( 
"	      0046dcdf    mov eax,[ebp-88h]"
"	      0046dce5    cmp dword ptr [eax+0Ch],0"
"	      0046dce9    jg near ptr 0046DCF4h"
);
// LINE 360:
	asm( 
"	      0046dcef    jmp near ptr 0046E3C3h"
);
// LINE 362:
	asm( 
"	      0046dcf4    mov eax,[ebp-88h]"
"	      0046dcfa    mov ecx,[ebp-88h]"
"	      0046dd00    mov ecx,[ecx+0Ch]"
"	      0046dd03    cmp [eax+48h],ecx"
"	      0046dd06    jl near ptr 0046E036h"
);
// LINE 363:
	asm( 
"	      0046dd0c    mov dword ptr [ebp-4],0"
"	      0046dd13    jmp near ptr 0046DD1Bh"
"	      0046dd18    inc dword ptr [ebp-4]"
"	      0046dd1b    mov eax,[ebp-88h]"
"	      0046dd21    mov eax,[eax+0Ch]"
"	      0046dd24    dec eax"
"	      0046dd25    cmp eax,[ebp-4]"
"	      0046dd28    jle near ptr 0046DE45h"
);
// LINE 364:
	asm( 
"	      0046dd2e    mov eax,[ebp-4]"
"	      0046dd31    lea eax,[eax*8+8]"
"	      0046dd38    mov ecx,[ebp-88h]"
"	      0046dd3e    add eax,[ecx+10h]"
"	      0046dd41    mov [ebp-80h],eax"
"	      0046dd44    mov eax,[ebp-88h]"
"	      0046dd4a    mov eax,[eax+10h]"
"	      0046dd4d    mov ecx,[ebp-4]"
"	      0046dd50    lea eax,[eax+ecx*8]"
"	      0046dd53    mov [ebp-84h],eax"
"	      0046dd59    mov eax,[ebp-80h]"
"	      0046dd5c    cmp [ebp-84h],eax"
"	      0046dd62    je near ptr 0046DE3Bh"
"	      0046dd68    mov eax,[ebp-84h]"
"	      0046dd6e    mov eax,[eax+4]"
"	      0046dd71    dec dword ptr [eax+0Ch]"
"	      0046dd74    mov eax,[ebp-84h]"
"	      0046dd7a    mov eax,[eax+4]"
"	      0046dd7d    cmp dword ptr [eax+0Ch],0"
"	      0046dd81    jne near ptr 0046DDB2h"
"	      0046dd87    mov eax,[ebp-84h]"
"	      0046dd8d    mov eax,[eax+4]"
"	      0046dd90    mov [ebp-7Ch],eax"
"	      0046dd93    mov eax,[ebp-7Ch]"
"	      0046dd96    mov [ebp-78h],eax"
"	      0046dd99    cmp dword ptr [ebp-78h],0"
"	      0046dd9d    je near ptr 0046DDB2h"
"	      0046dda3    push 1"
"	      0046dda5    mov ecx,[ebp-78h]"
"	      0046dda8    call 0041DD70h"
"	      0046ddad    jmp near ptr 0046DDB2h"
"	      0046ddb2    jmp near ptr 0046DDB7h"
"	      0046ddb7    jmp near ptr 0046DDBCh"
"	      0046ddbc    mov eax,[ebp-80h]"
"	      0046ddbf    mov eax,[eax+4]"
"	      0046ddc2    cmp dword ptr [eax+0Ch],0FFFFFFFFh"
"	      0046ddc6    je near ptr 0046DDECh"
"	      0046ddcc    mov eax,[ebp-80h]"
"	      0046ddcf    mov eax,[eax+4]"
"	      0046ddd2    mov ecx,[ebp-84h]"
"	      0046ddd8    mov [ecx+4],eax"
"	      0046dddb    mov eax,[ebp-84h]"
"	      0046dde1    mov eax,[eax+4]"
"	      0046dde4    inc dword ptr [eax+0Ch]"
"	      0046dde7    jmp near ptr 0046DE3Bh"
"	      0046ddec    push 10h"
"	      0046ddee    call 0056A600h"
"	      0046ddf3    add esp,4"
"	      0046ddf6    mov [ebp-74h],eax"
"	      0046ddf9    cmp dword ptr [ebp-74h],0"
"	      0046ddfd    je near ptr 0046DE2Eh"
"	      0046de03    jmp near ptr 0046DE08h"
"	      0046de08    mov eax,[ebp-80h]"
"	      0046de0b    mov eax,[eax+4]"
"	      0046de0e    mov eax,[eax+4]"
"	      0046de11    push eax"
"	      0046de12    push 0"
"	      0046de14    mov eax,[ebp-80h]"
"	      0046de17    push eax"
"	      0046de18    mov ecx,[ebp-74h]"
"	      0046de1b    call 0041E200h"
"	      0046de20    mov ecx,[ebp-84h]"
"	      0046de26    mov [ecx+4],eax"
"	      0046de29    jmp near ptr 0046DE3Bh"
"	      0046de2e    mov eax,[ebp-84h]"
"	      0046de34    mov dword ptr [eax+4],0"
"	      0046de3b    jmp near ptr 0046DE40h"
"	      0046de40    jmp near ptr 0046DD18h"
"	      0046de45    mov eax,[ebp-88h]"
"	      0046de4b    mov eax,[eax+10h]"
"	      0046de4e    mov ecx,[ebp-4]"
"	      0046de51    lea eax,[eax+ecx*8]"
"	      0046de54    mov [ebp-38h],eax"
);
// LINE 365:
	asm( 
"	      0046de57    jmp near ptr 0046DE5Ch"
"	      0046de5c    mov eax,[ebp+8]"
"	      0046de5f    push eax"
"	      0046de60    call 0056ABE0h"
"	      0046de65    add esp,4"
"	      0046de68    mov [ebp-34h],eax"
"	      0046de6b    cmp dword ptr [ebp-34h],0FFFFFFFFh"
"	      0046de6f    jne near ptr 0046DEA7h"
"	      0046de75    push 5971E4h"
"	      0046de7a    mov ecx,638C00h"
"	      0046de7f    call 00569960h"
"	      0046de84    mov [ebp-30h],eax"
"	      0046de87    mov eax,[ebp-30h]"
"	      0046de8a    push eax"
"	      0046de8b    call 004011B0h"
"	      0046de90    add esp,4"
"	      0046de93    jmp near ptr 0046DE98h"
"	      0046de98    push 1"
"	      0046de9a    call 00569430h"
"	      0046de9f    add esp,4"
"	      0046dea2    jmp near ptr 0046DEA7h"
"	      0046dea7    jmp near ptr 0046DEACh"
"	      0046deac    mov eax,[ebp-38h]"
"	      0046deaf    mov eax,[eax+4]"
"	      0046deb2    cmp dword ptr [eax+0Ch],1"
"	      0046deb6    ja near ptr 0046DEDDh"
"	      0046debc    cmp dword ptr [ebp-34h],0"
"	      0046dec0    je near ptr 0046DF29h"
"	      0046dec6    jmp near ptr 0046DECBh"
"	      0046decb    mov eax,[ebp-38h]"
"	      0046dece    mov eax,[eax+4]"
"	      0046ded1    mov ecx,[ebp-34h]"
"	      0046ded4    cmp [eax+8],ecx"
"	      0046ded7    jae near ptr 0046DF29h"
"	      0046dedd    push 10h"
"	      0046dedf    call 0056A600h"
"	      0046dee4    add esp,4"
"	      0046dee7    mov [ebp-28h],eax"
"	      0046deea    cmp dword ptr [ebp-28h],0"
"	      0046deee    je near ptr 0046DF0Ch"
"	      0046def4    mov eax,[ebp-34h]"
"	      0046def7    push eax"
"	      0046def8    mov eax,[ebp+8]"
"	      0046defb    push eax"
"	      0046defc    mov ecx,[ebp-28h]"
"	      0046deff    call 0041E090h"
"	      0046df04    mov [ebp-24h],eax"
"	      0046df07    jmp near ptr 0046DF13h"
"	      0046df0c    mov dword ptr [ebp-24h],0"
"	      0046df13    mov ecx,[ebp-38h]"
"	      0046df16    call 00412080h"
"	      0046df1b    mov eax,[ebp-24h]"
"	      0046df1e    mov ecx,[ebp-38h]"
"	      0046df21    mov [ecx+4],eax"
"	      0046df24    jmp near ptr 0046DF5Ch"
"	      0046df29    cmp dword ptr [ebp-34h],0"
"	      0046df2d    je near ptr 0046DF5Ch"
"	      0046df33    jmp near ptr 0046DF38h"
"	      0046df38    mov eax,[ebp-38h]"
"	      0046df3b    mov eax,[eax+4]"
"	      0046df3e    mov eax,[eax]"
"	      0046df40    mov [ebp-2Ch],eax"
"	      0046df43    mov eax,[ebp-34h]"
"	      0046df46    push eax"
"	      0046df47    mov eax,[ebp+8]"
"	      0046df4a    push eax"
"	      0046df4b    mov eax,[ebp-2Ch]"
"	      0046df4e    push eax"
"	      0046df4f    call 0056A800h"
"	      0046df54    add esp,0Ch"
"	      0046df57    jmp near ptr 0046DF5Ch"
"	      0046df5c    mov eax,[ebp-34h]"
"	      0046df5f    mov ecx,[ebp-38h]"
"	      0046df62    mov ecx,[ecx+4]"
"	      0046df65    mov [ecx+4],eax"
"	      0046df68    jmp near ptr 0046DF6Dh"
"	      0046df6d    jmp near ptr 0046DF72h"
);
// LINE 366:
	asm( 
"	      0046df72    mov eax,[ebp-88h]"
"	      0046df78    mov dword ptr [eax+1Ch],0"
"	      0046df7f    mov eax,[ebp-88h]"
"	      0046df85    mov dword ptr [eax+18h],0"
"	      0046df8c    jmp near ptr 0046DF91h"
"	      0046df91    jmp near ptr 0046DF96h"
"	      0046df96    mov eax,[ebp-88h]"
"	      0046df9c    cmp dword ptr [eax+18h],0"
"	      0046dfa0    je near ptr 0046DFABh"
"	      0046dfa6    jmp near ptr 0046E02Ch"
"	      0046dfab    mov eax,[ebp-88h]"
"	      0046dfb1    cmp dword ptr [eax+14h],1"
"	      0046dfb5    jne near ptr 0046DFD4h"
"	      0046dfbb    call dword ptr ds:[6C3908h]"
"	      0046dfc1    mov ecx,[ebp-88h]"
"	      0046dfc7    mov [ecx+18h],eax"
"	      0046dfca    jmp near ptr 0046E027h"
"	      0046dfcf    jmp near ptr 0046E027h"
"	      0046dfd4    mov eax,[ebp-88h]"
"	      0046dfda    cmp dword ptr [eax+14h],0"
"	      0046dfde    jne near ptr 0046E00Ah"
"	      0046dfe4    lea eax,[ebp-14h]"
"	      0046dfe7    push eax"
"	      0046dfe8    call dword ptr ds:[6C365Ch]"
"	      0046dfee    mov eax,[ebp-14h]"
"	      0046dff1    mov [ebp-0Ch],eax"
"	      0046dff4    mov eax,[ebp-0Ch]"
"	      0046dff7    mov ecx,[ebp-88h]"
"	      0046dffd    mov [ecx+18h],eax"
"	      0046e000    jmp near ptr 0046E027h"
"	      0046e005    jmp near ptr 0046E027h"
"	      0046e00a    call dword ptr ds:[6C3908h]"
"	      0046e010    mov ecx,3E8h"
"	      0046e015    sub edx,edx"
"	      0046e017    div ecx"
"	      0046e019    mov ecx,[ebp-88h]"
"	      0046e01f    mov [ecx+18h],eax"
"	      0046e022    jmp near ptr 0046E027h"
"	      0046e027    jmp near ptr 0046E02Ch"
"	      0046e02c    jmp near ptr 0046E031h"
);
// LINE 368:
	asm( 
"	      0046e031    jmp near ptr 0046E3BEh"
"	      0046e036    mov eax,[ebp-88h]"
"	      0046e03c    cmp dword ptr [eax+48h],0"
"	      0046e040    jg near ptr 0046E23Eh"
"	      0046e046    mov eax,[ebp-88h]"
"	      0046e04c    mov eax,[eax+10h]"
"	      0046e04f    mov [ebp-50h],eax"
);
// LINE 369:
	asm( 
"	      0046e052    jmp near ptr 0046E057h"
"	      0046e057    mov eax,[ebp+8]"
"	      0046e05a    push eax"
"	      0046e05b    call 0056ABE0h"
"	      0046e060    add esp,4"
"	      0046e063    mov [ebp-4Ch],eax"
"	      0046e066    cmp dword ptr [ebp-4Ch],0FFFFFFFFh"
"	      0046e06a    jne near ptr 0046E0A2h"
"	      0046e070    push 5971E4h"
"	      0046e075    mov ecx,638C00h"
"	      0046e07a    call 00569960h"
"	      0046e07f    mov [ebp-48h],eax"
"	      0046e082    mov eax,[ebp-48h]"
"	      0046e085    push eax"
"	      0046e086    call 004011B0h"
"	      0046e08b    add esp,4"
"	      0046e08e    jmp near ptr 0046E093h"
"	      0046e093    push 1"
"	      0046e095    call 00569430h"
"	      0046e09a    add esp,4"
"	      0046e09d    jmp near ptr 0046E0A2h"
"	      0046e0a2    jmp near ptr 0046E0A7h"
"	      0046e0a7    mov eax,[ebp-50h]"
"	      0046e0aa    mov eax,[eax+4]"
"	      0046e0ad    cmp dword ptr [eax+0Ch],1"
"	      0046e0b1    ja near ptr 0046E0D8h"
"	      0046e0b7    cmp dword ptr [ebp-4Ch],0"
"	      0046e0bb    je near ptr 0046E124h"
"	      0046e0c1    jmp near ptr 0046E0C6h"
"	      0046e0c6    mov eax,[ebp-50h]"
"	      0046e0c9    mov eax,[eax+4]"
"	      0046e0cc    mov ecx,[ebp-4Ch]"
"	      0046e0cf    cmp [eax+8],ecx"
"	      0046e0d2    jae near ptr 0046E124h"
"	      0046e0d8    push 10h"
"	      0046e0da    call 0056A600h"
"	      0046e0df    add esp,4"
"	      0046e0e2    mov [ebp-40h],eax"
"	      0046e0e5    cmp dword ptr [ebp-40h],0"
"	      0046e0e9    je near ptr 0046E107h"
"	      0046e0ef    mov eax,[ebp-4Ch]"
"	      0046e0f2    push eax"
"	      0046e0f3    mov eax,[ebp+8]"
"	      0046e0f6    push eax"
"	      0046e0f7    mov ecx,[ebp-40h]"
"	      0046e0fa    call 0041E090h"
"	      0046e0ff    mov [ebp-3Ch],eax"
"	      0046e102    jmp near ptr 0046E10Eh"
"	      0046e107    mov dword ptr [ebp-3Ch],0"
"	      0046e10e    mov ecx,[ebp-50h]"
"	      0046e111    call 00412080h"
"	      0046e116    mov eax,[ebp-3Ch]"
"	      0046e119    mov ecx,[ebp-50h]"
"	      0046e11c    mov [ecx+4],eax"
"	      0046e11f    jmp near ptr 0046E157h"
"	      0046e124    cmp dword ptr [ebp-4Ch],0"
"	      0046e128    je near ptr 0046E157h"
"	      0046e12e    jmp near ptr 0046E133h"
"	      0046e133    mov eax,[ebp-50h]"
"	      0046e136    mov eax,[eax+4]"
"	      0046e139    mov eax,[eax]"
"	      0046e13b    mov [ebp-44h],eax"
"	      0046e13e    mov eax,[ebp-4Ch]"
"	      0046e141    push eax"
"	      0046e142    mov eax,[ebp+8]"
"	      0046e145    push eax"
"	      0046e146    mov eax,[ebp-44h]"
"	      0046e149    push eax"
"	      0046e14a    call 0056A800h"
"	      0046e14f    add esp,0Ch"
"	      0046e152    jmp near ptr 0046E157h"
"	      0046e157    mov eax,[ebp-4Ch]"
"	      0046e15a    mov ecx,[ebp-50h]"
"	      0046e15d    mov ecx,[ecx+4]"
"	      0046e160    mov [ecx+4],eax"
"	      0046e163    jmp near ptr 0046E168h"
"	      0046e168    jmp near ptr 0046E16Dh"
);
// LINE 370:
	asm( 
"	      0046e16d    mov eax,[ebp-88h]"
"	      0046e173    mov dword ptr [eax+48h],1"
);
// LINE 371:
	asm( 
"	      0046e17a    mov eax,[ebp-88h]"
"	      0046e180    mov dword ptr [eax+1Ch],0"
"	      0046e187    mov eax,[ebp-88h]"
"	      0046e18d    mov dword ptr [eax+18h],0"
"	      0046e194    jmp near ptr 0046E199h"
"	      0046e199    jmp near ptr 0046E19Eh"
"	      0046e19e    mov eax,[ebp-88h]"
"	      0046e1a4    cmp dword ptr [eax+18h],0"
"	      0046e1a8    je near ptr 0046E1B3h"
"	      0046e1ae    jmp near ptr 0046E234h"
"	      0046e1b3    mov eax,[ebp-88h]"
"	      0046e1b9    cmp dword ptr [eax+14h],1"
"	      0046e1bd    jne near ptr 0046E1DCh"
"	      0046e1c3    call dword ptr ds:[6C3908h]"
"	      0046e1c9    mov ecx,[ebp-88h]"
"	      0046e1cf    mov [ecx+18h],eax"
"	      0046e1d2    jmp near ptr 0046E22Fh"
"	      0046e1d7    jmp near ptr 0046E22Fh"
"	      0046e1dc    mov eax,[ebp-88h]"
"	      0046e1e2    cmp dword ptr [eax+14h],0"
"	      0046e1e6    jne near ptr 0046E212h"
"	      0046e1ec    lea eax,[ebp-20h]"
"	      0046e1ef    push eax"
"	      0046e1f0    call dword ptr ds:[6C365Ch]"
"	      0046e1f6    mov eax,[ebp-20h]"
"	      0046e1f9    mov [ebp-18h],eax"
"	      0046e1fc    mov eax,[ebp-18h]"
"	      0046e1ff    mov ecx,[ebp-88h]"
"	      0046e205    mov [ecx+18h],eax"
"	      0046e208    jmp near ptr 0046E22Fh"
"	      0046e20d    jmp near ptr 0046E22Fh"
"	      0046e212    call dword ptr ds:[6C3908h]"
"	      0046e218    mov ecx,3E8h"
"	      0046e21d    sub edx,edx"
"	      0046e21f    div ecx"
"	      0046e221    mov ecx,[ebp-88h]"
"	      0046e227    mov [ecx+18h],eax"
"	      0046e22a    jmp near ptr 0046E22Fh"
"	      0046e22f    jmp near ptr 0046E234h"
"	      0046e234    jmp near ptr 0046E239h"
);
// LINE 373:
	asm( 
"	      0046e239    jmp near ptr 0046E3BEh"
);
// LINE 374:
	asm( 
"	      0046e23e    mov eax,[ebp-88h]"
"	      0046e244    mov eax,[eax+48h]"
"	      0046e247    mov [ebp-8],eax"
"	      0046e24a    mov eax,[ebp-88h]"
"	      0046e250    inc dword ptr [eax+48h]"
"	      0046e253    mov eax,[ebp-88h]"
"	      0046e259    mov eax,[eax+10h]"
"	      0046e25c    mov ecx,[ebp-8]"
"	      0046e25f    lea eax,[eax+ecx*8]"
"	      0046e262    mov [ebp-70h],eax"
"	      0046e265    jmp near ptr 0046E26Ah"
"	      0046e26a    mov eax,[ebp+8]"
"	      0046e26d    push eax"
"	      0046e26e    call 0056ABE0h"
"	      0046e273    add esp,4"
"	      0046e276    mov [ebp-6Ch],eax"
"	      0046e279    cmp dword ptr [ebp-6Ch],0FFFFFFFFh"
"	      0046e27d    jne near ptr 0046E2B5h"
"	      0046e283    push 5971E4h"
"	      0046e288    mov ecx,638C00h"
"	      0046e28d    call 00569960h"
"	      0046e292    mov [ebp-60h],eax"
"	      0046e295    mov eax,[ebp-60h]"
"	      0046e298    push eax"
"	      0046e299    call 004011B0h"
"	      0046e29e    add esp,4"
"	      0046e2a1    jmp near ptr 0046E2A6h"
"	      0046e2a6    push 1"
"	      0046e2a8    call 00569430h"
"	      0046e2ad    add esp,4"
"	      0046e2b0    jmp near ptr 0046E2B5h"
"	      0046e2b5    jmp near ptr 0046E2BAh"
"	      0046e2ba    mov eax,[ebp-70h]"
"	      0046e2bd    mov eax,[eax+4]"
"	      0046e2c0    cmp dword ptr [eax+0Ch],1"
"	      0046e2c4    ja near ptr 0046E2EBh"
"	      0046e2ca    cmp dword ptr [ebp-6Ch],0"
"	      0046e2ce    je near ptr 0046E375h"
"	      0046e2d4    jmp near ptr 0046E2D9h"
"	      0046e2d9    mov eax,[ebp-70h]"
"	      0046e2dc    mov eax,[eax+4]"
"	      0046e2df    mov ecx,[ebp-6Ch]"
"	      0046e2e2    cmp [eax+8],ecx"
"	      0046e2e5    jae near ptr 0046E375h"
"	      0046e2eb    push 10h"
"	      0046e2ed    call 0056A600h"
"	      0046e2f2    add esp,4"
"	      0046e2f5    mov [ebp-58h],eax"
"	      0046e2f8    cmp dword ptr [ebp-58h],0"
"	      0046e2fc    je near ptr 0046E31Ah"
"	      0046e302    mov eax,[ebp-6Ch]"
"	      0046e305    push eax"
"	      0046e306    mov eax,[ebp+8]"
"	      0046e309    push eax"
"	      0046e30a    mov ecx,[ebp-58h]"
"	      0046e30d    call 0041E090h"
"	      0046e312    mov [ebp-54h],eax"
"	      0046e315    jmp near ptr 0046E321h"
"	      0046e31a    mov dword ptr [ebp-54h],0"
"	      0046e321    mov eax,[ebp-70h]"
"	      0046e324    mov eax,[eax+4]"
"	      0046e327    dec dword ptr [eax+0Ch]"
"	      0046e32a    mov eax,[ebp-70h]"
"	      0046e32d    mov eax,[eax+4]"
"	      0046e330    cmp dword ptr [eax+0Ch],0"
"	      0046e334    jne near ptr 0046E362h"
"	      0046e33a    mov eax,[ebp-70h]"
"	      0046e33d    mov eax,[eax+4]"
"	      0046e340    mov [ebp-68h],eax"
"	      0046e343    mov eax,[ebp-68h]"
"	      0046e346    mov [ebp-64h],eax"
"	      0046e349    cmp dword ptr [ebp-64h],0"
"	      0046e34d    je near ptr 0046E362h"
"	      0046e353    push 1"
"	      0046e355    mov ecx,[ebp-64h]"
"	      0046e358    call 0041DD70h"
"	      0046e35d    jmp near ptr 0046E362h"
"	      0046e362    jmp near ptr 0046E367h"
"	      0046e367    mov eax,[ebp-54h]"
"	      0046e36a    mov ecx,[ebp-70h]"
"	      0046e36d    mov [ecx+4],eax"
"	      0046e370    jmp near ptr 0046E3A8h"
"	      0046e375    cmp dword ptr [ebp-6Ch],0"
"	      0046e379    je near ptr 0046E3A8h"
"	      0046e37f    jmp near ptr 0046E384h"
"	      0046e384    mov eax,[ebp-70h]"
"	      0046e387    mov eax,[eax+4]"
"	      0046e38a    mov eax,[eax]"
"	      0046e38c    mov [ebp-5Ch],eax"
"	      0046e38f    mov eax,[ebp-6Ch]"
"	      0046e392    push eax"
"	      0046e393    mov eax,[ebp+8]"
"	      0046e396    push eax"
"	      0046e397    mov eax,[ebp-5Ch]"
"	      0046e39a    push eax"
"	      0046e39b    call 0056A800h"
"	      0046e3a0    add esp,0Ch"
"	      0046e3a3    jmp near ptr 0046E3A8h"
"	      0046e3a8    mov eax,[ebp-6Ch]"
"	      0046e3ab    mov ecx,[ebp-70h]"
"	      0046e3ae    mov ecx,[ecx+4]"
"	      0046e3b1    mov [ecx+4],eax"
"	      0046e3b4    jmp near ptr 0046E3B9h"
"	      0046e3b9    jmp near ptr 0046E3BEh"
);
// LINE 377:
	asm( 
"	      0046e3be    jmp near ptr 0046E3C3h"
"	      0046e3c3    pop edi"
"	      0046e3c4    pop esi"
"	      0046e3c5    pop ebx"
"	      0046e3c6    leave"
"	      0046e3c7    ret 4"
);
}

// FUNCTION: COPTER_D 0x0046e3ca
void MessageDisplayManager::AddNewMessage(class basic_string<char>& sNewMessage) {
// LINE 382:
	asm( 
"	      0046e3ca    push ebp"
"	      0046e3cb    mov ebp,esp"
"	      0046e3cd    sub esp,24h"
"	      0046e3d0    push ebx"
"	      0046e3d1    push esi"
"	      0046e3d2    push edi"
"	      0046e3d3    mov [ebp-24h],ecx"
);
// LINE 383:
	asm( 
"	      0046e3d6    mov eax,[ebp+8]"
"	      0046e3d9    cmp dword ptr [eax],0"
"	      0046e3dc    je near ptr 0046E3FCh"
"	      0046e3e2    mov eax,[ebp+8]"
"	      0046e3e5    mov eax,[eax]"
"	      0046e3e7    mov [ebp-4],eax"
"	      0046e3ea    mov eax,[ebp-4]"
"	      0046e3ed    mov [ebp-0Ch],eax"
"	      0046e3f0    mov eax,[ebp-0Ch]"
"	      0046e3f3    push eax"
"	      0046e3f4    call 0056A740h"
"	      0046e3f9    add esp,4"
"	      0046e3fc    jmp near ptr 0046E401h"
"	      0046e401    mov eax,[ebp+8]"
"	      0046e404    mov eax,[eax+4]"
"	      0046e407    mov eax,[eax+4]"
"	      0046e40a    inc eax"
"	      0046e40b    push eax"
"	      0046e40c    call 0056A600h"
"	      0046e411    add esp,4"
"	      0046e414    mov ecx,[ebp+8]"
"	      0046e417    mov [ecx],eax"
"	      0046e419    jmp near ptr 0046E41Eh"
"	      0046e41e    mov eax,[ebp+8]"
"	      0046e421    mov eax,[eax+4]"
"	      0046e424    cmp dword ptr [eax+4],0"
"	      0046e428    je near ptr 0046E496h"
"	      0046e42e    jmp near ptr 0046E433h"
"	      0046e433    jmp near ptr 0046E438h"
"	      0046e438    mov eax,[ebp+8]"
"	      0046e43b    mov eax,[eax+4]"
"	      0046e43e    cmp dword ptr [eax+4],0"
"	      0046e442    je near ptr 0046E45Dh"
"	      0046e448    mov eax,[ebp+8]"
"	      0046e44b    mov eax,[eax+4]"
"	      0046e44e    mov eax,[eax]"
"	      0046e450    mov [ebp-18h],eax"
"	      0046e453    jmp near ptr 0046E469h"
"	      0046e458    jmp near ptr 0046E469h"
"	      0046e45d    mov dword ptr [ebp-18h],0"
"	      0046e464    jmp near ptr 0046E469h"
"	      0046e469    mov eax,[ebp+8]"
"	      0046e46c    mov eax,[eax+4]"
"	      0046e46f    mov eax,[eax+4]"
"	      0046e472    mov [ebp-1Ch],eax"
"	      0046e475    mov eax,[ebp+8]"
"	      0046e478    mov eax,[eax]"
"	      0046e47a    mov [ebp-20h],eax"
"	      0046e47d    mov eax,[ebp-1Ch]"
"	      0046e480    push eax"
"	      0046e481    mov eax,[ebp-18h]"
"	      0046e484    push eax"
"	      0046e485    mov eax,[ebp-20h]"
"	      0046e488    push eax"
"	      0046e489    call 0056A800h"
"	      0046e48e    add esp,0Ch"
"	      0046e491    jmp near ptr 0046E496h"
"	      0046e496    jmp near ptr 0046E49Bh"
"	      0046e49b    mov byte ptr [ebp-8],0"
"	      0046e49f    jmp near ptr 0046E4A4h"
"	      0046e4a4    lea eax,[ebp-8]"
"	      0046e4a7    mov [ebp-10h],eax"
"	      0046e4aa    jmp near ptr 0046E4AFh"
"	      0046e4af    mov eax,[ebp+8]"
"	      0046e4b2    mov eax,[eax+4]"
"	      0046e4b5    mov eax,[eax+4]"
"	      0046e4b8    mov ecx,[ebp+8]"
"	      0046e4bb    add eax,[ecx]"
"	      0046e4bd    mov [ebp-14h],eax"
"	      0046e4c0    mov eax,[ebp-10h]"
"	      0046e4c3    mov al,[eax]"
"	      0046e4c5    mov ecx,[ebp-14h]"
"	      0046e4c8    mov [ecx],al"
"	      0046e4ca    jmp near ptr 0046E4CFh"
"	      0046e4cf    jmp near ptr 0046E4D4h"
"	      0046e4d4    mov eax,[ebp+8]"
"	      0046e4d7    mov eax,[eax]"
"	      0046e4d9    push eax"
"	      0046e4da    mov eax,[ebp-24h]"
"	      0046e4dd    mov eax,[eax]"
"	      0046e4df    mov ecx,[ebp-24h]"
"	      0046e4e2    call dword ptr [eax+0Ch]"
);
// LINE 384:
	asm( 
"	      0046e4e5    jmp near ptr 0046E4EAh"
"	      0046e4ea    pop edi"
"	      0046e4eb    pop esi"
"	      0046e4ec    pop ebx"
"	      0046e4ed    leave"
"	      0046e4ee    ret 4"
);
}



// Contribution: 1:0006d500-0006d538 Module: 40, 16 byte alignment, code, (comdat), execute, read, 
// FUNCTION: COPTER_D 0x0046e500
// MissionLogWindow::`scalar deleting destructor'



// Contribution: 1:0006d540-0006d681 Module: 40, 16 byte alignment, code, (comdat), execute, read, 
// FUNCTION: COPTER_D 0x0046e540
// basic_string<char>::`vector deleting destructor'



// Contribution: 2:00001708-000017cb Module: 40, 8 byte alignment, initialized_data, (comdat), read, 
// GLOBAL: COPTER_D 0x00590708
// ??_7MissionLogWindow@@6B@


// Contribution: 2:000017d0-000017df Module: 40, 8 byte alignment, initialized_data, (comdat), read, 
// GLOBAL: COPTER_D 0x005907d0
// ??_7MessageDisplayManager@@6B@


// Contribution: 3:00002448-00002494 Module: 40, 4 byte alignment, initialized_data, read, write, 
// GLOBAL: COPTER_D 0x00599448
// SZ_MISSION_LOG_IMAGE_FILE_NAME
// GLOBAL: COPTER_D 0x0059944c
// SZ_MISSION_LOG_WINDOW_BUTTON_IMAGE_FILE_NAME
// GLOBAL: COPTER_D 0x00599450
// SZ_MISSION_LOG_WINDOW_SCROLL_BAR_IMAGE_FILE_NAME
// GLOBAL: COPTER_D 0x00599454
// SZ_MISSION_LOG_WINDOW_BACKGROUND_IMAGE_FILE_NAME
