// Module: Extrawin.obj
// Source: C:\Copter\source\sparkal\Extrawin.cpp
// autogenerated by simcopter_tool from PDB file



// Contribution: 1:0004f050-0005f979 Module: 45, 16 byte alignment, code, execute, read, 
// FUNCTION: COPTER_D 0x00450050
// $E66

// FUNCTION: COPTER_D 0x00450065
// $E65

// FUNCTION: COPTER_D 0x0045008f
// $E69

// FUNCTION: COPTER_D 0x004500a4
// $E68

// FUNCTION: COPTER_D 0x004500ce
void MessageBoxWindow::MessageBoxWindow(class MPoint& ptNewPosition, unsigned long lNewType, unsigned long lNewMessageID, int32_t nNewID, class GraphicWindow* windowNewParent, class GraphicWindowOwner* myNewOwner, int32_t bAddToParentList, int32_t bNewSelfDeleting, char * szImageFileName, char * szButtonImageFileName, char * szAnimationImageFileName) {
// LINE 47:
	asm( 
"	      004500ce    push ebp"
"	      004500cf    mov ebp,esp"
"	      004500d1    sub esp,5Ch"
"	      004500d4    push ebx"
"	      004500d5    push esi"
"	      004500d6    push edi"
"	      004500d7    mov this,ecx"
"	      004500da    cmp szImageFileName,0"
"	      004500de    je near ptr 004500EFh"
"	      004500e4    mov eax,szImageFileName"
"	      004500e7    mov [ebp-14h],eax"
"	      004500ea    jmp near ptr 004500F7h"
"	      004500ef    mov eax,ds:[59913Ch]"
"	      004500f4    mov [ebp-14h],eax"
"	      004500f7    mov eax,ptNewPosition"
"	      004500fa    mov eax,[eax+4]"
"	      004500fd    mov [ebp-4Ch],eax"
"	      00450100    mov eax,ptNewPosition"
"	      00450103    mov eax,[eax]"
"	      00450105    mov [ebp-50h],eax"
"	      00450108    mov eax,ptNewPosition"
"	      0045010b    mov eax,[eax+4]"
"	      0045010e    mov [ebp-54h],eax"
"	      00450111    mov eax,ptNewPosition"
"	      00450114    mov eax,[eax]"
"	      00450116    mov [ebp-58h],eax"
"	      00450119    jmp near ptr 0045011Eh"
"	      0045011e    mov eax,[ebp-58h]"
"	      00450121    mov [ebp-10h],eax"
"	      00450124    mov eax,[ebp-54h]"
"	      00450127    mov [ebp-0Ch],eax"
"	      0045012a    mov eax,[ebp-50h]"
"	      0045012d    mov [ebp-8],eax"
"	      00450130    mov eax,[ebp-4Ch]"
"	      00450133    mov [ebp-4],eax"
"	      00450136    jmp near ptr 0045013Bh"
"	      0045013b    mov eax,ds:[606988h]"
"	      00450140    push eax"
"	      00450141    mov eax,bAddToParentList"
"	      00450144    push eax"
"	      00450145    mov eax,myNewOwner"
"	      00450148    push eax"
"	      00450149    mov eax,windowNewParent"
"	      0045014c    push eax"
"	      0045014d    mov eax,nNewID"
"	      00450150    push eax"
"	      00450151    lea eax,[ebp-10h]"
"	      00450154    push eax"
"	      00450155    mov eax,[ebp-14h]"
"	      00450158    push eax"
"	      00450159    mov ecx,this"
"	      0045015c    call 004A393Dh"
"	      00450161    mov eax,lNewMessageID"
"	      00450164    mov ecx,this"
"	      00450167    mov [ecx+74h],eax"
"	      0045016a    push 10h"
"	      0045016c    call 0056A600h"
"	      00450171    add esp,4"
"	      00450174    mov [ebp-40h],eax"
"	      00450177    cmp dword ptr [ebp-40h],0"
"	      0045017b    je near ptr 004501BDh"
"	      00450181    mov eax,[ebp-40h]"
"	      00450184    mov dword ptr [eax+4],0"
"	      0045018b    mov eax,[ebp-40h]"
"	      0045018e    mov eax,[eax+4]"
"	      00450191    mov ecx,[ebp-40h]"
"	      00450194    mov [ecx+8],eax"
"	      00450197    mov eax,[ebp-40h]"
"	      0045019a    mov dword ptr [eax],0"
"	      004501a0    mov eax,[ebp-40h]"
"	      004501a3    mov dword ptr [eax+0Ch],1"
"	      004501aa    jmp near ptr 004501AFh"
"	      004501af    mov eax,[ebp-40h]"
"	      004501b2    mov ecx,this"
"	      004501b5    mov [ecx+7Ch],eax"
"	      004501b8    jmp near ptr 004501C7h"
"	      004501bd    mov eax,this"
"	      004501c0    mov dword ptr [eax+7Ch],0"
"	      004501c7    mov eax,this"
"	      004501ca    mov dword ptr [eax+78h],0"
"	      004501d1    jmp near ptr 004501D6h"
"	      004501d6    push 10h"
"	      004501d8    call 0056A600h"
"	      004501dd    add esp,4"
"	      004501e0    mov [ebp-44h],eax"
"	      004501e3    cmp dword ptr [ebp-44h],0"
"	      004501e7    je near ptr 0045022Ch"
"	      004501ed    mov eax,[ebp-44h]"
"	      004501f0    mov dword ptr [eax+4],0"
"	      004501f7    mov eax,[ebp-44h]"
"	      004501fa    mov eax,[eax+4]"
"	      004501fd    mov ecx,[ebp-44h]"
"	      00450200    mov [ecx+8],eax"
"	      00450203    mov eax,[ebp-44h]"
"	      00450206    mov dword ptr [eax],0"
"	      0045020c    mov eax,[ebp-44h]"
"	      0045020f    mov dword ptr [eax+0Ch],1"
"	      00450216    jmp near ptr 0045021Bh"
"	      0045021b    mov eax,[ebp-44h]"
"	      0045021e    mov ecx,this"
"	      00450221    mov [ecx+84h],eax"
"	      00450227    jmp near ptr 00450239h"
"	      0045022c    mov eax,this"
"	      0045022f    mov dword ptr [eax+84h],0"
"	      00450239    mov eax,this"
"	      0045023c    mov dword ptr [eax+80h],0"
"	      00450246    jmp near ptr 0045024Bh"
"	      0045024b    push 10h"
"	      0045024d    call 0056A600h"
"	      00450252    add esp,4"
"	      00450255    mov [ebp-48h],eax"
"	      00450258    cmp dword ptr [ebp-48h],0"
"	      0045025c    je near ptr 004502A1h"
"	      00450262    mov eax,[ebp-48h]"
"	      00450265    mov dword ptr [eax+4],0"
"	      0045026c    mov eax,[ebp-48h]"
"	      0045026f    mov eax,[eax+4]"
"	      00450272    mov ecx,[ebp-48h]"
"	      00450275    mov [ecx+8],eax"
"	      00450278    mov eax,[ebp-48h]"
"	      0045027b    mov dword ptr [eax],0"
"	      00450281    mov eax,[ebp-48h]"
"	      00450284    mov dword ptr [eax+0Ch],1"
"	      0045028b    jmp near ptr 00450290h"
"	      00450290    mov eax,[ebp-48h]"
"	      00450293    mov ecx,this"
"	      00450296    mov [ecx+8Ch],eax"
"	      0045029c    jmp near ptr 004502AEh"
"	      004502a1    mov eax,this"
"	      004502a4    mov dword ptr [eax+8Ch],0"
"	      004502ae    mov eax,this"
"	      004502b1    mov dword ptr [eax+88h],0"
"	      004502bb    jmp near ptr 004502C0h"
"	      004502c0    mov eax,lNewType"
"	      004502c3    mov ecx,this"
"	      004502c6    mov [ecx+90h],eax"
"	      004502cc    mov eax,bNewSelfDeleting"
"	      004502cf    mov ecx,this"
"	      004502d2    mov [ecx+94h],eax"
"	      004502d8    jmp near ptr 004502DDh"
"	      004502dd    jmp near ptr 004502E2h"
"	      004502e2    jmp near ptr 004502E7h"
"	      004502e7    mov eax,this"
"	      004502ea    mov dword ptr [eax],58FA80h"
);
// LINE 48:
	asm( 
"	      004502f0    cmp szButtonImageFileName,0"
"	      004502f4    je near ptr 0045042Ah"
);
// LINE 49:
	asm( 
"	      004502fa    jmp near ptr 004502FFh"
"	      004502ff    mov eax,szButtonImageFileName"
"	      00450302    push eax"
"	      00450303    call 0056ABE0h"
"	      00450308    add esp,4"
"	      0045030b    mov [ebp-28h],eax"
"	      0045030e    cmp dword ptr [ebp-28h],0FFFFFFFFh"
"	      00450312    jne near ptr 0045034Ah"
"	      00450318    push 5971E4h"
"	      0045031d    mov ecx,638C00h"
"	      00450322    call 00569960h"
"	      00450327    mov [ebp-24h],eax"
"	      0045032a    mov eax,[ebp-24h]"
"	      0045032d    push eax"
"	      0045032e    call 004011B0h"
"	      00450333    add esp,4"
"	      00450336    jmp near ptr 0045033Bh"
"	      0045033b    push 1"
"	      0045033d    call 00569430h"
"	      00450342    add esp,4"
"	      00450345    jmp near ptr 0045034Ah"
"	      0045034a    jmp near ptr 0045034Fh"
"	      0045034f    mov eax,this"
"	      00450352    mov eax,[eax+84h]"
"	      00450358    cmp dword ptr [eax+0Ch],1"
"	      0045035c    ja near ptr 00450386h"
"	      00450362    cmp dword ptr [ebp-28h],0"
"	      00450366    je near ptr 004503DBh"
"	      0045036c    jmp near ptr 00450371h"
"	      00450371    mov eax,this"
"	      00450374    mov eax,[eax+84h]"
"	      0045037a    mov ecx,[ebp-28h]"
"	      0045037d    cmp [eax+8],ecx"
"	      00450380    jae near ptr 004503DBh"
"	      00450386    push 10h"
"	      00450388    call 0056A600h"
"	      0045038d    add esp,4"
"	      00450390    mov [ebp-1Ch],eax"
"	      00450393    cmp dword ptr [ebp-1Ch],0"
"	      00450397    je near ptr 004503B5h"
"	      0045039d    mov eax,[ebp-28h]"
"	      004503a0    push eax"
"	      004503a1    mov eax,szButtonImageFileName"
"	      004503a4    push eax"
"	      004503a5    mov ecx,[ebp-1Ch]"
"	      004503a8    call 0041E090h"
"	      004503ad    mov [ebp-18h],eax"
"	      004503b0    jmp near ptr 004503BCh"
"	      004503b5    mov dword ptr [ebp-18h],0"
"	      004503bc    mov ecx,this"
"	      004503bf    add ecx,80h"
"	      004503c5    call 00412080h"
"	      004503ca    mov eax,[ebp-18h]"
"	      004503cd    mov ecx,this"
"	      004503d0    mov [ecx+84h],eax"
"	      004503d6    jmp near ptr 00450411h"
"	      004503db    cmp dword ptr [ebp-28h],0"
"	      004503df    je near ptr 00450411h"
"	      004503e5    jmp near ptr 004503EAh"
"	      004503ea    mov eax,this"
"	      004503ed    mov eax,[eax+84h]"
"	      004503f3    mov eax,[eax]"
"	      004503f5    mov [ebp-20h],eax"
"	      004503f8    mov eax,[ebp-28h]"
"	      004503fb    push eax"
"	      004503fc    mov eax,szButtonImageFileName"
"	      004503ff    push eax"
"	      00450400    mov eax,[ebp-20h]"
"	      00450403    push eax"
"	      00450404    call 0056A800h"
"	      00450409    add esp,0Ch"
"	      0045040c    jmp near ptr 00450411h"
"	      00450411    mov eax,[ebp-28h]"
"	      00450414    mov ecx,this"
"	      00450417    mov ecx,[ecx+84h]"
"	      0045041d    mov [ecx+4],eax"
"	      00450420    jmp near ptr 00450425h"
"	      00450425    jmp near ptr 0045042Ah"
);
// LINE 50:
	asm( 
"	      0045042a    cmp szAnimationImageFileName,0"
"	      0045042e    je near ptr 00450564h"
);
// LINE 51:
	asm( 
"	      00450434    jmp near ptr 00450439h"
"	      00450439    mov eax,szAnimationImageFileName"
"	      0045043c    push eax"
"	      0045043d    call 0056ABE0h"
"	      00450442    add esp,4"
"	      00450445    mov [ebp-3Ch],eax"
"	      00450448    cmp dword ptr [ebp-3Ch],0FFFFFFFFh"
"	      0045044c    jne near ptr 00450484h"
"	      00450452    push 5971E4h"
"	      00450457    mov ecx,638C00h"
"	      0045045c    call 00569960h"
"	      00450461    mov [ebp-38h],eax"
"	      00450464    mov eax,[ebp-38h]"
"	      00450467    push eax"
"	      00450468    call 004011B0h"
"	      0045046d    add esp,4"
"	      00450470    jmp near ptr 00450475h"
"	      00450475    push 1"
"	      00450477    call 00569430h"
"	      0045047c    add esp,4"
"	      0045047f    jmp near ptr 00450484h"
"	      00450484    jmp near ptr 00450489h"
"	      00450489    mov eax,this"
"	      0045048c    mov eax,[eax+8Ch]"
"	      00450492    cmp dword ptr [eax+0Ch],1"
"	      00450496    ja near ptr 004504C0h"
"	      0045049c    cmp dword ptr [ebp-3Ch],0"
"	      004504a0    je near ptr 00450515h"
"	      004504a6    jmp near ptr 004504ABh"
"	      004504ab    mov eax,this"
"	      004504ae    mov eax,[eax+8Ch]"
"	      004504b4    mov ecx,[ebp-3Ch]"
"	      004504b7    cmp [eax+8],ecx"
"	      004504ba    jae near ptr 00450515h"
"	      004504c0    push 10h"
"	      004504c2    call 0056A600h"
"	      004504c7    add esp,4"
"	      004504ca    mov [ebp-30h],eax"
"	      004504cd    cmp dword ptr [ebp-30h],0"
"	      004504d1    je near ptr 004504EFh"
"	      004504d7    mov eax,[ebp-3Ch]"
"	      004504da    push eax"
"	      004504db    mov eax,szAnimationImageFileName"
"	      004504de    push eax"
"	      004504df    mov ecx,[ebp-30h]"
"	      004504e2    call 0041E090h"
"	      004504e7    mov [ebp-2Ch],eax"
"	      004504ea    jmp near ptr 004504F6h"
"	      004504ef    mov dword ptr [ebp-2Ch],0"
"	      004504f6    mov ecx,this"
"	      004504f9    add ecx,88h"
"	      004504ff    call 00412080h"
"	      00450504    mov eax,[ebp-2Ch]"
"	      00450507    mov ecx,this"
"	      0045050a    mov [ecx+8Ch],eax"
"	      00450510    jmp near ptr 0045054Bh"
"	      00450515    cmp dword ptr [ebp-3Ch],0"
"	      00450519    je near ptr 0045054Bh"
"	      0045051f    jmp near ptr 00450524h"
"	      00450524    mov eax,this"
"	      00450527    mov eax,[eax+8Ch]"
"	      0045052d    mov eax,[eax]"
"	      0045052f    mov [ebp-34h],eax"
"	      00450532    mov eax,[ebp-3Ch]"
"	      00450535    push eax"
"	      00450536    mov eax,szAnimationImageFileName"
"	      00450539    push eax"
"	      0045053a    mov eax,[ebp-34h]"
"	      0045053d    push eax"
"	      0045053e    call 0056A800h"
"	      00450543    add esp,0Ch"
"	      00450546    jmp near ptr 0045054Bh"
"	      0045054b    mov eax,[ebp-3Ch]"
"	      0045054e    mov ecx,this"
"	      00450551    mov ecx,[ecx+8Ch]"
"	      00450557    mov [ecx+4],eax"
"	      0045055a    jmp near ptr 0045055Fh"
"	      0045055f    jmp near ptr 00450564h"
);
// LINE 52:
	asm( 
"	      00450564    jmp near ptr 00450569h"
"	      00450569    mov eax,this"
"	      0045056c    pop edi"
"	      0045056d    pop esi"
"	      0045056e    pop ebx"
"	      0045056f    leave"
"	      00450570    ret 2Ch"
);
}

// FUNCTION: COPTER_D 0x00450573
void MessageBoxWindow::MessageBoxWindow(class MPoint& ptNewPosition, unsigned long lNewType, class basic_string<char>& sNewMessage, int32_t nNewID, class GraphicWindow* windowNewParent, class GraphicWindowOwner* myNewOwner, int32_t bAddToParentList, int32_t bNewSelfDeleting, char * szImageFileName, char * szButtonImageFileName, char * szAnimationImageFileName) {
// LINE 70:
	asm( 
"	      00450573    push ebp"
"	      00450574    mov ebp,esp"
"	      00450576    sub esp,70h"
"	      00450579    push ebx"
"	      0045057a    push esi"
"	      0045057b    push edi"
"	      0045057c    mov this,ecx"
"	      0045057f    cmp szImageFileName,0"
"	      00450583    je near ptr 00450594h"
"	      00450589    mov eax,szImageFileName"
"	      0045058c    mov [ebp-14h],eax"
"	      0045058f    jmp near ptr 0045059Ch"
"	      00450594    mov eax,ds:[59913Ch]"
"	      00450599    mov [ebp-14h],eax"
"	      0045059c    mov eax,ptNewPosition"
"	      0045059f    mov eax,[eax+4]"
"	      004505a2    mov [ebp-48h],eax"
"	      004505a5    mov eax,ptNewPosition"
"	      004505a8    mov eax,[eax]"
"	      004505aa    mov [ebp-4Ch],eax"
"	      004505ad    mov eax,ptNewPosition"
"	      004505b0    mov eax,[eax+4]"
"	      004505b3    mov [ebp-50h],eax"
"	      004505b6    mov eax,ptNewPosition"
"	      004505b9    mov eax,[eax]"
"	      004505bb    mov [ebp-54h],eax"
"	      004505be    jmp near ptr 004505C3h"
"	      004505c3    mov eax,[ebp-54h]"
"	      004505c6    mov [ebp-10h],eax"
"	      004505c9    mov eax,[ebp-50h]"
"	      004505cc    mov [ebp-0Ch],eax"
"	      004505cf    mov eax,[ebp-4Ch]"
"	      004505d2    mov [ebp-8],eax"
"	      004505d5    mov eax,[ebp-48h]"
"	      004505d8    mov [ebp-4],eax"
"	      004505db    jmp near ptr 004505E0h"
"	      004505e0    mov eax,ds:[606988h]"
"	      004505e5    push eax"
"	      004505e6    mov eax,bAddToParentList"
"	      004505e9    push eax"
"	      004505ea    mov eax,myNewOwner"
"	      004505ed    push eax"
"	      004505ee    mov eax,windowNewParent"
"	      004505f1    push eax"
"	      004505f2    mov eax,nNewID"
"	      004505f5    push eax"
"	      004505f6    lea eax,[ebp-10h]"
"	      004505f9    push eax"
"	      004505fa    mov eax,[ebp-14h]"
"	      004505fd    push eax"
"	      004505fe    mov ecx,this"
"	      00450601    call 004A393Dh"
"	      00450606    mov eax,this"
"	      00450609    mov dword ptr [eax+74h],0"
"	      00450610    jmp near ptr 00450615h"
"	      00450615    mov eax,sNewMessage"
"	      00450618    mov eax,[eax+4]"
"	      0045061b    cmp dword ptr [eax+4],0"
"	      0045061f    jae near ptr 00450657h"
"	      00450625    push 59722Ch"
"	      0045062a    mov ecx,638C00h"
"	      0045062f    call 00569960h"
"	      00450634    mov [ebp-60h],eax"
"	      00450637    mov eax,[ebp-60h]"
"	      0045063a    push eax"
"	      0045063b    call 004011B0h"
"	      00450640    add esp,4"
"	      00450643    jmp near ptr 00450648h"
"	      00450648    push 1"
"	      0045064a    call 00569430h"
"	      0045064f    add esp,4"
"	      00450652    jmp near ptr 00450657h"
"	      00450657    jmp near ptr 0045065Ch"
"	      0045065c    mov eax,sNewMessage"
"	      0045065f    mov eax,[eax+4]"
"	      00450662    cmp dword ptr [eax+4],0FFFFFFFFh"
"	      00450666    jae near ptr 00450682h"
"	      0045066c    jmp near ptr 00450671h"
"	      00450671    mov eax,sNewMessage"
"	      00450674    mov eax,[eax+4]"
"	      00450677    mov eax,[eax+4]"
"	      0045067a    mov [ebp-58h],eax"
"	      0045067d    jmp near ptr 00450689h"
"	      00450682    mov dword ptr [ebp-58h],0FFFFFFFFh"
"	      00450689    jmp near ptr 0045068Eh"
"	      0045068e    mov eax,sNewMessage"
"	      00450691    mov eax,[eax+4]"
"	      00450694    mov ecx,[ebp-58h]"
"	      00450697    cmp [eax+4],ecx"
"	      0045069a    jne near ptr 004506CFh"
"	      004506a0    jmp near ptr 004506A5h"
"	      004506a5    mov eax,sNewMessage"
"	      004506a8    mov eax,[eax+4]"
"	      004506ab    cmp dword ptr [eax+0Ch],0FFFFFFFFh"
"	      004506af    je near ptr 004506CFh"
"	      004506b5    mov eax,sNewMessage"
"	      004506b8    mov eax,[eax+4]"
"	      004506bb    mov ecx,this"
"	      004506be    mov [ecx+7Ch],eax"
"	      004506c1    mov eax,this"
"	      004506c4    mov eax,[eax+7Ch]"
"	      004506c7    inc dword ptr [eax+0Ch]"
"	      004506ca    jmp near ptr 004507B1h"
"	      004506cf    push 10h"
"	      004506d1    call 0056A600h"
"	      004506d6    add esp,4"
"	      004506d9    mov [ebp-5Ch],eax"
"	      004506dc    cmp dword ptr [ebp-5Ch],0"
"	      004506e0    je near ptr 004507A7h"
"	      004506e6    mov eax,[ebp-58h]"
"	      004506e9    mov ecx,[ebp-5Ch]"
"	      004506ec    mov [ecx+4],eax"
"	      004506ef    mov eax,[ebp-5Ch]"
"	      004506f2    mov eax,[eax+4]"
"	      004506f5    mov ecx,[ebp-5Ch]"
"	      004506f8    mov [ecx+8],eax"
"	      004506fb    mov eax,[ebp-5Ch]"
"	      004506fe    cmp dword ptr [eax+8],0"
"	      00450702    je near ptr 00450781h"
"	      00450708    mov eax,[ebp-5Ch]"
"	      0045070b    mov eax,[eax+8]"
"	      0045070e    push eax"
"	      0045070f    call 0056A600h"
"	      00450714    add esp,4"
"	      00450717    mov ecx,[ebp-5Ch]"
"	      0045071a    mov [ecx],eax"
"	      0045071c    jmp near ptr 00450721h"
"	      00450721    mov eax,sNewMessage"
"	      00450724    mov eax,[eax+4]"
"	      00450727    cmp dword ptr [eax+4],0"
"	      0045072b    je near ptr 00450746h"
"	      00450731    mov eax,sNewMessage"
"	      00450734    mov eax,[eax+4]"
"	      00450737    mov eax,[eax]"
"	      00450739    mov [ebp-64h],eax"
"	      0045073c    jmp near ptr 00450752h"
"	      00450741    jmp near ptr 00450752h"
"	      00450746    mov dword ptr [ebp-64h],0"
"	      0045074d    jmp near ptr 00450752h"
"	      00450752    mov eax,[ebp-5Ch]"
"	      00450755    mov eax,[eax+4]"
"	      00450758    mov [ebp-68h],eax"
"	      0045075b    mov eax,[ebp-5Ch]"
"	      0045075e    mov eax,[eax]"
"	      00450760    mov [ebp-6Ch],eax"
"	      00450763    mov eax,[ebp-68h]"
"	      00450766    push eax"
"	      00450767    mov eax,[ebp-64h]"
"	      0045076a    push eax"
"	      0045076b    mov eax,[ebp-6Ch]"
"	      0045076e    push eax"
"	      0045076f    call 0056A800h"
"	      00450774    add esp,0Ch"
"	      00450777    jmp near ptr 0045077Ch"
"	      0045077c    jmp near ptr 0045078Ah"
"	      00450781    mov eax,[ebp-5Ch]"
"	      00450784    mov dword ptr [eax],0"
"	      0045078a    mov eax,[ebp-5Ch]"
"	      0045078d    mov dword ptr [eax+0Ch],1"
"	      00450794    jmp near ptr 00450799h"
"	      00450799    mov eax,[ebp-5Ch]"
"	      0045079c    mov ecx,this"
"	      0045079f    mov [ecx+7Ch],eax"
"	      004507a2    jmp near ptr 004507B1h"
"	      004507a7    mov eax,this"
"	      004507aa    mov dword ptr [eax+7Ch],0"
"	      004507b1    mov eax,this"
"	      004507b4    mov dword ptr [eax+78h],0"
"	      004507bb    jmp near ptr 004507C0h"
"	      004507c0    push 10h"
"	      004507c2    call 0056A600h"
"	      004507c7    add esp,4"
"	      004507ca    mov [ebp-40h],eax"
"	      004507cd    cmp dword ptr [ebp-40h],0"
"	      004507d1    je near ptr 00450816h"
"	      004507d7    mov eax,[ebp-40h]"
"	      004507da    mov dword ptr [eax+4],0"
"	      004507e1    mov eax,[ebp-40h]"
"	      004507e4    mov eax,[eax+4]"
"	      004507e7    mov ecx,[ebp-40h]"
"	      004507ea    mov [ecx+8],eax"
"	      004507ed    mov eax,[ebp-40h]"
"	      004507f0    mov dword ptr [eax],0"
"	      004507f6    mov eax,[ebp-40h]"
"	      004507f9    mov dword ptr [eax+0Ch],1"
"	      00450800    jmp near ptr 00450805h"
"	      00450805    mov eax,[ebp-40h]"
"	      00450808    mov ecx,this"
"	      0045080b    mov [ecx+84h],eax"
"	      00450811    jmp near ptr 00450823h"
"	      00450816    mov eax,this"
"	      00450819    mov dword ptr [eax+84h],0"
"	      00450823    mov eax,this"
"	      00450826    mov dword ptr [eax+80h],0"
"	      00450830    jmp near ptr 00450835h"
"	      00450835    push 10h"
"	      00450837    call 0056A600h"
"	      0045083c    add esp,4"
"	      0045083f    mov [ebp-44h],eax"
"	      00450842    cmp dword ptr [ebp-44h],0"
"	      00450846    je near ptr 0045088Bh"
"	      0045084c    mov eax,[ebp-44h]"
"	      0045084f    mov dword ptr [eax+4],0"
"	      00450856    mov eax,[ebp-44h]"
"	      00450859    mov eax,[eax+4]"
"	      0045085c    mov ecx,[ebp-44h]"
"	      0045085f    mov [ecx+8],eax"
"	      00450862    mov eax,[ebp-44h]"
"	      00450865    mov dword ptr [eax],0"
"	      0045086b    mov eax,[ebp-44h]"
"	      0045086e    mov dword ptr [eax+0Ch],1"
"	      00450875    jmp near ptr 0045087Ah"
"	      0045087a    mov eax,[ebp-44h]"
"	      0045087d    mov ecx,this"
"	      00450880    mov [ecx+8Ch],eax"
"	      00450886    jmp near ptr 00450898h"
"	      0045088b    mov eax,this"
"	      0045088e    mov dword ptr [eax+8Ch],0"
"	      00450898    mov eax,this"
"	      0045089b    mov dword ptr [eax+88h],0"
"	      004508a5    jmp near ptr 004508AAh"
"	      004508aa    mov eax,lNewType"
"	      004508ad    mov ecx,this"
"	      004508b0    mov [ecx+90h],eax"
"	      004508b6    mov eax,bNewSelfDeleting"
"	      004508b9    mov ecx,this"
"	      004508bc    mov [ecx+94h],eax"
"	      004508c2    jmp near ptr 004508C7h"
"	      004508c7    jmp near ptr 004508CCh"
"	      004508cc    jmp near ptr 004508D1h"
"	      004508d1    mov eax,this"
"	      004508d4    mov dword ptr [eax],58FA80h"
);
// LINE 71:
	asm( 
"	      004508da    cmp szButtonImageFileName,0"
"	      004508de    je near ptr 00450A14h"
);
// LINE 72:
	asm( 
"	      004508e4    jmp near ptr 004508E9h"
"	      004508e9    mov eax,szButtonImageFileName"
"	      004508ec    push eax"
"	      004508ed    call 0056ABE0h"
"	      004508f2    add esp,4"
"	      004508f5    mov [ebp-28h],eax"
"	      004508f8    cmp dword ptr [ebp-28h],0FFFFFFFFh"
"	      004508fc    jne near ptr 00450934h"
"	      00450902    push 5971E4h"
"	      00450907    mov ecx,638C00h"
"	      0045090c    call 00569960h"
"	      00450911    mov [ebp-24h],eax"
"	      00450914    mov eax,[ebp-24h]"
"	      00450917    push eax"
"	      00450918    call 004011B0h"
"	      0045091d    add esp,4"
"	      00450920    jmp near ptr 00450925h"
"	      00450925    push 1"
"	      00450927    call 00569430h"
"	      0045092c    add esp,4"
"	      0045092f    jmp near ptr 00450934h"
"	      00450934    jmp near ptr 00450939h"
"	      00450939    mov eax,this"
"	      0045093c    mov eax,[eax+84h]"
"	      00450942    cmp dword ptr [eax+0Ch],1"
"	      00450946    ja near ptr 00450970h"
"	      0045094c    cmp dword ptr [ebp-28h],0"
"	      00450950    je near ptr 004509C5h"
"	      00450956    jmp near ptr 0045095Bh"
"	      0045095b    mov eax,this"
"	      0045095e    mov eax,[eax+84h]"
"	      00450964    mov ecx,[ebp-28h]"
"	      00450967    cmp [eax+8],ecx"
"	      0045096a    jae near ptr 004509C5h"
"	      00450970    push 10h"
"	      00450972    call 0056A600h"
"	      00450977    add esp,4"
"	      0045097a    mov [ebp-1Ch],eax"
"	      0045097d    cmp dword ptr [ebp-1Ch],0"
"	      00450981    je near ptr 0045099Fh"
"	      00450987    mov eax,[ebp-28h]"
"	      0045098a    push eax"
"	      0045098b    mov eax,szButtonImageFileName"
"	      0045098e    push eax"
"	      0045098f    mov ecx,[ebp-1Ch]"
"	      00450992    call 0041E090h"
"	      00450997    mov [ebp-18h],eax"
"	      0045099a    jmp near ptr 004509A6h"
"	      0045099f    mov dword ptr [ebp-18h],0"
"	      004509a6    mov ecx,this"
"	      004509a9    add ecx,80h"
"	      004509af    call 00412080h"
"	      004509b4    mov eax,[ebp-18h]"
"	      004509b7    mov ecx,this"
"	      004509ba    mov [ecx+84h],eax"
"	      004509c0    jmp near ptr 004509FBh"
"	      004509c5    cmp dword ptr [ebp-28h],0"
"	      004509c9    je near ptr 004509FBh"
"	      004509cf    jmp near ptr 004509D4h"
"	      004509d4    mov eax,this"
"	      004509d7    mov eax,[eax+84h]"
"	      004509dd    mov eax,[eax]"
"	      004509df    mov [ebp-20h],eax"
"	      004509e2    mov eax,[ebp-28h]"
"	      004509e5    push eax"
"	      004509e6    mov eax,szButtonImageFileName"
"	      004509e9    push eax"
"	      004509ea    mov eax,[ebp-20h]"
"	      004509ed    push eax"
"	      004509ee    call 0056A800h"
"	      004509f3    add esp,0Ch"
"	      004509f6    jmp near ptr 004509FBh"
"	      004509fb    mov eax,[ebp-28h]"
"	      004509fe    mov ecx,this"
"	      00450a01    mov ecx,[ecx+84h]"
"	      00450a07    mov [ecx+4],eax"
"	      00450a0a    jmp near ptr 00450A0Fh"
"	      00450a0f    jmp near ptr 00450A14h"
);
// LINE 73:
	asm( 
"	      00450a14    cmp szAnimationImageFileName,0"
"	      00450a18    je near ptr 00450B4Eh"
);
// LINE 74:
	asm( 
"	      00450a1e    jmp near ptr 00450A23h"
"	      00450a23    mov eax,szAnimationImageFileName"
"	      00450a26    push eax"
"	      00450a27    call 0056ABE0h"
"	      00450a2c    add esp,4"
"	      00450a2f    mov [ebp-3Ch],eax"
"	      00450a32    cmp dword ptr [ebp-3Ch],0FFFFFFFFh"
"	      00450a36    jne near ptr 00450A6Eh"
"	      00450a3c    push 5971E4h"
"	      00450a41    mov ecx,638C00h"
"	      00450a46    call 00569960h"
"	      00450a4b    mov [ebp-38h],eax"
"	      00450a4e    mov eax,[ebp-38h]"
"	      00450a51    push eax"
"	      00450a52    call 004011B0h"
"	      00450a57    add esp,4"
"	      00450a5a    jmp near ptr 00450A5Fh"
"	      00450a5f    push 1"
"	      00450a61    call 00569430h"
"	      00450a66    add esp,4"
"	      00450a69    jmp near ptr 00450A6Eh"
"	      00450a6e    jmp near ptr 00450A73h"
"	      00450a73    mov eax,this"
"	      00450a76    mov eax,[eax+8Ch]"
"	      00450a7c    cmp dword ptr [eax+0Ch],1"
"	      00450a80    ja near ptr 00450AAAh"
"	      00450a86    cmp dword ptr [ebp-3Ch],0"
"	      00450a8a    je near ptr 00450AFFh"
"	      00450a90    jmp near ptr 00450A95h"
"	      00450a95    mov eax,this"
"	      00450a98    mov eax,[eax+8Ch]"
"	      00450a9e    mov ecx,[ebp-3Ch]"
"	      00450aa1    cmp [eax+8],ecx"
"	      00450aa4    jae near ptr 00450AFFh"
"	      00450aaa    push 10h"
"	      00450aac    call 0056A600h"
"	      00450ab1    add esp,4"
"	      00450ab4    mov [ebp-30h],eax"
"	      00450ab7    cmp dword ptr [ebp-30h],0"
"	      00450abb    je near ptr 00450AD9h"
"	      00450ac1    mov eax,[ebp-3Ch]"
"	      00450ac4    push eax"
"	      00450ac5    mov eax,szAnimationImageFileName"
"	      00450ac8    push eax"
"	      00450ac9    mov ecx,[ebp-30h]"
"	      00450acc    call 0041E090h"
"	      00450ad1    mov [ebp-2Ch],eax"
"	      00450ad4    jmp near ptr 00450AE0h"
"	      00450ad9    mov dword ptr [ebp-2Ch],0"
"	      00450ae0    mov ecx,this"
"	      00450ae3    add ecx,88h"
"	      00450ae9    call 00412080h"
"	      00450aee    mov eax,[ebp-2Ch]"
"	      00450af1    mov ecx,this"
"	      00450af4    mov [ecx+8Ch],eax"
"	      00450afa    jmp near ptr 00450B35h"
"	      00450aff    cmp dword ptr [ebp-3Ch],0"
"	      00450b03    je near ptr 00450B35h"
"	      00450b09    jmp near ptr 00450B0Eh"
"	      00450b0e    mov eax,this"
"	      00450b11    mov eax,[eax+8Ch]"
"	      00450b17    mov eax,[eax]"
"	      00450b19    mov [ebp-34h],eax"
"	      00450b1c    mov eax,[ebp-3Ch]"
"	      00450b1f    push eax"
"	      00450b20    mov eax,szAnimationImageFileName"
"	      00450b23    push eax"
"	      00450b24    mov eax,[ebp-34h]"
"	      00450b27    push eax"
"	      00450b28    call 0056A800h"
"	      00450b2d    add esp,0Ch"
"	      00450b30    jmp near ptr 00450B35h"
"	      00450b35    mov eax,[ebp-3Ch]"
"	      00450b38    mov ecx,this"
"	      00450b3b    mov ecx,[ecx+8Ch]"
"	      00450b41    mov [ecx+4],eax"
"	      00450b44    jmp near ptr 00450B49h"
"	      00450b49    jmp near ptr 00450B4Eh"
);
// LINE 75:
	asm( 
"	      00450b4e    jmp near ptr 00450B53h"
"	      00450b53    mov eax,this"
"	      00450b56    pop edi"
"	      00450b57    pop esi"
"	      00450b58    pop ebx"
"	      00450b59    leave"
"	      00450b5a    ret 2Ch"
);
}

// FUNCTION: COPTER_D 0x00450b5d
int32_t MessageBoxWindow::Initialize() {
	int32_t[2] nButtonID;
	class ButtonWindow* tempButtonWindow;
	unsigned long i;
	int32_t nButtonCount;
	class MRect[2] rectButtons;
	class basic_string<char> sText;
	int32_t nFullStringID;
	int32_t[2] nButtonStringID;

// LINE 82:
	asm( 
"	      00450b5d    push ebp"
"	      00450b5e    mov ebp,esp"
"	      00450b60    mov eax,20F0h"
"	      00450b65    call 0056AC60h"
"	      00450b6a    push ebx"
"	      00450b6b    push esi"
"	      00450b6c    push edi"
"	      00450b6d    mov this,ecx"
"	      00450b73    mov dword ptr [ebp-78h],2"
"	      00450b7a    lea eax,rectButtons[0].left"
"	      00450b7d    mov [ebp-7Ch],eax"
);
// LINE 87:
	asm( 
"	      00450b80    dec dword ptr [ebp-78h]"
"	      00450b83    js near ptr 00450B9Ah"
"	      00450b89    mov ecx,[ebp-7Ch]"
"	      00450b8c    call 0040DC80h"
"	      00450b91    add dword ptr [ebp-7Ch],10h"
"	      00450b95    jmp near ptr 00450B80h"
"	      00450b9a    jmp near ptr 00450B9Fh"
);
// LINE 89:
	asm( 
"	      00450b9f    push 10h"
"	      00450ba1    call 0056A600h"
"	      00450ba6    add esp,4"
"	      00450ba9    mov [ebp-80h],eax"
"	      00450bac    cmp dword ptr [ebp-80h],0"
"	      00450bb0    je near ptr 00450BEFh"
"	      00450bb6    mov eax,[ebp-80h]"
"	      00450bb9    mov dword ptr [eax+4],0"
"	      00450bc0    mov eax,[ebp-80h]"
"	      00450bc3    mov eax,[eax+4]"
"	      00450bc6    mov ecx,[ebp-80h]"
"	      00450bc9    mov [ecx+8],eax"
"	      00450bcc    mov eax,[ebp-80h]"
"	      00450bcf    mov dword ptr [eax],0"
"	      00450bd5    mov eax,[ebp-80h]"
"	      00450bd8    mov dword ptr [eax+0Ch],1"
"	      00450bdf    jmp near ptr 00450BE4h"
"	      00450be4    mov eax,[ebp-80h]"
"	      00450be7    mov sText.reference,eax"
"	      00450bea    jmp near ptr 00450BF6h"
"	      00450bef    mov sText.reference,0"
"	      00450bf6    mov sText.c_str_ptr,0"
"	      00450bfd    jmp near ptr 00450C02h"
);
// LINE 92:
	asm( 
"	      00450c02    mov ecx,this"
"	      00450c08    call 004A44D4h"
);
// LINE 94:
	asm( 
"	      00450c0d    mov nButtonCount,0"
);
// LINE 95:
	asm( 
"	      00450c14    mov i,1"
"	      00450c1b    jmp near ptr 00450C24h"
"	      00450c20    shl i,1"
"	      00450c24    cmp i,80000000h"
"	      00450c2b    jae near ptr 00450C86h"
);
// LINE 96:
	asm( 
"	      00450c31    mov eax,this"
"	      00450c37    mov eax,[eax+90h]"
"	      00450c3d    test i,eax"
"	      00450c40    je near ptr 00450C81h"
);
// LINE 97:
	asm( 
"	      00450c46    mov eax,i"
"	      00450c49    push eax"
"	      00450c4a    mov eax,this"
"	      00450c50    mov eax,[eax]"
"	      00450c52    mov ecx,this"
"	      00450c58    call dword ptr [eax+0CCh]"
"	      00450c5e    mov ecx,nButtonCount"
"	      00450c61    mov [ebp+ecx*4-8],eax"
);
// LINE 98:
	asm( 
"	      00450c65    mov eax,i"
"	      00450c68    mov ecx,nButtonCount"
"	      00450c6b    mov [ebp+ecx*4-48h],eax"
);
// LINE 99:
	asm( 
"	      00450c6f    inc nButtonCount"
);
// LINE 100:
	asm( 
"	      00450c72    cmp nButtonCount,2"
"	      00450c76    jne near ptr 00450C81h"
);
// LINE 101:
	asm( 
"	      00450c7c    jmp near ptr 00450C86h"
);
// LINE 103:
	asm( 
"	      00450c81    jmp near ptr 00450C20h"
);
// LINE 105:
	asm( 
"	      00450c86    cmp nButtonCount,0"
"	      00450c8a    jne near ptr 00450CC7h"
);
// LINE 106:
	asm( 
"	      00450c90    mov eax,this"
"	      00450c96    mov dword ptr [eax+90h],1"
);
// LINE 107:
	asm( 
"	      00450ca0    push 1"
"	      00450ca2    mov eax,this"
"	      00450ca8    mov eax,[eax]"
"	      00450caa    mov ecx,this"
"	      00450cb0    call dword ptr [eax+0CCh]"
"	      00450cb6    mov nButtonStringID[0],eax"
);
// LINE 108:
	asm( 
"	      00450cb9    mov nButtonID[0],1"
);
// LINE 109:
	asm( 
"	      00450cc0    mov nButtonCount,1"
);
// LINE 112:
	asm( 
"	      00450cc7    cmp nButtonCount,1"
"	      00450ccb    jne near ptr 00450CF7h"
);
// LINE 113:
	asm( 
"	      00450cd1    mov rectButtons[0].left,0F4h"
"	      00450cd8    mov rectButtons[0].top,100h"
"	      00450cdf    mov rectButtons[0].right,0F5h"
"	      00450ce6    mov rectButtons[0].bottom,101h"
"	      00450ced    jmp near ptr 00450CF2h"
);
// LINE 114:
	asm( 
"	      00450cf2    jmp near ptr 00450D39h"
);
// LINE 115:
	asm( 
"	      00450cf7    mov rectButtons[0].left,0C2h"
"	      00450cfe    mov rectButtons[0].top,100h"
"	      00450d05    mov rectButtons[0].right,0C3h"
"	      00450d0c    mov rectButtons[0].bottom,101h"
"	      00450d13    jmp near ptr 00450D18h"
);
// LINE 116:
	asm( 
"	      00450d18    mov rectButtons[1].left,126h"
"	      00450d1f    mov rectButtons[1].top,100h"
"	      00450d26    mov rectButtons[1].right,127h"
"	      00450d2d    mov rectButtons[1].bottom,101h"
"	      00450d34    jmp near ptr 00450D39h"
);
// LINE 121:
	asm( 
"	      00450d39    push 94h"
"	      00450d3e    call 0056A600h"
"	      00450d43    add esp,4"
"	      00450d46    mov [ebp-50h],eax"
"	      00450d49    cmp dword ptr [ebp-50h],0"
"	      00450d4d    je near ptr 00450F2Dh"
"	      00450d53    jmp near ptr 00450D58h"
"	      00450d58    mov eax,this"
"	      00450d5e    mov eax,[eax+84h]"
"	      00450d64    cmp dword ptr [eax+4],0"
"	      00450d68    je near ptr 00450EFAh"
"	      00450d6e    mov eax,this"
"	      00450d74    cmp dword ptr [eax+80h],0"
"	      00450d7b    je near ptr 00450DAEh"
"	      00450d81    mov eax,this"
"	      00450d87    mov eax,[eax+80h]"
"	      00450d8d    mov [ebp-20B0h],eax"
"	      00450d93    mov eax,[ebp-20B0h]"
"	      00450d99    mov [ebp-20B8h],eax"
"	      00450d9f    mov eax,[ebp-20B8h]"
"	      00450da5    push eax"
"	      00450da6    call 0056A740h"
"	      00450dab    add esp,4"
"	      00450dae    jmp near ptr 00450DB3h"
"	      00450db3    mov eax,this"
"	      00450db9    mov eax,[eax+84h]"
"	      00450dbf    mov eax,[eax+4]"
"	      00450dc2    inc eax"
"	      00450dc3    push eax"
"	      00450dc4    call 0056A600h"
"	      00450dc9    add esp,4"
"	      00450dcc    mov ecx,this"
"	      00450dd2    mov [ecx+80h],eax"
"	      00450dd8    jmp near ptr 00450DDDh"
"	      00450ddd    mov eax,this"
"	      00450de3    mov eax,[eax+84h]"
"	      00450de9    cmp dword ptr [eax+4],0"
"	      00450ded    je near ptr 00450E89h"
"	      00450df3    jmp near ptr 00450DF8h"
"	      00450df8    jmp near ptr 00450DFDh"
"	      00450dfd    mov eax,this"
"	      00450e03    mov eax,[eax+84h]"
"	      00450e09    cmp dword ptr [eax+4],0"
"	      00450e0d    je near ptr 00450E31h"
"	      00450e13    mov eax,this"
"	      00450e19    mov eax,[eax+84h]"
"	      00450e1f    mov eax,[eax]"
"	      00450e21    mov [ebp-20C4h],eax"
"	      00450e27    jmp near ptr 00450E40h"
"	      00450e2c    jmp near ptr 00450E40h"
"	      00450e31    mov dword ptr [ebp-20C4h],0"
"	      00450e3b    jmp near ptr 00450E40h"
"	      00450e40    mov eax,this"
"	      00450e46    mov eax,[eax+84h]"
"	      00450e4c    mov eax,[eax+4]"
"	      00450e4f    mov [ebp-20C8h],eax"
"	      00450e55    mov eax,this"
"	      00450e5b    mov eax,[eax+80h]"
"	      00450e61    mov [ebp-20CCh],eax"
"	      00450e67    mov eax,[ebp-20C8h]"
"	      00450e6d    push eax"
"	      00450e6e    mov eax,[ebp-20C4h]"
"	      00450e74    push eax"
"	      00450e75    mov eax,[ebp-20CCh]"
"	      00450e7b    push eax"
"	      00450e7c    call 0056A800h"
"	      00450e81    add esp,0Ch"
"	      00450e84    jmp near ptr 00450E89h"
"	      00450e89    jmp near ptr 00450E8Eh"
"	      00450e8e    mov byte ptr [ebp-20B4h],0"
"	      00450e95    jmp near ptr 00450E9Ah"
"	      00450e9a    lea eax,[ebp-20B4h]"
"	      00450ea0    mov [ebp-20BCh],eax"
"	      00450ea6    jmp near ptr 00450EABh"
"	      00450eab    mov eax,this"
"	      00450eb1    mov eax,[eax+84h]"
"	      00450eb7    mov eax,[eax+4]"
"	      00450eba    mov ecx,this"
"	      00450ec0    add eax,[ecx+80h]"
"	      00450ec6    mov [ebp-20C0h],eax"
"	      00450ecc    mov eax,[ebp-20BCh]"
"	      00450ed2    mov al,[eax]"
"	      00450ed4    mov ecx,[ebp-20C0h]"
"	      00450eda    mov [ecx],al"
"	      00450edc    jmp near ptr 00450EE1h"
"	      00450ee1    jmp near ptr 00450EE6h"
"	      00450ee6    mov eax,this"
"	      00450eec    mov eax,[eax+80h]"
"	      00450ef2    mov [ebp-70h],eax"
"	      00450ef5    jmp near ptr 00450F01h"
"	      00450efa    mov dword ptr [ebp-70h],0"
"	      00450f01    push 1"
"	      00450f03    mov eax,this"
"	      00450f09    push eax"
"	      00450f0a    mov eax,[ebp-70h]"
"	      00450f0d    push eax"
"	      00450f0e    mov eax,this"
"	      00450f14    push eax"
"	      00450f15    mov eax,nButtonID[0]"
"	      00450f18    push eax"
"	      00450f19    lea eax,rectButtons[0].left"
"	      00450f1c    push eax"
"	      00450f1d    mov ecx,[ebp-50h]"
"	      00450f20    call 00471847h"
"	      00450f25    mov tempButtonWindow,eax"
"	      00450f28    jmp near ptr 00450F34h"
"	      00450f2d    mov tempButtonWindow,0"
);
// LINE 122:
	asm( 
"	      00450f34    push 0"
"	      00450f36    mov eax,nButtonStringID[0]"
"	      00450f39    push eax"
"	      00450f3a    call 0042B15Fh"
"	      00450f3f    add esp,8"
"	      00450f42    mov nFullStringID,eax"
);
// LINE 123:
	asm( 
"	      00450f45    push 0FFFh"
"	      00450f4a    lea eax,[ebp-1090h]"
"	      00450f50    push eax"
"	      00450f51    mov eax,nFullStringID"
"	      00450f54    push eax"
"	      00450f55    mov eax,ds:[5C28C8h]"
"	      00450f5a    push eax"
"	      00450f5b    call dword ptr ds:[6C38B4h]"
"	      00450f61    mov [ebp-1094h],eax"
"	      00450f67    cmp dword ptr [ebp-1094h],0"
"	      00450f6e    jne near ptr 00450FF2h"
"	      00450f74    push 0FFFh"
"	      00450f79    lea eax,[ebp-1090h]"
"	      00450f7f    push eax"
"	      00450f80    mov ecx,3E8h"
"	      00450f85    mov eax,nFullStringID"
"	      00450f88    sub edx,edx"
"	      00450f8a    div ecx"
"	      00450f8c    push edx"
"	      00450f8d    mov eax,ds:[5C28C8h]"
"	      00450f92    push eax"
"	      00450f93    call dword ptr ds:[6C38B4h]"
"	      00450f99    mov [ebp-1094h],eax"
"	      00450f9f    jmp near ptr 00450FA4h"
"	      00450fa4    lea eax,[ebp-1090h]"
"	      00450faa    push eax"
"	      00450fab    call 0056ABE0h"
"	      00450fb0    add esp,4"
"	      00450fb3    push eax"
"	      00450fb4    lea eax,[ebp-1090h]"
"	      00450fba    push eax"
"	      00450fbb    lea ecx,sText.c_str_ptr"
"	      00450fbe    call 0040FEE0h"
"	      00450fc3    jmp near ptr 00450FC8h"
"	      00450fc8    jmp near ptr 00450FCDh"
"	      00450fcd    push 597200h"
"	      00450fd2    call 0056ABE0h"
"	      00450fd7    add esp,4"
"	      00450fda    push eax"
"	      00450fdb    push 597200h"
"	      00450fe0    lea ecx,sText.c_str_ptr"
"	      00450fe3    call 00410130h"
"	      00450fe8    jmp near ptr 00450FEDh"
"	      00450fed    jmp near ptr 00451142h"
"	      00450ff2    jmp near ptr 00450FF7h"
"	      00450ff7    lea eax,[ebp-1090h]"
"	      00450ffd    push eax"
"	      00450ffe    call 0056ABE0h"
"	      00451003    add esp,4"
"	      00451006    mov [ebp-10A8h],eax"
"	      0045100c    cmp dword ptr [ebp-10A8h],0FFFFFFFFh"
"	      00451013    jne near ptr 00451051h"
"	      00451019    push 5971E4h"
"	      0045101e    mov ecx,638C00h"
"	      00451023    call 00569960h"
"	      00451028    mov [ebp-10A4h],eax"
"	      0045102e    mov eax,[ebp-10A4h]"
"	      00451034    push eax"
"	      00451035    call 004011B0h"
"	      0045103a    add esp,4"
"	      0045103d    jmp near ptr 00451042h"
"	      00451042    push 1"
"	      00451044    call 00569430h"
"	      00451049    add esp,4"
"	      0045104c    jmp near ptr 00451051h"
"	      00451051    jmp near ptr 00451056h"
"	      00451056    mov eax,sText.reference"
"	      00451059    cmp dword ptr [eax+0Ch],1"
"	      0045105d    ja near ptr 00451087h"
"	      00451063    cmp dword ptr [ebp-10A8h],0"
"	      0045106a    je near ptr 004510E8h"
"	      00451070    jmp near ptr 00451075h"
"	      00451075    mov eax,sText.reference"
"	      00451078    mov ecx,[ebp-10A8h]"
"	      0045107e    cmp [eax+8],ecx"
"	      00451081    jae near ptr 004510E8h"
"	      00451087    push 10h"
"	      00451089    call 0056A600h"
"	      0045108e    add esp,4"
"	      00451091    mov [ebp-109Ch],eax"
"	      00451097    cmp dword ptr [ebp-109Ch],0"
"	      0045109e    je near ptr 004510C8h"
"	      004510a4    mov eax,[ebp-10A8h]"
"	      004510aa    push eax"
"	      004510ab    lea eax,[ebp-1090h]"
"	      004510b1    push eax"
"	      004510b2    mov ecx,[ebp-109Ch]"
"	      004510b8    call 0041E090h"
"	      004510bd    mov [ebp-1098h],eax"
"	      004510c3    jmp near ptr 004510D2h"
"	      004510c8    mov dword ptr [ebp-1098h],0"
"	      004510d2    lea ecx,sText.c_str_ptr"
"	      004510d5    call 00412080h"
"	      004510da    mov eax,[ebp-1098h]"
"	      004510e0    mov sText.reference,eax"
"	      004510e3    jmp near ptr 00451127h"
"	      004510e8    cmp dword ptr [ebp-10A8h],0"
"	      004510ef    je near ptr 00451127h"
"	      004510f5    jmp near ptr 004510FAh"
"	      004510fa    mov eax,sText.reference"
"	      004510fd    mov eax,[eax]"
"	      004510ff    mov [ebp-10A0h],eax"
"	      00451105    mov eax,[ebp-10A8h]"
"	      0045110b    push eax"
"	      0045110c    lea eax,[ebp-1090h]"
"	      00451112    push eax"
"	      00451113    mov eax,[ebp-10A0h]"
"	      00451119    push eax"
"	      0045111a    call 0056A800h"
"	      0045111f    add esp,0Ch"
"	      00451122    jmp near ptr 00451127h"
"	      00451127    mov eax,[ebp-10A8h]"
"	      0045112d    mov ecx,sText.reference"
"	      00451130    mov [ecx+4],eax"
"	      00451133    jmp near ptr 00451138h"
"	      00451138    jmp near ptr 0045113Dh"
"	      0045113d    jmp near ptr 00451142h"
);
// LINE 124:
	asm( 
"	      00451142    lea eax,sText.c_str_ptr"
"	      00451145    push eax"
"	      00451146    mov eax,tempButtonWindow"
"	      00451149    mov eax,[eax]"
"	      0045114b    mov ecx,tempButtonWindow"
"	      0045114e    call dword ptr [eax+48h]"
);
// LINE 125:
	asm( 
"	      00451151    mov eax,this"
"	      00451157    add eax,0A0h"
"	      0045115c    push eax"
"	      0045115d    mov eax,this"
"	      00451163    add eax,9Ch"
"	      00451168    push eax"
"	      00451169    mov eax,tempButtonWindow"
"	      0045116c    mov eax,[eax]"
"	      0045116e    mov ecx,tempButtonWindow"
"	      00451171    call dword ptr [eax+0D8h]"
);
// LINE 126:
	asm( 
"	      00451177    mov eax,tempButtonWindow"
"	      0045117a    mov eax,[eax]"
"	      0045117c    mov ecx,tempButtonWindow"
"	      0045117f    call dword ptr [eax+4]"
);
// LINE 128:
	asm( 
"	      00451182    cmp nButtonCount,1"
"	      00451186    jle near ptr 004514B3h"
);
// LINE 130:
	asm( 
"	      0045118c    push 94h"
"	      00451191    call 0056A600h"
"	      00451196    add esp,4"
"	      00451199    mov [ebp-54h],eax"
"	      0045119c    cmp dword ptr [ebp-54h],0"
"	      004511a0    je near ptr 00451380h"
"	      004511a6    jmp near ptr 004511ABh"
"	      004511ab    mov eax,this"
"	      004511b1    mov eax,[eax+84h]"
"	      004511b7    cmp dword ptr [eax+4],0"
"	      004511bb    je near ptr 0045134Dh"
"	      004511c1    mov eax,this"
"	      004511c7    cmp dword ptr [eax+80h],0"
"	      004511ce    je near ptr 00451201h"
"	      004511d4    mov eax,this"
"	      004511da    mov eax,[eax+80h]"
"	      004511e0    mov [ebp-20D0h],eax"
"	      004511e6    mov eax,[ebp-20D0h]"
"	      004511ec    mov [ebp-20D8h],eax"
"	      004511f2    mov eax,[ebp-20D8h]"
"	      004511f8    push eax"
"	      004511f9    call 0056A740h"
"	      004511fe    add esp,4"
"	      00451201    jmp near ptr 00451206h"
"	      00451206    mov eax,this"
"	      0045120c    mov eax,[eax+84h]"
"	      00451212    mov eax,[eax+4]"
"	      00451215    inc eax"
"	      00451216    push eax"
"	      00451217    call 0056A600h"
"	      0045121c    add esp,4"
"	      0045121f    mov ecx,this"
"	      00451225    mov [ecx+80h],eax"
"	      0045122b    jmp near ptr 00451230h"
"	      00451230    mov eax,this"
"	      00451236    mov eax,[eax+84h]"
"	      0045123c    cmp dword ptr [eax+4],0"
"	      00451240    je near ptr 004512DCh"
"	      00451246    jmp near ptr 0045124Bh"
"	      0045124b    jmp near ptr 00451250h"
"	      00451250    mov eax,this"
"	      00451256    mov eax,[eax+84h]"
"	      0045125c    cmp dword ptr [eax+4],0"
"	      00451260    je near ptr 00451284h"
"	      00451266    mov eax,this"
"	      0045126c    mov eax,[eax+84h]"
"	      00451272    mov eax,[eax]"
"	      00451274    mov [ebp-20E4h],eax"
"	      0045127a    jmp near ptr 00451293h"
"	      0045127f    jmp near ptr 00451293h"
"	      00451284    mov dword ptr [ebp-20E4h],0"
"	      0045128e    jmp near ptr 00451293h"
"	      00451293    mov eax,this"
"	      00451299    mov eax,[eax+84h]"
"	      0045129f    mov eax,[eax+4]"
"	      004512a2    mov [ebp-20E8h],eax"
"	      004512a8    mov eax,this"
"	      004512ae    mov eax,[eax+80h]"
"	      004512b4    mov [ebp-20ECh],eax"
"	      004512ba    mov eax,[ebp-20E8h]"
"	      004512c0    push eax"
"	      004512c1    mov eax,[ebp-20E4h]"
"	      004512c7    push eax"
"	      004512c8    mov eax,[ebp-20ECh]"
"	      004512ce    push eax"
"	      004512cf    call 0056A800h"
"	      004512d4    add esp,0Ch"
"	      004512d7    jmp near ptr 004512DCh"
"	      004512dc    jmp near ptr 004512E1h"
"	      004512e1    mov byte ptr [ebp-20D4h],0"
"	      004512e8    jmp near ptr 004512EDh"
"	      004512ed    lea eax,[ebp-20D4h]"
"	      004512f3    mov [ebp-20DCh],eax"
"	      004512f9    jmp near ptr 004512FEh"
"	      004512fe    mov eax,this"
"	      00451304    mov eax,[eax+84h]"
"	      0045130a    mov eax,[eax+4]"
"	      0045130d    mov ecx,this"
"	      00451313    add eax,[ecx+80h]"
"	      00451319    mov [ebp-20E0h],eax"
"	      0045131f    mov eax,[ebp-20DCh]"
"	      00451325    mov al,[eax]"
"	      00451327    mov ecx,[ebp-20E0h]"
"	      0045132d    mov [ecx],al"
"	      0045132f    jmp near ptr 00451334h"
"	      00451334    jmp near ptr 00451339h"
"	      00451339    mov eax,this"
"	      0045133f    mov eax,[eax+80h]"
"	      00451345    mov [ebp-74h],eax"
"	      00451348    jmp near ptr 00451354h"
"	      0045134d    mov dword ptr [ebp-74h],0"
"	      00451354    push 1"
"	      00451356    mov eax,this"
"	      0045135c    push eax"
"	      0045135d    mov eax,[ebp-74h]"
"	      00451360    push eax"
"	      00451361    mov eax,this"
"	      00451367    push eax"
"	      00451368    mov eax,nButtonID[1]"
"	      0045136b    push eax"
"	      0045136c    lea eax,rectButtons[1].left"
"	      0045136f    push eax"
"	      00451370    mov ecx,[ebp-54h]"
"	      00451373    call 00471847h"
"	      00451378    mov tempButtonWindow,eax"
"	      0045137b    jmp near ptr 00451387h"
"	      00451380    mov tempButtonWindow,0"
);
// LINE 131:
	asm( 
"	      00451387    push 0"
"	      00451389    mov eax,nButtonStringID[1]"
"	      0045138c    push eax"
"	      0045138d    call 0042B15Fh"
"	      00451392    add esp,8"
"	      00451395    mov nFullStringID,eax"
);
// LINE 132:
	asm( 
"	      00451398    push 0FFFh"
"	      0045139d    lea eax,[ebp-20A8h]"
"	      004513a3    push eax"
"	      004513a4    mov eax,nFullStringID"
"	      004513a7    push eax"
"	      004513a8    mov eax,ds:[5C28C8h]"
"	      004513ad    push eax"
"	      004513ae    call dword ptr ds:[6C38B4h]"
"	      004513b4    mov [ebp-20ACh],eax"
"	      004513ba    cmp dword ptr [ebp-20ACh],0"
"	      004513c1    jne near ptr 00451445h"
"	      004513c7    push 0FFFh"
"	      004513cc    lea eax,[ebp-20A8h]"
"	      004513d2    push eax"
"	      004513d3    mov ecx,3E8h"
"	      004513d8    mov eax,nFullStringID"
"	      004513db    sub edx,edx"
"	      004513dd    div ecx"
"	      004513df    push edx"
"	      004513e0    mov eax,ds:[5C28C8h]"
"	      004513e5    push eax"
"	      004513e6    call dword ptr ds:[6C38B4h]"
"	      004513ec    mov [ebp-20ACh],eax"
"	      004513f2    jmp near ptr 004513F7h"
"	      004513f7    lea eax,[ebp-20A8h]"
"	      004513fd    push eax"
"	      004513fe    call 0056ABE0h"
"	      00451403    add esp,4"
"	      00451406    push eax"
"	      00451407    lea eax,[ebp-20A8h]"
"	      0045140d    push eax"
"	      0045140e    lea ecx,sText.c_str_ptr"
"	      00451411    call 0040FEE0h"
"	      00451416    jmp near ptr 0045141Bh"
"	      0045141b    jmp near ptr 00451420h"
"	      00451420    push 597200h"
"	      00451425    call 0056ABE0h"
"	      0045142a    add esp,4"
"	      0045142d    push eax"
"	      0045142e    push 597200h"
"	      00451433    lea ecx,sText.c_str_ptr"
"	      00451436    call 00410130h"
"	      0045143b    jmp near ptr 00451440h"
"	      00451440    jmp near ptr 00451473h"
"	      00451445    jmp near ptr 0045144Ah"
"	      0045144a    lea eax,[ebp-20A8h]"
"	      00451450    push eax"
"	      00451451    call 0056ABE0h"
"	      00451456    add esp,4"
"	      00451459    push eax"
"	      0045145a    lea eax,[ebp-20A8h]"
"	      00451460    push eax"
"	      00451461    lea ecx,sText.c_str_ptr"
"	      00451464    call 0040FEE0h"
"	      00451469    jmp near ptr 0045146Eh"
"	      0045146e    jmp near ptr 00451473h"
);
// LINE 133:
	asm( 
"	      00451473    lea eax,sText.c_str_ptr"
"	      00451476    push eax"
"	      00451477    mov eax,tempButtonWindow"
"	      0045147a    mov eax,[eax]"
"	      0045147c    mov ecx,tempButtonWindow"
"	      0045147f    call dword ptr [eax+48h]"
);
// LINE 134:
	asm( 
"	      00451482    mov eax,this"
"	      00451488    add eax,0A0h"
"	      0045148d    push eax"
"	      0045148e    mov eax,this"
"	      00451494    add eax,9Ch"
"	      00451499    push eax"
"	      0045149a    mov eax,tempButtonWindow"
"	      0045149d    mov eax,[eax]"
"	      0045149f    mov ecx,tempButtonWindow"
"	      004514a2    call dword ptr [eax+0D8h]"
);
// LINE 135:
	asm( 
"	      004514a8    mov eax,tempButtonWindow"
"	      004514ab    mov eax,[eax]"
"	      004514ad    mov ecx,tempButtonWindow"
"	      004514b0    call dword ptr [eax+4]"
);
// LINE 138:
	asm( 
"	      004514b3    jmp near ptr 004514B8h"
"	      004514b8    mov eax,this"
"	      004514be    mov eax,[eax+8Ch]"
"	      004514c4    cmp dword ptr [eax+4],0"
"	      004514c8    je near ptr 0045157Fh"
);
// LINE 141:
// Block start:
	class AnimationWindow* tempAnimationWindow;
	asm( 
"	      004514ce    push 0A4h"
"	      004514d3    call 0056A600h"
"	      004514d8    add esp,4"
"	      004514db    mov [ebp-58h],eax"
"	      004514de    cmp dword ptr [ebp-58h],0"
"	      004514e2    je near ptr 0045154Fh"
"	      004514e8    jmp near ptr 004514EDh"
"	      004514ed    mov dword ptr [ebp-68h],34h"
"	      004514f4    mov dword ptr [ebp-64h],0D3h"
"	      004514fb    mov dword ptr [ebp-60h],0C9h"
"	      00451502    mov dword ptr [ebp-5Ch],130h"
"	      00451509    jmp near ptr 0045150Eh"
"	      0045150e    push 2"
"	      00451510    push 0FFFFFFFFh"
"	      00451512    push 1"
"	      00451514    mov eax,this"
"	      0045151a    push eax"
"	      0045151b    mov eax,this"
"	      00451521    push eax"
"	      00451522    push 0"
"	      00451524    push 95h"
"	      00451529    lea eax,[ebp-68h]"
"	      0045152c    push eax"
"	      0045152d    mov ecx,this"
"	      00451533    add ecx,88h"
"	      00451539    call 00417AE0h"
"	      0045153e    push eax"
"	      0045153f    mov ecx,[ebp-58h]"
"	      00451542    call 00451FDEh"
"	      00451547    mov tempAnimationWindow,eax"
"	      0045154a    jmp near ptr 00451556h"
"	      0045154f    mov tempAnimationWindow,0"
);
// LINE 142:
	asm( 
"	      00451556    mov eax,tempAnimationWindow"
"	      00451559    mov dword ptr [eax+7Ch],37h"
"	      00451560    jmp near ptr 00451565h"
);
// LINE 143:
	asm( 
"	      00451565    mov eax,tempAnimationWindow"
"	      00451568    mov dword ptr [eax+88h],2"
"	      00451572    jmp near ptr 00451577h"
);
// LINE 144:
	asm( 
"	      00451577    mov ecx,tempAnimationWindow"
"	      0045157a    call 004523DBh"
);
// LINE 147:
// Block end:
	asm( 
"	      0045157f    mov eax,this"
"	      00451585    mov eax,[eax]"
"	      00451587    mov ecx,this"
"	      0045158d    call dword ptr [eax+0D0h]"
);
// LINE 149:
	asm( 
"	      00451593    mov eax,this"
"	      00451599    push eax"
"	      0045159a    call 004A7075h"
"	      0045159f    add esp,4"
);
// LINE 150:
	asm( 
"	      004515a2    mov eax,this"
"	      004515a8    push eax"
"	      004515a9    call 004A7470h"
"	      004515ae    add esp,4"
);
// LINE 151:
	asm( 
"	      004515b1    mov dword ptr [ebp-6Ch],1"
"	      004515b8    mov eax,sText.reference"
"	      004515bb    dec dword ptr [eax+0Ch]"
"	      004515be    mov eax,sText.reference"
"	      004515c1    cmp dword ptr [eax+0Ch],0"
"	      004515c5    jne near ptr 00451616h"
"	      004515cb    mov eax,sText.reference"
"	      004515ce    mov [ebp-90h],eax"
"	      004515d4    mov eax,[ebp-90h]"
"	      004515da    mov [ebp-8Ch],eax"
"	      004515e0    cmp dword ptr [ebp-8Ch],0"
"	      004515e7    je near ptr 00451616h"
"	      004515ed    mov ecx,[ebp-8Ch]"
"	      004515f3    call 0041F4B0h"
"	      004515f8    jmp near ptr 004515FDh"
"	      004515fd    mov eax,[ebp-8Ch]"
"	      00451603    push eax"
"	      00451604    call 0056A740h"
"	      00451609    add esp,4"
"	      0045160c    jmp near ptr 00451611h"
"	      00451611    jmp near ptr 00451616h"
"	      00451616    jmp near ptr 0045161Bh"
"	      0045161b    cmp sText.c_str_ptr,0"
"	      0045161f    je near ptr 00451649h"
"	      00451625    mov eax,sText.c_str_ptr"
"	      00451628    mov [ebp-84h],eax"
"	      0045162e    mov eax,[ebp-84h]"
"	      00451634    mov [ebp-88h],eax"
"	      0045163a    mov eax,[ebp-88h]"
"	      00451640    push eax"
"	      00451641    call 0056A740h"
"	      00451646    add esp,4"
"	      00451649    jmp near ptr 0045164Eh"
"	      0045164e    mov eax,[ebp-6Ch]"
"	      00451651    jmp near ptr 00451656h"
);
// LINE 152:
	asm( 
"	      00451656    pop edi"
"	      00451657    pop esi"
"	      00451658    pop ebx"
"	      00451659    leave"
"	      0045165a    ret"
);
}

// FUNCTION: COPTER_D 0x0045165b
long MessageBoxWindow::DoKeyDown(long lKey, char chModifiers) {
// LINE 165:
	asm( 
"	      0045165b    push ebp"
"	      0045165c    mov ebp,esp"
"	      0045165e    sub esp,4"
"	      00451661    push ebx"
"	      00451662    push esi"
"	      00451663    push edi"
"	      00451664    mov this,ecx"
);
// LINE 166:
	asm( 
"	      00451667    cmp lKey,1Bh"
"	      0045166b    jne near ptr 00451709h"
);
// LINE 167:
	asm( 
"	      00451671    mov eax,this"
"	      00451674    cmp dword ptr [eax+38h],0"
"	      00451678    je near ptr 004516EEh"
);
// LINE 168:
	asm( 
"	      0045167e    mov eax,this"
"	      00451681    test dword ptr [eax+90h],0FFFF0000h"
"	      0045168b    je near ptr 004516C2h"
);
// LINE 169:
	asm( 
"	      00451691    push 0"
"	      00451693    mov eax,this"
"	      00451696    mov eax,[eax+90h]"
"	      0045169c    and eax,0FFFF0000h"
"	      004516a1    push eax"
"	      004516a2    mov eax,this"
"	      004516a5    mov eax,[eax+4]"
"	      004516a8    push eax"
"	      004516a9    mov eax,this"
"	      004516ac    push eax"
"	      004516ad    mov eax,this"
"	      004516b0    mov ecx,this"
"	      004516b3    mov ecx,[ecx+38h]"
"	      004516b6    mov edx,[ecx]"
"	      004516b8    mov ecx,[eax+38h]"
"	      004516bb    call dword ptr [edx]"
);
// LINE 170:
	asm( 
"	      004516bd    jmp near ptr 004516EEh"
);
// LINE 171:
	asm( 
"	      004516c2    push 0"
"	      004516c4    mov eax,this"
"	      004516c7    mov eax,[eax+90h]"
"	      004516cd    and eax,0FFFFh"
"	      004516d2    push eax"
"	      004516d3    mov eax,this"
"	      004516d6    mov eax,[eax+4]"
"	      004516d9    push eax"
"	      004516da    mov eax,this"
"	      004516dd    push eax"
"	      004516de    mov eax,this"
"	      004516e1    mov ecx,this"
"	      004516e4    mov ecx,[ecx+38h]"
"	      004516e7    mov edx,[ecx]"
"	      004516e9    mov ecx,[eax+38h]"
"	      004516ec    call dword ptr [edx]"
);
// LINE 173:
	asm( 
"	      004516ee    mov eax,this"
"	      004516f1    cmp dword ptr [eax+94h],0"
"	      004516f8    je near ptr 00451709h"
);
// LINE 174:
	asm( 
"	      004516fe    mov eax,this"
"	      00451701    mov eax,[eax]"
"	      00451703    mov ecx,this"
"	      00451706    call dword ptr [eax+6Ch]"
);
// LINE 176:
	asm( 
"	      00451709    mov eax,1"
"	      0045170e    jmp near ptr 00451713h"
);
// LINE 177:
	asm( 
"	      00451713    pop edi"
"	      00451714    pop esi"
"	      00451715    pop ebx"
"	      00451716    leave"
"	      00451717    ret 8"
);
}

// FUNCTION: COPTER_D 0x0045171a
int32_t MessageBoxWindow::DoMessage(class GraphicWindow* gwSource, long lWindowID, long lMessage, void * __ptr32 pMessageData) {
// LINE 186:
	asm( 
"	      0045171a    push ebp"
"	      0045171b    mov ebp,esp"
"	      0045171d    sub esp,4"
"	      00451720    push ebx"
"	      00451721    push esi"
"	      00451722    push edi"
"	      00451723    mov this,ecx"
);
// LINE 187:
	asm( 
"	      00451726    mov eax,this"
"	      00451729    cmp dword ptr [eax+38h],0"
"	      0045172d    je near ptr 00451759h"
);
// LINE 191:
	asm( 
"	      00451733    mov eax,pMessageData"
"	      00451736    push eax"
"	      00451737    mov eax,gwSource"
"	      0045173a    mov eax,[eax+4]"
"	      0045173d    push eax"
"	      0045173e    mov eax,this"
"	      00451741    mov eax,[eax+4]"
"	      00451744    push eax"
"	      00451745    mov eax,this"
"	      00451748    push eax"
"	      00451749    mov eax,this"
"	      0045174c    mov ecx,this"
"	      0045174f    mov ecx,[ecx+38h]"
"	      00451752    mov edx,[ecx]"
"	      00451754    mov ecx,[eax+38h]"
"	      00451757    call dword ptr [edx]"
);
// LINE 193:
	asm( 
"	      00451759    mov eax,this"
"	      0045175c    cmp dword ptr [eax+94h],0"
"	      00451763    je near ptr 00451774h"
);
// LINE 194:
	asm( 
"	      00451769    mov eax,this"
"	      0045176c    mov eax,[eax]"
"	      0045176e    mov ecx,this"
"	      00451771    call dword ptr [eax+6Ch]"
);
// LINE 195:
	asm( 
"	      00451774    mov eax,1"
"	      00451779    jmp near ptr 0045177Eh"
);
// LINE 196:
	asm( 
"	      0045177e    pop edi"
"	      0045177f    pop esi"
"	      00451780    pop ebx"
"	      00451781    leave"
"	      00451782    ret 10h"
);
}

// FUNCTION: COPTER_D 0x00451785
int32_t MessageBoxWindow::ConvertTypeToStringID(long lType) {
// LINE 207:
	asm( 
"	      00451785    push ebp"
"	      00451786    mov ebp,esp"
"	      00451788    sub esp,4"
"	      0045178b    push ebx"
"	      0045178c    push esi"
"	      0045178d    push edi"
"	      0045178e    mov this,ecx"
);
// LINE 208:
	asm( 
"	      00451791    test byte ptr [ebp+8],1"
"	      00451795    je near ptr 004517A5h"
);
// LINE 209:
	asm( 
"	      0045179b    mov eax,14h"
"	      004517a0    jmp near ptr 00451810h"
);
// LINE 210:
	asm( 
"	      004517a5    test byte ptr [ebp+0Ah],1"
"	      004517a9    je near ptr 004517B9h"
);
// LINE 211:
	asm( 
"	      004517af    mov eax,15h"
"	      004517b4    jmp near ptr 00451810h"
);
// LINE 212:
	asm( 
"	      004517b9    test byte ptr [ebp+8],2"
"	      004517bd    je near ptr 004517CDh"
);
// LINE 213:
	asm( 
"	      004517c3    mov eax,16h"
"	      004517c8    jmp near ptr 00451810h"
);
// LINE 214:
	asm( 
"	      004517cd    test byte ptr [ebp+0Ah],2"
"	      004517d1    je near ptr 004517E1h"
);
// LINE 215:
	asm( 
"	      004517d7    mov eax,17h"
"	      004517dc    jmp near ptr 00451810h"
);
// LINE 216:
	asm( 
"	      004517e1    test byte ptr [ebp+8],4"
"	      004517e5    je near ptr 004517F5h"
);
// LINE 217:
	asm( 
"	      004517eb    mov eax,18h"
"	      004517f0    jmp near ptr 00451810h"
);
// LINE 218:
	asm( 
"	      004517f5    test byte ptr [ebp+0Ah],4"
"	      004517f9    je near ptr 00451809h"
);
// LINE 219:
	asm( 
"	      004517ff    mov eax,19h"
"	      00451804    jmp near ptr 00451810h"
);
// LINE 220:
	asm( 
"	      00451809    xor eax,eax"
"	      0045180b    jmp near ptr 00451810h"
);
// LINE 221:
	asm( 
"	      00451810    pop edi"
"	      00451811    pop esi"
"	      00451812    pop ebx"
"	      00451813    leave"
"	      00451814    ret 4"
);
}

// FUNCTION: COPTER_D 0x00451817
void MessageBoxWindow::DrawTextOntoBox() {
	class MRect rectText;
	class MFont* fontText;
	char[64] szTypeface;
	int32_t nFullStringID;

// LINE 232:
	asm( 
"	      00451817    push ebp"
"	      00451818    mov ebp,esp"
"	      0045181a    mov eax,10B8h"
"	      0045181f    call 0056AC60h"
"	      00451824    push ebx"
"	      00451825    push esi"
"	      00451826    push edi"
"	      00451827    mov this,ecx"
);
// LINE 236:
	asm( 
"	      0045182d    jmp near ptr 00451832h"
"	      00451832    mov rectText.left,62h"
"	      00451839    mov rectText.top,4Eh"
"	      00451840    mov rectText.right,170h"
"	      00451847    mov rectText.bottom,0C8h"
"	      0045184e    jmp near ptr 00451853h"
);
// LINE 238:
	asm( 
"	      00451853    jmp near ptr 00451858h"
"	      00451858    mov eax,this"
"	      0045185e    mov eax,[eax+7Ch]"
"	      00451861    cmp dword ptr [eax+4],0"
"	      00451865    jne near ptr 00451C8Fh"
);
// LINE 239:
	asm( 
"	      0045186b    push 0"
"	      0045186d    mov eax,this"
"	      00451873    mov eax,[eax+74h]"
"	      00451876    push eax"
"	      00451877    call 0042B15Fh"
"	      0045187c    add esp,8"
"	      0045187f    mov nFullStringID,eax"
);
// LINE 240:
	asm( 
"	      00451882    push 0FFFh"
"	      00451887    lea eax,[ebp-1060h]"
"	      0045188d    push eax"
"	      0045188e    mov eax,nFullStringID"
"	      00451891    push eax"
"	      00451892    mov eax,ds:[5C28C8h]"
"	      00451897    push eax"
"	      00451898    call dword ptr ds:[6C38B4h]"
"	      0045189e    mov [ebp-1064h],eax"
"	      004518a4    cmp dword ptr [ebp-1064h],0"
"	      004518ab    jne near ptr 00451ACBh"
"	      004518b1    push 0FFFh"
"	      004518b6    lea eax,[ebp-1060h]"
"	      004518bc    push eax"
"	      004518bd    mov ecx,3E8h"
"	      004518c2    mov eax,nFullStringID"
"	      004518c5    sub edx,edx"
"	      004518c7    div ecx"
"	      004518c9    push edx"
"	      004518ca    mov eax,ds:[5C28C8h]"
"	      004518cf    push eax"
"	      004518d0    call dword ptr ds:[6C38B4h]"
"	      004518d6    mov [ebp-1064h],eax"
"	      004518dc    jmp near ptr 004518E1h"
"	      004518e1    lea eax,[ebp-1060h]"
"	      004518e7    push eax"
"	      004518e8    call 0056ABE0h"
"	      004518ed    add esp,4"
"	      004518f0    push eax"
"	      004518f1    lea eax,[ebp-1060h]"
"	      004518f7    push eax"
"	      004518f8    mov ecx,this"
"	      004518fe    add ecx,78h"
"	      00451901    call 0040FEE0h"
"	      00451906    jmp near ptr 0045190Bh"
"	      0045190b    jmp near ptr 00451910h"
"	      00451910    push 597200h"
"	      00451915    call 0056ABE0h"
"	      0045191a    add esp,4"
"	      0045191d    mov [ebp-1078h],eax"
"	      00451923    jmp near ptr 00451928h"
"	      00451928    mov eax,this"
"	      0045192e    mov eax,[eax+7Ch]"
"	      00451931    mov ecx,0FFFFFFFFh"
"	      00451936    sub ecx,[ebp-1078h]"
"	      0045193c    cmp [eax+4],ecx"
"	      0045193f    jb near ptr 0045197Dh"
"	      00451945    push 5971E4h"
"	      0045194a    mov ecx,638C00h"
"	      0045194f    call 00569960h"
"	      00451954    mov [ebp-1074h],eax"
"	      0045195a    mov eax,[ebp-1074h]"
"	      00451960    push eax"
"	      00451961    call 004011B0h"
"	      00451966    add esp,4"
"	      00451969    jmp near ptr 0045196Eh"
"	      0045196e    push 1"
"	      00451970    call 00569430h"
"	      00451975    add esp,4"
"	      00451978    jmp near ptr 0045197Dh"
"	      0045197d    jmp near ptr 00451982h"
"	      00451982    mov eax,this"
"	      00451988    mov eax,[eax+7Ch]"
"	      0045198b    cmp dword ptr [eax+0Ch],1"
"	      0045198f    ja near ptr 004519C3h"
"	      00451995    jmp near ptr 0045199Ah"
"	      0045199a    jmp near ptr 0045199Fh"
"	      0045199f    mov eax,this"
"	      004519a5    mov eax,[eax+7Ch]"
"	      004519a8    mov eax,[eax+8]"
"	      004519ab    mov ecx,this"
"	      004519b1    mov ecx,[ecx+7Ch]"
"	      004519b4    sub eax,[ecx+4]"
"	      004519b7    cmp eax,[ebp-1078h]"
"	      004519bd    jae near ptr 00451A56h"
"	      004519c3    push 10h"
"	      004519c5    call 0056A600h"
"	      004519ca    add esp,4"
"	      004519cd    mov [ebp-106Ch],eax"
"	      004519d3    cmp dword ptr [ebp-106Ch],0"
"	      004519da    je near ptr 00451A2Fh"
"	      004519e0    jmp near ptr 004519E5h"
"	      004519e5    jmp near ptr 004519EAh"
"	      004519ea    mov eax,this"
"	      004519f0    mov eax,[eax+7Ch]"
"	      004519f3    mov eax,[eax+4]"
"	      004519f6    add eax,[ebp-1078h]"
"	      004519fc    push eax"
"	      004519fd    mov eax,this"
"	      00451a03    mov eax,[eax+7Ch]"
"	      00451a06    mov eax,[eax+4]"
"	      00451a09    push eax"
"	      00451a0a    mov ecx,this"
"	      00451a10    add ecx,78h"
"	      00451a13    call 00417C00h"
"	      00451a18    push eax"
"	      00451a19    mov ecx,[ebp-106Ch]"
"	      00451a1f    call 0041E160h"
"	      00451a24    mov [ebp-1068h],eax"
"	      00451a2a    jmp near ptr 00451A39h"
"	      00451a2f    mov dword ptr [ebp-1068h],0"
"	      00451a39    mov ecx,this"
"	      00451a3f    add ecx,78h"
"	      00451a42    call 00412080h"
"	      00451a47    mov eax,[ebp-1068h]"
"	      00451a4d    mov ecx,this"
"	      00451a53    mov [ecx+7Ch],eax"
"	      00451a56    cmp dword ptr [ebp-1078h],0"
"	      00451a5d    je near ptr 00451AAAh"
"	      00451a63    jmp near ptr 00451A68h"
"	      00451a68    jmp near ptr 00451A6Dh"
"	      00451a6d    mov eax,this"
"	      00451a73    mov eax,[eax+7Ch]"
"	      00451a76    mov eax,[eax+4]"
"	      00451a79    mov ecx,this"
"	      00451a7f    mov ecx,[ecx+7Ch]"
"	      00451a82    add eax,[ecx]"
"	      00451a84    mov [ebp-1070h],eax"
"	      00451a8a    mov eax,[ebp-1078h]"
"	      00451a90    push eax"
"	      00451a91    push 597200h"
"	      00451a96    mov eax,[ebp-1070h]"
"	      00451a9c    push eax"
"	      00451a9d    call 0056A800h"
"	      00451aa2    add esp,0Ch"
"	      00451aa5    jmp near ptr 00451AAAh"
"	      00451aaa    mov eax,[ebp-1078h]"
"	      00451ab0    mov ecx,this"
"	      00451ab6    mov ecx,[ecx+7Ch]"
"	      00451ab9    add [ecx+4],eax"
"	      00451abc    jmp near ptr 00451AC1h"
"	      00451ac1    jmp near ptr 00451AC6h"
"	      00451ac6    jmp near ptr 00451C8Fh"
"	      00451acb    jmp near ptr 00451AD0h"
"	      00451ad0    lea eax,[ebp-1060h]"
"	      00451ad6    push eax"
"	      00451ad7    call 0056ABE0h"
"	      00451adc    add esp,4"
"	      00451adf    mov [ebp-1094h],eax"
"	      00451ae5    cmp dword ptr [ebp-1094h],0FFFFFFFFh"
"	      00451aec    jne near ptr 00451B2Ah"
"	      00451af2    push 5971E4h"
"	      00451af7    mov ecx,638C00h"
"	      00451afc    call 00569960h"
"	      00451b01    mov [ebp-1088h],eax"
"	      00451b07    mov eax,[ebp-1088h]"
"	      00451b0d    push eax"
"	      00451b0e    call 004011B0h"
"	      00451b13    add esp,4"
"	      00451b16    jmp near ptr 00451B1Bh"
"	      00451b1b    push 1"
"	      00451b1d    call 00569430h"
"	      00451b22    add esp,4"
"	      00451b25    jmp near ptr 00451B2Ah"
"	      00451b2a    jmp near ptr 00451B2Fh"
"	      00451b2f    mov eax,this"
"	      00451b35    mov eax,[eax+7Ch]"
"	      00451b38    cmp dword ptr [eax+0Ch],1"
"	      00451b3c    ja near ptr 00451B6Ch"
"	      00451b42    cmp dword ptr [ebp-1094h],0"
"	      00451b49    je near ptr 00451C29h"
"	      00451b4f    jmp near ptr 00451B54h"
"	      00451b54    mov eax,this"
"	      00451b5a    mov eax,[eax+7Ch]"
"	      00451b5d    mov ecx,[ebp-1094h]"
"	      00451b63    cmp [eax+8],ecx"
"	      00451b66    jae near ptr 00451C29h"
"	      00451b6c    push 10h"
"	      00451b6e    call 0056A600h"
"	      00451b73    add esp,4"
"	      00451b76    mov [ebp-1080h],eax"
"	      00451b7c    cmp dword ptr [ebp-1080h],0"
"	      00451b83    je near ptr 00451BADh"
"	      00451b89    mov eax,[ebp-1094h]"
"	      00451b8f    push eax"
"	      00451b90    lea eax,[ebp-1060h]"
"	      00451b96    push eax"
"	      00451b97    mov ecx,[ebp-1080h]"
"	      00451b9d    call 0041E090h"
"	      00451ba2    mov [ebp-107Ch],eax"
"	      00451ba8    jmp near ptr 00451BB7h"
"	      00451bad    mov dword ptr [ebp-107Ch],0"
"	      00451bb7    mov eax,this"
"	      00451bbd    mov eax,[eax+7Ch]"
"	      00451bc0    dec dword ptr [eax+0Ch]"
"	      00451bc3    mov eax,this"
"	      00451bc9    mov eax,[eax+7Ch]"
"	      00451bcc    cmp dword ptr [eax+0Ch],0"
"	      00451bd0    jne near ptr 00451C10h"
"	      00451bd6    mov eax,this"
"	      00451bdc    mov eax,[eax+7Ch]"
"	      00451bdf    mov [ebp-1090h],eax"
"	      00451be5    mov eax,[ebp-1090h]"
"	      00451beb    mov [ebp-108Ch],eax"
"	      00451bf1    cmp dword ptr [ebp-108Ch],0"
"	      00451bf8    je near ptr 00451C10h"
"	      00451bfe    push 1"
"	      00451c00    mov ecx,[ebp-108Ch]"
"	      00451c06    call 0041DD70h"
"	      00451c0b    jmp near ptr 00451C10h"
"	      00451c10    jmp near ptr 00451C15h"
"	      00451c15    mov eax,[ebp-107Ch]"
"	      00451c1b    mov ecx,this"
"	      00451c21    mov [ecx+7Ch],eax"
"	      00451c24    jmp near ptr 00451C6Eh"
"	      00451c29    cmp dword ptr [ebp-1094h],0"
"	      00451c30    je near ptr 00451C6Eh"
"	      00451c36    jmp near ptr 00451C3Bh"
"	      00451c3b    mov eax,this"
"	      00451c41    mov eax,[eax+7Ch]"
"	      00451c44    mov eax,[eax]"
"	      00451c46    mov [ebp-1084h],eax"
"	      00451c4c    mov eax,[ebp-1094h]"
"	      00451c52    push eax"
"	      00451c53    lea eax,[ebp-1060h]"
"	      00451c59    push eax"
"	      00451c5a    mov eax,[ebp-1084h]"
"	      00451c60    push eax"
"	      00451c61    call 0056A800h"
"	      00451c66    add esp,0Ch"
"	      00451c69    jmp near ptr 00451C6Eh"
"	      00451c6e    mov eax,[ebp-1094h]"
"	      00451c74    mov ecx,this"
"	      00451c7a    mov ecx,[ecx+7Ch]"
"	      00451c7d    mov [ecx+4],eax"
"	      00451c80    jmp near ptr 00451C85h"
"	      00451c85    jmp near ptr 00451C8Ah"
"	      00451c8a    jmp near ptr 00451C8Fh"
);
// LINE 242:
	asm( 
"	      00451c8f    lea eax,szTypeface[0]"
"	      00451c92    push eax"
"	      00451c93    push 0"
"	      00451c95    push 0"
"	      00451c97    call 0042CE0Eh"
"	      00451c9c    add esp,0Ch"
);
// LINE 243:
	asm( 
"	      00451c9f    push 1Ch"
"	      00451ca1    call 0056A600h"
"	      00451ca6    add esp,4"
"	      00451ca9    mov [ebp-5Ch],eax"
"	      00451cac    cmp dword ptr [ebp-5Ch],0"
"	      00451cb0    je near ptr 00451CD2h"
"	      00451cb6    push 1"
"	      00451cb8    push 0"
"	      00451cba    push 0"
"	      00451cbc    push 12h"
"	      00451cbe    lea eax,szTypeface[0]"
"	      00451cc1    push eax"
"	      00451cc2    mov ecx,[ebp-5Ch]"
"	      00451cc5    call 0049F937h"
"	      00451cca    mov fontText,eax"
"	      00451ccd    jmp near ptr 00451CD9h"
"	      00451cd2    mov fontText,0"
);
// LINE 244:
	asm( 
"	      00451cd9    mov eax,fontText"
"	      00451cdc    push eax"
"	      00451cdd    mov eax,this"
"	      00451ce3    mov ecx,[eax+40h]"
"	      00451ce6    call 00470440h"
"	      00451ceb    mov eax,this"
"	      00451cf1    mov eax,[eax+40h]"
"	      00451cf4    mov [ebp-60h],eax"
);
// LINE 245:
	asm( 
"	      00451cf7    mov eax,this"
"	      00451cfd    mov eax,[eax+98h]"
"	      00451d03    mov ecx,[ebp-60h]"
"	      00451d06    mov [ecx+38h],eax"
"	      00451d09    jmp near ptr 00451D0Eh"
);
// LINE 247:
	asm( 
"	      00451d0e    mov eax,this"
"	      00451d14    cmp dword ptr [eax+78h],0"
"	      00451d18    je near ptr 00451D48h"
"	      00451d1e    mov eax,this"
"	      00451d24    mov eax,[eax+78h]"
"	      00451d27    mov [ebp-1098h],eax"
"	      00451d2d    mov eax,[ebp-1098h]"
"	      00451d33    mov [ebp-10A0h],eax"
"	      00451d39    mov eax,[ebp-10A0h]"
"	      00451d3f    push eax"
"	      00451d40    call 0056A740h"
"	      00451d45    add esp,4"
"	      00451d48    jmp near ptr 00451D4Dh"
"	      00451d4d    mov eax,this"
"	      00451d53    mov eax,[eax+7Ch]"
"	      00451d56    mov eax,[eax+4]"
"	      00451d59    inc eax"
"	      00451d5a    push eax"
"	      00451d5b    call 0056A600h"
"	      00451d60    add esp,4"
"	      00451d63    mov ecx,this"
"	      00451d69    mov [ecx+78h],eax"
"	      00451d6c    jmp near ptr 00451D71h"
"	      00451d71    mov eax,this"
"	      00451d77    mov eax,[eax+7Ch]"
"	      00451d7a    cmp dword ptr [eax+4],0"
"	      00451d7e    je near ptr 00451E0Eh"
"	      00451d84    jmp near ptr 00451D89h"
"	      00451d89    jmp near ptr 00451D8Eh"
"	      00451d8e    mov eax,this"
"	      00451d94    mov eax,[eax+7Ch]"
"	      00451d97    cmp dword ptr [eax+4],0"
"	      00451d9b    je near ptr 00451DBCh"
"	      00451da1    mov eax,this"
"	      00451da7    mov eax,[eax+7Ch]"
"	      00451daa    mov eax,[eax]"
"	      00451dac    mov [ebp-10ACh],eax"
"	      00451db2    jmp near ptr 00451DCBh"
"	      00451db7    jmp near ptr 00451DCBh"
"	      00451dbc    mov dword ptr [ebp-10ACh],0"
"	      00451dc6    jmp near ptr 00451DCBh"
"	      00451dcb    mov eax,this"
"	      00451dd1    mov eax,[eax+7Ch]"
"	      00451dd4    mov eax,[eax+4]"
"	      00451dd7    mov [ebp-10B0h],eax"
"	      00451ddd    mov eax,this"
"	      00451de3    mov eax,[eax+78h]"
"	      00451de6    mov [ebp-10B4h],eax"
"	      00451dec    mov eax,[ebp-10B0h]"
"	      00451df2    push eax"
"	      00451df3    mov eax,[ebp-10ACh]"
"	      00451df9    push eax"
"	      00451dfa    mov eax,[ebp-10B4h]"
"	      00451e00    push eax"
"	      00451e01    call 0056A800h"
"	      00451e06    add esp,0Ch"
"	      00451e09    jmp near ptr 00451E0Eh"
"	      00451e0e    jmp near ptr 00451E13h"
"	      00451e13    mov byte ptr [ebp-109Ch],0"
"	      00451e1a    jmp near ptr 00451E1Fh"
"	      00451e1f    lea eax,[ebp-109Ch]"
"	      00451e25    mov [ebp-10A4h],eax"
"	      00451e2b    jmp near ptr 00451E30h"
"	      00451e30    mov eax,this"
"	      00451e36    mov eax,[eax+7Ch]"
"	      00451e39    mov eax,[eax+4]"
"	      00451e3c    mov ecx,this"
"	      00451e42    add eax,[ecx+78h]"
"	      00451e45    mov [ebp-10A8h],eax"
"	      00451e4b    mov eax,[ebp-10A4h]"
"	      00451e51    mov al,[eax]"
"	      00451e53    mov ecx,[ebp-10A8h]"
"	      00451e59    mov [ecx],al"
"	      00451e5b    jmp near ptr 00451E60h"
"	      00451e60    jmp near ptr 00451E65h"
"	      00451e65    push 0"
"	      00451e67    lea eax,rectText.bottom"
"	      00451e6a    push eax"
"	      00451e6b    lea eax,rectText.right"
"	      00451e6e    push eax"
"	      00451e6f    lea eax,rectText.top"
"	      00451e72    push eax"
"	      00451e73    lea eax,rectText.left"
"	      00451e76    push eax"
"	      00451e77    push 0"
"	      00451e79    mov eax,this"
"	      00451e7f    mov eax,[eax+78h]"
"	      00451e82    push eax"
"	      00451e83    mov eax,this"
"	      00451e89    mov ecx,this"
"	      00451e8f    mov ecx,[ecx+40h]"
"	      00451e92    mov edx,[ecx]"
"	      00451e94    mov ecx,[eax+40h]"
"	      00451e97    call dword ptr [edx+4Ch]"
);
// LINE 248:
	asm( 
"	      00451e9a    jmp near ptr 00451E9Fh"
"	      00451e9f    pop edi"
"	      00451ea0    pop esi"
"	      00451ea1    pop ebx"
"	      00451ea2    leave"
"	      00451ea3    ret"
);
}

// FUNCTION: COPTER_D 0x00451ea4
void MessageBoxWindow::SetTextColor(const struct SparkalColor& colorNewFont) {
// LINE 254:
	asm( 
"	      00451ea4    push ebp"
"	      00451ea5    mov ebp,esp"
"	      00451ea7    sub esp,4"
"	      00451eaa    push ebx"
"	      00451eab    push esi"
"	      00451eac    push edi"
"	      00451ead    mov this,ecx"
);
// LINE 255:
	asm( 
"	      00451eb0    mov eax,colorNewFont"
"	      00451eb3    mov eax,[eax]"
"	      00451eb5    mov ecx,this"
"	      00451eb8    mov [ecx+98h],eax"
);
// LINE 256:
	asm( 
"	      00451ebe    push 1"
"	      00451ec0    push 1"
"	      00451ec2    mov eax,this"
"	      00451ec5    mov eax,[eax]"
"	      00451ec7    mov ecx,this"
"	      00451eca    call dword ptr [eax+30h]"
);
// LINE 257:
	asm( 
"	      00451ecd    jmp near ptr 00451ED2h"
"	      00451ed2    pop edi"
"	      00451ed3    pop esi"
"	      00451ed4    pop ebx"
"	      00451ed5    leave"
"	      00451ed6    ret 4"
);
}

// FUNCTION: COPTER_D 0x00451ed9
void MessageBoxWindow::SetButtonTextColor(const struct SparkalColor* colorNewFont, const struct SparkalColor* colorNewFontHighlighted) {
// LINE 263:
	asm( 
"	      00451ed9    push ebp"
"	      00451eda    mov ebp,esp"
"	      00451edc    sub esp,4"
"	      00451edf    push ebx"
"	      00451ee0    push esi"
"	      00451ee1    push edi"
"	      00451ee2    mov this,ecx"
);
// LINE 264:
	asm( 
"	      00451ee5    cmp colorNewFont,0"
"	      00451ee9    je near ptr 00451EFDh"
);
// LINE 265:
	asm( 
"	      00451eef    mov eax,colorNewFont"
"	      00451ef2    mov eax,[eax]"
"	      00451ef4    mov ecx,this"
"	      00451ef7    mov [ecx+9Ch],eax"
);
// LINE 266:
	asm( 
"	      00451efd    cmp colorNewFontHighlighted,0"
"	      00451f01    je near ptr 00451F15h"
);
// LINE 267:
	asm( 
"	      00451f07    mov eax,colorNewFontHighlighted"
"	      00451f0a    mov eax,[eax]"
"	      00451f0c    mov ecx,this"
"	      00451f0f    mov [ecx+0A0h],eax"
);
// LINE 268:
	asm( 
"	      00451f15    jmp near ptr 00451F1Ah"
"	      00451f1a    pop edi"
"	      00451f1b    pop esi"
"	      00451f1c    pop ebx"
"	      00451f1d    leave"
"	      00451f1e    ret 8"
);
}

// FUNCTION: COPTER_D 0x00451f21
void AnimationWindow::AnimationWindow() {
// LINE 282:
	asm( 
"	      00451f21    push ebp"
"	      00451f22    mov ebp,esp"
"	      00451f24    sub esp,4"
"	      00451f27    push ebx"
"	      00451f28    push esi"
"	      00451f29    push edi"
"	      00451f2a    mov this,ecx"
"	      00451f2d    mov ecx,this"
"	      00451f30    call 004A2A3Fh"
"	      00451f35    mov eax,this"
"	      00451f38    mov dword ptr [eax],58FB58h"
);
// LINE 283:
	asm( 
"	      00451f3e    mov eax,this"
"	      00451f41    mov dword ptr [eax+74h],0"
);
// LINE 284:
	asm( 
"	      00451f48    mov eax,this"
"	      00451f4b    mov dword ptr [eax+78h],0"
);
// LINE 285:
	asm( 
"	      00451f52    mov eax,this"
"	      00451f55    mov dword ptr [eax+7Ch],53h"
);
// LINE 286:
	asm( 
"	      00451f5c    mov eax,this"
"	      00451f5f    mov dword ptr [eax+80h],0"
);
// LINE 287:
	asm( 
"	      00451f69    mov eax,this"
"	      00451f6c    mov dword ptr [eax+84h],0"
);
// LINE 288:
	asm( 
"	      00451f76    mov eax,this"
"	      00451f79    mov dword ptr [eax+88h],1"
);
// LINE 289:
	asm( 
"	      00451f83    mov eax,this"
"	      00451f86    mov dword ptr [eax+8Ch],1"
);
// LINE 290:
	asm( 
"	      00451f90    mov eax,this"
"	      00451f93    mov dword ptr [eax+90h],0"
);
// LINE 291:
	asm( 
"	      00451f9d    mov eax,this"
"	      00451fa0    mov dword ptr [eax+94h],0"
);
// LINE 292:
	asm( 
"	      00451faa    mov eax,this"
"	      00451fad    mov dword ptr [eax+98h],1"
);
// LINE 293:
	asm( 
"	      00451fb7    mov eax,this"
"	      00451fba    mov dword ptr [eax+9Ch],0FFFFFFFFh"
);
// LINE 294:
	asm( 
"	      00451fc4    mov eax,this"
"	      00451fc7    mov dword ptr [eax+0A0h],0FFFFFFFFh"
);
// LINE 295:
	asm( 
"	      00451fd1    jmp near ptr 00451FD6h"
"	      00451fd6    mov eax,this"
"	      00451fd9    pop edi"
"	      00451fda    pop esi"
"	      00451fdb    pop ebx"
"	      00451fdc    leave"
"	      00451fdd    ret"
);
}

// FUNCTION: COPTER_D 0x00451fde
void AnimationWindow::AnimationWindow(char * szImageFileName, class MRect& rectNewWindow, long lNewWidthOfSingleFrame, int32_t nNewID, class GraphicWindow* windowNewParent, class GraphicWindowOwner* myNewOwner, int32_t bAddToParentList, long lNewTransparentIndex, enum AnimationWindow::AnimationLoopType nNewAnimationLoopType) {
// LINE 311:
	asm( 
"	      00451fde    push ebp"
"	      00451fdf    mov ebp,esp"
"	      00451fe1    sub esp,4"
"	      00451fe4    push ebx"
"	      00451fe5    push esi"
"	      00451fe6    push edi"
"	      00451fe7    mov this,ecx"
"	      00451fea    push 0FFFFFFFFh"
"	      00451fec    mov eax,bAddToParentList"
"	      00451fef    push eax"
"	      00451ff0    mov eax,myNewOwner"
"	      00451ff3    push eax"
"	      00451ff4    mov eax,windowNewParent"
"	      00451ff7    push eax"
"	      00451ff8    mov eax,nNewID"
"	      00451ffb    push eax"
"	      00451ffc    mov eax,rectNewWindow"
"	      00451fff    push eax"
"	      00452000    mov eax,szImageFileName"
"	      00452003    push eax"
"	      00452004    mov ecx,this"
"	      00452007    call 004A393Dh"
"	      0045200c    mov eax,lNewWidthOfSingleFrame"
"	      0045200f    mov ecx,this"
"	      00452012    mov [ecx+98h],eax"
"	      00452018    mov eax,lNewTransparentIndex"
"	      0045201b    mov ecx,this"
"	      0045201e    mov [ecx+0A0h],eax"
"	      00452024    mov eax,this"
"	      00452027    mov dword ptr [eax],58FB58h"
);
// LINE 312:
	asm( 
"	      0045202d    mov eax,this"
"	      00452030    mov dword ptr [eax+74h],0"
);
// LINE 313:
	asm( 
"	      00452037    mov eax,this"
"	      0045203a    mov dword ptr [eax+78h],0"
);
// LINE 314:
	asm( 
"	      00452041    mov eax,this"
"	      00452044    mov dword ptr [eax+7Ch],53h"
);
// LINE 315:
	asm( 
"	      0045204b    mov eax,this"
"	      0045204e    mov dword ptr [eax+80h],0"
);
// LINE 316:
	asm( 
"	      00452058    mov eax,this"
"	      0045205b    mov dword ptr [eax+84h],0"
);
// LINE 317:
	asm( 
"	      00452065    mov eax,this"
"	      00452068    mov dword ptr [eax+88h],1"
);
// LINE 318:
	asm( 
"	      00452072    mov eax,this"
"	      00452075    mov dword ptr [eax+8Ch],1"
);
// LINE 319:
	asm( 
"	      0045207f    mov eax,this"
"	      00452082    mov dword ptr [eax+90h],0"
);
// LINE 320:
	asm( 
"	      0045208c    mov eax,this"
"	      0045208f    mov dword ptr [eax+94h],0"
);
// LINE 321:
	asm( 
"	      00452099    mov eax,this"
"	      0045209c    mov dword ptr [eax+9Ch],0FFFFFFFFh"
);
// LINE 323:
	asm( 
"	      004520a6    mov eax,this"
"	      004520a9    cmp dword ptr [eax+0A0h],0FFFFFFFFh"
"	      004520b0    je near ptr 004520D3h"
);
// LINE 324:
	asm( 
"	      004520b6    mov eax,this"
"	      004520b9    mov eax,[eax+0A0h]"
"	      004520bf    push eax"
"	      004520c0    push 1"
"	      004520c2    mov eax,this"
"	      004520c5    mov ecx,this"
"	      004520c8    mov ecx,[ecx+40h]"
"	      004520cb    mov edx,[ecx]"
"	      004520cd    mov ecx,[eax+40h]"
"	      004520d0    call dword ptr [edx+8]"
);
// LINE 331:
	asm( 
"	      004520d3    mov eax,this"
"	      004520d6    mov eax,[eax+10h]"
"	      004520d9    mov ecx,this"
"	      004520dc    add eax,[ecx+98h]"
"	      004520e2    mov ecx,this"
"	      004520e5    mov [ecx+18h],eax"
);
// LINE 332:
	asm( 
"	      004520e8    mov eax,this"
"	      004520eb    mov eax,[eax+20h]"
"	      004520ee    mov ecx,this"
"	      004520f1    add eax,[ecx+98h]"
"	      004520f7    mov ecx,this"
"	      004520fa    mov [ecx+28h],eax"
);
// LINE 333:
	asm( 
"	      004520fd    jmp near ptr 00452102h"
"	      00452102    mov eax,this"
"	      00452105    pop edi"
"	      00452106    pop esi"
"	      00452107    pop ebx"
"	      00452108    leave"
"	      00452109    ret 24h"
);
}

// FUNCTION: COPTER_D 0x0045210c
int32_t AnimationWindow::ComposeSelf() {
	long lFramesToShift;
	long lSourceLeft;
	long lMillisecondsCurrent;
	long lSourceRight;

// LINE 341:
	asm( 
"	      0045210c    push ebp"
"	      0045210d    mov ebp,esp"
"	      0045210f    sub esp,14h"
"	      00452112    push ebx"
"	      00452113    push esi"
"	      00452114    push edi"
"	      00452115    mov this,ecx"
);
// LINE 347:
	asm( 
"	      00452118    mov eax,this"
"	      0045211b    cmp dword ptr [eax+44h],0"
"	      0045211f    je near ptr 00452132h"
"	      00452125    mov eax,this"
"	      00452128    cmp dword ptr [eax+54h],0"
"	      0045212c    jne near ptr 00452139h"
);
// LINE 348:
	asm( 
"	      00452132    xor eax,eax"
"	      00452134    jmp near ptr 0045224Dh"
);
// LINE 350:
	asm( 
"	      00452139    mov eax,this"
"	      0045213c    mov eax,[eax+90h]"
"	      00452142    mov ecx,this"
"	      00452145    imul eax,[ecx+98h]"
"	      0045214c    mov lSourceLeft,eax"
);
// LINE 351:
	asm( 
"	      0045214f    mov eax,this"
"	      00452152    mov eax,[eax+98h]"
"	      00452158    add eax,lSourceLeft"
"	      0045215b    mov lSourceRight,eax"
);
// LINE 353:
	asm( 
"	      0045215e    jmp near ptr 00452163h"
"	      00452163    mov eax,this"
"	      00452166    mov eax,[eax+40h]"
"	      00452169    mov eax,[eax+0Ch]"
"	      0045216c    push eax"
"	      0045216d    mov eax,lSourceRight"
"	      00452170    push eax"
"	      00452171    push 0"
"	      00452173    mov eax,lSourceLeft"
"	      00452176    push eax"
"	      00452177    mov eax,this"
"	      0045217a    mov eax,[eax+24h]"
"	      0045217d    push eax"
"	      0045217e    mov eax,this"
"	      00452181    mov eax,[eax+20h]"
"	      00452184    push eax"
"	      00452185    mov eax,this"
"	      00452188    mov eax,[eax+44h]"
"	      0045218b    push eax"
"	      0045218c    mov eax,this"
"	      0045218f    mov ecx,this"
"	      00452192    mov ecx,[ecx+40h]"
"	      00452195    mov edx,[ecx]"
"	      00452197    mov ecx,[eax+40h]"
"	      0045219a    call dword ptr [edx+0Ch]"
);
// LINE 355:
	asm( 
"	      0045219d    mov eax,this"
"	      004521a0    cmp dword ptr [eax+78h],0"
"	      004521a4    jne near ptr 00452246h"
);
// LINE 356:
	asm( 
"	      004521aa    call 0043D8C6h"
"	      004521af    mov lMillisecondsCurrent,eax"
);
// LINE 358:
	asm( 
"	      004521b2    mov eax,lMillisecondsCurrent"
"	      004521b5    mov ecx,this"
"	      004521b8    sub eax,[ecx+80h]"
"	      004521be    mov ecx,this"
"	      004521c1    mov [ecx+84h],eax"
);
// LINE 359:
	asm( 
"	      004521c7    mov eax,this"
"	      004521ca    cmp dword ptr [eax+74h],0"
"	      004521ce    je near ptr 00452246h"
"	      004521d4    mov eax,this"
"	      004521d7    mov ecx,this"
"	      004521da    mov ecx,[ecx+84h]"
"	      004521e0    cmp [eax+7Ch],ecx"
"	      004521e3    jge near ptr 00452246h"
);
// LINE 360:
	asm( 
"	      004521e9    mov eax,this"
"	      004521ec    cmp dword ptr [eax+94h],0"
"	      004521f3    je near ptr 00452228h"
);
// LINE 364:
	asm( 
"	      004521f9    mov eax,this"
"	      004521fc    mov ecx,this"
"	      004521ff    mov eax,[eax+84h]"
"	      00452205    cdq"
"	      00452206    idiv dword ptr [ecx+7Ch]"
"	      00452209    mov lFramesToShift,eax"
);
// LINE 365:
	asm( 
"	      0045220c    cmp lFramesToShift,0"
"	      00452210    je near ptr 00452223h"
);
// LINE 366:
	asm( 
"	      00452216    mov ecx,this"
"	      00452219    call 00452252h"
"	      0045221e    jmp near ptr 0045220Ch"
);
// LINE 368:
	asm( 
"	      00452223    jmp near ptr 00452230h"
);
// LINE 369:
	asm( 
"	      00452228    mov ecx,this"
"	      0045222b    call 00452252h"
);
// LINE 372:
	asm( 
"	      00452230    mov eax,lMillisecondsCurrent"
"	      00452233    mov ecx,this"
"	      00452236    mov [ecx+80h],eax"
);
// LINE 373:
	asm( 
"	      0045223c    mov eax,1"
"	      00452241    jmp near ptr 0045224Dh"
);
// LINE 376:
	asm( 
"	      00452246    xor eax,eax"
"	      00452248    jmp near ptr 0045224Dh"
);
// LINE 377:
	asm( 
"	      0045224d    pop edi"
"	      0045224e    pop esi"
"	      0045224f    pop ebx"
"	      00452250    leave"
"	      00452251    ret"
);
}

// FUNCTION: COPTER_D 0x00452252
void AnimationWindow::GotoNextFrame() {
// LINE 384:
	asm( 
"	      00452252    push ebp"
"	      00452253    mov ebp,esp"
"	      00452255    sub esp,4"
"	      00452258    push ebx"
"	      00452259    push esi"
"	      0045225a    push edi"
"	      0045225b    mov this,ecx"
);
// LINE 385:
	asm( 
"	      0045225e    mov eax,this"
"	      00452261    mov eax,[eax+8Ch]"
"	      00452267    mov ecx,this"
"	      0045226a    add [ecx+90h],eax"
);
// LINE 389:
	asm( 
"	      00452270    mov eax,this"
"	      00452273    cmp dword ptr [eax+8Ch],1"
"	      0045227a    jne near ptr 00452298h"
"	      00452280    mov eax,this"
"	      00452283    mov ecx,this"
"	      00452286    mov ecx,[ecx+90h]"
"	      0045228c    cmp [eax+9Ch],ecx"
"	      00452292    jle near ptr 004522B8h"
"	      00452298    mov eax,this"
"	      0045229b    cmp dword ptr [eax+8Ch],0FFFFFFFFh"
"	      004522a2    jne near ptr 00452392h"
"	      004522a8    mov eax,this"
"	      004522ab    cmp dword ptr [eax+90h],0"
"	      004522b2    jge near ptr 00452392h"
);
// LINE 391:
	asm( 
"	      004522b8    mov eax,this"
"	      004522bb    cmp dword ptr [eax+88h],2"
"	      004522c2    jne near ptr 0045231Eh"
);
// LINE 392:
	asm( 
"	      004522c8    mov eax,this"
"	      004522cb    cmp dword ptr [eax+8Ch],1"
"	      004522d2    jne near ptr 004522EFh"
"	      004522d8    mov eax,this"
"	      004522db    mov dword ptr [eax+8Ch],0FFFFFFFFh"
"	      004522e5    jmp near ptr 004522EAh"
"	      004522ea    jmp near ptr 00452301h"
"	      004522ef    mov eax,this"
"	      004522f2    mov dword ptr [eax+8Ch],1"
"	      004522fc    jmp near ptr 00452301h"
"	      00452301    jmp near ptr 00452306h"
);
// LINE 393:
	asm( 
"	      00452306    mov eax,this"
"	      00452309    cmp dword ptr [eax+9Ch],1"
"	      00452310    jle near ptr 0045231Eh"
);
// LINE 394:
	asm( 
"	      00452316    mov ecx,this"
"	      00452319    call 00452252h"
);
// LINE 396:
	asm( 
"	      0045231e    mov eax,this"
"	      00452321    cmp dword ptr [eax+88h],0"
"	      00452328    je near ptr 0045236Dh"
);
// LINE 397:
	asm( 
"	      0045232e    mov eax,this"
"	      00452331    cmp dword ptr [eax+8Ch],1"
"	      00452338    jne near ptr 00452350h"
"	      0045233e    mov eax,this"
"	      00452341    mov dword ptr [eax+90h],0"
"	      0045234b    jmp near ptr 00452363h"
"	      00452350    mov eax,this"
"	      00452353    mov eax,[eax+9Ch]"
"	      00452359    dec eax"
"	      0045235a    mov ecx,this"
"	      0045235d    mov [ecx+90h],eax"
"	      00452363    jmp near ptr 00452368h"
);
// LINE 398:
	asm( 
"	      00452368    jmp near ptr 00452392h"
);
// LINE 399:
	asm( 
"	      0045236d    xor eax,eax"
"	      0045236f    mov ecx,this"
"	      00452372    sub eax,[ecx+8Ch]"
"	      00452378    neg eax"
"	      0045237a    mov ecx,this"
"	      0045237d    sub [ecx+90h],eax"
"	      00452383    jmp near ptr 00452388h"
);
// LINE 400:
	asm( 
"	      00452388    mov eax,this"
"	      0045238b    mov dword ptr [eax+74h],0"
);
// LINE 403:
	asm( 
"	      00452392    jmp near ptr 00452397h"
"	      00452397    pop edi"
"	      00452398    pop esi"
"	      00452399    pop ebx"
"	      0045239a    leave"
"	      0045239b    ret"
);
}

// FUNCTION: COPTER_D 0x0045239c
int32_t AnimationWindow::DoesWindowNeedUpdating() {
// LINE 411:
	asm( 
"	      0045239c    push ebp"
"	      0045239d    mov ebp,esp"
"	      0045239f    sub esp,4"
"	      004523a2    push ebx"
"	      004523a3    push esi"
"	      004523a4    push edi"
"	      004523a5    mov this,ecx"
);
// LINE 413:
	asm( 
"	      004523a8    mov eax,this"
"	      004523ab    mov ebx,[eax+80h]"
"	      004523b1    mov eax,this"
"	      004523b4    add ebx,[eax+7Ch]"
"	      004523b7    call dword ptr ds:[6C3908h]"
"	      004523bd    cmp ebx,eax"
"	      004523bf    jae near ptr 004523CFh"
"	      004523c5    mov eax,1"
"	      004523ca    jmp near ptr 004523D1h"
"	      004523cf    xor eax,eax"
"	      004523d1    jmp near ptr 004523D6h"
);
// LINE 417:
	asm( 
"	      004523d6    pop edi"
"	      004523d7    pop esi"
"	      004523d8    pop ebx"
"	      004523d9    leave"
"	      004523da    ret"
);
}

// FUNCTION: COPTER_D 0x004523db
void AnimationWindow::Start() {
// LINE 423:
	asm( 
"	      004523db    push ebp"
"	      004523dc    mov ebp,esp"
"	      004523de    sub esp,4"
"	      004523e1    push ebx"
"	      004523e2    push esi"
"	      004523e3    push edi"
"	      004523e4    mov this,ecx"
);
// LINE 424:
	asm( 
"	      004523e7    mov eax,this"
"	      004523ea    cmp dword ptr [eax+9Ch],0FFFFFFFFh"
"	      004523f1    jne near ptr 00452418h"
);
// LINE 425:
	asm( 
"	      004523f7    jmp near ptr 004523FCh"
"	      004523fc    mov eax,this"
"	      004523ff    mov eax,[eax+40h]"
"	      00452402    mov ecx,this"
"	      00452405    mov eax,[eax+8]"
"	      00452408    cdq"
"	      00452409    idiv dword ptr [ecx+98h]"
"	      0045240f    mov ecx,this"
"	      00452412    mov [ecx+9Ch],eax"
);
// LINE 426:
	asm( 
"	      00452418    mov eax,this"
"	      0045241b    mov dword ptr [eax+74h],1"
);
// LINE 427:
	asm( 
"	      00452422    jmp near ptr 00452427h"
"	      00452427    pop edi"
"	      00452428    pop esi"
"	      00452429    pop ebx"
"	      0045242a    leave"
"	      0045242b    ret"
);
}

// FUNCTION: COPTER_D 0x0045242c
void AnimationWindow::ResetFramePosition() {
// LINE 433:
	asm( 
"	      0045242c    push ebp"
"	      0045242d    mov ebp,esp"
"	      0045242f    sub esp,4"
"	      00452432    push ebx"
"	      00452433    push esi"
"	      00452434    push edi"
"	      00452435    mov this,ecx"
);
// LINE 434:
	asm( 
"	      00452438    mov eax,this"
"	      0045243b    cmp dword ptr [eax+9Ch],0FFFFFFFFh"
"	      00452442    jne near ptr 00452469h"
);
// LINE 435:
	asm( 
"	      00452448    jmp near ptr 0045244Dh"
"	      0045244d    mov eax,this"
"	      00452450    mov eax,[eax+40h]"
"	      00452453    mov ecx,this"
"	      00452456    mov eax,[eax+8]"
"	      00452459    cdq"
"	      0045245a    idiv dword ptr [ecx+98h]"
"	      00452460    mov ecx,this"
"	      00452463    mov [ecx+9Ch],eax"
);
// LINE 436:
	asm( 
"	      00452469    mov eax,this"
"	      0045246c    cmp dword ptr [eax+8Ch],1"
"	      00452473    jne near ptr 0045248Bh"
"	      00452479    mov eax,this"
"	      0045247c    mov dword ptr [eax+90h],0"
"	      00452486    jmp near ptr 0045249Eh"
"	      0045248b    mov eax,this"
"	      0045248e    mov eax,[eax+9Ch]"
"	      00452494    dec eax"
"	      00452495    mov ecx,this"
"	      00452498    mov [ecx+90h],eax"
"	      0045249e    jmp near ptr 004524A3h"
);
// LINE 437:
	asm( 
"	      004524a3    jmp near ptr 004524A8h"
"	      004524a8    pop edi"
"	      004524a9    pop esi"
"	      004524aa    pop ebx"
"	      004524ab    leave"
"	      004524ac    ret"
);
}

// FUNCTION: COPTER_D 0x004524ad
void RenderSettingsWindow::RenderSettingsWindow(class MRect& rectNewPosition, int32_t nNewID, class GraphicWindow* windowNewParent, class GraphicWindowOwner* myNewOwner, int32_t bAddToParentList) {
// LINE 503:
	asm( 
"	      004524ad    push ebp"
"	      004524ae    mov ebp,esp"
"	      004524b0    sub esp,10h"
"	      004524b3    push ebx"
"	      004524b4    push esi"
"	      004524b5    push edi"
"	      004524b6    mov this,ecx"
"	      004524b9    mov eax,ds:[606988h]"
"	      004524be    push eax"
"	      004524bf    mov eax,bAddToParentList"
"	      004524c2    push eax"
"	      004524c3    mov eax,myNewOwner"
"	      004524c6    push eax"
"	      004524c7    mov eax,windowNewParent"
"	      004524ca    push eax"
"	      004524cb    mov eax,nNewID"
"	      004524ce    push eax"
"	      004524cf    mov eax,rectNewPosition"
"	      004524d2    push eax"
"	      004524d3    mov eax,ds:[599140h]"
"	      004524d8    push eax"
"	      004524d9    mov ecx,this"
"	      004524dc    call 004A393Dh"
"	      004524e1    mov eax,this"
"	      004524e4    mov dword ptr [eax+74h],0"
"	      004524eb    mov eax,this"
"	      004524ee    mov dword ptr [eax+78h],0"
"	      004524f5    mov eax,this"
"	      004524f8    mov dword ptr [eax+7Ch],0"
"	      004524ff    mov eax,this"
"	      00452502    mov dword ptr [eax+80h],0"
"	      0045250c    mov eax,this"
"	      0045250f    mov dword ptr [eax+84h],0"
"	      00452519    mov eax,this"
"	      0045251c    mov dword ptr [eax+88h],0"
"	      00452526    mov eax,this"
"	      00452529    mov dword ptr [eax+8Ch],0"
"	      00452533    mov eax,this"
"	      00452536    mov dword ptr [eax+90h],0"
"	      00452540    mov eax,this"
"	      00452543    mov dword ptr [eax+94h],0"
"	      0045254d    mov eax,this"
"	      00452550    mov dword ptr [eax+98h],0"
"	      0045255a    mov eax,this"
"	      0045255d    mov dword ptr [eax+9Ch],0"
"	      00452567    mov eax,this"
"	      0045256a    mov dword ptr [eax+0A0h],0"
"	      00452574    mov eax,this"
"	      00452577    mov dword ptr [eax+0A4h],1"
"	      00452581    mov eax,this"
"	      00452584    mov dword ptr [eax+0A8h],0"
"	      0045258e    mov eax,this"
"	      00452591    mov dword ptr [eax+0ACh],0"
"	      0045259b    mov eax,this"
"	      0045259e    mov dword ptr [eax+0B0h],0"
"	      004525a8    mov eax,this"
"	      004525ab    cmp dword ptr [eax+0A4h],0"
"	      004525b2    jne near ptr 004525D9h"
"	      004525b8    lea eax,[ebp-0Ch]"
"	      004525bb    push eax"
"	      004525bc    call dword ptr ds:[6C3668h]"
"	      004525c2    mov eax,[ebp-0Ch]"
"	      004525c5    mov [ebp-4],eax"
"	      004525c8    mov eax,[ebp-4]"
"	      004525cb    mov ecx,this"
"	      004525ce    mov [ecx+0B0h],eax"
"	      004525d4    jmp near ptr 004525D9h"
"	      004525d9    jmp near ptr 004525DEh"
"	      004525de    mov eax,this"
"	      004525e1    mov dword ptr [eax+0B4h],0"
"	      004525eb    mov eax,this"
"	      004525ee    mov dword ptr [eax],58FC20h"
);
// LINE 504:
	asm( 
"	      004525f4    jmp near ptr 004525F9h"
"	      004525f9    mov eax,this"
"	      004525fc    pop edi"
"	      004525fd    pop esi"
"	      004525fe    pop ebx"
"	      004525ff    leave"
"	      00452600    ret 14h"
);
}

// FUNCTION: COPTER_D 0x00452603
void RenderSettingsWindow::~RenderSettingsWindow() {
// LINE 511:
	asm( 
"	      00452603    push ebp"
"	      00452604    mov ebp,esp"
"	      00452606    sub esp,4"
"	      00452609    push ebx"
"	      0045260a    push esi"
"	      0045260b    push edi"
"	      0045260c    mov this,ecx"
"	      0045260f    mov eax,this"
"	      00452612    mov dword ptr [eax],58FC20h"
);
// LINE 512:
	asm( 
"	      00452618    mov ecx,this"
"	      0045261b    call 004541BCh"
);
// LINE 513:
	asm( 
"	      00452620    jmp near ptr 00452625h"
"	      00452625    jmp near ptr 0045262Ah"
"	      0045262a    mov ecx,this"
"	      0045262d    call 004A4045h"
"	      00452632    pop edi"
"	      00452633    pop esi"
"	      00452634    pop ebx"
"	      00452635    leave"
"	      00452636    ret"
);
}

// FUNCTION: COPTER_D 0x00452637
int32_t RenderSettingsWindow::Initialize() {
	class ButtonWindow* tempButtonWindow;
	class TextWindow* tempTextWindow;
	class RadioButtonWindow* tempRadioButtonWindow;
	class basic_string<char> sText;
	int32_t nFullStringID;

// LINE 520:
	asm( 
"	      00452637    push ebp"
"	      00452638    mov ebp,esp"
"	      0045263a    mov eax,227Ch"
"	      0045263f    call 0056AC60h"
"	      00452644    push ebx"
"	      00452645    push esi"
"	      00452646    push edi"
"	      00452647    mov this,ecx"
);
// LINE 525:
	asm( 
"	      0045264d    push 10h"
"	      0045264f    call 0056A600h"
"	      00452654    add esp,4"
"	      00452657    mov [ebp-19Ch],eax"
"	      0045265d    cmp dword ptr [ebp-19Ch],0"
"	      00452664    je near ptr 004526B5h"
"	      0045266a    mov eax,[ebp-19Ch]"
"	      00452670    mov dword ptr [eax+4],0"
"	      00452677    mov eax,[ebp-19Ch]"
"	      0045267d    mov eax,[eax+4]"
"	      00452680    mov ecx,[ebp-19Ch]"
"	      00452686    mov [ecx+8],eax"
"	      00452689    mov eax,[ebp-19Ch]"
"	      0045268f    mov dword ptr [eax],0"
"	      00452695    mov eax,[ebp-19Ch]"
"	      0045269b    mov dword ptr [eax+0Ch],1"
"	      004526a2    jmp near ptr 004526A7h"
"	      004526a7    mov eax,[ebp-19Ch]"
"	      004526ad    mov sText.reference,eax"
"	      004526b0    jmp near ptr 004526BCh"
"	      004526b5    mov sText.reference,0"
"	      004526bc    mov sText.c_str_ptr,0"
"	      004526c3    jmp near ptr 004526C8h"
);
// LINE 527:
	asm( 
"	      004526c8    mov ecx,this"
"	      004526ce    call 004A44D4h"
);
// LINE 528:
	asm( 
"	      004526d3    push 1"
"	      004526d5    mov eax,this"
"	      004526db    mov eax,[eax]"
"	      004526dd    mov ecx,this"
"	      004526e3    call dword ptr [eax+10h]"
"	      004526e6    test eax,eax"
"	      004526e8    jne near ptr 00452793h"
);
// LINE 529:
	asm( 
"	      004526ee    mov dword ptr [ebp-1Ch],0"
"	      004526f5    mov eax,sText.reference"
"	      004526f8    dec dword ptr [eax+0Ch]"
"	      004526fb    mov eax,sText.reference"
"	      004526fe    cmp dword ptr [eax+0Ch],0"
"	      00452702    jne near ptr 00452753h"
"	      00452708    mov eax,sText.reference"
"	      0045270b    mov [ebp-1ACh],eax"
"	      00452711    mov eax,[ebp-1ACh]"
"	      00452717    mov [ebp-1A8h],eax"
"	      0045271d    cmp dword ptr [ebp-1A8h],0"
"	      00452724    je near ptr 00452753h"
"	      0045272a    mov ecx,[ebp-1A8h]"
"	      00452730    call 0041F4B0h"
"	      00452735    jmp near ptr 0045273Ah"
"	      0045273a    mov eax,[ebp-1A8h]"
"	      00452740    push eax"
"	      00452741    call 0056A740h"
"	      00452746    add esp,4"
"	      00452749    jmp near ptr 0045274Eh"
"	      0045274e    jmp near ptr 00452753h"
"	      00452753    jmp near ptr 00452758h"
"	      00452758    cmp sText.c_str_ptr,0"
"	      0045275c    je near ptr 00452786h"
"	      00452762    mov eax,sText.c_str_ptr"
"	      00452765    mov [ebp-1A0h],eax"
"	      0045276b    mov eax,[ebp-1A0h]"
"	      00452771    mov [ebp-1A4h],eax"
"	      00452777    mov eax,[ebp-1A4h]"
"	      0045277d    push eax"
"	      0045277e    call 0056A740h"
"	      00452783    add esp,4"
"	      00452786    jmp near ptr 0045278Bh"
"	      0045278b    mov eax,[ebp-1Ch]"
"	      0045278e    jmp near ptr 0045415Eh"
);
// LINE 533:
	asm( 
"	      00452793    push 0A4h"
"	      00452798    call 0056A600h"
"	      0045279d    add esp,4"
"	      004527a0    mov [ebp-20h],eax"
"	      004527a3    cmp dword ptr [ebp-20h],0"
"	      004527a7    je near ptr 004527FBh"
"	      004527ad    jmp near ptr 004527B2h"
"	      004527b2    mov dword ptr [ebp-30h],8Ah"
"	      004527b9    mov dword ptr [ebp-2Ch],46h"
"	      004527c0    mov dword ptr [ebp-28h],114h"
"	      004527c7    mov dword ptr [ebp-24h],5Ah"
"	      004527ce    jmp near ptr 004527D3h"
"	      004527d3    push 1"
"	      004527d5    mov eax,this"
"	      004527db    push eax"
"	      004527dc    mov eax,this"
"	      004527e2    push eax"
"	      004527e3    push 47h"
"	      004527e5    push 0"
"	      004527e7    lea eax,[ebp-30h]"
"	      004527ea    push eax"
"	      004527eb    mov ecx,[ebp-20h]"
"	      004527ee    call 004ACCE6h"
"	      004527f3    mov tempTextWindow,eax"
"	      004527f6    jmp near ptr 00452802h"
"	      004527fb    mov tempTextWindow,0"
);
// LINE 534:
	asm( 
"	      00452802    push 0"
"	      00452804    push 0"
"	      00452806    push 12h"
"	      00452808    mov eax,tempTextWindow"
"	      0045280b    mov eax,[eax]"
"	      0045280d    mov ecx,tempTextWindow"
"	      00452810    call dword ptr [eax+0CCh]"
);
// LINE 535:
	asm( 
"	      00452816    push 603AB8h"
"	      0045281b    mov eax,tempTextWindow"
"	      0045281e    mov eax,[eax]"
"	      00452820    mov ecx,tempTextWindow"
"	      00452823    call dword ptr [eax+0D4h]"
);
// LINE 538:
	asm( 
"	      00452829    push 0A4h"
"	      0045282e    call 0056A600h"
"	      00452833    add esp,4"
"	      00452836    mov [ebp-34h],eax"
"	      00452839    cmp dword ptr [ebp-34h],0"
"	      0045283d    je near ptr 00452891h"
"	      00452843    jmp near ptr 00452848h"
"	      00452848    mov dword ptr [ebp-44h],8Ah"
"	      0045284f    mov dword ptr [ebp-40h],70h"
"	      00452856    mov dword ptr [ebp-3Ch],114h"
"	      0045285d    mov dword ptr [ebp-38h],84h"
"	      00452864    jmp near ptr 00452869h"
"	      00452869    push 1"
"	      0045286b    mov eax,this"
"	      00452871    push eax"
"	      00452872    mov eax,this"
"	      00452878    push eax"
"	      00452879    push 48h"
"	      0045287b    push 0"
"	      0045287d    lea eax,[ebp-44h]"
"	      00452880    push eax"
"	      00452881    mov ecx,[ebp-34h]"
"	      00452884    call 004ACCE6h"
"	      00452889    mov tempTextWindow,eax"
"	      0045288c    jmp near ptr 00452898h"
"	      00452891    mov tempTextWindow,0"
);
// LINE 539:
	asm( 
"	      00452898    push 0"
"	      0045289a    push 0"
"	      0045289c    push 12h"
"	      0045289e    mov eax,tempTextWindow"
"	      004528a1    mov eax,[eax]"
"	      004528a3    mov ecx,tempTextWindow"
"	      004528a6    call dword ptr [eax+0CCh]"
);
// LINE 540:
	asm( 
"	      004528ac    push 603AB8h"
"	      004528b1    mov eax,tempTextWindow"
"	      004528b4    mov eax,[eax]"
"	      004528b6    mov ecx,tempTextWindow"
"	      004528b9    call dword ptr [eax+0D4h]"
);
// LINE 543:
	asm( 
"	      004528bf    push 0A4h"
"	      004528c4    call 0056A600h"
"	      004528c9    add esp,4"
"	      004528cc    mov [ebp-48h],eax"
"	      004528cf    cmp dword ptr [ebp-48h],0"
"	      004528d3    je near ptr 00452927h"
"	      004528d9    jmp near ptr 004528DEh"
"	      004528de    mov dword ptr [ebp-58h],8Ah"
"	      004528e5    mov dword ptr [ebp-54h],9Ch"
"	      004528ec    mov dword ptr [ebp-50h],114h"
"	      004528f3    mov dword ptr [ebp-4Ch],0B0h"
"	      004528fa    jmp near ptr 004528FFh"
"	      004528ff    push 1"
"	      00452901    mov eax,this"
"	      00452907    push eax"
"	      00452908    mov eax,this"
"	      0045290e    push eax"
"	      0045290f    push 49h"
"	      00452911    push 0"
"	      00452913    lea eax,[ebp-58h]"
"	      00452916    push eax"
"	      00452917    mov ecx,[ebp-48h]"
"	      0045291a    call 004ACCE6h"
"	      0045291f    mov tempTextWindow,eax"
"	      00452922    jmp near ptr 0045292Eh"
"	      00452927    mov tempTextWindow,0"
);
// LINE 544:
	asm( 
"	      0045292e    push 0"
"	      00452930    push 0"
"	      00452932    push 12h"
"	      00452934    mov eax,tempTextWindow"
"	      00452937    mov eax,[eax]"
"	      00452939    mov ecx,tempTextWindow"
"	      0045293c    call dword ptr [eax+0CCh]"
);
// LINE 545:
	asm( 
"	      00452942    push 603AB8h"
"	      00452947    mov eax,tempTextWindow"
"	      0045294a    mov eax,[eax]"
"	      0045294c    mov ecx,tempTextWindow"
"	      0045294f    call dword ptr [eax+0D4h]"
);
// LINE 548:
	asm( 
"	      00452955    push 0A4h"
"	      0045295a    call 0056A600h"
"	      0045295f    add esp,4"
"	      00452962    mov [ebp-5Ch],eax"
"	      00452965    cmp dword ptr [ebp-5Ch],0"
"	      00452969    je near ptr 004529BDh"
"	      0045296f    jmp near ptr 00452974h"
"	      00452974    mov dword ptr [ebp-6Ch],4Ah"
"	      0045297b    mov dword ptr [ebp-68h],125h"
"	      00452982    mov dword ptr [ebp-64h],0FCh"
"	      00452989    mov dword ptr [ebp-60h],13Ch"
"	      00452990    jmp near ptr 00452995h"
"	      00452995    push 1"
"	      00452997    mov eax,this"
"	      0045299d    push eax"
"	      0045299e    mov eax,this"
"	      004529a4    push eax"
"	      004529a5    push 4Bh"
"	      004529a7    push 0"
"	      004529a9    lea eax,[ebp-6Ch]"
"	      004529ac    push eax"
"	      004529ad    mov ecx,[ebp-5Ch]"
"	      004529b0    call 004ACCE6h"
"	      004529b5    mov tempTextWindow,eax"
"	      004529b8    jmp near ptr 004529C4h"
"	      004529bd    mov tempTextWindow,0"
);
// LINE 549:
	asm( 
"	      004529c4    push 0"
"	      004529c6    push 0"
"	      004529c8    push 10h"
"	      004529ca    mov eax,tempTextWindow"
"	      004529cd    mov eax,[eax]"
"	      004529cf    mov ecx,tempTextWindow"
"	      004529d2    call dword ptr [eax+0CCh]"
);
// LINE 550:
	asm( 
"	      004529d8    push 8"
"	      004529da    mov eax,tempTextWindow"
"	      004529dd    mov eax,[eax]"
"	      004529df    mov ecx,tempTextWindow"
"	      004529e2    call dword ptr [eax+0D0h]"
);
// LINE 551:
	asm( 
"	      004529e8    push 603AB8h"
"	      004529ed    mov eax,tempTextWindow"
"	      004529f0    mov eax,[eax]"
"	      004529f2    mov ecx,tempTextWindow"
"	      004529f5    call dword ptr [eax+0D4h]"
);
// LINE 554:
	asm( 
"	      004529fb    push 0A4h"
"	      00452a00    call 0056A600h"
"	      00452a05    add esp,4"
"	      00452a08    mov [ebp-70h],eax"
"	      00452a0b    cmp dword ptr [ebp-70h],0"
"	      00452a0f    je near ptr 00452A63h"
"	      00452a15    jmp near ptr 00452A1Ah"
"	      00452a1a    mov dword ptr [ebp-80h],4Ah"
"	      00452a21    mov dword ptr [ebp-7Ch],142h"
"	      00452a28    mov dword ptr [ebp-78h],0FCh"
"	      00452a2f    mov dword ptr [ebp-74h],156h"
"	      00452a36    jmp near ptr 00452A3Bh"
"	      00452a3b    push 1"
"	      00452a3d    mov eax,this"
"	      00452a43    push eax"
"	      00452a44    mov eax,this"
"	      00452a4a    push eax"
"	      00452a4b    push 4Ch"
"	      00452a4d    push 0"
"	      00452a4f    lea eax,[ebp-80h]"
"	      00452a52    push eax"
"	      00452a53    mov ecx,[ebp-70h]"
"	      00452a56    call 004ACCE6h"
"	      00452a5b    mov tempTextWindow,eax"
"	      00452a5e    jmp near ptr 00452A6Ah"
"	      00452a63    mov tempTextWindow,0"
);
// LINE 555:
	asm( 
"	      00452a6a    push 0"
"	      00452a6c    push 0"
"	      00452a6e    push 10h"
"	      00452a70    mov eax,tempTextWindow"
"	      00452a73    mov eax,[eax]"
"	      00452a75    mov ecx,tempTextWindow"
"	      00452a78    call dword ptr [eax+0CCh]"
);
// LINE 556:
	asm( 
"	      00452a7e    push 8"
"	      00452a80    mov eax,tempTextWindow"
"	      00452a83    mov eax,[eax]"
"	      00452a85    mov ecx,tempTextWindow"
"	      00452a88    call dword ptr [eax+0D0h]"
);
// LINE 557:
	asm( 
"	      00452a8e    push 603AB8h"
"	      00452a93    mov eax,tempTextWindow"
"	      00452a96    mov eax,[eax]"
"	      00452a98    mov ecx,tempTextWindow"
"	      00452a9b    call dword ptr [eax+0D4h]"
);
// LINE 560:
	asm( 
"	      00452aa1    push 0A4h"
"	      00452aa6    call 0056A600h"
"	      00452aab    add esp,4"
"	      00452aae    mov [ebp-84h],eax"
"	      00452ab4    cmp dword ptr [ebp-84h],0"
"	      00452abb    je near ptr 00452B21h"
"	      00452ac1    jmp near ptr 00452AC6h"
"	      00452ac6    mov dword ptr [ebp-94h],4Ah"
"	      00452ad0    mov dword ptr [ebp-90h],160h"
"	      00452ada    mov dword ptr [ebp-8Ch],0FCh"
"	      00452ae4    mov dword ptr [ebp-88h],174h"
"	      00452aee    jmp near ptr 00452AF3h"
"	      00452af3    push 1"
"	      00452af5    mov eax,this"
"	      00452afb    push eax"
"	      00452afc    mov eax,this"
"	      00452b02    push eax"
"	      00452b03    push 4Dh"
"	      00452b05    push 0"
"	      00452b07    lea eax,[ebp-94h]"
"	      00452b0d    push eax"
"	      00452b0e    mov ecx,[ebp-84h]"
"	      00452b14    call 004ACCE6h"
"	      00452b19    mov tempTextWindow,eax"
"	      00452b1c    jmp near ptr 00452B28h"
"	      00452b21    mov tempTextWindow,0"
);
// LINE 561:
	asm( 
"	      00452b28    push 0"
"	      00452b2a    push 0"
"	      00452b2c    push 10h"
"	      00452b2e    mov eax,tempTextWindow"
"	      00452b31    mov eax,[eax]"
"	      00452b33    mov ecx,tempTextWindow"
"	      00452b36    call dword ptr [eax+0CCh]"
);
// LINE 562:
	asm( 
"	      00452b3c    push 8"
"	      00452b3e    mov eax,tempTextWindow"
"	      00452b41    mov eax,[eax]"
"	      00452b43    mov ecx,tempTextWindow"
"	      00452b46    call dword ptr [eax+0D0h]"
);
// LINE 563:
	asm( 
"	      00452b4c    push 603AB8h"
"	      00452b51    mov eax,tempTextWindow"
"	      00452b54    mov eax,[eax]"
"	      00452b56    mov ecx,tempTextWindow"
"	      00452b59    call dword ptr [eax+0D4h]"
);
// LINE 566:
	asm( 
"	      00452b5f    push 0A4h"
"	      00452b64    call 0056A600h"
"	      00452b69    add esp,4"
"	      00452b6c    mov [ebp-98h],eax"
"	      00452b72    cmp dword ptr [ebp-98h],0"
"	      00452b79    je near ptr 00452BDFh"
"	      00452b7f    jmp near ptr 00452B84h"
"	      00452b84    mov dword ptr [ebp-0A8h],4Ch"
"	      00452b8e    mov dword ptr [ebp-0A4h],0F5h"
"	      00452b98    mov dword ptr [ebp-0A0h],8Ah"
"	      00452ba2    mov dword ptr [ebp-9Ch],105h"
"	      00452bac    jmp near ptr 00452BB1h"
"	      00452bb1    push 1"
"	      00452bb3    mov eax,this"
"	      00452bb9    push eax"
"	      00452bba    mov eax,this"
"	      00452bc0    push eax"
"	      00452bc1    push 4Eh"
"	      00452bc3    push 0"
"	      00452bc5    lea eax,[ebp-0A8h]"
"	      00452bcb    push eax"
"	      00452bcc    mov ecx,[ebp-98h]"
"	      00452bd2    call 004ACCE6h"
"	      00452bd7    mov tempTextWindow,eax"
"	      00452bda    jmp near ptr 00452BE6h"
"	      00452bdf    mov tempTextWindow,0"
);
// LINE 567:
	asm( 
"	      00452be6    push 0"
"	      00452be8    push 0"
"	      00452bea    push 0Eh"
"	      00452bec    mov eax,tempTextWindow"
"	      00452bef    mov eax,[eax]"
"	      00452bf1    mov ecx,tempTextWindow"
"	      00452bf4    call dword ptr [eax+0CCh]"
);
// LINE 568:
	asm( 
"	      00452bfa    push 603AB8h"
"	      00452bff    mov eax,tempTextWindow"
"	      00452c02    mov eax,[eax]"
"	      00452c04    mov ecx,tempTextWindow"
"	      00452c07    call dword ptr [eax+0D4h]"
);
// LINE 571:
	asm( 
"	      00452c0d    push 0A4h"
"	      00452c12    call 0056A600h"
"	      00452c17    add esp,4"
"	      00452c1a    mov [ebp-0ACh],eax"
"	      00452c20    cmp dword ptr [ebp-0ACh],0"
"	      00452c27    je near ptr 00452C8Dh"
"	      00452c2d    jmp near ptr 00452C32h"
"	      00452c32    mov dword ptr [ebp-0BCh],0DEh"
"	      00452c3c    mov dword ptr [ebp-0B8h],0F5h"
"	      00452c46    mov dword ptr [ebp-0B4h],120h"
"	      00452c50    mov dword ptr [ebp-0B0h],105h"
"	      00452c5a    jmp near ptr 00452C5Fh"
"	      00452c5f    push 1"
"	      00452c61    mov eax,this"
"	      00452c67    push eax"
"	      00452c68    mov eax,this"
"	      00452c6e    push eax"
"	      00452c6f    push 4Fh"
"	      00452c71    push 0"
"	      00452c73    lea eax,[ebp-0BCh]"
"	      00452c79    push eax"
"	      00452c7a    mov ecx,[ebp-0ACh]"
"	      00452c80    call 004ACCE6h"
"	      00452c85    mov tempTextWindow,eax"
"	      00452c88    jmp near ptr 00452C94h"
"	      00452c8d    mov tempTextWindow,0"
);
// LINE 572:
	asm( 
"	      00452c94    push 8"
"	      00452c96    mov eax,tempTextWindow"
"	      00452c99    mov eax,[eax]"
"	      00452c9b    mov ecx,tempTextWindow"
"	      00452c9e    call dword ptr [eax+0D0h]"
);
// LINE 573:
	asm( 
"	      00452ca4    push 0"
"	      00452ca6    push 0"
"	      00452ca8    push 0Eh"
"	      00452caa    mov eax,tempTextWindow"
"	      00452cad    mov eax,[eax]"
"	      00452caf    mov ecx,tempTextWindow"
"	      00452cb2    call dword ptr [eax+0CCh]"
);
// LINE 574:
	asm( 
"	      00452cb8    push 603AB8h"
"	      00452cbd    mov eax,tempTextWindow"
"	      00452cc0    mov eax,[eax]"
"	      00452cc2    mov ecx,tempTextWindow"
"	      00452cc5    call dword ptr [eax+0D4h]"
);
// LINE 577:
	asm( 
"	      00452ccb    push 0A4h"
"	      00452cd0    call 0056A600h"
"	      00452cd5    add esp,4"
"	      00452cd8    mov [ebp-0C0h],eax"
"	      00452cde    cmp dword ptr [ebp-0C0h],0"
"	      00452ce5    je near ptr 00452D4Bh"
"	      00452ceb    jmp near ptr 00452CF0h"
"	      00452cf0    mov dword ptr [ebp-0D0h],8Eh"
"	      00452cfa    mov dword ptr [ebp-0CCh],0F5h"
"	      00452d04    mov dword ptr [ebp-0C8h],0DAh"
"	      00452d0e    mov dword ptr [ebp-0C4h],105h"
"	      00452d18    jmp near ptr 00452D1Dh"
"	      00452d1d    push 1"
"	      00452d1f    mov eax,this"
"	      00452d25    push eax"
"	      00452d26    mov eax,this"
"	      00452d2c    push eax"
"	      00452d2d    push 50h"
"	      00452d2f    push 0"
"	      00452d31    lea eax,[ebp-0D0h]"
"	      00452d37    push eax"
"	      00452d38    mov ecx,[ebp-0C0h]"
"	      00452d3e    call 004ACCE6h"
"	      00452d43    mov tempTextWindow,eax"
"	      00452d46    jmp near ptr 00452D52h"
"	      00452d4b    mov tempTextWindow,0"
);
// LINE 578:
	asm( 
"	      00452d52    push 1"
"	      00452d54    mov eax,tempTextWindow"
"	      00452d57    mov eax,[eax]"
"	      00452d59    mov ecx,tempTextWindow"
"	      00452d5c    call dword ptr [eax+0D0h]"
);
// LINE 579:
	asm( 
"	      00452d62    push 0"
"	      00452d64    push 0"
"	      00452d66    push 0Eh"
"	      00452d68    mov eax,tempTextWindow"
"	      00452d6b    mov eax,[eax]"
"	      00452d6d    mov ecx,tempTextWindow"
"	      00452d70    call dword ptr [eax+0CCh]"
);
// LINE 580:
	asm( 
"	      00452d76    push 603AB8h"
"	      00452d7b    mov eax,tempTextWindow"
"	      00452d7e    mov eax,[eax]"
"	      00452d80    mov ecx,tempTextWindow"
"	      00452d83    call dword ptr [eax+0D4h]"
);
// LINE 584:
	asm( 
"	      00452d89    push 94h"
"	      00452d8e    call 0056A600h"
"	      00452d93    add esp,4"
"	      00452d96    mov [ebp-0D4h],eax"
"	      00452d9c    cmp dword ptr [ebp-0D4h],0"
"	      00452da3    je near ptr 00452E12h"
"	      00452da9    jmp near ptr 00452DAEh"
"	      00452dae    mov dword ptr [ebp-0E4h],4Eh"
"	      00452db8    mov dword ptr [ebp-0E0h],40h"
"	      00452dc2    mov dword ptr [ebp-0DCh],51h"
"	      00452dcc    mov dword ptr [ebp-0D8h],43h"
"	      00452dd6    jmp near ptr 00452DDBh"
"	      00452ddb    push 1"
"	      00452ddd    mov eax,this"
"	      00452de3    push eax"
"	      00452de4    push 0"
"	      00452de6    mov eax,this"
"	      00452dec    push eax"
"	      00452ded    push 3"
"	      00452def    lea eax,[ebp-0E4h]"
"	      00452df5    push eax"
"	      00452df6    mov ecx,[ebp-0D4h]"
"	      00452dfc    call 00471A8Ch"
"	      00452e01    mov ecx,this"
"	      00452e07    mov [ecx+88h],eax"
"	      00452e0d    jmp near ptr 00452E22h"
"	      00452e12    mov eax,this"
"	      00452e18    mov dword ptr [eax+88h],0"
);
// LINE 585:
	asm( 
"	      00452e22    mov eax,this"
"	      00452e28    mov ecx,this"
"	      00452e2e    mov ecx,[ecx+88h]"
"	      00452e34    mov edx,[ecx]"
"	      00452e36    mov ecx,[eax+88h]"
"	      00452e3c    call dword ptr [edx+4]"
);
// LINE 588:
	asm( 
"	      00452e3f    push 94h"
"	      00452e44    call 0056A600h"
"	      00452e49    add esp,4"
"	      00452e4c    mov [ebp-0E8h],eax"
"	      00452e52    cmp dword ptr [ebp-0E8h],0"
"	      00452e59    je near ptr 00452EC8h"
"	      00452e5f    jmp near ptr 00452E64h"
"	      00452e64    mov dword ptr [ebp-0F8h],4Eh"
"	      00452e6e    mov dword ptr [ebp-0F4h],68h"
"	      00452e78    mov dword ptr [ebp-0F0h],51h"
"	      00452e82    mov dword ptr [ebp-0ECh],6Bh"
"	      00452e8c    jmp near ptr 00452E91h"
"	      00452e91    push 1"
"	      00452e93    mov eax,this"
"	      00452e99    push eax"
"	      00452e9a    push 0"
"	      00452e9c    mov eax,this"
"	      00452ea2    push eax"
"	      00452ea3    push 4"
"	      00452ea5    lea eax,[ebp-0F8h]"
"	      00452eab    push eax"
"	      00452eac    mov ecx,[ebp-0E8h]"
"	      00452eb2    call 00471A8Ch"
"	      00452eb7    mov ecx,this"
"	      00452ebd    mov [ecx+8Ch],eax"
"	      00452ec3    jmp near ptr 00452ED8h"
"	      00452ec8    mov eax,this"
"	      00452ece    mov dword ptr [eax+8Ch],0"
);
// LINE 589:
	asm( 
"	      00452ed8    mov eax,this"
"	      00452ede    mov ecx,this"
"	      00452ee4    mov ecx,[ecx+8Ch]"
"	      00452eea    mov edx,[ecx]"
"	      00452eec    mov ecx,[eax+8Ch]"
"	      00452ef2    call dword ptr [edx+4]"
);
// LINE 592:
	asm( 
"	      00452ef5    push 94h"
"	      00452efa    call 0056A600h"
"	      00452eff    add esp,4"
"	      00452f02    mov [ebp-0FCh],eax"
"	      00452f08    cmp dword ptr [ebp-0FCh],0"
"	      00452f0f    je near ptr 00452F7Eh"
"	      00452f15    jmp near ptr 00452F1Ah"
"	      00452f1a    mov dword ptr [ebp-10Ch],4Eh"
"	      00452f24    mov dword ptr [ebp-108h],92h"
"	      00452f2e    mov dword ptr [ebp-104h],51h"
"	      00452f38    mov dword ptr [ebp-100h],95h"
"	      00452f42    jmp near ptr 00452F47h"
"	      00452f47    push 1"
"	      00452f49    mov eax,this"
"	      00452f4f    push eax"
"	      00452f50    push 0"
"	      00452f52    mov eax,this"
"	      00452f58    push eax"
"	      00452f59    push 5"
"	      00452f5b    lea eax,[ebp-10Ch]"
"	      00452f61    push eax"
"	      00452f62    mov ecx,[ebp-0FCh]"
"	      00452f68    call 00471A8Ch"
"	      00452f6d    mov ecx,this"
"	      00452f73    mov [ecx+90h],eax"
"	      00452f79    jmp near ptr 00452F8Eh"
"	      00452f7e    mov eax,this"
"	      00452f84    mov dword ptr [eax+90h],0"
);
// LINE 593:
	asm( 
"	      00452f8e    mov eax,this"
"	      00452f94    mov ecx,this"
"	      00452f9a    mov ecx,[ecx+90h]"
"	      00452fa0    mov edx,[ecx]"
"	      00452fa2    mov ecx,[eax+90h]"
"	      00452fa8    call dword ptr [edx+4]"
);
// LINE 596:
	asm( 
"	      00452fab    push 84h"
"	      00452fb0    call 0056A600h"
"	      00452fb5    add esp,4"
"	      00452fb8    mov [ebp-110h],eax"
"	      00452fbe    cmp dword ptr [ebp-110h],0"
"	      00452fc5    je near ptr 00452FF9h"
"	      00452fcb    push 1"
"	      00452fcd    mov eax,this"
"	      00452fd3    push eax"
"	      00452fd4    mov eax,this"
"	      00452fda    push eax"
"	      00452fdb    push 6"
"	      00452fdd    mov ecx,[ebp-110h]"
"	      00452fe3    call 004B030Dh"
"	      00452fe8    mov ecx,this"
"	      00452fee    mov [ecx+94h],eax"
"	      00452ff4    jmp near ptr 00453009h"
"	      00452ff9    mov eax,this"
"	      00452fff    mov dword ptr [eax+94h],0"
);
// LINE 600:
	asm( 
"	      00453009    push 98h"
"	      0045300e    call 0056A600h"
"	      00453013    add esp,4"
"	      00453016    mov [ebp-114h],eax"
"	      0045301c    cmp dword ptr [ebp-114h],0"
"	      00453023    je near ptr 00453096h"
"	      00453029    jmp near ptr 0045302Eh"
"	      0045302e    mov dword ptr [ebp-124h],10Ah"
"	      00453038    mov dword ptr [ebp-120h],124h"
"	      00453042    mov dword ptr [ebp-11Ch],10Dh"
"	      0045304c    mov dword ptr [ebp-118h],127h"
"	      00453056    jmp near ptr 0045305Bh"
"	      0045305b    push 1"
"	      0045305d    mov eax,this"
"	      00453063    push eax"
"	      00453064    push 0"
"	      00453066    mov eax,this"
"	      0045306c    push eax"
"	      0045306d    push 7"
"	      0045306f    lea eax,[ebp-124h]"
"	      00453075    push eax"
"	      00453076    mov eax,this"
"	      0045307c    mov eax,[eax+94h]"
"	      00453082    push eax"
"	      00453083    mov ecx,[ebp-114h]"
"	      00453089    call 00471945h"
"	      0045308e    mov tempRadioButtonWindow,eax"
"	      00453091    jmp near ptr 0045309Dh"
"	      00453096    mov tempRadioButtonWindow,0"
);
// LINE 601:
	asm( 
"	      0045309d    mov eax,tempRadioButtonWindow"
"	      004530a0    mov eax,[eax]"
"	      004530a2    mov ecx,tempRadioButtonWindow"
"	      004530a5    call dword ptr [eax+4]"
);
// LINE 602:
	asm( 
"	      004530a8    push 1"
"	      004530aa    mov eax,tempRadioButtonWindow"
"	      004530ad    mov eax,[eax]"
"	      004530af    mov ecx,tempRadioButtonWindow"
"	      004530b2    call dword ptr [eax+0C8h]"
);
// LINE 606:
	asm( 
"	      004530b8    push 98h"
"	      004530bd    call 0056A600h"
"	      004530c2    add esp,4"
"	      004530c5    mov [ebp-128h],eax"
"	      004530cb    cmp dword ptr [ebp-128h],0"
"	      004530d2    je near ptr 00453145h"
"	      004530d8    jmp near ptr 004530DDh"
"	      004530dd    mov dword ptr [ebp-138h],10Ah"
"	      004530e7    mov dword ptr [ebp-134h],140h"
"	      004530f1    mov dword ptr [ebp-130h],10Dh"
"	      004530fb    mov dword ptr [ebp-12Ch],143h"
"	      00453105    jmp near ptr 0045310Ah"
"	      0045310a    push 1"
"	      0045310c    mov eax,this"
"	      00453112    push eax"
"	      00453113    push 0"
"	      00453115    mov eax,this"
"	      0045311b    push eax"
"	      0045311c    push 8"
"	      0045311e    lea eax,[ebp-138h]"
"	      00453124    push eax"
"	      00453125    mov eax,this"
"	      0045312b    mov eax,[eax+94h]"
"	      00453131    push eax"
"	      00453132    mov ecx,[ebp-128h]"
"	      00453138    call 00471945h"
"	      0045313d    mov tempRadioButtonWindow,eax"
"	      00453140    jmp near ptr 0045314Ch"
"	      00453145    mov tempRadioButtonWindow,0"
);
// LINE 607:
	asm( 
"	      0045314c    mov eax,tempRadioButtonWindow"
"	      0045314f    mov eax,[eax]"
"	      00453151    mov ecx,tempRadioButtonWindow"
"	      00453154    call dword ptr [eax+4]"
);
// LINE 608:
	asm( 
"	      00453157    push 1"
"	      00453159    mov eax,tempRadioButtonWindow"
"	      0045315c    mov eax,[eax]"
"	      0045315e    mov ecx,tempRadioButtonWindow"
"	      00453161    call dword ptr [eax+0C8h]"
);
// LINE 612:
	asm( 
"	      00453167    push 98h"
"	      0045316c    call 0056A600h"
"	      00453171    add esp,4"
"	      00453174    mov [ebp-13Ch],eax"
"	      0045317a    cmp dword ptr [ebp-13Ch],0"
"	      00453181    je near ptr 004531F4h"
"	      00453187    jmp near ptr 0045318Ch"
"	      0045318c    mov dword ptr [ebp-14Ch],10Ah"
"	      00453196    mov dword ptr [ebp-148h],15Ch"
"	      004531a0    mov dword ptr [ebp-144h],10Dh"
"	      004531aa    mov dword ptr [ebp-140h],15Fh"
"	      004531b4    jmp near ptr 004531B9h"
"	      004531b9    push 1"
"	      004531bb    mov eax,this"
"	      004531c1    push eax"
"	      004531c2    push 0"
"	      004531c4    mov eax,this"
"	      004531ca    push eax"
"	      004531cb    push 9"
"	      004531cd    lea eax,[ebp-14Ch]"
"	      004531d3    push eax"
"	      004531d4    mov eax,this"
"	      004531da    mov eax,[eax+94h]"
"	      004531e0    push eax"
"	      004531e1    mov ecx,[ebp-13Ch]"
"	      004531e7    call 00471945h"
"	      004531ec    mov tempRadioButtonWindow,eax"
"	      004531ef    jmp near ptr 004531FBh"
"	      004531f4    mov tempRadioButtonWindow,0"
);
// LINE 613:
	asm( 
"	      004531fb    mov eax,tempRadioButtonWindow"
"	      004531fe    mov eax,[eax]"
"	      00453200    mov ecx,tempRadioButtonWindow"
"	      00453203    call dword ptr [eax+4]"
);
// LINE 614:
	asm( 
"	      00453206    push 1"
"	      00453208    mov eax,tempRadioButtonWindow"
"	      0045320b    mov eax,[eax]"
"	      0045320d    mov ecx,tempRadioButtonWindow"
"	      00453210    call dword ptr [eax+0C8h]"
);
// LINE 619:
	asm( 
"	      00453216    push 0B4h"
"	      0045321b    call 0056A600h"
"	      00453220    add esp,4"
"	      00453223    mov [ebp-150h],eax"
"	      00453229    cmp dword ptr [ebp-150h],0"
"	      00453230    je near ptr 004532A9h"
"	      00453236    jmp near ptr 0045323Bh"
"	      0045323b    mov dword ptr [ebp-160h],48h"
"	      00453245    mov dword ptr [ebp-15Ch],0D5h"
"	      0045324f    mov dword ptr [ebp-158h],4Bh"
"	      00453259    mov dword ptr [ebp-154h],0D8h"
"	      00453263    jmp near ptr 00453268h"
"	      00453268    push 8"
"	      0045326a    mov eax,ds:[599168h]"
"	      0045326f    push eax"
"	      00453270    push 0"
"	      00453272    push 1"
"	      00453274    mov eax,this"
"	      0045327a    push eax"
"	      0045327b    mov eax,this"
"	      00453281    push eax"
"	      00453282    push 0"
"	      00453284    push 0Ah"
"	      00453286    lea eax,[ebp-160h]"
"	      0045328c    push eax"
"	      0045328d    mov ecx,[ebp-150h]"
"	      00453293    call 004B1256h"
"	      00453298    mov ecx,this"
"	      0045329e    mov [ecx+98h],eax"
"	      004532a4    jmp near ptr 004532B9h"
"	      004532a9    mov eax,this"
"	      004532af    mov dword ptr [eax+98h],0"
);
// LINE 620:
	asm( 
"	      004532b9    mov eax,this"
"	      004532bf    mov ecx,this"
"	      004532c5    mov ecx,[ecx+98h]"
"	      004532cb    mov edx,[ecx]"
"	      004532cd    mov ecx,[eax+98h]"
"	      004532d3    call dword ptr [edx+4]"
);
// LINE 621:
	asm( 
"	      004532d6    push 0"
"	      004532d8    mov eax,this"
"	      004532de    mov ecx,[eax+98h]"
"	      004532e4    call 004B2834h"
);
// LINE 622:
	asm( 
"	      004532e9    push 64h"
"	      004532eb    mov eax,this"
"	      004532f1    mov ecx,[eax+98h]"
"	      004532f7    call 004B2872h"
);
// LINE 626:
	asm( 
"	      004532fc    push 94h"
"	      00453301    call 0056A600h"
"	      00453306    add esp,4"
"	      00453309    mov [ebp-164h],eax"
"	      0045330f    cmp dword ptr [ebp-164h],0"
"	      00453316    je near ptr 0045337Ch"
"	      0045331c    jmp near ptr 00453321h"
"	      00453321    mov dword ptr [ebp-174h],148h"
"	      0045332b    mov dword ptr [ebp-170h],13Eh"
"	      00453335    mov dword ptr [ebp-16Ch],14Bh"
"	      0045333f    mov dword ptr [ebp-168h],141h"
"	      00453349    jmp near ptr 0045334Eh"
"	      0045334e    push 1"
"	      00453350    mov eax,this"
"	      00453356    push eax"
"	      00453357    push 0"
"	      00453359    mov eax,this"
"	      0045335f    push eax"
"	      00453360    push 1"
"	      00453362    lea eax,[ebp-174h]"
"	      00453368    push eax"
"	      00453369    mov ecx,[ebp-164h]"
"	      0045336f    call 00471847h"
"	      00453374    mov tempButtonWindow,eax"
"	      00453377    jmp near ptr 00453383h"
"	      0045337c    mov tempButtonWindow,0"
);
// LINE 627:
	asm( 
"	      00453383    push 0"
"	      00453385    push 51h"
"	      00453387    call 0042B15Fh"
"	      0045338c    add esp,8"
"	      0045338f    mov nFullStringID,eax"
);
// LINE 628:
	asm( 
"	      00453392    push 0FFFh"
"	      00453397    lea eax,[ebp-11C8h]"
"	      0045339d    push eax"
"	      0045339e    mov eax,nFullStringID"
"	      004533a1    push eax"
"	      004533a2    mov eax,ds:[5C28C8h]"
"	      004533a7    push eax"
"	      004533a8    call dword ptr ds:[6C38B4h]"
"	      004533ae    mov [ebp-11CCh],eax"
"	      004533b4    cmp dword ptr [ebp-11CCh],0"
"	      004533bb    jne near ptr 0045376Bh"
"	      004533c1    push 0FFFh"
"	      004533c6    lea eax,[ebp-11C8h]"
"	      004533cc    push eax"
"	      004533cd    mov ecx,3E8h"
"	      004533d2    mov eax,nFullStringID"
"	      004533d5    sub edx,edx"
"	      004533d7    div ecx"
"	      004533d9    push edx"
"	      004533da    mov eax,ds:[5C28C8h]"
"	      004533df    push eax"
"	      004533e0    call dword ptr ds:[6C38B4h]"
"	      004533e6    mov [ebp-11CCh],eax"
"	      004533ec    jmp near ptr 004533F1h"
"	      004533f1    lea eax,[ebp-11C8h]"
"	      004533f7    push eax"
"	      004533f8    call 0056ABE0h"
"	      004533fd    add esp,4"
"	      00453400    mov [ebp-11E8h],eax"
"	      00453406    cmp dword ptr [ebp-11E8h],0FFFFFFFFh"
"	      0045340d    jne near ptr 0045344Bh"
"	      00453413    push 5971E4h"
"	      00453418    mov ecx,638C00h"
"	      0045341d    call 00569960h"
"	      00453422    mov [ebp-11DCh],eax"
"	      00453428    mov eax,[ebp-11DCh]"
"	      0045342e    push eax"
"	      0045342f    call 004011B0h"
"	      00453434    add esp,4"
"	      00453437    jmp near ptr 0045343Ch"
"	      0045343c    push 1"
"	      0045343e    call 00569430h"
"	      00453443    add esp,4"
"	      00453446    jmp near ptr 0045344Bh"
"	      0045344b    jmp near ptr 00453450h"
"	      00453450    mov eax,sText.reference"
"	      00453453    cmp dword ptr [eax+0Ch],1"
"	      00453457    ja near ptr 00453481h"
"	      0045345d    cmp dword ptr [ebp-11E8h],0"
"	      00453464    je near ptr 00453526h"
"	      0045346a    jmp near ptr 0045346Fh"
"	      0045346f    mov eax,sText.reference"
"	      00453472    mov ecx,[ebp-11E8h]"
"	      00453478    cmp [eax+8],ecx"
"	      0045347b    jae near ptr 00453526h"
"	      00453481    push 10h"
"	      00453483    call 0056A600h"
"	      00453488    add esp,4"
"	      0045348b    mov [ebp-11D4h],eax"
"	      00453491    cmp dword ptr [ebp-11D4h],0"
"	      00453498    je near ptr 004534C2h"
"	      0045349e    mov eax,[ebp-11E8h]"
"	      004534a4    push eax"
"	      004534a5    lea eax,[ebp-11C8h]"
"	      004534ab    push eax"
"	      004534ac    mov ecx,[ebp-11D4h]"
"	      004534b2    call 0041E090h"
"	      004534b7    mov [ebp-11D0h],eax"
"	      004534bd    jmp near ptr 004534CCh"
"	      004534c2    mov dword ptr [ebp-11D0h],0"
"	      004534cc    mov eax,sText.reference"
"	      004534cf    dec dword ptr [eax+0Ch]"
"	      004534d2    mov eax,sText.reference"
"	      004534d5    cmp dword ptr [eax+0Ch],0"
"	      004534d9    jne near ptr 00453513h"
"	      004534df    mov eax,sText.reference"
"	      004534e2    mov [ebp-11E4h],eax"
"	      004534e8    mov eax,[ebp-11E4h]"
"	      004534ee    mov [ebp-11E0h],eax"
"	      004534f4    cmp dword ptr [ebp-11E0h],0"
"	      004534fb    je near ptr 00453513h"
"	      00453501    push 1"
"	      00453503    mov ecx,[ebp-11E0h]"
"	      00453509    call 0041DD70h"
"	      0045350e    jmp near ptr 00453513h"
"	      00453513    jmp near ptr 00453518h"
"	      00453518    mov eax,[ebp-11D0h]"
"	      0045351e    mov sText.reference,eax"
"	      00453521    jmp near ptr 00453565h"
"	      00453526    cmp dword ptr [ebp-11E8h],0"
"	      0045352d    je near ptr 00453565h"
"	      00453533    jmp near ptr 00453538h"
"	      00453538    mov eax,sText.reference"
"	      0045353b    mov eax,[eax]"
"	      0045353d    mov [ebp-11D8h],eax"
"	      00453543    mov eax,[ebp-11E8h]"
"	      00453549    push eax"
"	      0045354a    lea eax,[ebp-11C8h]"
"	      00453550    push eax"
"	      00453551    mov eax,[ebp-11D8h]"
"	      00453557    push eax"
"	      00453558    call 0056A800h"
"	      0045355d    add esp,0Ch"
"	      00453560    jmp near ptr 00453565h"
"	      00453565    mov eax,[ebp-11E8h]"
"	      0045356b    mov ecx,sText.reference"
"	      0045356e    mov [ecx+4],eax"
"	      00453571    jmp near ptr 00453576h"
"	      00453576    jmp near ptr 0045357Bh"
"	      0045357b    jmp near ptr 00453580h"
"	      00453580    push 597200h"
"	      00453585    call 0056ABE0h"
"	      0045358a    add esp,4"
"	      0045358d    mov [ebp-1208h],eax"
"	      00453593    jmp near ptr 00453598h"
"	      00453598    mov eax,sText.reference"
"	      0045359b    mov ecx,0FFFFFFFFh"
"	      004535a0    sub ecx,[ebp-1208h]"
"	      004535a6    cmp [eax+4],ecx"
"	      004535a9    jb near ptr 004535E7h"
"	      004535af    push 5971E4h"
"	      004535b4    mov ecx,638C00h"
"	      004535b9    call 00569960h"
"	      004535be    mov [ebp-11FCh],eax"
"	      004535c4    mov eax,[ebp-11FCh]"
"	      004535ca    push eax"
"	      004535cb    call 004011B0h"
"	      004535d0    add esp,4"
"	      004535d3    jmp near ptr 004535D8h"
"	      004535d8    push 1"
"	      004535da    call 00569430h"
"	      004535df    add esp,4"
"	      004535e2    jmp near ptr 004535E7h"
"	      004535e7    jmp near ptr 004535ECh"
"	      004535ec    mov eax,sText.reference"
"	      004535ef    cmp dword ptr [eax+0Ch],1"
"	      004535f3    ja near ptr 0045361Bh"
"	      004535f9    jmp near ptr 004535FEh"
"	      004535fe    jmp near ptr 00453603h"
"	      00453603    mov eax,sText.reference"
"	      00453606    mov eax,[eax+8]"
"	      00453609    mov ecx,sText.reference"
"	      0045360c    sub eax,[ecx+4]"
"	      0045360f    cmp eax,[ebp-1208h]"
"	      00453615    jae near ptr 00453708h"
"	      0045361b    push 10h"
"	      0045361d    call 0056A600h"
"	      00453622    add esp,4"
"	      00453625    mov [ebp-11F0h],eax"
"	      0045362b    cmp dword ptr [ebp-11F0h],0"
"	      00453632    je near ptr 004536A9h"
"	      00453638    jmp near ptr 0045363Dh"
"	      0045363d    jmp near ptr 00453642h"
"	      00453642    jmp near ptr 00453647h"
"	      00453647    mov eax,sText.reference"
"	      0045364a    cmp dword ptr [eax+4],0"
"	      0045364e    je near ptr 00453669h"
"	      00453654    mov eax,sText.reference"
"	      00453657    mov eax,[eax]"
"	      00453659    mov [ebp-11F8h],eax"
"	      0045365f    jmp near ptr 00453678h"
"	      00453664    jmp near ptr 00453678h"
"	      00453669    mov dword ptr [ebp-11F8h],0"
"	      00453673    jmp near ptr 00453678h"
"	      00453678    mov eax,sText.reference"
"	      0045367b    mov eax,[eax+4]"
"	      0045367e    add eax,[ebp-1208h]"
"	      00453684    push eax"
"	      00453685    mov eax,sText.reference"
"	      00453688    mov eax,[eax+4]"
"	      0045368b    push eax"
"	      0045368c    mov eax,[ebp-11F8h]"
"	      00453692    push eax"
"	      00453693    mov ecx,[ebp-11F0h]"
"	      00453699    call 0041E160h"
"	      0045369e    mov [ebp-11ECh],eax"
"	      004536a4    jmp near ptr 004536B3h"
"	      004536a9    mov dword ptr [ebp-11ECh],0"
"	      004536b3    mov eax,sText.reference"
"	      004536b6    dec dword ptr [eax+0Ch]"
"	      004536b9    mov eax,sText.reference"
"	      004536bc    cmp dword ptr [eax+0Ch],0"
"	      004536c0    jne near ptr 004536FAh"
"	      004536c6    mov eax,sText.reference"
"	      004536c9    mov [ebp-1204h],eax"
"	      004536cf    mov eax,[ebp-1204h]"
"	      004536d5    mov [ebp-1200h],eax"
"	      004536db    cmp dword ptr [ebp-1200h],0"
"	      004536e2    je near ptr 004536FAh"
"	      004536e8    push 1"
"	      004536ea    mov ecx,[ebp-1200h]"
"	      004536f0    call 0041DD70h"
"	      004536f5    jmp near ptr 004536FAh"
"	      004536fa    jmp near ptr 004536FFh"
"	      004536ff    mov eax,[ebp-11ECh]"
"	      00453705    mov sText.reference,eax"
"	      00453708    cmp dword ptr [ebp-1208h],0"
"	      0045370f    je near ptr 00453750h"
"	      00453715    jmp near ptr 0045371Ah"
"	      0045371a    jmp near ptr 0045371Fh"
"	      0045371f    mov eax,sText.reference"
"	      00453722    mov eax,[eax+4]"
"	      00453725    mov ecx,sText.reference"
"	      00453728    add eax,[ecx]"
"	      0045372a    mov [ebp-11F4h],eax"
"	      00453730    mov eax,[ebp-1208h]"
"	      00453736    push eax"
"	      00453737    push 597200h"
"	      0045373c    mov eax,[ebp-11F4h]"
"	      00453742    push eax"
"	      00453743    call 0056A800h"
"	      00453748    add esp,0Ch"
"	      0045374b    jmp near ptr 00453750h"
"	      00453750    mov eax,[ebp-1208h]"
"	      00453756    mov ecx,sText.reference"
"	      00453759    add [ecx+4],eax"
"	      0045375c    jmp near ptr 00453761h"
"	      00453761    jmp near ptr 00453766h"
"	      00453766    jmp near ptr 004538FFh"
"	      0045376b    jmp near ptr 00453770h"
"	      00453770    lea eax,[ebp-11C8h]"
"	      00453776    push eax"
"	      00453777    call 0056ABE0h"
"	      0045377c    add esp,4"
"	      0045377f    mov [ebp-1224h],eax"
"	      00453785    cmp dword ptr [ebp-1224h],0FFFFFFFFh"
"	      0045378c    jne near ptr 004537CAh"
"	      00453792    push 5971E4h"
"	      00453797    mov ecx,638C00h"
"	      0045379c    call 00569960h"
"	      004537a1    mov [ebp-1218h],eax"
"	      004537a7    mov eax,[ebp-1218h]"
"	      004537ad    push eax"
"	      004537ae    call 004011B0h"
"	      004537b3    add esp,4"
"	      004537b6    jmp near ptr 004537BBh"
"	      004537bb    push 1"
"	      004537bd    call 00569430h"
"	      004537c2    add esp,4"
"	      004537c5    jmp near ptr 004537CAh"
"	      004537ca    jmp near ptr 004537CFh"
"	      004537cf    mov eax,sText.reference"
"	      004537d2    cmp dword ptr [eax+0Ch],1"
"	      004537d6    ja near ptr 00453800h"
"	      004537dc    cmp dword ptr [ebp-1224h],0"
"	      004537e3    je near ptr 004538A5h"
"	      004537e9    jmp near ptr 004537EEh"
"	      004537ee    mov eax,sText.reference"
"	      004537f1    mov ecx,[ebp-1224h]"
"	      004537f7    cmp [eax+8],ecx"
"	      004537fa    jae near ptr 004538A5h"
"	      00453800    push 10h"
"	      00453802    call 0056A600h"
"	      00453807    add esp,4"
"	      0045380a    mov [ebp-1210h],eax"
"	      00453810    cmp dword ptr [ebp-1210h],0"
"	      00453817    je near ptr 00453841h"
"	      0045381d    mov eax,[ebp-1224h]"
"	      00453823    push eax"
"	      00453824    lea eax,[ebp-11C8h]"
"	      0045382a    push eax"
"	      0045382b    mov ecx,[ebp-1210h]"
"	      00453831    call 0041E090h"
"	      00453836    mov [ebp-120Ch],eax"
"	      0045383c    jmp near ptr 0045384Bh"
"	      00453841    mov dword ptr [ebp-120Ch],0"
"	      0045384b    mov eax,sText.reference"
"	      0045384e    dec dword ptr [eax+0Ch]"
"	      00453851    mov eax,sText.reference"
"	      00453854    cmp dword ptr [eax+0Ch],0"
"	      00453858    jne near ptr 00453892h"
"	      0045385e    mov eax,sText.reference"
"	      00453861    mov [ebp-1220h],eax"
"	      00453867    mov eax,[ebp-1220h]"
"	      0045386d    mov [ebp-121Ch],eax"
"	      00453873    cmp dword ptr [ebp-121Ch],0"
"	      0045387a    je near ptr 00453892h"
"	      00453880    push 1"
"	      00453882    mov ecx,[ebp-121Ch]"
"	      00453888    call 0041DD70h"
"	      0045388d    jmp near ptr 00453892h"
"	      00453892    jmp near ptr 00453897h"
"	      00453897    mov eax,[ebp-120Ch]"
"	      0045389d    mov sText.reference,eax"
"	      004538a0    jmp near ptr 004538E4h"
"	      004538a5    cmp dword ptr [ebp-1224h],0"
"	      004538ac    je near ptr 004538E4h"
"	      004538b2    jmp near ptr 004538B7h"
"	      004538b7    mov eax,sText.reference"
"	      004538ba    mov eax,[eax]"
"	      004538bc    mov [ebp-1214h],eax"
"	      004538c2    mov eax,[ebp-1224h]"
"	      004538c8    push eax"
"	      004538c9    lea eax,[ebp-11C8h]"
"	      004538cf    push eax"
"	      004538d0    mov eax,[ebp-1214h]"
"	      004538d6    push eax"
"	      004538d7    call 0056A800h"
"	      004538dc    add esp,0Ch"
"	      004538df    jmp near ptr 004538E4h"
"	      004538e4    mov eax,[ebp-1224h]"
"	      004538ea    mov ecx,sText.reference"
"	      004538ed    mov [ecx+4],eax"
"	      004538f0    jmp near ptr 004538F5h"
"	      004538f5    jmp near ptr 004538FAh"
"	      004538fa    jmp near ptr 004538FFh"
);
// LINE 629:
	asm( 
"	      004538ff    lea eax,sText.c_str_ptr"
"	      00453902    push eax"
"	      00453903    mov eax,tempButtonWindow"
"	      00453906    mov eax,[eax]"
"	      00453908    mov ecx,tempButtonWindow"
"	      0045390b    call dword ptr [eax+48h]"
);
// LINE 630:
	asm( 
"	      0045390e    push 603AB8h"
"	      00453913    push 603AB0h"
"	      00453918    mov eax,tempButtonWindow"
"	      0045391b    mov eax,[eax]"
"	      0045391d    mov ecx,tempButtonWindow"
"	      00453920    call dword ptr [eax+0D8h]"
);
// LINE 631:
	asm( 
"	      00453926    mov eax,tempButtonWindow"
"	      00453929    mov eax,[eax]"
"	      0045392b    mov ecx,tempButtonWindow"
"	      0045392e    call dword ptr [eax+4]"
);
// LINE 634:
	asm( 
"	      00453931    push 94h"
"	      00453936    call 0056A600h"
"	      0045393b    add esp,4"
"	      0045393e    mov [ebp-178h],eax"
"	      00453944    cmp dword ptr [ebp-178h],0"
"	      0045394b    je near ptr 004539B1h"
"	      00453951    jmp near ptr 00453956h"
"	      00453956    mov dword ptr [ebp-188h],1B0h"
"	      00453960    mov dword ptr [ebp-184h],13Eh"
"	      0045396a    mov dword ptr [ebp-180h],1B3h"
"	      00453974    mov dword ptr [ebp-17Ch],141h"
"	      0045397e    jmp near ptr 00453983h"
"	      00453983    push 1"
"	      00453985    mov eax,this"
"	      0045398b    push eax"
"	      0045398c    push 0"
"	      0045398e    mov eax,this"
"	      00453994    push eax"
"	      00453995    push 2"
"	      00453997    lea eax,[ebp-188h]"
"	      0045399d    push eax"
"	      0045399e    mov ecx,[ebp-178h]"
"	      004539a4    call 00471847h"
"	      004539a9    mov tempButtonWindow,eax"
"	      004539ac    jmp near ptr 004539B8h"
"	      004539b1    mov tempButtonWindow,0"
);
// LINE 635:
	asm( 
"	      004539b8    push 0"
"	      004539ba    push 52h"
"	      004539bc    call 0042B15Fh"
"	      004539c1    add esp,8"
"	      004539c4    mov nFullStringID,eax"
);
// LINE 636:
	asm( 
"	      004539c7    push 0FFFh"
"	      004539cc    lea eax,[ebp-2224h]"
"	      004539d2    push eax"
"	      004539d3    mov eax,nFullStringID"
"	      004539d6    push eax"
"	      004539d7    mov eax,ds:[5C28C8h]"
"	      004539dc    push eax"
"	      004539dd    call dword ptr ds:[6C38B4h]"
"	      004539e3    mov [ebp-2228h],eax"
"	      004539e9    cmp dword ptr [ebp-2228h],0"
"	      004539f0    jne near ptr 00453D5Ch"
"	      004539f6    push 0FFFh"
"	      004539fb    lea eax,[ebp-2224h]"
"	      00453a01    push eax"
"	      00453a02    mov ecx,3E8h"
"	      00453a07    mov eax,nFullStringID"
"	      00453a0a    sub edx,edx"
"	      00453a0c    div ecx"
"	      00453a0e    push edx"
"	      00453a0f    mov eax,ds:[5C28C8h]"
"	      00453a14    push eax"
"	      00453a15    call dword ptr ds:[6C38B4h]"
"	      00453a1b    mov [ebp-2228h],eax"
"	      00453a21    jmp near ptr 00453A26h"
"	      00453a26    lea eax,[ebp-2224h]"
"	      00453a2c    push eax"
"	      00453a2d    call 0056ABE0h"
"	      00453a32    add esp,4"
"	      00453a35    mov [ebp-2244h],eax"
"	      00453a3b    cmp dword ptr [ebp-2244h],0FFFFFFFFh"
"	      00453a42    jne near ptr 00453A80h"
"	      00453a48    push 5971E4h"
"	      00453a4d    mov ecx,638C00h"
"	      00453a52    call 00569960h"
"	      00453a57    mov [ebp-2238h],eax"
"	      00453a5d    mov eax,[ebp-2238h]"
"	      00453a63    push eax"
"	      00453a64    call 004011B0h"
"	      00453a69    add esp,4"
"	      00453a6c    jmp near ptr 00453A71h"
"	      00453a71    push 1"
"	      00453a73    call 00569430h"
"	      00453a78    add esp,4"
"	      00453a7b    jmp near ptr 00453A80h"
"	      00453a80    jmp near ptr 00453A85h"
"	      00453a85    mov eax,sText.reference"
"	      00453a88    cmp dword ptr [eax+0Ch],1"
"	      00453a8c    ja near ptr 00453AB6h"
"	      00453a92    cmp dword ptr [ebp-2244h],0"
"	      00453a99    je near ptr 00453B5Bh"
"	      00453a9f    jmp near ptr 00453AA4h"
"	      00453aa4    mov eax,sText.reference"
"	      00453aa7    mov ecx,[ebp-2244h]"
"	      00453aad    cmp [eax+8],ecx"
"	      00453ab0    jae near ptr 00453B5Bh"
"	      00453ab6    push 10h"
"	      00453ab8    call 0056A600h"
"	      00453abd    add esp,4"
"	      00453ac0    mov [ebp-2230h],eax"
"	      00453ac6    cmp dword ptr [ebp-2230h],0"
"	      00453acd    je near ptr 00453AF7h"
"	      00453ad3    mov eax,[ebp-2244h]"
"	      00453ad9    push eax"
"	      00453ada    lea eax,[ebp-2224h]"
"	      00453ae0    push eax"
"	      00453ae1    mov ecx,[ebp-2230h]"
"	      00453ae7    call 0041E090h"
"	      00453aec    mov [ebp-222Ch],eax"
"	      00453af2    jmp near ptr 00453B01h"
"	      00453af7    mov dword ptr [ebp-222Ch],0"
"	      00453b01    mov eax,sText.reference"
"	      00453b04    dec dword ptr [eax+0Ch]"
"	      00453b07    mov eax,sText.reference"
"	      00453b0a    cmp dword ptr [eax+0Ch],0"
"	      00453b0e    jne near ptr 00453B48h"
"	      00453b14    mov eax,sText.reference"
"	      00453b17    mov [ebp-2240h],eax"
"	      00453b1d    mov eax,[ebp-2240h]"
"	      00453b23    mov [ebp-223Ch],eax"
"	      00453b29    cmp dword ptr [ebp-223Ch],0"
"	      00453b30    je near ptr 00453B48h"
"	      00453b36    push 1"
"	      00453b38    mov ecx,[ebp-223Ch]"
"	      00453b3e    call 0041DD70h"
"	      00453b43    jmp near ptr 00453B48h"
"	      00453b48    jmp near ptr 00453B4Dh"
"	      00453b4d    mov eax,[ebp-222Ch]"
"	      00453b53    mov sText.reference,eax"
"	      00453b56    jmp near ptr 00453B9Ah"
"	      00453b5b    cmp dword ptr [ebp-2244h],0"
"	      00453b62    je near ptr 00453B9Ah"
"	      00453b68    jmp near ptr 00453B6Dh"
"	      00453b6d    mov eax,sText.reference"
"	      00453b70    mov eax,[eax]"
"	      00453b72    mov [ebp-2234h],eax"
"	      00453b78    mov eax,[ebp-2244h]"
"	      00453b7e    push eax"
"	      00453b7f    lea eax,[ebp-2224h]"
"	      00453b85    push eax"
"	      00453b86    mov eax,[ebp-2234h]"
"	      00453b8c    push eax"
"	      00453b8d    call 0056A800h"
"	      00453b92    add esp,0Ch"
"	      00453b95    jmp near ptr 00453B9Ah"
"	      00453b9a    mov eax,[ebp-2244h]"
"	      00453ba0    mov ecx,sText.reference"
"	      00453ba3    mov [ecx+4],eax"
"	      00453ba6    jmp near ptr 00453BABh"
"	      00453bab    jmp near ptr 00453BB0h"
"	      00453bb0    jmp near ptr 00453BB5h"
"	      00453bb5    push 597200h"
"	      00453bba    call 0056ABE0h"
"	      00453bbf    add esp,4"
"	      00453bc2    mov [ebp-225Ch],eax"
"	      00453bc8    jmp near ptr 00453BCDh"
"	      00453bcd    mov eax,sText.reference"
"	      00453bd0    mov ecx,0FFFFFFFFh"
"	      00453bd5    sub ecx,[ebp-225Ch]"
"	      00453bdb    cmp [eax+4],ecx"
"	      00453bde    jb near ptr 00453C1Ch"
"	      00453be4    push 5971E4h"
"	      00453be9    mov ecx,638C00h"
"	      00453bee    call 00569960h"
"	      00453bf3    mov [ebp-2258h],eax"
"	      00453bf9    mov eax,[ebp-2258h]"
"	      00453bff    push eax"
"	      00453c00    call 004011B0h"
"	      00453c05    add esp,4"
"	      00453c08    jmp near ptr 00453C0Dh"
"	      00453c0d    push 1"
"	      00453c0f    call 00569430h"
"	      00453c14    add esp,4"
"	      00453c17    jmp near ptr 00453C1Ch"
"	      00453c1c    jmp near ptr 00453C21h"
"	      00453c21    mov eax,sText.reference"
"	      00453c24    cmp dword ptr [eax+0Ch],1"
"	      00453c28    ja near ptr 00453C50h"
"	      00453c2e    jmp near ptr 00453C33h"
"	      00453c33    jmp near ptr 00453C38h"
"	      00453c38    mov eax,sText.reference"
"	      00453c3b    mov eax,[eax+8]"
"	      00453c3e    mov ecx,sText.reference"
"	      00453c41    sub eax,[ecx+4]"
"	      00453c44    cmp eax,[ebp-225Ch]"
"	      00453c4a    jae near ptr 00453CF9h"
"	      00453c50    push 10h"
"	      00453c52    call 0056A600h"
"	      00453c57    add esp,4"
"	      00453c5a    mov [ebp-224Ch],eax"
"	      00453c60    cmp dword ptr [ebp-224Ch],0"
"	      00453c67    je near ptr 00453CDEh"
"	      00453c6d    jmp near ptr 00453C72h"
"	      00453c72    jmp near ptr 00453C77h"
"	      00453c77    jmp near ptr 00453C7Ch"
"	      00453c7c    mov eax,sText.reference"
"	      00453c7f    cmp dword ptr [eax+4],0"
"	      00453c83    je near ptr 00453C9Eh"
"	      00453c89    mov eax,sText.reference"
"	      00453c8c    mov eax,[eax]"
"	      00453c8e    mov [ebp-2254h],eax"
"	      00453c94    jmp near ptr 00453CADh"
"	      00453c99    jmp near ptr 00453CADh"
"	      00453c9e    mov dword ptr [ebp-2254h],0"
"	      00453ca8    jmp near ptr 00453CADh"
"	      00453cad    mov eax,sText.reference"
"	      00453cb0    mov eax,[eax+4]"
"	      00453cb3    add eax,[ebp-225Ch]"
"	      00453cb9    push eax"
"	      00453cba    mov eax,sText.reference"
"	      00453cbd    mov eax,[eax+4]"
"	      00453cc0    push eax"
"	      00453cc1    mov eax,[ebp-2254h]"
"	      00453cc7    push eax"
"	      00453cc8    mov ecx,[ebp-224Ch]"
"	      00453cce    call 0041E160h"
"	      00453cd3    mov [ebp-2248h],eax"
"	      00453cd9    jmp near ptr 00453CE8h"
"	      00453cde    mov dword ptr [ebp-2248h],0"
"	      00453ce8    lea ecx,sText.c_str_ptr"
"	      00453ceb    call 00412080h"
"	      00453cf0    mov eax,[ebp-2248h]"
"	      00453cf6    mov sText.reference,eax"
"	      00453cf9    cmp dword ptr [ebp-225Ch],0"
"	      00453d00    je near ptr 00453D41h"
"	      00453d06    jmp near ptr 00453D0Bh"
"	      00453d0b    jmp near ptr 00453D10h"
"	      00453d10    mov eax,sText.reference"
"	      00453d13    mov eax,[eax+4]"
"	      00453d16    mov ecx,sText.reference"
"	      00453d19    add eax,[ecx]"
"	      00453d1b    mov [ebp-2250h],eax"
"	      00453d21    mov eax,[ebp-225Ch]"
"	      00453d27    push eax"
"	      00453d28    push 597200h"
"	      00453d2d    mov eax,[ebp-2250h]"
"	      00453d33    push eax"
"	      00453d34    call 0056A800h"
"	      00453d39    add esp,0Ch"
"	      00453d3c    jmp near ptr 00453D41h"
"	      00453d41    mov eax,[ebp-225Ch]"
"	      00453d47    mov ecx,sText.reference"
"	      00453d4a    add [ecx+4],eax"
"	      00453d4d    jmp near ptr 00453D52h"
"	      00453d52    jmp near ptr 00453D57h"
"	      00453d57    jmp near ptr 00453F07h"
"	      00453d5c    jmp near ptr 00453D61h"
"	      00453d61    lea eax,[ebp-2224h]"
"	      00453d67    push eax"
"	      00453d68    call 0056ABE0h"
"	      00453d6d    add esp,4"
"	      00453d70    mov [ebp-2278h],eax"
"	      00453d76    cmp dword ptr [ebp-2278h],0FFFFFFFFh"
"	      00453d7d    jne near ptr 00453DBBh"
"	      00453d83    push 5971E4h"
"	      00453d88    mov ecx,638C00h"
"	      00453d8d    call 00569960h"
"	      00453d92    mov [ebp-226Ch],eax"
"	      00453d98    mov eax,[ebp-226Ch]"
"	      00453d9e    push eax"
"	      00453d9f    call 004011B0h"
"	      00453da4    add esp,4"
"	      00453da7    jmp near ptr 00453DACh"
"	      00453dac    push 1"
"	      00453dae    call 00569430h"
"	      00453db3    add esp,4"
"	      00453db6    jmp near ptr 00453DBBh"
"	      00453dbb    jmp near ptr 00453DC0h"
"	      00453dc0    mov eax,sText.reference"
"	      00453dc3    cmp dword ptr [eax+0Ch],1"
"	      00453dc7    ja near ptr 00453DF1h"
"	      00453dcd    cmp dword ptr [ebp-2278h],0"
"	      00453dd4    je near ptr 00453EADh"
"	      00453dda    jmp near ptr 00453DDFh"
"	      00453ddf    mov eax,sText.reference"
"	      00453de2    mov ecx,[ebp-2278h]"
"	      00453de8    cmp [eax+8],ecx"
"	      00453deb    jae near ptr 00453EADh"
"	      00453df1    push 10h"
"	      00453df3    call 0056A600h"
"	      00453df8    add esp,4"
"	      00453dfb    mov [ebp-2264h],eax"
"	      00453e01    cmp dword ptr [ebp-2264h],0"
"	      00453e08    je near ptr 00453E32h"
"	      00453e0e    mov eax,[ebp-2278h]"
"	      00453e14    push eax"
"	      00453e15    lea eax,[ebp-2224h]"
"	      00453e1b    push eax"
"	      00453e1c    mov ecx,[ebp-2264h]"
"	      00453e22    call 0041E090h"
"	      00453e27    mov [ebp-2260h],eax"
"	      00453e2d    jmp near ptr 00453E3Ch"
"	      00453e32    mov dword ptr [ebp-2260h],0"
"	      00453e3c    mov eax,sText.reference"
"	      00453e3f    dec dword ptr [eax+0Ch]"
"	      00453e42    mov eax,sText.reference"
"	      00453e45    cmp dword ptr [eax+0Ch],0"
"	      00453e49    jne near ptr 00453E9Ah"
"	      00453e4f    mov eax,sText.reference"
"	      00453e52    mov [ebp-2274h],eax"
"	      00453e58    mov eax,[ebp-2274h]"
"	      00453e5e    mov [ebp-2270h],eax"
"	      00453e64    cmp dword ptr [ebp-2270h],0"
"	      00453e6b    je near ptr 00453E9Ah"
"	      00453e71    mov ecx,[ebp-2270h]"
"	      00453e77    call 0041F4B0h"
"	      00453e7c    jmp near ptr 00453E81h"
"	      00453e81    mov eax,[ebp-2270h]"
"	      00453e87    push eax"
"	      00453e88    call 0056A740h"
"	      00453e8d    add esp,4"
"	      00453e90    jmp near ptr 00453E95h"
"	      00453e95    jmp near ptr 00453E9Ah"
"	      00453e9a    jmp near ptr 00453E9Fh"
"	      00453e9f    mov eax,[ebp-2260h]"
"	      00453ea5    mov sText.reference,eax"
"	      00453ea8    jmp near ptr 00453EECh"
"	      00453ead    cmp dword ptr [ebp-2278h],0"
"	      00453eb4    je near ptr 00453EECh"
"	      00453eba    jmp near ptr 00453EBFh"
"	      00453ebf    mov eax,sText.reference"
"	      00453ec2    mov eax,[eax]"
"	      00453ec4    mov [ebp-2268h],eax"
"	      00453eca    mov eax,[ebp-2278h]"
"	      00453ed0    push eax"
"	      00453ed1    lea eax,[ebp-2224h]"
"	      00453ed7    push eax"
"	      00453ed8    mov eax,[ebp-2268h]"
"	      00453ede    push eax"
"	      00453edf    call 0056A800h"
"	      00453ee4    add esp,0Ch"
"	      00453ee7    jmp near ptr 00453EECh"
"	      00453eec    mov eax,[ebp-2278h]"
"	      00453ef2    mov ecx,sText.reference"
"	      00453ef5    mov [ecx+4],eax"
"	      00453ef8    jmp near ptr 00453EFDh"
"	      00453efd    jmp near ptr 00453F02h"
"	      00453f02    jmp near ptr 00453F07h"
);
// LINE 637:
	asm( 
"	      00453f07    lea eax,sText.c_str_ptr"
"	      00453f0a    push eax"
"	      00453f0b    mov eax,tempButtonWindow"
"	      00453f0e    mov eax,[eax]"
"	      00453f10    mov ecx,tempButtonWindow"
"	      00453f13    call dword ptr [eax+48h]"
);
// LINE 638:
	asm( 
"	      00453f16    push 603AB8h"
"	      00453f1b    push 603AB0h"
"	      00453f20    mov eax,tempButtonWindow"
"	      00453f23    mov eax,[eax]"
"	      00453f25    mov ecx,tempButtonWindow"
"	      00453f28    call dword ptr [eax+0D8h]"
);
// LINE 639:
	asm( 
"	      00453f2e    mov eax,tempButtonWindow"
"	      00453f31    mov eax,[eax]"
"	      00453f33    mov ecx,tempButtonWindow"
"	      00453f36    call dword ptr [eax+4]"
);
// LINE 645:
	asm( 
"	      00453f39    mov eax,this"
"	      00453f3f    cmp dword ptr [eax+0A4h],1"
"	      00453f46    je near ptr 00453FD7h"
"	      00453f4c    mov eax,this"
"	      00453f52    mov dword ptr [eax+0A4h],1"
"	      00453f5c    mov eax,this"
"	      00453f62    cmp dword ptr [eax+0A4h],0"
"	      00453f69    jne near ptr 00453FB2h"
"	      00453f6f    mov eax,this"
"	      00453f75    cmp dword ptr [eax+0B0h],0"
"	      00453f7c    jne near ptr 00453FB2h"
"	      00453f82    lea eax,[ebp-1C8h]"
"	      00453f88    push eax"
"	      00453f89    call dword ptr ds:[6C3668h]"
"	      00453f8f    mov eax,[ebp-1C8h]"
"	      00453f95    mov [ebp-1C0h],eax"
"	      00453f9b    mov eax,[ebp-1C0h]"
"	      00453fa1    mov ecx,this"
"	      00453fa7    mov [ecx+0B0h],eax"
"	      00453fad    jmp near ptr 00453FB2h"
"	      00453fb2    mov eax,this"
"	      00453fb8    mov dword ptr [eax+0ACh],0"
"	      00453fc2    mov eax,this"
"	      00453fc8    mov dword ptr [eax+0A8h],0"
"	      00453fd2    jmp near ptr 00453FD7h"
"	      00453fd7    jmp near ptr 00453FDCh"
);
// LINE 646:
	asm( 
"	      00453fdc    jmp near ptr 00453FE1h"
"	      00453fe1    mov eax,this"
"	      00453fe7    cmp dword ptr [eax+0A8h],0"
"	      00453fee    je near ptr 00453FF9h"
"	      00453ff4    jmp near ptr 00454095h"
"	      00453ff9    mov eax,this"
"	      00453fff    cmp dword ptr [eax+0A4h],1"
"	      00454006    jne near ptr 00454028h"
"	      0045400c    call dword ptr ds:[6C3908h]"
"	      00454012    mov ecx,this"
"	      00454018    mov [ecx+0A8h],eax"
"	      0045401e    jmp near ptr 00454090h"
"	      00454023    jmp near ptr 00454090h"
"	      00454028    mov eax,this"
"	      0045402e    cmp dword ptr [eax+0A4h],0"
"	      00454035    jne near ptr 00454070h"
"	      0045403b    lea eax,[ebp-198h]"
"	      00454041    push eax"
"	      00454042    call dword ptr ds:[6C365Ch]"
"	      00454048    mov eax,[ebp-198h]"
"	      0045404e    mov [ebp-190h],eax"
"	      00454054    mov eax,[ebp-190h]"
"	      0045405a    mov ecx,this"
"	      00454060    mov [ecx+0A8h],eax"
"	      00454066    jmp near ptr 00454090h"
"	      0045406b    jmp near ptr 00454090h"
"	      00454070    call dword ptr ds:[6C3908h]"
"	      00454076    mov ecx,3E8h"
"	      0045407b    sub edx,edx"
"	      0045407d    div ecx"
"	      0045407f    mov ecx,this"
"	      00454085    mov [ecx+0A8h],eax"
"	      0045408b    jmp near ptr 00454090h"
"	      00454090    jmp near ptr 00454095h"
);
// LINE 648:
	asm( 
"	      00454095    mov eax,this"
"	      0045409b    push eax"
"	      0045409c    call 004A7075h"
"	      004540a1    add esp,4"
);
// LINE 649:
	asm( 
"	      004540a4    mov eax,this"
"	      004540aa    push eax"
"	      004540ab    call 004A7470h"
"	      004540b0    add esp,4"
);
// LINE 651:
	asm( 
"	      004540b3    mov dword ptr [ebp-18Ch],1"
"	      004540bd    mov eax,sText.reference"
"	      004540c0    dec dword ptr [eax+0Ch]"
"	      004540c3    mov eax,sText.reference"
"	      004540c6    cmp dword ptr [eax+0Ch],0"
"	      004540ca    jne near ptr 0045411Bh"
"	      004540d0    mov eax,sText.reference"
"	      004540d3    mov [ebp-1BCh],eax"
"	      004540d9    mov eax,[ebp-1BCh]"
"	      004540df    mov [ebp-1B8h],eax"
"	      004540e5    cmp dword ptr [ebp-1B8h],0"
"	      004540ec    je near ptr 0045411Bh"
"	      004540f2    mov ecx,[ebp-1B8h]"
"	      004540f8    call 0041F4B0h"
"	      004540fd    jmp near ptr 00454102h"
"	      00454102    mov eax,[ebp-1B8h]"
"	      00454108    push eax"
"	      00454109    call 0056A740h"
"	      0045410e    add esp,4"
"	      00454111    jmp near ptr 00454116h"
"	      00454116    jmp near ptr 0045411Bh"
"	      0045411b    jmp near ptr 00454120h"
"	      00454120    cmp sText.c_str_ptr,0"
"	      00454124    je near ptr 0045414Eh"
"	      0045412a    mov eax,sText.c_str_ptr"
"	      0045412d    mov [ebp-1B0h],eax"
"	      00454133    mov eax,[ebp-1B0h]"
"	      00454139    mov [ebp-1B4h],eax"
"	      0045413f    mov eax,[ebp-1B4h]"
"	      00454145    push eax"
"	      00454146    call 0056A740h"
"	      0045414b    add esp,4"
"	      0045414e    jmp near ptr 00454153h"
"	      00454153    mov eax,[ebp-18Ch]"
"	      00454159    jmp near ptr 0045415Eh"
);
// LINE 652:
	asm( 
"	      0045415e    pop edi"
"	      0045415f    pop esi"
"	      00454160    pop ebx"
"	      00454161    leave"
"	      00454162    ret"
);
}

// FUNCTION: COPTER_D 0x00454163
int32_t RenderSettingsWindow::CreateImage(int32_t bResizeWindowToFitImage) {
// LINE 659:
	asm( 
"	      00454163    push ebp"
"	      00454164    mov ebp,esp"
"	      00454166    sub esp,4"
"	      00454169    push ebx"
"	      0045416a    push esi"
"	      0045416b    push edi"
"	      0045416c    mov this,ecx"
);
// LINE 661:
	asm( 
"	      0045416f    mov eax,bResizeWindowToFitImage"
"	      00454172    push eax"
"	      00454173    mov ecx,this"
"	      00454176    call 004A4AA0h"
);
// LINE 662:
	asm( 
"	      0045417b    mov eax,this"
"	      0045417e    cmp dword ptr [eax+58h],0FFFFFFFFh"
"	      00454182    je near ptr 004541A2h"
);
// LINE 663:
	asm( 
"	      00454188    mov eax,this"
"	      0045418b    mov eax,[eax+58h]"
"	      0045418e    push eax"
"	      0045418f    push 1"
"	      00454191    mov eax,this"
"	      00454194    mov ecx,this"
"	      00454197    mov ecx,[ecx+40h]"
"	      0045419a    mov edx,[ecx]"
"	      0045419c    mov ecx,[eax+40h]"
"	      0045419f    call dword ptr [edx+8]"
);
// LINE 665:
	asm( 
"	      004541a2    mov ecx,this"
"	      004541a5    call 004547CAh"
);
// LINE 666:
	asm( 
"	      004541aa    mov eax,this"
"	      004541ad    mov eax,[eax+40h]"
"	      004541b0    jmp near ptr 004541B5h"
);
// LINE 667:
	asm( 
"	      004541b5    pop edi"
"	      004541b6    pop esi"
"	      004541b7    pop ebx"
"	      004541b8    leave"
"	      004541b9    ret 4"
);
}

// FUNCTION: COPTER_D 0x004541bc
void RenderSettingsWindow::DestroyImage() {
// LINE 674:
	asm( 
"	      004541bc    push ebp"
"	      004541bd    mov ebp,esp"
"	      004541bf    sub esp,14h"
"	      004541c2    push ebx"
"	      004541c3    push esi"
"	      004541c4    push edi"
"	      004541c5    mov this,ecx"
);
// LINE 676:
	asm( 
"	      004541c8    mov ecx,this"
"	      004541cb    call 004A4CABh"
);
// LINE 678:
	asm( 
"	      004541d0    mov eax,this"
"	      004541d3    cmp dword ptr [eax+9Ch],0"
"	      004541da    je near ptr 00454227h"
);
// LINE 679:
	asm( 
"	      004541e0    mov eax,this"
"	      004541e3    mov eax,[eax+9Ch]"
"	      004541e9    mov [ebp-8],eax"
"	      004541ec    mov eax,[ebp-8]"
"	      004541ef    mov [ebp-4],eax"
"	      004541f2    cmp dword ptr [ebp-4],0"
"	      004541f6    je near ptr 0045421Ah"
"	      004541fc    mov ecx,[ebp-4]"
"	      004541ff    call 0046EC7Ah"
"	      00454204    mov eax,[ebp-4]"
"	      00454207    push eax"
"	      00454208    call 0056A740h"
"	      0045420d    add esp,4"
"	      00454210    jmp near ptr 00454215h"
"	      00454215    jmp near ptr 0045421Ah"
);
// LINE 680:
	asm( 
"	      0045421a    mov eax,this"
"	      0045421d    mov dword ptr [eax+9Ch],0"
);
// LINE 682:
	asm( 
"	      00454227    mov eax,this"
"	      0045422a    cmp dword ptr [eax+0A0h],0"
"	      00454231    je near ptr 0045427Eh"
);
// LINE 683:
	asm( 
"	      00454237    mov eax,this"
"	      0045423a    mov eax,[eax+0A0h]"
"	      00454240    mov [ebp-10h],eax"
"	      00454243    mov eax,[ebp-10h]"
"	      00454246    mov [ebp-0Ch],eax"
"	      00454249    cmp dword ptr [ebp-0Ch],0"
"	      0045424d    je near ptr 00454271h"
"	      00454253    mov ecx,[ebp-0Ch]"
"	      00454256    call 0046EC7Ah"
"	      0045425b    mov eax,[ebp-0Ch]"
"	      0045425e    push eax"
"	      0045425f    call 0056A740h"
"	      00454264    add esp,4"
"	      00454267    jmp near ptr 0045426Ch"
"	      0045426c    jmp near ptr 00454271h"
);
// LINE 684:
	asm( 
"	      00454271    mov eax,this"
"	      00454274    mov dword ptr [eax+0A0h],0"
);
// LINE 686:
	asm( 
"	      0045427e    jmp near ptr 00454283h"
"	      00454283    pop edi"
"	      00454284    pop esi"
"	      00454285    pop ebx"
"	      00454286    leave"
"	      00454287    ret"
);
}

// FUNCTION: COPTER_D 0x00454288
int32_t RenderSettingsWindow::DrawSelf() {
// LINE 693:
	asm( 
"	      00454288    push ebp"
"	      00454289    mov ebp,esp"
"	      0045428b    sub esp,2Ch"
"	      0045428e    push ebx"
"	      0045428f    push esi"
"	      00454290    push edi"
"	      00454291    mov this,ecx"
);
// LINE 694:
	asm( 
"	      00454294    mov eax,this"
"	      00454297    mov eax,[eax+0ACh]"
"	      0045429d    mov [ebp-14h],eax"
"	      004542a0    jmp near ptr 004542A5h"
"	      004542a5    mov eax,this"
"	      004542a8    cmp dword ptr [eax+0A8h],0"
"	      004542af    je near ptr 00454334h"
"	      004542b5    mov eax,this"
"	      004542b8    cmp dword ptr [eax+0A4h],1"
"	      004542bf    jne near ptr 004542D8h"
"	      004542c5    call dword ptr ds:[6C3908h]"
"	      004542cb    mov [ebp-24h],eax"
"	      004542ce    jmp near ptr 0045431Fh"
"	      004542d3    jmp near ptr 0045431Fh"
"	      004542d8    mov eax,this"
"	      004542db    cmp dword ptr [eax+0A4h],0"
"	      004542e2    jne near ptr 00454308h"
"	      004542e8    lea eax,[ebp-20h]"
"	      004542eb    push eax"
"	      004542ec    call dword ptr ds:[6C365Ch]"
"	      004542f2    mov eax,[ebp-20h]"
"	      004542f5    mov [ebp-18h],eax"
"	      004542f8    mov eax,[ebp-18h]"
"	      004542fb    mov [ebp-24h],eax"
"	      004542fe    jmp near ptr 0045431Fh"
"	      00454303    jmp near ptr 0045431Fh"
"	      00454308    call dword ptr ds:[6C3908h]"
"	      0045430e    mov ecx,3E8h"
"	      00454313    sub edx,edx"
"	      00454315    div ecx"
"	      00454317    mov [ebp-24h],eax"
"	      0045431a    jmp near ptr 0045431Fh"
"	      0045431f    mov eax,[ebp-24h]"
"	      00454322    mov ecx,this"
"	      00454325    sub eax,[ecx+0A8h]"
"	      0045432b    mov [ebp-10h],eax"
"	      0045432e    mov eax,[ebp-10h]"
"	      00454331    add [ebp-14h],eax"
"	      00454334    mov eax,this"
"	      00454337    cmp dword ptr [eax+0A4h],0"
"	      0045433e    jne near ptr 00454382h"
"	      00454344    mov eax,this"
"	      00454347    cmp dword ptr [eax+0B0h],0"
"	      0045434e    je near ptr 00454382h"
"	      00454354    mov eax,this"
"	      00454357    mov eax,[eax+0B0h]"
"	      0045435d    push eax"
"	      0045435e    push 0F4240h"
"	      00454363    mov eax,[ebp-14h]"
"	      00454366    push eax"
"	      00454367    call dword ptr ds:[6C372Ch]"
"	      0045436d    mov [ebp-14h],eax"
"	      00454370    cmp dword ptr [ebp-14h],96h"
"	      00454377    jbe near ptr 00454518h"
"	      0045437d    jmp near ptr 004543A1h"
"	      00454382    cmp dword ptr [ebp-14h],96h"
"	      00454389    jbe near ptr 00454518h"
"	      0045438f    jmp near ptr 004543A1h"
"	      00454394    cmp dword ptr [ebp-28h],96h"
"	      0045439b    jbe near ptr 00454518h"
);
// LINE 695:
	asm( 
"	      004543a1    mov eax,this"
"	      004543a4    inc dword ptr [eax+0B4h]"
);
// LINE 696:
	asm( 
"	      004543aa    mov eax,this"
"	      004543ad    cmp dword ptr [eax+0B4h],0C8h"
"	      004543b7    jle near ptr 004543CAh"
);
// LINE 697:
	asm( 
"	      004543bd    mov eax,this"
"	      004543c0    mov dword ptr [eax+0B4h],0"
);
// LINE 701:
	asm( 
"	      004543ca    push 42h"
"	      004543cc    mov eax,this"
"	      004543cf    mov eax,[eax+0B4h]"
"	      004543d5    add eax,0C8h"
"	      004543da    push eax"
"	      004543db    push 0"
"	      004543dd    mov eax,this"
"	      004543e0    mov eax,[eax+0B4h]"
"	      004543e6    push eax"
"	      004543e7    push 38h"
"	      004543e9    push 14Bh"
"	      004543ee    mov eax,this"
"	      004543f1    mov eax,[eax+40h]"
"	      004543f4    push eax"
"	      004543f5    mov eax,this"
"	      004543f8    mov ecx,this"
"	      004543fb    mov ecx,[ecx+9Ch]"
"	      00454401    mov edx,[ecx]"
"	      00454403    mov ecx,[eax+9Ch]"
"	      00454409    call dword ptr [edx+0Ch]"
);
// LINE 703:
	asm( 
"	      0045440c    jmp near ptr 00454411h"
"	      00454411    jmp near ptr 00454416h"
"	      00454416    mov eax,this"
"	      00454419    mov eax,[eax+0A0h]"
"	      0045441f    mov eax,[eax+0Ch]"
"	      00454422    push eax"
"	      00454423    mov eax,this"
"	      00454426    mov eax,[eax+0A0h]"
"	      0045442c    mov eax,[eax+8]"
"	      0045442f    push eax"
"	      00454430    push 0"
"	      00454432    push 0"
"	      00454434    push 6Ch"
"	      00454436    push 159h"
"	      0045443b    mov eax,this"
"	      0045443e    mov eax,[eax+40h]"
"	      00454441    push eax"
"	      00454442    mov eax,this"
"	      00454445    mov ecx,this"
"	      00454448    mov ecx,[ecx+0A0h]"
"	      0045444e    mov edx,[ecx]"
"	      00454450    mov ecx,[eax+0A0h]"
"	      00454456    call dword ptr [edx+0Ch]"
);
// LINE 705:
	asm( 
"	      00454459    mov eax,this"
"	      0045445c    mov dword ptr [eax+0ACh],0"
"	      00454466    mov eax,this"
"	      00454469    mov dword ptr [eax+0A8h],0"
"	      00454473    jmp near ptr 00454478h"
"	      00454478    jmp near ptr 0045447Dh"
"	      0045447d    mov eax,this"
"	      00454480    cmp dword ptr [eax+0A8h],0"
"	      00454487    je near ptr 00454492h"
"	      0045448d    jmp near ptr 00454513h"
"	      00454492    mov eax,this"
"	      00454495    cmp dword ptr [eax+0A4h],1"
"	      0045449c    jne near ptr 004544BBh"
"	      004544a2    call dword ptr ds:[6C3908h]"
"	      004544a8    mov ecx,this"
"	      004544ab    mov [ecx+0A8h],eax"
"	      004544b1    jmp near ptr 0045450Eh"
"	      004544b6    jmp near ptr 0045450Eh"
"	      004544bb    mov eax,this"
"	      004544be    cmp dword ptr [eax+0A4h],0"
"	      004544c5    jne near ptr 004544F1h"
"	      004544cb    lea eax,[ebp-0Ch]"
"	      004544ce    push eax"
"	      004544cf    call dword ptr ds:[6C365Ch]"
"	      004544d5    mov eax,[ebp-0Ch]"
"	      004544d8    mov [ebp-4],eax"
"	      004544db    mov eax,[ebp-4]"
"	      004544de    mov ecx,this"
"	      004544e1    mov [ecx+0A8h],eax"
"	      004544e7    jmp near ptr 0045450Eh"
"	      004544ec    jmp near ptr 0045450Eh"
"	      004544f1    call dword ptr ds:[6C3908h]"
"	      004544f7    mov ecx,3E8h"
"	      004544fc    sub edx,edx"
"	      004544fe    div ecx"
"	      00454500    mov ecx,this"
"	      00454503    mov [ecx+0A8h],eax"
"	      00454509    jmp near ptr 0045450Eh"
"	      0045450e    jmp near ptr 00454513h"
"	      00454513    jmp near ptr 00454518h"
);
// LINE 707:
	asm( 
"	      00454518    mov eax,1"
"	      0045451d    jmp near ptr 00454522h"
);
// LINE 708:
	asm( 
"	      00454522    pop edi"
"	      00454523    pop esi"
"	      00454524    pop ebx"
"	      00454525    leave"
"	      00454526    ret"
);
}

// FUNCTION: COPTER_D 0x00454527
long RenderSettingsWindow::DoKeyDown(long lKey, char chModifiers) {
// LINE 715:
	asm( 
"	      00454527    push ebp"
"	      00454528    mov ebp,esp"
"	      0045452a    sub esp,4"
"	      0045452d    push ebx"
"	      0045452e    push esi"
"	      0045452f    push edi"
"	      00454530    mov this,ecx"
);
// LINE 716:
	asm( 
"	      00454533    cmp lKey,1Bh"
"	      00454537    jne near ptr 0045456Ch"
);
// LINE 717:
	asm( 
"	      0045453d    mov eax,this"
"	      00454540    cmp dword ptr [eax+38h],0"
"	      00454544    je near ptr 0045456Ch"
);
// LINE 718:
	asm( 
"	      0045454a    push 0"
"	      0045454c    push 3EAh"
"	      00454551    mov eax,this"
"	      00454554    mov eax,[eax+4]"
"	      00454557    push eax"
"	      00454558    mov eax,this"
"	      0045455b    push eax"
"	      0045455c    mov eax,this"
"	      0045455f    mov ecx,this"
"	      00454562    mov ecx,[ecx+38h]"
"	      00454565    mov edx,[ecx]"
"	      00454567    mov ecx,[eax+38h]"
"	      0045456a    call dword ptr [edx]"
);
// LINE 720:
	asm( 
"	      0045456c    mov eax,1"
"	      00454571    jmp near ptr 00454576h"
);
// LINE 721:
	asm( 
"	      00454576    pop edi"
"	      00454577    pop esi"
"	      00454578    pop ebx"
"	      00454579    leave"
"	      0045457a    ret 8"
);
}

// FUNCTION: COPTER_D 0x0045457d
int32_t RenderSettingsWindow::SetCurrentSettings(long bNewShowBuildingTextures, long bNewShowGroundTextures, long bNewShowSkyAndClouds, long lNewQuadPixelType, long lNewFogCloseness) {
// LINE 737:
	asm( 
"	      0045457d    push ebp"
"	      0045457e    mov ebp,esp"
"	      00454580    sub esp,4"
"	      00454583    push ebx"
"	      00454584    push esi"
"	      00454585    push edi"
"	      00454586    mov this,ecx"
);
// LINE 738:
	asm( 
"	      00454589    mov eax,bNewShowBuildingTextures"
"	      0045458c    mov ecx,this"
"	      0045458f    mov [ecx+74h],eax"
);
// LINE 739:
	asm( 
"	      00454592    mov eax,bNewShowGroundTextures"
"	      00454595    mov ecx,this"
"	      00454598    mov [ecx+78h],eax"
);
// LINE 740:
	asm( 
"	      0045459b    mov eax,bNewShowSkyAndClouds"
"	      0045459e    mov ecx,this"
"	      004545a1    mov [ecx+7Ch],eax"
);
// LINE 741:
	asm( 
"	      004545a4    mov eax,lNewQuadPixelType"
"	      004545a7    mov ecx,this"
"	      004545aa    mov [ecx+80h],eax"
);
// LINE 742:
	asm( 
"	      004545b0    mov eax,lNewFogCloseness"
"	      004545b3    mov ecx,this"
"	      004545b6    mov [ecx+84h],eax"
);
// LINE 743:
	asm( 
"	      004545bc    mov ecx,this"
"	      004545bf    call 00454632h"
);
// LINE 744:
	asm( 
"	      004545c4    mov ecx,this"
"	      004545c7    call 004547CAh"
);
// LINE 746:
	asm( 
"	      004545cc    mov eax,1"
"	      004545d1    jmp near ptr 004545D6h"
);
// LINE 747:
	asm( 
"	      004545d6    pop edi"
"	      004545d7    pop esi"
"	      004545d8    pop ebx"
"	      004545d9    leave"
"	      004545da    ret 14h"
);
}

// FUNCTION: COPTER_D 0x004545dd
void RenderSettingsWindow::GetCurrentSettings(long& bGetShowBuildingTextures, long& bGetShowGroundTextures, long& bGetShowSkyAndClouds, long& lGetQuadPixelType, long& lGetFogCloseness) {
// LINE 762:
	asm( 
"	      004545dd    push ebp"
"	      004545de    mov ebp,esp"
"	      004545e0    sub esp,4"
"	      004545e3    push ebx"
"	      004545e4    push esi"
"	      004545e5    push edi"
"	      004545e6    mov this,ecx"
);
// LINE 763:
	asm( 
"	      004545e9    mov eax,this"
"	      004545ec    mov eax,[eax+74h]"
"	      004545ef    mov ecx,bGetShowBuildingTextures"
"	      004545f2    mov [ecx],eax"
);
// LINE 764:
	asm( 
"	      004545f4    mov eax,this"
"	      004545f7    mov eax,[eax+78h]"
"	      004545fa    mov ecx,bGetShowGroundTextures"
"	      004545fd    mov [ecx],eax"
);
// LINE 765:
	asm( 
"	      004545ff    mov eax,this"
"	      00454602    mov eax,[eax+7Ch]"
"	      00454605    mov ecx,bGetShowSkyAndClouds"
"	      00454608    mov [ecx],eax"
);
// LINE 766:
	asm( 
"	      0045460a    mov eax,this"
"	      0045460d    mov eax,[eax+80h]"
"	      00454613    mov ecx,lGetQuadPixelType"
"	      00454616    mov [ecx],eax"
);
// LINE 767:
	asm( 
"	      00454618    mov eax,this"
"	      0045461b    mov eax,[eax+84h]"
"	      00454621    mov ecx,lGetFogCloseness"
"	      00454624    mov [ecx],eax"
);
// LINE 768:
	asm( 
"	      00454626    jmp near ptr 0045462Bh"
"	      0045462b    pop edi"
"	      0045462c    pop esi"
"	      0045462d    pop ebx"
"	      0045462e    leave"
"	      0045462f    ret 14h"
);
}

// FUNCTION: COPTER_D 0x00454632
void RenderSettingsWindow::SetControlsBasedOnCurrentSettings() {
// LINE 776:
	asm( 
"	      00454632    push ebp"
"	      00454633    mov ebp,esp"
"	      00454635    sub esp,4"
"	      00454638    push ebx"
"	      00454639    push esi"
"	      0045463a    push edi"
"	      0045463b    mov this,ecx"
);
// LINE 777:
	asm( 
"	      0045463e    mov eax,this"
"	      00454641    cmp dword ptr [eax+74h],0"
"	      00454645    je near ptr 0045466Ch"
);
// LINE 778:
	asm( 
"	      0045464b    push 2"
"	      0045464d    mov eax,this"
"	      00454650    mov ecx,this"
"	      00454653    mov ecx,[ecx+88h]"
"	      00454659    mov edx,[ecx]"
"	      0045465b    mov ecx,[eax+88h]"
"	      00454661    call dword ptr [edx+0C8h]"
);
// LINE 779:
	asm( 
"	      00454667    jmp near ptr 00454688h"
);
// LINE 780:
	asm( 
"	      0045466c    push 1"
"	      0045466e    mov eax,this"
"	      00454671    mov ecx,this"
"	      00454674    mov ecx,[ecx+88h]"
"	      0045467a    mov edx,[ecx]"
"	      0045467c    mov ecx,[eax+88h]"
"	      00454682    call dword ptr [edx+0C8h]"
);
// LINE 782:
	asm( 
"	      00454688    mov eax,this"
"	      0045468b    cmp dword ptr [eax+78h],0"
"	      0045468f    je near ptr 004546B6h"
);
// LINE 783:
	asm( 
"	      00454695    push 2"
"	      00454697    mov eax,this"
"	      0045469a    mov ecx,this"
"	      0045469d    mov ecx,[ecx+8Ch]"
"	      004546a3    mov edx,[ecx]"
"	      004546a5    mov ecx,[eax+8Ch]"
"	      004546ab    call dword ptr [edx+0C8h]"
);
// LINE 784:
	asm( 
"	      004546b1    jmp near ptr 004546D2h"
);
// LINE 785:
	asm( 
"	      004546b6    push 1"
"	      004546b8    mov eax,this"
"	      004546bb    mov ecx,this"
"	      004546be    mov ecx,[ecx+8Ch]"
"	      004546c4    mov edx,[ecx]"
"	      004546c6    mov ecx,[eax+8Ch]"
"	      004546cc    call dword ptr [edx+0C8h]"
);
// LINE 787:
	asm( 
"	      004546d2    mov eax,this"
"	      004546d5    cmp dword ptr [eax+7Ch],0"
"	      004546d9    je near ptr 00454700h"
);
// LINE 788:
	asm( 
"	      004546df    push 2"
"	      004546e1    mov eax,this"
"	      004546e4    mov ecx,this"
"	      004546e7    mov ecx,[ecx+90h]"
"	      004546ed    mov edx,[ecx]"
"	      004546ef    mov ecx,[eax+90h]"
"	      004546f5    call dword ptr [edx+0C8h]"
);
// LINE 789:
	asm( 
"	      004546fb    jmp near ptr 0045471Ch"
);
// LINE 790:
	asm( 
"	      00454700    push 1"
"	      00454702    mov eax,this"
"	      00454705    mov ecx,this"
"	      00454708    mov ecx,[ecx+90h]"
"	      0045470e    mov edx,[ecx]"
"	      00454710    mov ecx,[eax+90h]"
"	      00454716    call dword ptr [edx+0C8h]"
);
// LINE 792:
	asm( 
"	      0045471c    mov eax,this"
"	      0045471f    cmp dword ptr [eax+80h],0"
"	      00454726    jge near ptr 00454739h"
);
// LINE 793:
	asm( 
"	      0045472c    mov eax,this"
"	      0045472f    mov dword ptr [eax+80h],0"
);
// LINE 794:
	asm( 
"	      00454739    mov eax,this"
"	      0045473c    cmp dword ptr [eax+80h],2"
"	      00454743    jle near ptr 00454756h"
);
// LINE 795:
	asm( 
"	      00454749    mov eax,this"
"	      0045474c    mov dword ptr [eax+80h],2"
);
// LINE 796:
	asm( 
"	      00454756    mov eax,this"
"	      00454759    mov eax,[eax+80h]"
"	      0045475f    push eax"
"	      00454760    mov eax,this"
"	      00454763    mov ecx,[eax+94h]"
"	      00454769    call 004B0CD4h"
);
// LINE 798:
	asm( 
"	      0045476e    mov eax,this"
"	      00454771    cmp dword ptr [eax+84h],0"
"	      00454778    jge near ptr 0045478Bh"
);
// LINE 799:
	asm( 
"	      0045477e    mov eax,this"
"	      00454781    mov dword ptr [eax+84h],0"
);
// LINE 800:
	asm( 
"	      0045478b    mov eax,this"
"	      0045478e    cmp dword ptr [eax+84h],64h"
"	      00454795    jle near ptr 004547A8h"
);
// LINE 801:
	asm( 
"	      0045479b    mov eax,this"
"	      0045479e    mov dword ptr [eax+84h],64h"
);
// LINE 802:
	asm( 
"	      004547a8    mov eax,this"
"	      004547ab    mov eax,[eax+84h]"
"	      004547b1    push eax"
"	      004547b2    mov eax,this"
"	      004547b5    mov ecx,[eax+98h]"
"	      004547bb    call 004B273Ah"
);
// LINE 803:
	asm( 
"	      004547c0    jmp near ptr 004547C5h"
"	      004547c5    pop edi"
"	      004547c6    pop esi"
"	      004547c7    pop ebx"
"	      004547c8    leave"
"	      004547c9    ret"
);
}

// FUNCTION: COPTER_D 0x004547ca
void RenderSettingsWindow::DrawPreviewBasedOnCurrentSettings() {
	class basic_string<char> sGroundPreviewFileName;
	class basic_string<char> sGroundPreviewFilePath;
	class basic_string<char> sSkyPreviewFilePath;
	class CBackBuffer tempGroundImage;
	class basic_string<char> sBuildingPreviewFilePath;
	class basic_string<char> sSkyPreviewFileName;
	class basic_string<char> sBuildingPreviewFileName;

// LINE 814:
	asm( 
"	      004547ca    push ebp"
"	      004547cb    mov ebp,esp"
"	      004547cd    sub esp,1ECh"
"	      004547d3    push ebx"
"	      004547d4    push esi"
"	      004547d5    push edi"
"	      004547d6    mov this,ecx"
);
// LINE 815:
	asm( 
"	      004547dc    push 10h"
"	      004547de    call 0056A600h"
"	      004547e3    add esp,4"
"	      004547e6    mov [ebp-184h],eax"
"	      004547ec    cmp dword ptr [ebp-184h],0"
"	      004547f3    je near ptr 00454844h"
"	      004547f9    mov eax,[ebp-184h]"
"	      004547ff    mov dword ptr [eax+4],0"
"	      00454806    mov eax,[ebp-184h]"
"	      0045480c    mov eax,[eax+4]"
"	      0045480f    mov ecx,[ebp-184h]"
"	      00454815    mov [ecx+8],eax"
"	      00454818    mov eax,[ebp-184h]"
"	      0045481e    mov dword ptr [eax],0"
"	      00454824    mov eax,[ebp-184h]"
"	      0045482a    mov dword ptr [eax+0Ch],1"
"	      00454831    jmp near ptr 00454836h"
"	      00454836    mov eax,[ebp-184h]"
"	      0045483c    mov sSkyPreviewFileName.reference,eax"
"	      0045483f    jmp near ptr 0045484Bh"
"	      00454844    mov sSkyPreviewFileName.reference,0"
"	      0045484b    mov sSkyPreviewFileName.c_str_ptr,0"
"	      00454852    jmp near ptr 00454857h"
);
// LINE 816:
	asm( 
"	      00454857    push 10h"
"	      00454859    call 0056A600h"
"	      0045485e    add esp,4"
"	      00454861    mov [ebp-188h],eax"
"	      00454867    cmp dword ptr [ebp-188h],0"
"	      0045486e    je near ptr 004548C2h"
"	      00454874    mov eax,[ebp-188h]"
"	      0045487a    mov dword ptr [eax+4],0"
"	      00454881    mov eax,[ebp-188h]"
"	      00454887    mov eax,[eax+4]"
"	      0045488a    mov ecx,[ebp-188h]"
"	      00454890    mov [ecx+8],eax"
"	      00454893    mov eax,[ebp-188h]"
"	      00454899    mov dword ptr [eax],0"
"	      0045489f    mov eax,[ebp-188h]"
"	      004548a5    mov dword ptr [eax+0Ch],1"
"	      004548ac    jmp near ptr 004548B1h"
"	      004548b1    mov eax,[ebp-188h]"
"	      004548b7    mov sSkyPreviewFilePath.reference,eax"
"	      004548bd    jmp near ptr 004548CCh"
"	      004548c2    mov sSkyPreviewFilePath.reference,0"
"	      004548cc    mov sSkyPreviewFilePath.c_str_ptr,0"
"	      004548d6    jmp near ptr 004548DBh"
);
// LINE 817:
	asm( 
"	      004548db    push 10h"
"	      004548dd    call 0056A600h"
"	      004548e2    add esp,4"
"	      004548e5    mov [ebp-18Ch],eax"
"	      004548eb    cmp dword ptr [ebp-18Ch],0"
"	      004548f2    je near ptr 00454946h"
"	      004548f8    mov eax,[ebp-18Ch]"
"	      004548fe    mov dword ptr [eax+4],0"
"	      00454905    mov eax,[ebp-18Ch]"
"	      0045490b    mov eax,[eax+4]"
"	      0045490e    mov ecx,[ebp-18Ch]"
"	      00454914    mov [ecx+8],eax"
"	      00454917    mov eax,[ebp-18Ch]"
"	      0045491d    mov dword ptr [eax],0"
"	      00454923    mov eax,[ebp-18Ch]"
"	      00454929    mov dword ptr [eax+0Ch],1"
"	      00454930    jmp near ptr 00454935h"
"	      00454935    mov eax,[ebp-18Ch]"
"	      0045493b    mov sGroundPreviewFileName.reference,eax"
"	      00454941    jmp near ptr 00454950h"
"	      00454946    mov sGroundPreviewFileName.reference,0"
"	      00454950    mov sGroundPreviewFileName.c_str_ptr,0"
"	      0045495a    jmp near ptr 0045495Fh"
);
// LINE 818:
	asm( 
"	      0045495f    push 10h"
"	      00454961    call 0056A600h"
"	      00454966    add esp,4"
"	      00454969    mov [ebp-190h],eax"
"	      0045496f    cmp dword ptr [ebp-190h],0"
"	      00454976    je near ptr 004549CAh"
"	      0045497c    mov eax,[ebp-190h]"
"	      00454982    mov dword ptr [eax+4],0"
"	      00454989    mov eax,[ebp-190h]"
"	      0045498f    mov eax,[eax+4]"
"	      00454992    mov ecx,[ebp-190h]"
"	      00454998    mov [ecx+8],eax"
"	      0045499b    mov eax,[ebp-190h]"
"	      004549a1    mov dword ptr [eax],0"
"	      004549a7    mov eax,[ebp-190h]"
"	      004549ad    mov dword ptr [eax+0Ch],1"
"	      004549b4    jmp near ptr 004549B9h"
"	      004549b9    mov eax,[ebp-190h]"
"	      004549bf    mov sGroundPreviewFilePath.reference,eax"
"	      004549c5    jmp near ptr 004549D4h"
"	      004549ca    mov sGroundPreviewFilePath.reference,0"
"	      004549d4    mov sGroundPreviewFilePath.c_str_ptr,0"
"	      004549de    jmp near ptr 004549E3h"
);
// LINE 819:
	asm( 
"	      004549e3    push 10h"
"	      004549e5    call 0056A600h"
"	      004549ea    add esp,4"
"	      004549ed    mov [ebp-194h],eax"
"	      004549f3    cmp dword ptr [ebp-194h],0"
"	      004549fa    je near ptr 00454A4Bh"
"	      00454a00    mov eax,[ebp-194h]"
"	      00454a06    mov dword ptr [eax+4],0"
"	      00454a0d    mov eax,[ebp-194h]"
"	      00454a13    mov eax,[eax+4]"
"	      00454a16    mov ecx,[ebp-194h]"
"	      00454a1c    mov [ecx+8],eax"
"	      00454a1f    mov eax,[ebp-194h]"
"	      00454a25    mov dword ptr [eax],0"
"	      00454a2b    mov eax,[ebp-194h]"
"	      00454a31    mov dword ptr [eax+0Ch],1"
"	      00454a38    jmp near ptr 00454A3Dh"
"	      00454a3d    mov eax,[ebp-194h]"
"	      00454a43    mov sBuildingPreviewFileName.reference,eax"
"	      00454a46    jmp near ptr 00454A52h"
"	      00454a4b    mov sBuildingPreviewFileName.reference,0"
"	      00454a52    mov sBuildingPreviewFileName.c_str_ptr,0"
"	      00454a59    jmp near ptr 00454A5Eh"
);
// LINE 820:
	asm( 
"	      00454a5e    push 10h"
"	      00454a60    call 0056A600h"
"	      00454a65    add esp,4"
"	      00454a68    mov [ebp-198h],eax"
"	      00454a6e    cmp dword ptr [ebp-198h],0"
"	      00454a75    je near ptr 00454AC6h"
"	      00454a7b    mov eax,[ebp-198h]"
"	      00454a81    mov dword ptr [eax+4],0"
"	      00454a88    mov eax,[ebp-198h]"
"	      00454a8e    mov eax,[eax+4]"
"	      00454a91    mov ecx,[ebp-198h]"
"	      00454a97    mov [ecx+8],eax"
"	      00454a9a    mov eax,[ebp-198h]"
"	      00454aa0    mov dword ptr [eax],0"
"	      00454aa6    mov eax,[ebp-198h]"
"	      00454aac    mov dword ptr [eax+0Ch],1"
"	      00454ab3    jmp near ptr 00454AB8h"
"	      00454ab8    mov eax,[ebp-198h]"
"	      00454abe    mov sBuildingPreviewFilePath.reference,eax"
"	      00454ac1    jmp near ptr 00454ACDh"
"	      00454ac6    mov sBuildingPreviewFilePath.reference,0"
"	      00454acd    mov sBuildingPreviewFilePath.c_str_ptr,0"
"	      00454ad4    jmp near ptr 00454AD9h"
);
// LINE 822:
	asm( 
"	      00454ad9    lea eax,sBuildingPreviewFileName.c_str_ptr"
"	      00454adc    push eax"
"	      00454add    lea eax,sGroundPreviewFileName.c_str_ptr"
"	      00454ae3    push eax"
"	      00454ae4    lea eax,sSkyPreviewFileName.c_str_ptr"
"	      00454ae7    push eax"
"	      00454ae8    mov ecx,this"
"	      00454aee    call 004550CFh"
);
// LINE 823:
	asm( 
"	      00454af3    lea eax,sSkyPreviewFilePath.c_str_ptr"
"	      00454af9    push eax"
"	      00454afa    lea eax,sSkyPreviewFileName.c_str_ptr"
"	      00454afd    push eax"
"	      00454afe    push 0"
"	      00454b00    push 6"
"	      00454b02    mov ecx,604C00h"
"	      00454b07    call 00494F82h"
"	      00454b0c    jmp near ptr 00454B11h"
);
// LINE 824:
	asm( 
"	      00454b11    lea eax,sGroundPreviewFilePath.c_str_ptr"
"	      00454b17    push eax"
"	      00454b18    lea eax,sGroundPreviewFileName.c_str_ptr"
"	      00454b1e    push eax"
"	      00454b1f    push 0"
"	      00454b21    push 6"
"	      00454b23    mov ecx,604C00h"
"	      00454b28    call 00494F82h"
"	      00454b2d    jmp near ptr 00454B32h"
);
// LINE 825:
	asm( 
"	      00454b32    lea eax,sBuildingPreviewFilePath.c_str_ptr"
"	      00454b35    push eax"
"	      00454b36    lea eax,sBuildingPreviewFileName.c_str_ptr"
"	      00454b39    push eax"
"	      00454b3a    push 0"
"	      00454b3c    push 6"
"	      00454b3e    mov ecx,604C00h"
"	      00454b43    call 00494F82h"
"	      00454b48    jmp near ptr 00454B4Dh"
);
// LINE 828:
	asm( 
"	      00454b4d    mov eax,this"
"	      00454b53    cmp dword ptr [eax+9Ch],0"
"	      00454b5a    je near ptr 00454BAFh"
);
// LINE 829:
	asm( 
"	      00454b60    mov eax,this"
"	      00454b66    mov eax,[eax+9Ch]"
"	      00454b6c    mov [ebp-16Ch],eax"
"	      00454b72    mov eax,[ebp-16Ch]"
"	      00454b78    mov [ebp-168h],eax"
"	      00454b7e    cmp dword ptr [ebp-168h],0"
"	      00454b85    je near ptr 00454BAFh"
"	      00454b8b    mov ecx,[ebp-168h]"
"	      00454b91    call 0046EC7Ah"
"	      00454b96    mov eax,[ebp-168h]"
"	      00454b9c    push eax"
"	      00454b9d    call 0056A740h"
"	      00454ba2    add esp,4"
"	      00454ba5    jmp near ptr 00454BAAh"
"	      00454baa    jmp near ptr 00454BAFh"
);
// LINE 830:
	asm( 
"	      00454baf    push 134h"
"	      00454bb4    call 0056A600h"
"	      00454bb9    add esp,4"
"	      00454bbc    mov [ebp-170h],eax"
"	      00454bc2    cmp dword ptr [ebp-170h],0"
"	      00454bc9    je near ptr 00454CFDh"
"	      00454bcf    cmp sSkyPreviewFilePath.c_str_ptr,0"
"	      00454bd6    je near ptr 00454C03h"
"	      00454bdc    mov eax,sSkyPreviewFilePath.c_str_ptr"
"	      00454be2    mov [ebp-1CCh],eax"
"	      00454be8    mov eax,[ebp-1CCh]"
"	      00454bee    mov [ebp-1D4h],eax"
"	      00454bf4    mov eax,[ebp-1D4h]"
"	      00454bfa    push eax"
"	      00454bfb    call 0056A740h"
"	      00454c00    add esp,4"
"	      00454c03    jmp near ptr 00454C08h"
"	      00454c08    mov eax,sSkyPreviewFilePath.reference"
"	      00454c0e    mov eax,[eax+4]"
"	      00454c11    inc eax"
"	      00454c12    push eax"
"	      00454c13    call 0056A600h"
"	      00454c18    add esp,4"
"	      00454c1b    mov sSkyPreviewFilePath.c_str_ptr,eax"
"	      00454c21    jmp near ptr 00454C26h"
"	      00454c26    mov eax,sSkyPreviewFilePath.reference"
"	      00454c2c    cmp dword ptr [eax+4],0"
"	      00454c30    je near ptr 00454C89h"
"	      00454c36    jmp near ptr 00454C3Bh"
"	      00454c3b    mov eax,sSkyPreviewFilePath.reference"
"	      00454c41    mov eax,[eax+4]"
"	      00454c44    mov [ebp-1E0h],eax"
"	      00454c4a    lea ecx,sSkyPreviewFilePath.c_str_ptr"
"	      00454c50    call 00417C00h"
"	      00454c55    mov [ebp-1E4h],eax"
"	      00454c5b    mov eax,sSkyPreviewFilePath.c_str_ptr"
"	      00454c61    mov [ebp-1E8h],eax"
"	      00454c67    mov eax,[ebp-1E0h]"
"	      00454c6d    push eax"
"	      00454c6e    mov eax,[ebp-1E4h]"
"	      00454c74    push eax"
"	      00454c75    mov eax,[ebp-1E8h]"
"	      00454c7b    push eax"
"	      00454c7c    call 0056A800h"
"	      00454c81    add esp,0Ch"
"	      00454c84    jmp near ptr 00454C89h"
"	      00454c89    jmp near ptr 00454C8Eh"
"	      00454c8e    mov byte ptr [ebp-1D0h],0"
"	      00454c95    jmp near ptr 00454C9Ah"
"	      00454c9a    lea eax,[ebp-1D0h]"
"	      00454ca0    mov [ebp-1D8h],eax"
"	      00454ca6    jmp near ptr 00454CABh"
"	      00454cab    mov eax,sSkyPreviewFilePath.reference"
"	      00454cb1    mov eax,[eax+4]"
"	      00454cb4    add eax,sSkyPreviewFilePath.c_str_ptr"
"	      00454cba    mov [ebp-1DCh],eax"
"	      00454cc0    mov eax,[ebp-1D8h]"
"	      00454cc6    mov al,[eax]"
"	      00454cc8    mov ecx,[ebp-1DCh]"
"	      00454cce    mov [ecx],al"
"	      00454cd0    jmp near ptr 00454CD5h"
"	      00454cd5    jmp near ptr 00454CDAh"
"	      00454cda    mov eax,sSkyPreviewFilePath.c_str_ptr"
"	      00454ce0    push eax"
"	      00454ce1    mov ecx,[ebp-170h]"
"	      00454ce7    call 0046E6DFh"
"	      00454cec    mov ecx,this"
"	      00454cf2    mov [ecx+9Ch],eax"
"	      00454cf8    jmp near ptr 00454D0Dh"
"	      00454cfd    mov eax,this"
"	      00454d03    mov dword ptr [eax+9Ch],0"
);
// LINE 831:
	asm( 
"	      00454d0d    mov eax,this"
"	      00454d13    cmp dword ptr [eax+0A0h],0"
"	      00454d1a    je near ptr 00454D6Fh"
);
// LINE 832:
	asm( 
"	      00454d20    mov eax,this"
"	      00454d26    mov eax,[eax+0A0h]"
"	      00454d2c    mov [ebp-178h],eax"
"	      00454d32    mov eax,[ebp-178h]"
"	      00454d38    mov [ebp-174h],eax"
"	      00454d3e    cmp dword ptr [ebp-174h],0"
"	      00454d45    je near ptr 00454D6Fh"
"	      00454d4b    mov ecx,[ebp-174h]"
"	      00454d51    call 0046EC7Ah"
"	      00454d56    mov eax,[ebp-174h]"
"	      00454d5c    push eax"
"	      00454d5d    call 0056A740h"
"	      00454d62    add esp,4"
"	      00454d65    jmp near ptr 00454D6Ah"
"	      00454d6a    jmp near ptr 00454D6Fh"
);
// LINE 833:
	asm( 
"	      00454d6f    push 134h"
"	      00454d74    call 0056A600h"
"	      00454d79    add esp,4"
"	      00454d7c    mov [ebp-17Ch],eax"
"	      00454d82    cmp dword ptr [ebp-17Ch],0"
"	      00454d89    je near ptr 00454DB7h"
"	      00454d8f    lea ecx,sSkyPreviewFilePath.c_str_ptr"
"	      00454d95    call 00417AE0h"
"	      00454d9a    push eax"
"	      00454d9b    mov ecx,[ebp-17Ch]"
"	      00454da1    call 0046E6DFh"
"	      00454da6    mov ecx,this"
"	      00454dac    mov [ecx+9Ch],eax"
"	      00454db2    jmp near ptr 00454DC7h"
"	      00454db7    mov eax,this"
"	      00454dbd    mov dword ptr [eax+9Ch],0"
);
// LINE 834:
	asm( 
"	      00454dc7    push 134h"
"	      00454dcc    call 0056A600h"
"	      00454dd1    add esp,4"
"	      00454dd4    mov [ebp-180h],eax"
"	      00454dda    cmp dword ptr [ebp-180h],0"
"	      00454de1    je near ptr 00454E0Ch"
"	      00454de7    lea ecx,sBuildingPreviewFilePath.c_str_ptr"
"	      00454dea    call 00417AE0h"
"	      00454def    push eax"
"	      00454df0    mov ecx,[ebp-180h]"
"	      00454df6    call 0046E6DFh"
"	      00454dfb    mov ecx,this"
"	      00454e01    mov [ecx+0A0h],eax"
"	      00454e07    jmp near ptr 00454E1Ch"
"	      00454e0c    mov eax,this"
"	      00454e12    mov dword ptr [eax+0A0h],0"
);
// LINE 835:
	asm( 
"	      00454e1c    mov eax,ds:[606988h]"
"	      00454e21    push eax"
"	      00454e22    push 1"
"	      00454e24    mov eax,this"
"	      00454e2a    mov ecx,this"
"	      00454e30    mov ecx,[ecx+0A0h]"
"	      00454e36    mov edx,[ecx]"
"	      00454e38    mov ecx,[eax+0A0h]"
"	      00454e3e    call dword ptr [edx+8]"
);
// LINE 836:
	asm( 
"	      00454e41    lea ecx,sGroundPreviewFilePath.c_str_ptr"
"	      00454e47    call 00417AE0h"
"	      00454e4c    push eax"
"	      00454e4d    lea ecx,tempGroundImage.<vftable>"
"	      00454e53    call 0046E6DFh"
);
// LINE 842:
	asm( 
"	      00454e58    push 42h"
"	      00454e5a    mov eax,this"
"	      00454e60    mov eax,[eax+0B4h]"
"	      00454e66    add eax,0C8h"
"	      00454e6b    push eax"
"	      00454e6c    push 0"
"	      00454e6e    mov eax,this"
"	      00454e74    mov eax,[eax+0B4h]"
"	      00454e7a    push eax"
"	      00454e7b    push 38h"
"	      00454e7d    push 14Bh"
"	      00454e82    mov eax,this"
"	      00454e88    mov eax,[eax+40h]"
"	      00454e8b    push eax"
"	      00454e8c    mov eax,this"
"	      00454e92    mov ecx,this"
"	      00454e98    mov ecx,[ecx+9Ch]"
"	      00454e9e    mov edx,[ecx]"
"	      00454ea0    mov ecx,[eax+9Ch]"
"	      00454ea6    call dword ptr [edx+0Ch]"
);
// LINE 844:
	asm( 
"	      00454ea9    jmp near ptr 00454EAEh"
"	      00454eae    jmp near ptr 00454EB3h"
"	      00454eb3    mov eax,tempGroundImage.mHeight"
"	      00454eb9    push eax"
"	      00454eba    mov eax,tempGroundImage.mWidth"
"	      00454ec0    push eax"
"	      00454ec1    push 0"
"	      00454ec3    push 0"
"	      00454ec5    push 78h"
"	      00454ec7    push 14Bh"
"	      00454ecc    mov eax,this"
"	      00454ed2    mov eax,[eax+40h]"
"	      00454ed5    push eax"
"	      00454ed6    lea ecx,tempGroundImage.<vftable>"
"	      00454edc    call 0046F948h"
);
// LINE 846:
	asm( 
"	      00454ee1    jmp near ptr 00454EE6h"
"	      00454ee6    jmp near ptr 00454EEBh"
"	      00454eeb    mov eax,this"
"	      00454ef1    mov eax,[eax+0A0h]"
"	      00454ef7    mov eax,[eax+0Ch]"
"	      00454efa    push eax"
"	      00454efb    mov eax,this"
"	      00454f01    mov eax,[eax+0A0h]"
"	      00454f07    mov eax,[eax+8]"
"	      00454f0a    push eax"
"	      00454f0b    push 0"
"	      00454f0d    push 0"
"	      00454f0f    push 6Ch"
"	      00454f11    push 159h"
"	      00454f16    mov eax,this"
"	      00454f1c    mov eax,[eax+40h]"
"	      00454f1f    push eax"
"	      00454f20    mov eax,this"
"	      00454f26    mov ecx,this"
"	      00454f2c    mov ecx,[ecx+0A0h]"
"	      00454f32    mov edx,[ecx]"
"	      00454f34    mov ecx,[eax+0A0h]"
"	      00454f3a    call dword ptr [edx+0Ch]"
);
// LINE 847:
	asm( 
"	      00454f3d    lea ecx,tempGroundImage.<vftable>"
"	      00454f43    call 0046EC7Ah"
"	      00454f48    lea ecx,sBuildingPreviewFilePath.c_str_ptr"
"	      00454f4b    call 00412080h"
"	      00454f50    cmp sBuildingPreviewFilePath.c_str_ptr,0"
"	      00454f54    je near ptr 00454F7Eh"
"	      00454f5a    mov eax,sBuildingPreviewFilePath.c_str_ptr"
"	      00454f5d    mov [ebp-19Ch],eax"
"	      00454f63    mov eax,[ebp-19Ch]"
"	      00454f69    mov [ebp-1A0h],eax"
"	      00454f6f    mov eax,[ebp-1A0h]"
"	      00454f75    push eax"
"	      00454f76    call 0056A740h"
"	      00454f7b    add esp,4"
"	      00454f7e    jmp near ptr 00454F83h"
"	      00454f83    lea ecx,sBuildingPreviewFileName.c_str_ptr"
"	      00454f86    call 00412080h"
"	      00454f8b    cmp sBuildingPreviewFileName.c_str_ptr,0"
"	      00454f8f    je near ptr 00454FB9h"
"	      00454f95    mov eax,sBuildingPreviewFileName.c_str_ptr"
"	      00454f98    mov [ebp-1A4h],eax"
"	      00454f9e    mov eax,[ebp-1A4h]"
"	      00454fa4    mov [ebp-1A8h],eax"
"	      00454faa    mov eax,[ebp-1A8h]"
"	      00454fb0    push eax"
"	      00454fb1    call 0056A740h"
"	      00454fb6    add esp,4"
"	      00454fb9    jmp near ptr 00454FBEh"
"	      00454fbe    lea ecx,sGroundPreviewFilePath.c_str_ptr"
"	      00454fc4    call 00412080h"
"	      00454fc9    cmp sGroundPreviewFilePath.c_str_ptr,0"
"	      00454fd0    je near ptr 00454FFDh"
"	      00454fd6    mov eax,sGroundPreviewFilePath.c_str_ptr"
"	      00454fdc    mov [ebp-1ACh],eax"
"	      00454fe2    mov eax,[ebp-1ACh]"
"	      00454fe8    mov [ebp-1B0h],eax"
"	      00454fee    mov eax,[ebp-1B0h]"
"	      00454ff4    push eax"
"	      00454ff5    call 0056A740h"
"	      00454ffa    add esp,4"
"	      00454ffd    jmp near ptr 00455002h"
"	      00455002    lea ecx,sGroundPreviewFileName.c_str_ptr"
"	      00455008    call 00412080h"
"	      0045500d    cmp sGroundPreviewFileName.c_str_ptr,0"
"	      00455014    je near ptr 00455041h"
"	      0045501a    mov eax,sGroundPreviewFileName.c_str_ptr"
"	      00455020    mov [ebp-1B4h],eax"
"	      00455026    mov eax,[ebp-1B4h]"
"	      0045502c    mov [ebp-1B8h],eax"
"	      00455032    mov eax,[ebp-1B8h]"
"	      00455038    push eax"
"	      00455039    call 0056A740h"
"	      0045503e    add esp,4"
"	      00455041    jmp near ptr 00455046h"
"	      00455046    lea ecx,sSkyPreviewFilePath.c_str_ptr"
"	      0045504c    call 00412080h"
"	      00455051    cmp sSkyPreviewFilePath.c_str_ptr,0"
"	      00455058    je near ptr 00455085h"
"	      0045505e    mov eax,sSkyPreviewFilePath.c_str_ptr"
"	      00455064    mov [ebp-1BCh],eax"
"	      0045506a    mov eax,[ebp-1BCh]"
"	      00455070    mov [ebp-1C0h],eax"
"	      00455076    mov eax,[ebp-1C0h]"
"	      0045507c    push eax"
"	      0045507d    call 0056A740h"
"	      00455082    add esp,4"
"	      00455085    jmp near ptr 0045508Ah"
"	      0045508a    lea ecx,sSkyPreviewFileName.c_str_ptr"
"	      0045508d    call 00412080h"
"	      00455092    cmp sSkyPreviewFileName.c_str_ptr,0"
"	      00455096    je near ptr 004550C0h"
"	      0045509c    mov eax,sSkyPreviewFileName.c_str_ptr"
"	      0045509f    mov [ebp-1C4h],eax"
"	      004550a5    mov eax,[ebp-1C4h]"
"	      004550ab    mov [ebp-1C8h],eax"
"	      004550b1    mov eax,[ebp-1C8h]"
"	      004550b7    push eax"
"	      004550b8    call 0056A740h"
"	      004550bd    add esp,4"
"	      004550c0    jmp near ptr 004550C5h"
"	      004550c5    jmp near ptr 004550CAh"
"	      004550ca    pop edi"
"	      004550cb    pop esi"
"	      004550cc    pop ebx"
"	      004550cd    leave"
"	      004550ce    ret"
);
}

// FUNCTION: COPTER_D 0x004550cf
void RenderSettingsWindow::GetPreviewFileNames(class basic_string<char>& sSkyPreviewFileName, class basic_string<char>& sGroundPreviewFileName, class basic_string<char>& sBuildingPreviewFileName) {
// LINE 857:
	asm( 
"	      004550cf    push ebp"
"	      004550d0    mov ebp,esp"
"	      004550d2    sub esp,0A0h"
"	      004550d8    push ebx"
"	      004550d9    push esi"
"	      004550da    push edi"
"	      004550db    mov this,ecx"
"	      004550e1    mov eax,ds:[599144h]"
"	      004550e6    mov [ebp-4],eax"
);
// LINE 858:
	asm( 
"	      004550e9    jmp near ptr 004550EEh"
"	      004550ee    mov eax,[ebp-4]"
"	      004550f1    push eax"
"	      004550f2    call 0056ABE0h"
"	      004550f7    add esp,4"
"	      004550fa    push eax"
"	      004550fb    mov eax,[ebp-4]"
"	      004550fe    push eax"
"	      004550ff    mov ecx,sSkyPreviewFileName"
"	      00455102    call 0040FEE0h"
"	      00455107    jmp near ptr 0045510Ch"
"	      0045510c    mov eax,ds:[599148h]"
"	      00455111    mov [ebp-8],eax"
);
// LINE 859:
	asm( 
"	      00455114    jmp near ptr 00455119h"
"	      00455119    mov eax,[ebp-8]"
"	      0045511c    push eax"
"	      0045511d    call 0056ABE0h"
"	      00455122    add esp,4"
"	      00455125    push eax"
"	      00455126    mov eax,[ebp-8]"
"	      00455129    push eax"
"	      0045512a    mov ecx,sGroundPreviewFileName"
"	      0045512d    call 0040FEE0h"
"	      00455132    jmp near ptr 00455137h"
"	      00455137    mov eax,ds:[59914Ch]"
"	      0045513c    mov [ebp-0Ch],eax"
);
// LINE 860:
	asm( 
"	      0045513f    jmp near ptr 00455144h"
"	      00455144    mov eax,[ebp-0Ch]"
"	      00455147    push eax"
"	      00455148    call 0056ABE0h"
"	      0045514d    add esp,4"
"	      00455150    push eax"
"	      00455151    mov eax,[ebp-0Ch]"
"	      00455154    push eax"
"	      00455155    mov ecx,sBuildingPreviewFileName"
"	      00455158    call 0040FEE0h"
"	      0045515d    jmp near ptr 00455162h"
);
// LINE 861:
	asm( 
"	      00455162    mov eax,this"
"	      00455168    cmp dword ptr [eax+80h],0"
"	      0045516f    jne near ptr 004551D0h"
"	      00455175    mov eax,ds:[599150h]"
"	      0045517a    mov [ebp-10h],eax"
);
// LINE 862:
	asm( 
"	      0045517d    jmp near ptr 00455182h"
"	      00455182    mov eax,[ebp-10h]"
"	      00455185    push eax"
"	      00455186    call 0056ABE0h"
"	      0045518b    add esp,4"
"	      0045518e    push eax"
"	      0045518f    mov eax,[ebp-10h]"
"	      00455192    push eax"
"	      00455193    mov ecx,sBuildingPreviewFileName"
"	      00455196    call 00410130h"
"	      0045519b    jmp near ptr 004551A0h"
"	      004551a0    mov eax,ds:[599150h]"
"	      004551a5    mov [ebp-14h],eax"
);
// LINE 863:
	asm( 
"	      004551a8    jmp near ptr 004551ADh"
"	      004551ad    mov eax,[ebp-14h]"
"	      004551b0    push eax"
"	      004551b1    call 0056ABE0h"
"	      004551b6    add esp,4"
"	      004551b9    push eax"
"	      004551ba    mov eax,[ebp-14h]"
"	      004551bd    push eax"
"	      004551be    mov ecx,sGroundPreviewFileName"
"	      004551c1    call 00410130h"
"	      004551c6    jmp near ptr 004551CBh"
);
// LINE 865:
	asm( 
"	      004551cb    jmp near ptr 00455226h"
"	      004551d0    mov eax,ds:[599154h]"
"	      004551d5    mov [ebp-18h],eax"
);
// LINE 866:
	asm( 
"	      004551d8    jmp near ptr 004551DDh"
"	      004551dd    mov eax,[ebp-18h]"
"	      004551e0    push eax"
"	      004551e1    call 0056ABE0h"
"	      004551e6    add esp,4"
"	      004551e9    push eax"
"	      004551ea    mov eax,[ebp-18h]"
"	      004551ed    push eax"
"	      004551ee    mov ecx,sBuildingPreviewFileName"
"	      004551f1    call 00410130h"
"	      004551f6    jmp near ptr 004551FBh"
"	      004551fb    mov eax,ds:[599154h]"
"	      00455200    mov [ebp-1Ch],eax"
);
// LINE 867:
	asm( 
"	      00455203    jmp near ptr 00455208h"
"	      00455208    mov eax,[ebp-1Ch]"
"	      0045520b    push eax"
"	      0045520c    call 0056ABE0h"
"	      00455211    add esp,4"
"	      00455214    push eax"
"	      00455215    mov eax,[ebp-1Ch]"
"	      00455218    push eax"
"	      00455219    mov ecx,sGroundPreviewFileName"
"	      0045521c    call 00410130h"
"	      00455221    jmp near ptr 00455226h"
);
// LINE 869:
	asm( 
"	      00455226    mov eax,this"
"	      0045522c    cmp dword ptr [eax+74h],0"
"	      00455230    je near ptr 00455266h"
);
// LINE 870:
	asm( 
"	      00455236    mov eax,ds:[599158h]"
"	      0045523b    mov [ebp-20h],eax"
"	      0045523e    jmp near ptr 00455243h"
"	      00455243    mov eax,[ebp-20h]"
"	      00455246    push eax"
"	      00455247    call 0056ABE0h"
"	      0045524c    add esp,4"
"	      0045524f    push eax"
"	      00455250    mov eax,[ebp-20h]"
"	      00455253    push eax"
"	      00455254    mov ecx,sBuildingPreviewFileName"
"	      00455257    call 00410130h"
"	      0045525c    jmp near ptr 00455261h"
);
// LINE 871:
	asm( 
"	      00455261    jmp near ptr 004553CAh"
);
// LINE 872:
	asm( 
"	      00455266    mov eax,ds:[59915Ch]"
"	      0045526b    mov [ebp-38h],eax"
"	      0045526e    jmp near ptr 00455273h"
"	      00455273    mov eax,[ebp-38h]"
"	      00455276    push eax"
"	      00455277    call 0056ABE0h"
"	      0045527c    add esp,4"
"	      0045527f    mov [ebp-34h],eax"
"	      00455282    jmp near ptr 00455287h"
"	      00455287    mov eax,sBuildingPreviewFileName"
"	      0045528a    mov eax,[eax+4]"
"	      0045528d    mov ecx,0FFFFFFFFh"
"	      00455292    sub ecx,[ebp-34h]"
"	      00455295    cmp [eax+4],ecx"
"	      00455298    jb near ptr 004552D0h"
"	      0045529e    push 5971E4h"
"	      004552a3    mov ecx,638C00h"
"	      004552a8    call 00569960h"
"	      004552ad    mov [ebp-30h],eax"
"	      004552b0    mov eax,[ebp-30h]"
"	      004552b3    push eax"
"	      004552b4    call 004011B0h"
"	      004552b9    add esp,4"
"	      004552bc    jmp near ptr 004552C1h"
"	      004552c1    push 1"
"	      004552c3    call 00569430h"
"	      004552c8    add esp,4"
"	      004552cb    jmp near ptr 004552D0h"
"	      004552d0    jmp near ptr 004552D5h"
"	      004552d5    mov eax,sBuildingPreviewFileName"
"	      004552d8    mov eax,[eax+4]"
"	      004552db    cmp dword ptr [eax+0Ch],1"
"	      004552df    ja near ptr 0045530Ah"
"	      004552e5    jmp near ptr 004552EAh"
"	      004552ea    jmp near ptr 004552EFh"
"	      004552ef    mov eax,sBuildingPreviewFileName"
"	      004552f2    mov eax,[eax+4]"
"	      004552f5    mov eax,[eax+8]"
"	      004552f8    mov ecx,sBuildingPreviewFileName"
"	      004552fb    mov ecx,[ecx+4]"
"	      004552fe    sub eax,[ecx+4]"
"	      00455301    cmp eax,[ebp-34h]"
"	      00455304    jae near ptr 00455373h"
"	      0045530a    push 10h"
"	      0045530c    call 0056A600h"
"	      00455311    add esp,4"
"	      00455314    mov [ebp-28h],eax"
"	      00455317    cmp dword ptr [ebp-28h],0"
"	      0045531b    je near ptr 0045535Bh"
"	      00455321    jmp near ptr 00455326h"
"	      00455326    jmp near ptr 0045532Bh"
"	      0045532b    mov eax,sBuildingPreviewFileName"
"	      0045532e    mov eax,[eax+4]"
"	      00455331    mov eax,[eax+4]"
"	      00455334    add eax,[ebp-34h]"
"	      00455337    push eax"
"	      00455338    mov eax,sBuildingPreviewFileName"
"	      0045533b    mov eax,[eax+4]"
"	      0045533e    mov eax,[eax+4]"
"	      00455341    push eax"
"	      00455342    mov ecx,sBuildingPreviewFileName"
"	      00455345    call 00417C00h"
"	      0045534a    push eax"
"	      0045534b    mov ecx,[ebp-28h]"
"	      0045534e    call 0041E160h"
"	      00455353    mov [ebp-24h],eax"
"	      00455356    jmp near ptr 00455362h"
"	      0045535b    mov dword ptr [ebp-24h],0"
"	      00455362    mov ecx,sBuildingPreviewFileName"
"	      00455365    call 00412080h"
"	      0045536a    mov eax,[ebp-24h]"
"	      0045536d    mov ecx,sBuildingPreviewFileName"
"	      00455370    mov [ecx+4],eax"
"	      00455373    cmp dword ptr [ebp-34h],0"
"	      00455377    je near ptr 004553B4h"
"	      0045537d    jmp near ptr 00455382h"
"	      00455382    jmp near ptr 00455387h"
"	      00455387    mov eax,sBuildingPreviewFileName"
"	      0045538a    mov eax,[eax+4]"
"	      0045538d    mov eax,[eax+4]"
"	      00455390    mov ecx,sBuildingPreviewFileName"
"	      00455393    mov ecx,[ecx+4]"
"	      00455396    add eax,[ecx]"
"	      00455398    mov [ebp-2Ch],eax"
"	      0045539b    mov eax,[ebp-34h]"
"	      0045539e    push eax"
"	      0045539f    mov eax,[ebp-38h]"
"	      004553a2    push eax"
"	      004553a3    mov eax,[ebp-2Ch]"
"	      004553a6    push eax"
"	      004553a7    call 0056A800h"
"	      004553ac    add esp,0Ch"
"	      004553af    jmp near ptr 004553B4h"
"	      004553b4    mov eax,[ebp-34h]"
"	      004553b7    mov ecx,sBuildingPreviewFileName"
"	      004553ba    mov ecx,[ecx+4]"
"	      004553bd    add [ecx+4],eax"
"	      004553c0    jmp near ptr 004553C5h"
"	      004553c5    jmp near ptr 004553CAh"
);
// LINE 873:
	asm( 
"	      004553ca    mov eax,this"
"	      004553d0    cmp dword ptr [eax+78h],0"
"	      004553d4    je near ptr 00455543h"
);
// LINE 874:
	asm( 
"	      004553da    mov eax,ds:[599158h]"
"	      004553df    mov [ebp-50h],eax"
"	      004553e2    jmp near ptr 004553E7h"
"	      004553e7    mov eax,[ebp-50h]"
"	      004553ea    push eax"
"	      004553eb    call 0056ABE0h"
"	      004553f0    add esp,4"
"	      004553f3    mov [ebp-4Ch],eax"
"	      004553f6    jmp near ptr 004553FBh"
"	      004553fb    mov eax,sGroundPreviewFileName"
"	      004553fe    mov eax,[eax+4]"
"	      00455401    mov ecx,0FFFFFFFFh"
"	      00455406    sub ecx,[ebp-4Ch]"
"	      00455409    cmp [eax+4],ecx"
"	      0045540c    jb near ptr 00455444h"
"	      00455412    push 5971E4h"
"	      00455417    mov ecx,638C00h"
"	      0045541c    call 00569960h"
"	      00455421    mov [ebp-48h],eax"
"	      00455424    mov eax,[ebp-48h]"
"	      00455427    push eax"
"	      00455428    call 004011B0h"
"	      0045542d    add esp,4"
"	      00455430    jmp near ptr 00455435h"
"	      00455435    push 1"
"	      00455437    call 00569430h"
"	      0045543c    add esp,4"
"	      0045543f    jmp near ptr 00455444h"
"	      00455444    jmp near ptr 00455449h"
"	      00455449    mov eax,sGroundPreviewFileName"
"	      0045544c    mov eax,[eax+4]"
"	      0045544f    cmp dword ptr [eax+0Ch],1"
"	      00455453    ja near ptr 0045547Eh"
"	      00455459    jmp near ptr 0045545Eh"
"	      0045545e    jmp near ptr 00455463h"
"	      00455463    mov eax,sGroundPreviewFileName"
"	      00455466    mov eax,[eax+4]"
"	      00455469    mov eax,[eax+8]"
"	      0045546c    mov ecx,sGroundPreviewFileName"
"	      0045546f    mov ecx,[ecx+4]"
"	      00455472    sub eax,[ecx+4]"
"	      00455475    cmp eax,[ebp-4Ch]"
"	      00455478    jae near ptr 004554E7h"
"	      0045547e    push 10h"
"	      00455480    call 0056A600h"
"	      00455485    add esp,4"
"	      00455488    mov [ebp-40h],eax"
"	      0045548b    cmp dword ptr [ebp-40h],0"
"	      0045548f    je near ptr 004554CFh"
"	      00455495    jmp near ptr 0045549Ah"
"	      0045549a    jmp near ptr 0045549Fh"
"	      0045549f    mov eax,sGroundPreviewFileName"
"	      004554a2    mov eax,[eax+4]"
"	      004554a5    mov eax,[eax+4]"
"	      004554a8    add eax,[ebp-4Ch]"
"	      004554ab    push eax"
"	      004554ac    mov eax,sGroundPreviewFileName"
"	      004554af    mov eax,[eax+4]"
"	      004554b2    mov eax,[eax+4]"
"	      004554b5    push eax"
"	      004554b6    mov ecx,sGroundPreviewFileName"
"	      004554b9    call 00417C00h"
"	      004554be    push eax"
"	      004554bf    mov ecx,[ebp-40h]"
"	      004554c2    call 0041E160h"
"	      004554c7    mov [ebp-3Ch],eax"
"	      004554ca    jmp near ptr 004554D6h"
"	      004554cf    mov dword ptr [ebp-3Ch],0"
"	      004554d6    mov ecx,sGroundPreviewFileName"
"	      004554d9    call 00412080h"
"	      004554de    mov eax,[ebp-3Ch]"
"	      004554e1    mov ecx,sGroundPreviewFileName"
"	      004554e4    mov [ecx+4],eax"
"	      004554e7    cmp dword ptr [ebp-4Ch],0"
"	      004554eb    je near ptr 00455528h"
"	      004554f1    jmp near ptr 004554F6h"
"	      004554f6    jmp near ptr 004554FBh"
"	      004554fb    mov eax,sGroundPreviewFileName"
"	      004554fe    mov eax,[eax+4]"
"	      00455501    mov eax,[eax+4]"
"	      00455504    mov ecx,sGroundPreviewFileName"
"	      00455507    mov ecx,[ecx+4]"
"	      0045550a    add eax,[ecx]"
"	      0045550c    mov [ebp-44h],eax"
"	      0045550f    mov eax,[ebp-4Ch]"
"	      00455512    push eax"
"	      00455513    mov eax,[ebp-50h]"
"	      00455516    push eax"
"	      00455517    mov eax,[ebp-44h]"
"	      0045551a    push eax"
"	      0045551b    call 0056A800h"
"	      00455520    add esp,0Ch"
"	      00455523    jmp near ptr 00455528h"
"	      00455528    mov eax,[ebp-4Ch]"
"	      0045552b    mov ecx,sGroundPreviewFileName"
"	      0045552e    mov ecx,[ecx+4]"
"	      00455531    add [ecx+4],eax"
"	      00455534    jmp near ptr 00455539h"
"	      00455539    jmp near ptr 0045553Eh"
);
// LINE 875:
	asm( 
"	      0045553e    jmp near ptr 004556A7h"
);
// LINE 876:
	asm( 
"	      00455543    mov eax,ds:[59915Ch]"
"	      00455548    mov [ebp-68h],eax"
"	      0045554b    jmp near ptr 00455550h"
"	      00455550    mov eax,[ebp-68h]"
"	      00455553    push eax"
"	      00455554    call 0056ABE0h"
"	      00455559    add esp,4"
"	      0045555c    mov [ebp-64h],eax"
"	      0045555f    jmp near ptr 00455564h"
"	      00455564    mov eax,sGroundPreviewFileName"
"	      00455567    mov eax,[eax+4]"
"	      0045556a    mov ecx,0FFFFFFFFh"
"	      0045556f    sub ecx,[ebp-64h]"
"	      00455572    cmp [eax+4],ecx"
"	      00455575    jb near ptr 004555ADh"
"	      0045557b    push 5971E4h"
"	      00455580    mov ecx,638C00h"
"	      00455585    call 00569960h"
"	      0045558a    mov [ebp-60h],eax"
"	      0045558d    mov eax,[ebp-60h]"
"	      00455590    push eax"
"	      00455591    call 004011B0h"
"	      00455596    add esp,4"
"	      00455599    jmp near ptr 0045559Eh"
"	      0045559e    push 1"
"	      004555a0    call 00569430h"
"	      004555a5    add esp,4"
"	      004555a8    jmp near ptr 004555ADh"
"	      004555ad    jmp near ptr 004555B2h"
"	      004555b2    mov eax,sGroundPreviewFileName"
"	      004555b5    mov eax,[eax+4]"
"	      004555b8    cmp dword ptr [eax+0Ch],1"
"	      004555bc    ja near ptr 004555E7h"
"	      004555c2    jmp near ptr 004555C7h"
"	      004555c7    jmp near ptr 004555CCh"
"	      004555cc    mov eax,sGroundPreviewFileName"
"	      004555cf    mov eax,[eax+4]"
"	      004555d2    mov eax,[eax+8]"
"	      004555d5    mov ecx,sGroundPreviewFileName"
"	      004555d8    mov ecx,[ecx+4]"
"	      004555db    sub eax,[ecx+4]"
"	      004555de    cmp eax,[ebp-64h]"
"	      004555e1    jae near ptr 00455650h"
"	      004555e7    push 10h"
"	      004555e9    call 0056A600h"
"	      004555ee    add esp,4"
"	      004555f1    mov [ebp-58h],eax"
"	      004555f4    cmp dword ptr [ebp-58h],0"
"	      004555f8    je near ptr 00455638h"
"	      004555fe    jmp near ptr 00455603h"
"	      00455603    jmp near ptr 00455608h"
"	      00455608    mov eax,sGroundPreviewFileName"
"	      0045560b    mov eax,[eax+4]"
"	      0045560e    mov eax,[eax+4]"
"	      00455611    add eax,[ebp-64h]"
"	      00455614    push eax"
"	      00455615    mov eax,sGroundPreviewFileName"
"	      00455618    mov eax,[eax+4]"
"	      0045561b    mov eax,[eax+4]"
"	      0045561e    push eax"
"	      0045561f    mov ecx,sGroundPreviewFileName"
"	      00455622    call 00417C00h"
"	      00455627    push eax"
"	      00455628    mov ecx,[ebp-58h]"
"	      0045562b    call 0041E160h"
"	      00455630    mov [ebp-54h],eax"
"	      00455633    jmp near ptr 0045563Fh"
"	      00455638    mov dword ptr [ebp-54h],0"
"	      0045563f    mov ecx,sGroundPreviewFileName"
"	      00455642    call 00412080h"
"	      00455647    mov eax,[ebp-54h]"
"	      0045564a    mov ecx,sGroundPreviewFileName"
"	      0045564d    mov [ecx+4],eax"
"	      00455650    cmp dword ptr [ebp-64h],0"
"	      00455654    je near ptr 00455691h"
"	      0045565a    jmp near ptr 0045565Fh"
"	      0045565f    jmp near ptr 00455664h"
"	      00455664    mov eax,sGroundPreviewFileName"
"	      00455667    mov eax,[eax+4]"
"	      0045566a    mov eax,[eax+4]"
"	      0045566d    mov ecx,sGroundPreviewFileName"
"	      00455670    mov ecx,[ecx+4]"
"	      00455673    add eax,[ecx]"
"	      00455675    mov [ebp-5Ch],eax"
"	      00455678    mov eax,[ebp-64h]"
"	      0045567b    push eax"
"	      0045567c    mov eax,[ebp-68h]"
"	      0045567f    push eax"
"	      00455680    mov eax,[ebp-5Ch]"
"	      00455683    push eax"
"	      00455684    call 0056A800h"
"	      00455689    add esp,0Ch"
"	      0045568c    jmp near ptr 00455691h"
"	      00455691    mov eax,[ebp-64h]"
"	      00455694    mov ecx,sGroundPreviewFileName"
"	      00455697    mov ecx,[ecx+4]"
"	      0045569a    add [ecx+4],eax"
"	      0045569d    jmp near ptr 004556A2h"
"	      004556a2    jmp near ptr 004556A7h"
);
// LINE 877:
	asm( 
"	      004556a7    mov eax,this"
"	      004556ad    cmp dword ptr [eax+7Ch],0"
"	      004556b1    je near ptr 00455820h"
);
// LINE 878:
	asm( 
"	      004556b7    mov eax,ds:[599160h]"
"	      004556bc    mov [ebp-80h],eax"
"	      004556bf    jmp near ptr 004556C4h"
"	      004556c4    mov eax,[ebp-80h]"
"	      004556c7    push eax"
"	      004556c8    call 0056ABE0h"
"	      004556cd    add esp,4"
"	      004556d0    mov [ebp-7Ch],eax"
"	      004556d3    jmp near ptr 004556D8h"
"	      004556d8    mov eax,sSkyPreviewFileName"
"	      004556db    mov eax,[eax+4]"
"	      004556de    mov ecx,0FFFFFFFFh"
"	      004556e3    sub ecx,[ebp-7Ch]"
"	      004556e6    cmp [eax+4],ecx"
"	      004556e9    jb near ptr 00455721h"
"	      004556ef    push 5971E4h"
"	      004556f4    mov ecx,638C00h"
"	      004556f9    call 00569960h"
"	      004556fe    mov [ebp-78h],eax"
"	      00455701    mov eax,[ebp-78h]"
"	      00455704    push eax"
"	      00455705    call 004011B0h"
"	      0045570a    add esp,4"
"	      0045570d    jmp near ptr 00455712h"
"	      00455712    push 1"
"	      00455714    call 00569430h"
"	      00455719    add esp,4"
"	      0045571c    jmp near ptr 00455721h"
"	      00455721    jmp near ptr 00455726h"
"	      00455726    mov eax,sSkyPreviewFileName"
"	      00455729    mov eax,[eax+4]"
"	      0045572c    cmp dword ptr [eax+0Ch],1"
"	      00455730    ja near ptr 0045575Bh"
"	      00455736    jmp near ptr 0045573Bh"
"	      0045573b    jmp near ptr 00455740h"
"	      00455740    mov eax,sSkyPreviewFileName"
"	      00455743    mov eax,[eax+4]"
"	      00455746    mov eax,[eax+8]"
"	      00455749    mov ecx,sSkyPreviewFileName"
"	      0045574c    mov ecx,[ecx+4]"
"	      0045574f    sub eax,[ecx+4]"
"	      00455752    cmp eax,[ebp-7Ch]"
"	      00455755    jae near ptr 004557C4h"
"	      0045575b    push 10h"
"	      0045575d    call 0056A600h"
"	      00455762    add esp,4"
"	      00455765    mov [ebp-70h],eax"
"	      00455768    cmp dword ptr [ebp-70h],0"
"	      0045576c    je near ptr 004557ACh"
"	      00455772    jmp near ptr 00455777h"
"	      00455777    jmp near ptr 0045577Ch"
"	      0045577c    mov eax,sSkyPreviewFileName"
"	      0045577f    mov eax,[eax+4]"
"	      00455782    mov eax,[eax+4]"
"	      00455785    add eax,[ebp-7Ch]"
"	      00455788    push eax"
"	      00455789    mov eax,sSkyPreviewFileName"
"	      0045578c    mov eax,[eax+4]"
"	      0045578f    mov eax,[eax+4]"
"	      00455792    push eax"
"	      00455793    mov ecx,sSkyPreviewFileName"
"	      00455796    call 00417C00h"
"	      0045579b    push eax"
"	      0045579c    mov ecx,[ebp-70h]"
"	      0045579f    call 0041E160h"
"	      004557a4    mov [ebp-6Ch],eax"
"	      004557a7    jmp near ptr 004557B3h"
"	      004557ac    mov dword ptr [ebp-6Ch],0"
"	      004557b3    mov ecx,sSkyPreviewFileName"
"	      004557b6    call 00412080h"
"	      004557bb    mov eax,[ebp-6Ch]"
"	      004557be    mov ecx,sSkyPreviewFileName"
"	      004557c1    mov [ecx+4],eax"
"	      004557c4    cmp dword ptr [ebp-7Ch],0"
"	      004557c8    je near ptr 00455805h"
"	      004557ce    jmp near ptr 004557D3h"
"	      004557d3    jmp near ptr 004557D8h"
"	      004557d8    mov eax,sSkyPreviewFileName"
"	      004557db    mov eax,[eax+4]"
"	      004557de    mov eax,[eax+4]"
"	      004557e1    mov ecx,sSkyPreviewFileName"
"	      004557e4    mov ecx,[ecx+4]"
"	      004557e7    add eax,[ecx]"
"	      004557e9    mov [ebp-74h],eax"
"	      004557ec    mov eax,[ebp-7Ch]"
"	      004557ef    push eax"
"	      004557f0    mov eax,[ebp-80h]"
"	      004557f3    push eax"
"	      004557f4    mov eax,[ebp-74h]"
"	      004557f7    push eax"
"	      004557f8    call 0056A800h"
"	      004557fd    add esp,0Ch"
"	      00455800    jmp near ptr 00455805h"
"	      00455805    mov eax,[ebp-7Ch]"
"	      00455808    mov ecx,sSkyPreviewFileName"
"	      0045580b    mov ecx,[ecx+4]"
"	      0045580e    add [ecx+4],eax"
"	      00455811    jmp near ptr 00455816h"
"	      00455816    jmp near ptr 0045581Bh"
);
// LINE 879:
	asm( 
"	      0045581b    jmp near ptr 004559FAh"
);
// LINE 880:
	asm( 
"	      00455820    mov eax,ds:[599164h]"
"	      00455825    mov [ebp-9Ch],eax"
"	      0045582b    jmp near ptr 00455830h"
"	      00455830    mov eax,[ebp-9Ch]"
"	      00455836    push eax"
"	      00455837    call 0056ABE0h"
"	      0045583c    add esp,4"
"	      0045583f    mov [ebp-98h],eax"
"	      00455845    jmp near ptr 0045584Ah"
"	      0045584a    mov eax,sSkyPreviewFileName"
"	      0045584d    mov eax,[eax+4]"
"	      00455850    mov ecx,0FFFFFFFFh"
"	      00455855    sub ecx,[ebp-98h]"
"	      0045585b    cmp [eax+4],ecx"
"	      0045585e    jb near ptr 0045589Ch"
"	      00455864    push 5971E4h"
"	      00455869    mov ecx,638C00h"
"	      0045586e    call 00569960h"
"	      00455873    mov [ebp-94h],eax"
"	      00455879    mov eax,[ebp-94h]"
"	      0045587f    push eax"
"	      00455880    call 004011B0h"
"	      00455885    add esp,4"
"	      00455888    jmp near ptr 0045588Dh"
"	      0045588d    push 1"
"	      0045588f    call 00569430h"
"	      00455894    add esp,4"
"	      00455897    jmp near ptr 0045589Ch"
"	      0045589c    jmp near ptr 004558A1h"
"	      004558a1    mov eax,sSkyPreviewFileName"
"	      004558a4    mov eax,[eax+4]"
"	      004558a7    cmp dword ptr [eax+0Ch],1"
"	      004558ab    ja near ptr 004558D9h"
"	      004558b1    jmp near ptr 004558B6h"
"	      004558b6    jmp near ptr 004558BBh"
"	      004558bb    mov eax,sSkyPreviewFileName"
"	      004558be    mov eax,[eax+4]"
"	      004558c1    mov eax,[eax+8]"
"	      004558c4    mov ecx,sSkyPreviewFileName"
"	      004558c7    mov ecx,[ecx+4]"
"	      004558ca    sub eax,[ecx+4]"
"	      004558cd    cmp eax,[ebp-98h]"
"	      004558d3    jae near ptr 00455991h"
"	      004558d9    push 10h"
"	      004558db    call 0056A600h"
"	      004558e0    add esp,4"
"	      004558e3    mov [ebp-88h],eax"
"	      004558e9    cmp dword ptr [ebp-88h],0"
"	      004558f0    je near ptr 00455973h"
"	      004558f6    jmp near ptr 004558FBh"
"	      004558fb    jmp near ptr 00455900h"
"	      00455900    jmp near ptr 00455905h"
"	      00455905    mov eax,sSkyPreviewFileName"
"	      00455908    mov eax,[eax+4]"
"	      0045590b    cmp dword ptr [eax+4],0"
"	      0045590f    je near ptr 0045592Dh"
"	      00455915    mov eax,sSkyPreviewFileName"
"	      00455918    mov eax,[eax+4]"
"	      0045591b    mov eax,[eax]"
"	      0045591d    mov [ebp-90h],eax"
"	      00455923    jmp near ptr 0045593Ch"
"	      00455928    jmp near ptr 0045593Ch"
"	      0045592d    mov dword ptr [ebp-90h],0"
"	      00455937    jmp near ptr 0045593Ch"
"	      0045593c    mov eax,sSkyPreviewFileName"
"	      0045593f    mov eax,[eax+4]"
"	      00455942    mov eax,[eax+4]"
"	      00455945    add eax,[ebp-98h]"
"	      0045594b    push eax"
"	      0045594c    mov eax,sSkyPreviewFileName"
"	      0045594f    mov eax,[eax+4]"
"	      00455952    mov eax,[eax+4]"
"	      00455955    push eax"
"	      00455956    mov eax,[ebp-90h]"
"	      0045595c    push eax"
"	      0045595d    mov ecx,[ebp-88h]"
"	      00455963    call 0041E160h"
"	      00455968    mov [ebp-84h],eax"
"	      0045596e    jmp near ptr 0045597Dh"
"	      00455973    mov dword ptr [ebp-84h],0"
"	      0045597d    mov ecx,sSkyPreviewFileName"
"	      00455980    call 00412080h"
"	      00455985    mov eax,[ebp-84h]"
"	      0045598b    mov ecx,sSkyPreviewFileName"
"	      0045598e    mov [ecx+4],eax"
"	      00455991    cmp dword ptr [ebp-98h],0"
"	      00455998    je near ptr 004559E1h"
"	      0045599e    jmp near ptr 004559A3h"
"	      004559a3    jmp near ptr 004559A8h"
"	      004559a8    mov eax,sSkyPreviewFileName"
"	      004559ab    mov eax,[eax+4]"
"	      004559ae    mov eax,[eax+4]"
"	      004559b1    mov ecx,sSkyPreviewFileName"
"	      004559b4    mov ecx,[ecx+4]"
"	      004559b7    add eax,[ecx]"
"	      004559b9    mov [ebp-8Ch],eax"
"	      004559bf    mov eax,[ebp-98h]"
"	      004559c5    push eax"
"	      004559c6    mov eax,[ebp-9Ch]"
"	      004559cc    push eax"
"	      004559cd    mov eax,[ebp-8Ch]"
"	      004559d3    push eax"
"	      004559d4    call 0056A800h"
"	      004559d9    add esp,0Ch"
"	      004559dc    jmp near ptr 004559E1h"
"	      004559e1    mov eax,[ebp-98h]"
"	      004559e7    mov ecx,sSkyPreviewFileName"
"	      004559ea    mov ecx,[ecx+4]"
"	      004559ed    add [ecx+4],eax"
"	      004559f0    jmp near ptr 004559F5h"
"	      004559f5    jmp near ptr 004559FAh"
);
// LINE 881:
	asm( 
"	      004559fa    jmp near ptr 004559FFh"
"	      004559ff    pop edi"
"	      00455a00    pop esi"
"	      00455a01    pop ebx"
"	      00455a02    leave"
"	      00455a03    ret 0Ch"
);
}

// FUNCTION: COPTER_D 0x00455a06
int32_t RenderSettingsWindow::DoMessage(class GraphicWindow* gwSource, long lWindowID, long lMessage, void * __ptr32 pMessageData) {
// LINE 889:
	asm( 
"	      00455a06    push ebp"
"	      00455a07    mov ebp,esp"
"	      00455a09    sub esp,8"
"	      00455a0c    push ebx"
"	      00455a0d    push esi"
"	      00455a0e    push edi"
"	      00455a0f    mov this,ecx"
);
// LINE 890:
	asm( 
"	      00455a12    mov eax,lWindowID"
"	      00455a15    mov [ebp-8],eax"
"	      00455a18    jmp near ptr 00455BAEh"
);
// LINE 892:
	asm( 
"	      00455a1d    mov eax,this"
"	      00455a20    cmp dword ptr [eax+38h],0"
"	      00455a24    je near ptr 00455A4Ch"
);
// LINE 893:
	asm( 
"	      00455a2a    push 0"
"	      00455a2c    push 3E9h"
"	      00455a31    mov eax,this"
"	      00455a34    mov eax,[eax+4]"
"	      00455a37    push eax"
"	      00455a38    mov eax,this"
"	      00455a3b    push eax"
"	      00455a3c    mov eax,this"
"	      00455a3f    mov ecx,this"
"	      00455a42    mov ecx,[ecx+38h]"
"	      00455a45    mov edx,[ecx]"
"	      00455a47    mov ecx,[eax+38h]"
"	      00455a4a    call dword ptr [edx]"
);
// LINE 894:
	asm( 
"	      00455a4c    mov eax,1"
"	      00455a51    jmp near ptr 00455BF4h"
);
// LINE 897:
	asm( 
"	      00455a56    mov eax,this"
"	      00455a59    cmp dword ptr [eax+38h],0"
"	      00455a5d    je near ptr 00455A85h"
);
// LINE 898:
	asm( 
"	      00455a63    push 0"
"	      00455a65    push 3EAh"
"	      00455a6a    mov eax,this"
"	      00455a6d    mov eax,[eax+4]"
"	      00455a70    push eax"
"	      00455a71    mov eax,this"
"	      00455a74    push eax"
"	      00455a75    mov eax,this"
"	      00455a78    mov ecx,this"
"	      00455a7b    mov ecx,[ecx+38h]"
"	      00455a7e    mov edx,[ecx]"
"	      00455a80    mov ecx,[eax+38h]"
"	      00455a83    call dword ptr [edx]"
);
// LINE 899:
	asm( 
"	      00455a85    mov eax,1"
"	      00455a8a    jmp near ptr 00455BF4h"
);
// LINE 902:
	asm( 
"	      00455a8f    cmp lMessage,10001h"
"	      00455a96    jne near ptr 00455ABBh"
);
// LINE 903:
	asm( 
"	      00455a9c    mov eax,this"
"	      00455a9f    mov ecx,[eax+94h]"
"	      00455aa5    call 004B0F79h"
"	      00455aaa    mov ecx,this"
"	      00455aad    mov [ecx+80h],eax"
);
// LINE 904:
	asm( 
"	      00455ab3    mov ecx,this"
"	      00455ab6    call 004547CAh"
);
// LINE 906:
	asm( 
"	      00455abb    mov eax,1"
"	      00455ac0    jmp near ptr 00455BF4h"
);
// LINE 909:
	asm( 
"	      00455ac5    cmp lMessage,10001h"
"	      00455acc    jne near ptr 00455AFFh"
);
// LINE 910:
	asm( 
"	      00455ad2    mov eax,pMessageData"
"	      00455ad5    cmp dword ptr [eax],2"
"	      00455ad8    jne near ptr 00455AEDh"
"	      00455ade    mov eax,this"
"	      00455ae1    mov dword ptr [eax+74h],1"
"	      00455ae8    jmp near ptr 00455AF7h"
"	      00455aed    mov eax,this"
"	      00455af0    mov dword ptr [eax+74h],0"
);
// LINE 911:
	asm( 
"	      00455af7    mov ecx,this"
"	      00455afa    call 004547CAh"
);
// LINE 913:
	asm( 
"	      00455aff    mov eax,1"
"	      00455b04    jmp near ptr 00455BF4h"
);
// LINE 916:
	asm( 
"	      00455b09    cmp lMessage,10001h"
"	      00455b10    jne near ptr 00455B43h"
);
// LINE 917:
	asm( 
"	      00455b16    mov eax,pMessageData"
"	      00455b19    cmp dword ptr [eax],2"
"	      00455b1c    jne near ptr 00455B31h"
"	      00455b22    mov eax,this"
"	      00455b25    mov dword ptr [eax+78h],1"
"	      00455b2c    jmp near ptr 00455B3Bh"
"	      00455b31    mov eax,this"
"	      00455b34    mov dword ptr [eax+78h],0"
);
// LINE 918:
	asm( 
"	      00455b3b    mov ecx,this"
"	      00455b3e    call 004547CAh"
);
// LINE 920:
	asm( 
"	      00455b43    mov eax,1"
"	      00455b48    jmp near ptr 00455BF4h"
);
// LINE 923:
	asm( 
"	      00455b4d    cmp lMessage,10001h"
"	      00455b54    jne near ptr 00455B87h"
);
// LINE 924:
	asm( 
"	      00455b5a    mov eax,pMessageData"
"	      00455b5d    cmp dword ptr [eax],2"
"	      00455b60    jne near ptr 00455B75h"
"	      00455b66    mov eax,this"
"	      00455b69    mov dword ptr [eax+7Ch],1"
"	      00455b70    jmp near ptr 00455B7Fh"
"	      00455b75    mov eax,this"
"	      00455b78    mov dword ptr [eax+7Ch],0"
);
// LINE 925:
	asm( 
"	      00455b7f    mov ecx,this"
"	      00455b82    call 004547CAh"
);
// LINE 927:
	asm( 
"	      00455b87    mov eax,1"
"	      00455b8c    jmp near ptr 00455BF4h"
);
// LINE 931:
	asm( 
"	      00455b91    mov eax,pMessageData"
"	      00455b94    mov eax,[eax]"
"	      00455b96    mov ecx,this"
"	      00455b99    mov [ecx+84h],eax"
);
// LINE 932:
	asm( 
"	      00455b9f    mov eax,1"
"	      00455ba4    jmp near ptr 00455BF4h"
);
// LINE 933:
	asm( 
"	      00455ba9    jmp near ptr 00455BEDh"
"	      00455bae    dec dword ptr [ebp-8]"
"	      00455bb1    cmp dword ptr [ebp-8],9"
"	      00455bb5    ja near ptr 00455BEDh"
"	      00455bbb    mov eax,[ebp-8]"
"	      00455bbe    jmp dword ptr [eax*4+455BC5h]"
"	      00455bc5    sbb eax,5600455Ah"
"	      00455bca    pop edx"
"	      00455bcb    inc ebp"
"	      00455bcc    add ch,al"
"	      00455bce    pop edx"
"	      00455bcf    inc ebp"
"	      00455bd0    add [ecx],cl"
"	      00455bd2    pop ebx"
"	      00455bd3    inc ebp"
"	      00455bd4    add [ebp+5Bh],cl"
"	      00455bd7    inc ebp"
"	      00455bd8    add [edi-12FFBAA6h],cl"
"	      00455bde    pop ebx"
"	      00455bdf    inc ebp"
"	      00455be0    add ch,ch"
"	      00455be2    pop ebx"
"	      00455be3    inc ebp"
"	      00455be4    add ch,ch"
"	      00455be6    pop ebx"
"	      00455be7    inc ebp"
"	      00455be8    (bad)"
);
// LINE 935:
	asm( 
"	      00455bed    xor eax,eax"
"	      00455bef    jmp near ptr 00455BF4h"
);
// LINE 936:
	asm( 
"	      00455bf4    pop edi"
"	      00455bf5    pop esi"
"	      00455bf6    pop ebx"
"	      00455bf7    leave"
"	      00455bf8    ret 10h"
);
}

// FUNCTION: COPTER_D 0x00455bfb
void SoundSettingsWindow::SoundSettingsWindow(class MRect& rectNewPosition, int32_t nNewID, class GraphicWindow* windowNewParent, class GraphicWindowOwner* myNewOwner, int32_t bAddToParentList) {
// LINE 990:
	asm( 
"	      00455bfb    push ebp"
"	      00455bfc    mov ebp,esp"
"	      00455bfe    sub esp,4"
"	      00455c01    push ebx"
"	      00455c02    push esi"
"	      00455c03    push edi"
"	      00455c04    mov this,ecx"
"	      00455c07    mov eax,ds:[606988h]"
"	      00455c0c    push eax"
"	      00455c0d    mov eax,bAddToParentList"
"	      00455c10    push eax"
"	      00455c11    mov eax,myNewOwner"
"	      00455c14    push eax"
"	      00455c15    mov eax,windowNewParent"
"	      00455c18    push eax"
"	      00455c19    mov eax,nNewID"
"	      00455c1c    push eax"
"	      00455c1d    mov eax,rectNewPosition"
"	      00455c20    push eax"
"	      00455c21    mov eax,ds:[59916Ch]"
"	      00455c26    push eax"
"	      00455c27    mov ecx,this"
"	      00455c2a    call 004A393Dh"
"	      00455c2f    mov eax,this"
"	      00455c32    mov dword ptr [eax+74h],0"
"	      00455c39    mov eax,this"
"	      00455c3c    mov dword ptr [eax+78h],0"
"	      00455c43    mov eax,this"
"	      00455c46    mov dword ptr [eax+7Ch],0"
"	      00455c4d    mov eax,this"
"	      00455c50    mov dword ptr [eax+80h],0"
"	      00455c5a    mov eax,this"
"	      00455c5d    mov dword ptr [eax+84h],0"
"	      00455c67    mov eax,this"
"	      00455c6a    mov dword ptr [eax],58FCE8h"
);
// LINE 991:
	asm( 
"	      00455c70    jmp near ptr 00455C75h"
"	      00455c75    mov eax,this"
"	      00455c78    pop edi"
"	      00455c79    pop esi"
"	      00455c7a    pop ebx"
"	      00455c7b    leave"
"	      00455c7c    ret 14h"
);
}

// FUNCTION: COPTER_D 0x00455c7f
int32_t SoundSettingsWindow::Initialize() {
	class TextWindow* tempTextWindow;
	class ButtonWindow* tempButtonWindow2;
	class ButtonWindow* tempButtonWindow1;
	class basic_string<char> sText;
	int32_t nFullStringID;

// LINE 999:
	asm( 
"	      00455c7f    push ebp"
"	      00455c80    mov ebp,esp"
"	      00455c82    mov eax,2198h"
"	      00455c87    call 0056AC60h"
"	      00455c8c    push ebx"
"	      00455c8d    push esi"
"	      00455c8e    push edi"
"	      00455c8f    mov this,ecx"
);
// LINE 1002:
	asm( 
"	      00455c95    push 10h"
"	      00455c97    call 0056A600h"
"	      00455c9c    add esp,4"
"	      00455c9f    mov [ebp-0FCh],eax"
"	      00455ca5    cmp dword ptr [ebp-0FCh],0"
"	      00455cac    je near ptr 00455CFDh"
"	      00455cb2    mov eax,[ebp-0FCh]"
"	      00455cb8    mov dword ptr [eax+4],0"
"	      00455cbf    mov eax,[ebp-0FCh]"
"	      00455cc5    mov eax,[eax+4]"
"	      00455cc8    mov ecx,[ebp-0FCh]"
"	      00455cce    mov [ecx+8],eax"
"	      00455cd1    mov eax,[ebp-0FCh]"
"	      00455cd7    mov dword ptr [eax],0"
"	      00455cdd    mov eax,[ebp-0FCh]"
"	      00455ce3    mov dword ptr [eax+0Ch],1"
"	      00455cea    jmp near ptr 00455CEFh"
"	      00455cef    mov eax,[ebp-0FCh]"
"	      00455cf5    mov sText.reference,eax"
"	      00455cf8    jmp near ptr 00455D04h"
"	      00455cfd    mov sText.reference,0"
"	      00455d04    mov sText.c_str_ptr,0"
"	      00455d0b    jmp near ptr 00455D10h"
);
// LINE 1004:
	asm( 
"	      00455d10    mov ecx,this"
"	      00455d16    call 004A44D4h"
);
// LINE 1007:
	asm( 
"	      00455d1b    push 0A4h"
"	      00455d20    call 0056A600h"
"	      00455d25    add esp,4"
"	      00455d28    mov [ebp-1Ch],eax"
"	      00455d2b    cmp dword ptr [ebp-1Ch],0"
"	      00455d2f    je near ptr 00455D86h"
"	      00455d35    jmp near ptr 00455D3Ah"
"	      00455d3a    mov dword ptr [ebp-2Ch],96h"
"	      00455d41    mov dword ptr [ebp-28h],170h"
"	      00455d48    mov dword ptr [ebp-24h],118h"
"	      00455d4f    mov dword ptr [ebp-20h],17Eh"
"	      00455d56    jmp near ptr 00455D5Bh"
"	      00455d5b    push 1"
"	      00455d5d    mov eax,this"
"	      00455d63    push eax"
"	      00455d64    mov eax,this"
"	      00455d6a    push eax"
"	      00455d6b    push 82h"
"	      00455d70    push 0"
"	      00455d72    lea eax,[ebp-2Ch]"
"	      00455d75    push eax"
"	      00455d76    mov ecx,[ebp-1Ch]"
"	      00455d79    call 004ACCE6h"
"	      00455d7e    mov tempTextWindow,eax"
"	      00455d81    jmp near ptr 00455D8Dh"
"	      00455d86    mov tempTextWindow,0"
);
// LINE 1008:
	asm( 
"	      00455d8d    push 0"
"	      00455d8f    push 0"
"	      00455d91    push 0Eh"
"	      00455d93    mov eax,tempTextWindow"
"	      00455d96    mov eax,[eax]"
"	      00455d98    mov ecx,tempTextWindow"
"	      00455d9b    call dword ptr [eax+0CCh]"
);
// LINE 1009:
	asm( 
"	      00455da1    push 1"
"	      00455da3    mov eax,tempTextWindow"
"	      00455da6    mov eax,[eax]"
"	      00455da8    mov ecx,tempTextWindow"
"	      00455dab    call dword ptr [eax+0D0h]"
);
// LINE 1010:
	asm( 
"	      00455db1    push 603AB8h"
"	      00455db6    mov eax,tempTextWindow"
"	      00455db9    mov eax,[eax]"
"	      00455dbb    mov ecx,tempTextWindow"
"	      00455dbe    call dword ptr [eax+0D4h]"
);
// LINE 1024:
	asm( 
"	      00455dc4    push 0A4h"
"	      00455dc9    call 0056A600h"
"	      00455dce    add esp,4"
"	      00455dd1    mov [ebp-30h],eax"
"	      00455dd4    cmp dword ptr [ebp-30h],0"
"	      00455dd8    je near ptr 00455E2Fh"
"	      00455dde    jmp near ptr 00455DE3h"
"	      00455de3    mov dword ptr [ebp-40h],71h"
"	      00455dea    mov dword ptr [ebp-3Ch],11Fh"
"	      00455df1    mov dword ptr [ebp-38h],0D2h"
"	      00455df8    mov dword ptr [ebp-34h],12Dh"
"	      00455dff    jmp near ptr 00455E04h"
"	      00455e04    push 1"
"	      00455e06    mov eax,this"
"	      00455e0c    push eax"
"	      00455e0d    mov eax,this"
"	      00455e13    push eax"
"	      00455e14    push 8Ah"
"	      00455e19    push 0"
"	      00455e1b    lea eax,[ebp-40h]"
"	      00455e1e    push eax"
"	      00455e1f    mov ecx,[ebp-30h]"
"	      00455e22    call 004ACCE6h"
"	      00455e27    mov tempTextWindow,eax"
"	      00455e2a    jmp near ptr 00455E36h"
"	      00455e2f    mov tempTextWindow,0"
);
// LINE 1025:
	asm( 
"	      00455e36    push 0"
"	      00455e38    push 0"
"	      00455e3a    push 0Eh"
"	      00455e3c    mov eax,tempTextWindow"
"	      00455e3f    mov eax,[eax]"
"	      00455e41    mov ecx,tempTextWindow"
"	      00455e44    call dword ptr [eax+0CCh]"
);
// LINE 1026:
	asm( 
"	      00455e4a    push 1"
"	      00455e4c    mov eax,tempTextWindow"
"	      00455e4f    mov eax,[eax]"
"	      00455e51    mov ecx,tempTextWindow"
"	      00455e54    call dword ptr [eax+0D0h]"
);
// LINE 1027:
	asm( 
"	      00455e5a    push 603AB8h"
"	      00455e5f    mov eax,tempTextWindow"
"	      00455e62    mov eax,[eax]"
"	      00455e64    mov ecx,tempTextWindow"
"	      00455e67    call dword ptr [eax+0D4h]"
);
// LINE 1029:
	asm( 
"	      00455e6d    push 0A4h"
"	      00455e72    call 0056A600h"
"	      00455e77    add esp,4"
"	      00455e7a    mov [ebp-44h],eax"
"	      00455e7d    cmp dword ptr [ebp-44h],0"
"	      00455e81    je near ptr 00455ED8h"
"	      00455e87    jmp near ptr 00455E8Ch"
"	      00455e8c    mov dword ptr [ebp-54h],0D6h"
"	      00455e93    mov dword ptr [ebp-50h],11Fh"
"	      00455e9a    mov dword ptr [ebp-4Ch],13Ch"
"	      00455ea1    mov dword ptr [ebp-48h],12Dh"
"	      00455ea8    jmp near ptr 00455EADh"
"	      00455ead    push 1"
"	      00455eaf    mov eax,this"
"	      00455eb5    push eax"
"	      00455eb6    mov eax,this"
"	      00455ebc    push eax"
"	      00455ebd    push 89h"
"	      00455ec2    push 0"
"	      00455ec4    lea eax,[ebp-54h]"
"	      00455ec7    push eax"
"	      00455ec8    mov ecx,[ebp-44h]"
"	      00455ecb    call 004ACCE6h"
"	      00455ed0    mov tempTextWindow,eax"
"	      00455ed3    jmp near ptr 00455EDFh"
"	      00455ed8    mov tempTextWindow,0"
);
// LINE 1030:
	asm( 
"	      00455edf    push 0"
"	      00455ee1    push 0"
"	      00455ee3    push 0Eh"
"	      00455ee5    mov eax,tempTextWindow"
"	      00455ee8    mov eax,[eax]"
"	      00455eea    mov ecx,tempTextWindow"
"	      00455eed    call dword ptr [eax+0CCh]"
);
// LINE 1031:
	asm( 
"	      00455ef3    push 1"
"	      00455ef5    mov eax,tempTextWindow"
"	      00455ef8    mov eax,[eax]"
"	      00455efa    mov ecx,tempTextWindow"
"	      00455efd    call dword ptr [eax+0D0h]"
);
// LINE 1032:
	asm( 
"	      00455f03    push 603AB8h"
"	      00455f08    mov eax,tempTextWindow"
"	      00455f0b    mov eax,[eax]"
"	      00455f0d    mov ecx,tempTextWindow"
"	      00455f10    call dword ptr [eax+0D4h]"
);
// LINE 1039:
	asm( 
"	      00455f16    push 0A4h"
"	      00455f1b    call 0056A600h"
"	      00455f20    add esp,4"
"	      00455f23    mov [ebp-58h],eax"
"	      00455f26    cmp dword ptr [ebp-58h],0"
"	      00455f2a    je near ptr 00455F81h"
"	      00455f30    jmp near ptr 00455F35h"
"	      00455f35    mov dword ptr [ebp-68h],15Ch"
"	      00455f3c    mov dword ptr [ebp-64h],11Fh"
"	      00455f43    mov dword ptr [ebp-60h],17Eh"
"	      00455f4a    mov dword ptr [ebp-5Ch],12Ch"
"	      00455f51    jmp near ptr 00455F56h"
"	      00455f56    push 1"
"	      00455f58    mov eax,this"
"	      00455f5e    push eax"
"	      00455f5f    mov eax,this"
"	      00455f65    push eax"
"	      00455f66    push 8Ch"
"	      00455f6b    push 0"
"	      00455f6d    lea eax,[ebp-68h]"
"	      00455f70    push eax"
"	      00455f71    mov ecx,[ebp-58h]"
"	      00455f74    call 004ACCE6h"
"	      00455f79    mov tempTextWindow,eax"
"	      00455f7c    jmp near ptr 00455F88h"
"	      00455f81    mov tempTextWindow,0"
);
// LINE 1040:
	asm( 
"	      00455f88    push 0"
"	      00455f8a    push 0"
"	      00455f8c    push 0Eh"
"	      00455f8e    mov eax,tempTextWindow"
"	      00455f91    mov eax,[eax]"
"	      00455f93    mov ecx,tempTextWindow"
"	      00455f96    call dword ptr [eax+0CCh]"
);
// LINE 1041:
	asm( 
"	      00455f9c    push 1"
"	      00455f9e    mov eax,tempTextWindow"
"	      00455fa1    mov eax,[eax]"
"	      00455fa3    mov ecx,tempTextWindow"
"	      00455fa6    call dword ptr [eax+0D0h]"
);
// LINE 1042:
	asm( 
"	      00455fac    push 603AB8h"
"	      00455fb1    mov eax,tempTextWindow"
"	      00455fb4    mov eax,[eax]"
"	      00455fb6    mov ecx,tempTextWindow"
"	      00455fb9    call dword ptr [eax+0D4h]"
);
// LINE 1046:
	asm( 
"	      00455fbf    push 94h"
"	      00455fc4    call 0056A600h"
"	      00455fc9    add esp,4"
"	      00455fcc    mov [ebp-6Ch],eax"
"	      00455fcf    cmp dword ptr [ebp-6Ch],0"
"	      00455fd3    je near ptr 00456030h"
"	      00455fd9    jmp near ptr 00455FDEh"
"	      00455fde    mov dword ptr [ebp-7Ch],8Fh"
"	      00455fe5    mov dword ptr [ebp-78h],0FDh"
"	      00455fec    mov dword ptr [ebp-74h],90h"
"	      00455ff3    mov dword ptr [ebp-70h],0FEh"
"	      00455ffa    jmp near ptr 00455FFFh"
"	      00455fff    push 1"
"	      00456001    mov eax,this"
"	      00456007    push eax"
"	      00456008    push 0"
"	      0045600a    mov eax,this"
"	      00456010    push eax"
"	      00456011    push 4"
"	      00456013    lea eax,[ebp-7Ch]"
"	      00456016    push eax"
"	      00456017    mov ecx,[ebp-6Ch]"
"	      0045601a    call 00471A8Ch"
"	      0045601f    mov ecx,this"
"	      00456025    mov [ecx+84h],eax"
"	      0045602b    jmp near ptr 00456040h"
"	      00456030    mov eax,this"
"	      00456036    mov dword ptr [eax+84h],0"
);
// LINE 1047:
	asm( 
"	      00456040    mov eax,this"
"	      00456046    mov ecx,this"
"	      0045604c    mov ecx,[ecx+84h]"
"	      00456052    mov edx,[ecx]"
"	      00456054    mov ecx,[eax+84h]"
"	      0045605a    call dword ptr [edx+4]"
);
// LINE 1050:
	asm( 
"	      0045605d    push 94h"
"	      00456062    call 0056A600h"
"	      00456067    add esp,4"
"	      0045606a    mov [ebp-80h],eax"
"	      0045606d    cmp dword ptr [ebp-80h],0"
"	      00456071    je near ptr 004560DDh"
"	      00456077    jmp near ptr 0045607Ch"
"	      0045607c    mov dword ptr [ebp-90h],0FBh"
"	      00456086    mov dword ptr [ebp-8Ch],0FDh"
"	      00456090    mov dword ptr [ebp-88h],0FCh"
"	      0045609a    mov dword ptr [ebp-84h],0FEh"
"	      004560a4    jmp near ptr 004560A9h"
"	      004560a9    push 1"
"	      004560ab    mov eax,this"
"	      004560b1    push eax"
"	      004560b2    push 0"
"	      004560b4    mov eax,this"
"	      004560ba    push eax"
"	      004560bb    push 3"
"	      004560bd    lea eax,[ebp-90h]"
"	      004560c3    push eax"
"	      004560c4    mov ecx,[ebp-80h]"
"	      004560c7    call 00471A8Ch"
"	      004560cc    mov ecx,this"
"	      004560d2    mov [ecx+80h],eax"
"	      004560d8    jmp near ptr 004560EDh"
"	      004560dd    mov eax,this"
"	      004560e3    mov dword ptr [eax+80h],0"
);
// LINE 1051:
	asm( 
"	      004560ed    mov eax,this"
"	      004560f3    mov ecx,this"
"	      004560f9    mov ecx,[ecx+80h]"
"	      004560ff    mov edx,[ecx]"
"	      00456101    mov ecx,[eax+80h]"
"	      00456107    call dword ptr [edx+4]"
);
// LINE 1059:
	asm( 
"	      0045610a    push 0B4h"
"	      0045610f    call 0056A600h"
"	      00456114    add esp,4"
"	      00456117    mov [ebp-94h],eax"
"	      0045611d    cmp dword ptr [ebp-94h],0"
"	      00456124    je near ptr 00456196h"
"	      0045612a    jmp near ptr 0045612Fh"
"	      0045612f    mov dword ptr [ebp-0A4h],78h"
"	      00456139    mov dword ptr [ebp-0A0h],14Eh"
"	      00456143    mov dword ptr [ebp-9Ch],138h"
"	      0045614d    mov dword ptr [ebp-98h],16Eh"
"	      00456157    jmp near ptr 0045615Ch"
"	      0045615c    push 8"
"	      0045615e    push 0"
"	      00456160    push 0"
"	      00456162    push 1"
"	      00456164    mov eax,this"
"	      0045616a    push eax"
"	      0045616b    mov eax,this"
"	      00456171    push eax"
"	      00456172    push 0"
"	      00456174    push 6"
"	      00456176    lea eax,[ebp-0A4h]"
"	      0045617c    push eax"
"	      0045617d    mov ecx,[ebp-94h]"
"	      00456183    call 004B1256h"
"	      00456188    mov ecx,this"
"	      0045618e    mov [ecx+74h],eax"
"	      00456191    jmp near ptr 004561A3h"
"	      00456196    mov eax,this"
"	      0045619c    mov dword ptr [eax+74h],0"
);
// LINE 1060:
	asm( 
"	      004561a3    mov eax,this"
"	      004561a9    mov ecx,this"
"	      004561af    mov ecx,[ecx+74h]"
"	      004561b2    mov edx,[ecx]"
"	      004561b4    mov ecx,[eax+74h]"
"	      004561b7    call dword ptr [edx+4]"
);
// LINE 1061:
	asm( 
"	      004561ba    push 140h"
"	      004561bf    mov eax,this"
"	      004561c5    mov ecx,[eax+74h]"
"	      004561c8    call 004B2834h"
);
// LINE 1062:
	asm( 
"	      004561cd    push 2710h"
"	      004561d2    mov eax,this"
"	      004561d8    mov ecx,[eax+74h]"
"	      004561db    call 004B2872h"
);
// LINE 1083:
	asm( 
"	      004561e0    push 0B4h"
"	      004561e5    call 0056A600h"
"	      004561ea    add esp,4"
"	      004561ed    mov [ebp-0A8h],eax"
"	      004561f3    cmp dword ptr [ebp-0A8h],0"
"	      004561fa    je near ptr 0045626Ch"
"	      00456200    jmp near ptr 00456205h"
"	      00456205    mov dword ptr [ebp-0B8h],15Eh"
"	      0045620f    mov dword ptr [ebp-0B4h],4Eh"
"	      00456219    mov dword ptr [ebp-0B0h],17Eh"
"	      00456223    mov dword ptr [ebp-0ACh],10Eh"
"	      0045622d    jmp near ptr 00456232h"
"	      00456232    push 8"
"	      00456234    push 0"
"	      00456236    push 0"
"	      00456238    push 1"
"	      0045623a    mov eax,this"
"	      00456240    push eax"
"	      00456241    mov eax,this"
"	      00456247    push eax"
"	      00456248    push 1"
"	      0045624a    push 0Bh"
"	      0045624c    lea eax,[ebp-0B8h]"
"	      00456252    push eax"
"	      00456253    mov ecx,[ebp-0A8h]"
"	      00456259    call 004B1256h"
"	      0045625e    mov ecx,this"
"	      00456264    mov [ecx+7Ch],eax"
"	      00456267    jmp near ptr 00456279h"
"	      0045626c    mov eax,this"
"	      00456272    mov dword ptr [eax+7Ch],0"
);
// LINE 1084:
	asm( 
"	      00456279    mov eax,this"
"	      0045627f    mov ecx,this"
"	      00456285    mov ecx,[ecx+7Ch]"
"	      00456288    mov edx,[ecx]"
"	      0045628a    mov ecx,[eax+7Ch]"
"	      0045628d    call dword ptr [edx+4]"
);
// LINE 1085:
	asm( 
"	      00456290    push 140h"
"	      00456295    mov eax,this"
"	      0045629b    mov ecx,[eax+7Ch]"
"	      0045629e    call 004B2834h"
);
// LINE 1086:
	asm( 
"	      004562a3    push 2710h"
"	      004562a8    mov eax,this"
"	      004562ae    mov ecx,[eax+7Ch]"
"	      004562b1    call 004B2872h"
);
// LINE 1090:
	asm( 
"	      004562b6    push 0B4h"
"	      004562bb    call 0056A600h"
"	      004562c0    add esp,4"
"	      004562c3    mov [ebp-0BCh],eax"
"	      004562c9    cmp dword ptr [ebp-0BCh],0"
"	      004562d0    je near ptr 0045634Ah"
"	      004562d6    jmp near ptr 004562DBh"
"	      004562db    mov dword ptr [ebp-0CCh],189h"
"	      004562e5    mov dword ptr [ebp-0C8h],5Bh"
"	      004562ef    mov dword ptr [ebp-0C4h],1B7h"
"	      004562f9    mov dword ptr [ebp-0C0h],117h"
"	      00456303    jmp near ptr 00456308h"
"	      00456308    push 8"
"	      0045630a    mov eax,ds:[599170h]"
"	      0045630f    push eax"
"	      00456310    mov eax,ds:[599174h]"
"	      00456315    push eax"
"	      00456316    push 1"
"	      00456318    mov eax,this"
"	      0045631e    push eax"
"	      0045631f    mov eax,this"
"	      00456325    push eax"
"	      00456326    push 1"
"	      00456328    push 0Ah"
"	      0045632a    lea eax,[ebp-0CCh]"
"	      00456330    push eax"
"	      00456331    mov ecx,[ebp-0BCh]"
"	      00456337    call 004B1256h"
"	      0045633c    mov ecx,this"
"	      00456342    mov [ecx+78h],eax"
"	      00456345    jmp near ptr 00456357h"
"	      0045634a    mov eax,this"
"	      00456350    mov dword ptr [eax+78h],0"
);
// LINE 1091:
	asm( 
"	      00456357    mov eax,this"
"	      0045635d    mov ecx,this"
"	      00456363    mov ecx,[ecx+78h]"
"	      00456366    mov edx,[ecx]"
"	      00456368    mov ecx,[eax+78h]"
"	      0045636b    call dword ptr [edx+4]"
);
// LINE 1092:
	asm( 
"	      0045636e    push 0"
"	      00456370    mov eax,this"
"	      00456376    mov ecx,[eax+78h]"
"	      00456379    call 004B2834h"
);
// LINE 1093:
	asm( 
"	      0045637e    push 2"
"	      00456380    mov eax,this"
"	      00456386    mov ecx,[eax+78h]"
"	      00456389    call 004B2872h"
);
// LINE 1097:
	asm( 
"	      0045638e    push 94h"
"	      00456393    call 0056A600h"
"	      00456398    add esp,4"
"	      0045639b    mov [ebp-0D0h],eax"
"	      004563a1    cmp dword ptr [ebp-0D0h],0"
"	      004563a8    je near ptr 0045640Eh"
"	      004563ae    jmp near ptr 004563B3h"
"	      004563b3    mov dword ptr [ebp-0E0h],14Eh"
"	      004563bd    mov dword ptr [ebp-0DCh],14Bh"
"	      004563c7    mov dword ptr [ebp-0D8h],14Fh"
"	      004563d1    mov dword ptr [ebp-0D4h],14Ch"
"	      004563db    jmp near ptr 004563E0h"
"	      004563e0    push 1"
"	      004563e2    mov eax,this"
"	      004563e8    push eax"
"	      004563e9    push 0"
"	      004563eb    mov eax,this"
"	      004563f1    push eax"
"	      004563f2    push 1"
"	      004563f4    lea eax,[ebp-0E0h]"
"	      004563fa    push eax"
"	      004563fb    mov ecx,[ebp-0D0h]"
"	      00456401    call 00471847h"
"	      00456406    mov tempButtonWindow1,eax"
"	      00456409    jmp near ptr 00456415h"
"	      0045640e    mov tempButtonWindow1,0"
);
// LINE 1098:
	asm( 
"	      00456415    push 0"
"	      00456417    push 8Dh"
"	      0045641c    call 0042B15Fh"
"	      00456421    add esp,8"
"	      00456424    mov nFullStringID,eax"
);
// LINE 1099:
	asm( 
"	      00456427    push 0FFFh"
"	      0045642c    lea eax,[ebp-110Ch]"
"	      00456432    push eax"
"	      00456433    mov eax,nFullStringID"
"	      00456436    push eax"
"	      00456437    mov eax,ds:[5C28C8h]"
"	      0045643c    push eax"
"	      0045643d    call dword ptr ds:[6C38B4h]"
"	      00456443    mov [ebp-1110h],eax"
"	      00456449    cmp dword ptr [ebp-1110h],0"
"	      00456450    jne near ptr 00456744h"
"	      00456456    push 0FFFh"
"	      0045645b    lea eax,[ebp-110Ch]"
"	      00456461    push eax"
"	      00456462    mov ecx,3E8h"
"	      00456467    mov eax,nFullStringID"
"	      0045646a    sub edx,edx"
"	      0045646c    div ecx"
"	      0045646e    push edx"
"	      0045646f    mov eax,ds:[5C28C8h]"
"	      00456474    push eax"
"	      00456475    call dword ptr ds:[6C38B4h]"
"	      0045647b    mov [ebp-1110h],eax"
"	      00456481    jmp near ptr 00456486h"
"	      00456486    lea eax,[ebp-110Ch]"
"	      0045648c    push eax"
"	      0045648d    call 0056ABE0h"
"	      00456492    add esp,4"
"	      00456495    mov [ebp-1124h],eax"
"	      0045649b    cmp dword ptr [ebp-1124h],0FFFFFFFFh"
"	      004564a2    jne near ptr 004564E0h"
"	      004564a8    push 5971E4h"
"	      004564ad    mov ecx,638C00h"
"	      004564b2    call 00569960h"
"	      004564b7    mov [ebp-1120h],eax"
"	      004564bd    mov eax,[ebp-1120h]"
"	      004564c3    push eax"
"	      004564c4    call 004011B0h"
"	      004564c9    add esp,4"
"	      004564cc    jmp near ptr 004564D1h"
"	      004564d1    push 1"
"	      004564d3    call 00569430h"
"	      004564d8    add esp,4"
"	      004564db    jmp near ptr 004564E0h"
"	      004564e0    jmp near ptr 004564E5h"
"	      004564e5    mov eax,sText.reference"
"	      004564e8    cmp dword ptr [eax+0Ch],1"
"	      004564ec    ja near ptr 00456516h"
"	      004564f2    cmp dword ptr [ebp-1124h],0"
"	      004564f9    je near ptr 00456577h"
"	      004564ff    jmp near ptr 00456504h"
"	      00456504    mov eax,sText.reference"
"	      00456507    mov ecx,[ebp-1124h]"
"	      0045650d    cmp [eax+8],ecx"
"	      00456510    jae near ptr 00456577h"
"	      00456516    push 10h"
"	      00456518    call 0056A600h"
"	      0045651d    add esp,4"
"	      00456520    mov [ebp-1118h],eax"
"	      00456526    cmp dword ptr [ebp-1118h],0"
"	      0045652d    je near ptr 00456557h"
"	      00456533    mov eax,[ebp-1124h]"
"	      00456539    push eax"
"	      0045653a    lea eax,[ebp-110Ch]"
"	      00456540    push eax"
"	      00456541    mov ecx,[ebp-1118h]"
"	      00456547    call 0041E090h"
"	      0045654c    mov [ebp-1114h],eax"
"	      00456552    jmp near ptr 00456561h"
"	      00456557    mov dword ptr [ebp-1114h],0"
"	      00456561    lea ecx,sText.c_str_ptr"
"	      00456564    call 00412080h"
"	      00456569    mov eax,[ebp-1114h]"
"	      0045656f    mov sText.reference,eax"
"	      00456572    jmp near ptr 004565B6h"
"	      00456577    cmp dword ptr [ebp-1124h],0"
"	      0045657e    je near ptr 004565B6h"
"	      00456584    jmp near ptr 00456589h"
"	      00456589    mov eax,sText.reference"
"	      0045658c    mov eax,[eax]"
"	      0045658e    mov [ebp-111Ch],eax"
"	      00456594    mov eax,[ebp-1124h]"
"	      0045659a    push eax"
"	      0045659b    lea eax,[ebp-110Ch]"
"	      004565a1    push eax"
"	      004565a2    mov eax,[ebp-111Ch]"
"	      004565a8    push eax"
"	      004565a9    call 0056A800h"
"	      004565ae    add esp,0Ch"
"	      004565b1    jmp near ptr 004565B6h"
"	      004565b6    mov eax,[ebp-1124h]"
"	      004565bc    mov ecx,sText.reference"
"	      004565bf    mov [ecx+4],eax"
"	      004565c2    jmp near ptr 004565C7h"
"	      004565c7    jmp near ptr 004565CCh"
"	      004565cc    jmp near ptr 004565D1h"
"	      004565d1    push 597200h"
"	      004565d6    call 0056ABE0h"
"	      004565db    add esp,4"
"	      004565de    mov [ebp-1138h],eax"
"	      004565e4    jmp near ptr 004565E9h"
"	      004565e9    mov eax,sText.reference"
"	      004565ec    mov ecx,0FFFFFFFFh"
"	      004565f1    sub ecx,[ebp-1138h]"
"	      004565f7    cmp [eax+4],ecx"
"	      004565fa    jb near ptr 00456638h"
"	      00456600    push 5971E4h"
"	      00456605    mov ecx,638C00h"
"	      0045660a    call 00569960h"
"	      0045660f    mov [ebp-1134h],eax"
"	      00456615    mov eax,[ebp-1134h]"
"	      0045661b    push eax"
"	      0045661c    call 004011B0h"
"	      00456621    add esp,4"
"	      00456624    jmp near ptr 00456629h"
"	      00456629    push 1"
"	      0045662b    call 00569430h"
"	      00456630    add esp,4"
"	      00456633    jmp near ptr 00456638h"
"	      00456638    jmp near ptr 0045663Dh"
"	      0045663d    mov eax,sText.reference"
"	      00456640    cmp dword ptr [eax+0Ch],1"
"	      00456644    ja near ptr 0045666Ch"
"	      0045664a    jmp near ptr 0045664Fh"
"	      0045664f    jmp near ptr 00456654h"
"	      00456654    mov eax,sText.reference"
"	      00456657    mov eax,[eax+8]"
"	      0045665a    mov ecx,sText.reference"
"	      0045665d    sub eax,[ecx+4]"
"	      00456660    cmp eax,[ebp-1138h]"
"	      00456666    jae near ptr 004566E1h"
"	      0045666c    push 10h"
"	      0045666e    call 0056A600h"
"	      00456673    add esp,4"
"	      00456676    mov [ebp-112Ch],eax"
"	      0045667c    cmp dword ptr [ebp-112Ch],0"
"	      00456683    je near ptr 004566C6h"
"	      00456689    jmp near ptr 0045668Eh"
"	      0045668e    jmp near ptr 00456693h"
"	      00456693    mov eax,sText.reference"
"	      00456696    mov eax,[eax+4]"
"	      00456699    add eax,[ebp-1138h]"
"	      0045669f    push eax"
"	      004566a0    mov eax,sText.reference"
"	      004566a3    mov eax,[eax+4]"
"	      004566a6    push eax"
"	      004566a7    lea ecx,sText.c_str_ptr"
"	      004566aa    call 00417C00h"
"	      004566af    push eax"
"	      004566b0    mov ecx,[ebp-112Ch]"
"	      004566b6    call 0041E160h"
"	      004566bb    mov [ebp-1128h],eax"
"	      004566c1    jmp near ptr 004566D0h"
"	      004566c6    mov dword ptr [ebp-1128h],0"
"	      004566d0    lea ecx,sText.c_str_ptr"
"	      004566d3    call 00412080h"
"	      004566d8    mov eax,[ebp-1128h]"
"	      004566de    mov sText.reference,eax"
"	      004566e1    cmp dword ptr [ebp-1138h],0"
"	      004566e8    je near ptr 00456729h"
"	      004566ee    jmp near ptr 004566F3h"
"	      004566f3    jmp near ptr 004566F8h"
"	      004566f8    mov eax,sText.reference"
"	      004566fb    mov eax,[eax+4]"
"	      004566fe    mov ecx,sText.reference"
"	      00456701    add eax,[ecx]"
"	      00456703    mov [ebp-1130h],eax"
"	      00456709    mov eax,[ebp-1138h]"
"	      0045670f    push eax"
"	      00456710    push 597200h"
"	      00456715    mov eax,[ebp-1130h]"
"	      0045671b    push eax"
"	      0045671c    call 0056A800h"
"	      00456721    add esp,0Ch"
"	      00456724    jmp near ptr 00456729h"
"	      00456729    mov eax,[ebp-1138h]"
"	      0045672f    mov ecx,sText.reference"
"	      00456732    add [ecx+4],eax"
"	      00456735    jmp near ptr 0045673Ah"
"	      0045673a    jmp near ptr 0045673Fh"
"	      0045673f    jmp near ptr 004568D8h"
"	      00456744    jmp near ptr 00456749h"
"	      00456749    lea eax,[ebp-110Ch]"
"	      0045674f    push eax"
"	      00456750    call 0056ABE0h"
"	      00456755    add esp,4"
"	      00456758    mov [ebp-1154h],eax"
"	      0045675e    cmp dword ptr [ebp-1154h],0FFFFFFFFh"
"	      00456765    jne near ptr 004567A3h"
"	      0045676b    push 5971E4h"
"	      00456770    mov ecx,638C00h"
"	      00456775    call 00569960h"
"	      0045677a    mov [ebp-1148h],eax"
"	      00456780    mov eax,[ebp-1148h]"
"	      00456786    push eax"
"	      00456787    call 004011B0h"
"	      0045678c    add esp,4"
"	      0045678f    jmp near ptr 00456794h"
"	      00456794    push 1"
"	      00456796    call 00569430h"
"	      0045679b    add esp,4"
"	      0045679e    jmp near ptr 004567A3h"
"	      004567a3    jmp near ptr 004567A8h"
"	      004567a8    mov eax,sText.reference"
"	      004567ab    cmp dword ptr [eax+0Ch],1"
"	      004567af    ja near ptr 004567D9h"
"	      004567b5    cmp dword ptr [ebp-1154h],0"
"	      004567bc    je near ptr 0045687Eh"
"	      004567c2    jmp near ptr 004567C7h"
"	      004567c7    mov eax,sText.reference"
"	      004567ca    mov ecx,[ebp-1154h]"
"	      004567d0    cmp [eax+8],ecx"
"	      004567d3    jae near ptr 0045687Eh"
"	      004567d9    push 10h"
"	      004567db    call 0056A600h"
"	      004567e0    add esp,4"
"	      004567e3    mov [ebp-1140h],eax"
"	      004567e9    cmp dword ptr [ebp-1140h],0"
"	      004567f0    je near ptr 0045681Ah"
"	      004567f6    mov eax,[ebp-1154h]"
"	      004567fc    push eax"
"	      004567fd    lea eax,[ebp-110Ch]"
"	      00456803    push eax"
"	      00456804    mov ecx,[ebp-1140h]"
"	      0045680a    call 0041E090h"
"	      0045680f    mov [ebp-113Ch],eax"
"	      00456815    jmp near ptr 00456824h"
"	      0045681a    mov dword ptr [ebp-113Ch],0"
"	      00456824    mov eax,sText.reference"
"	      00456827    dec dword ptr [eax+0Ch]"
"	      0045682a    mov eax,sText.reference"
"	      0045682d    cmp dword ptr [eax+0Ch],0"
"	      00456831    jne near ptr 0045686Bh"
"	      00456837    mov eax,sText.reference"
"	      0045683a    mov [ebp-1150h],eax"
"	      00456840    mov eax,[ebp-1150h]"
"	      00456846    mov [ebp-114Ch],eax"
"	      0045684c    cmp dword ptr [ebp-114Ch],0"
"	      00456853    je near ptr 0045686Bh"
"	      00456859    push 1"
"	      0045685b    mov ecx,[ebp-114Ch]"
"	      00456861    call 0041DD70h"
"	      00456866    jmp near ptr 0045686Bh"
"	      0045686b    jmp near ptr 00456870h"
"	      00456870    mov eax,[ebp-113Ch]"
"	      00456876    mov sText.reference,eax"
"	      00456879    jmp near ptr 004568BDh"
"	      0045687e    cmp dword ptr [ebp-1154h],0"
"	      00456885    je near ptr 004568BDh"
"	      0045688b    jmp near ptr 00456890h"
"	      00456890    mov eax,sText.reference"
"	      00456893    mov eax,[eax]"
"	      00456895    mov [ebp-1144h],eax"
"	      0045689b    mov eax,[ebp-1154h]"
"	      004568a1    push eax"
"	      004568a2    lea eax,[ebp-110Ch]"
"	      004568a8    push eax"
"	      004568a9    mov eax,[ebp-1144h]"
"	      004568af    push eax"
"	      004568b0    call 0056A800h"
"	      004568b5    add esp,0Ch"
"	      004568b8    jmp near ptr 004568BDh"
"	      004568bd    mov eax,[ebp-1154h]"
"	      004568c3    mov ecx,sText.reference"
"	      004568c6    mov [ecx+4],eax"
"	      004568c9    jmp near ptr 004568CEh"
"	      004568ce    jmp near ptr 004568D3h"
"	      004568d3    jmp near ptr 004568D8h"
);
// LINE 1100:
	asm( 
"	      004568d8    lea eax,sText.c_str_ptr"
"	      004568db    push eax"
"	      004568dc    mov eax,tempButtonWindow1"
"	      004568df    mov eax,[eax]"
"	      004568e1    mov ecx,tempButtonWindow1"
"	      004568e4    call dword ptr [eax+48h]"
);
// LINE 1101:
	asm( 
"	      004568e7    push 603AB8h"
"	      004568ec    push 603AB0h"
"	      004568f1    mov eax,tempButtonWindow1"
"	      004568f4    mov eax,[eax]"
"	      004568f6    mov ecx,tempButtonWindow1"
"	      004568f9    call dword ptr [eax+0D8h]"
);
// LINE 1102:
	asm( 
"	      004568ff    mov eax,tempButtonWindow1"
"	      00456902    mov eax,[eax]"
"	      00456904    mov ecx,tempButtonWindow1"
"	      00456907    call dword ptr [eax+4]"
);
// LINE 1105:
	asm( 
"	      0045690a    push 94h"
"	      0045690f    call 0056A600h"
"	      00456914    add esp,4"
"	      00456917    mov [ebp-0E4h],eax"
"	      0045691d    cmp dword ptr [ebp-0E4h],0"
"	      00456924    je near ptr 0045698Ah"
"	      0045692a    jmp near ptr 0045692Fh"
"	      0045692f    mov dword ptr [ebp-0F4h],14Eh"
"	      00456939    mov dword ptr [ebp-0F0h],167h"
"	      00456943    mov dword ptr [ebp-0ECh],14Fh"
"	      0045694d    mov dword ptr [ebp-0E8h],168h"
"	      00456957    jmp near ptr 0045695Ch"
"	      0045695c    push 1"
"	      0045695e    mov eax,this"
"	      00456964    push eax"
"	      00456965    push 0"
"	      00456967    mov eax,this"
"	      0045696d    push eax"
"	      0045696e    push 2"
"	      00456970    lea eax,[ebp-0F4h]"
"	      00456976    push eax"
"	      00456977    mov ecx,[ebp-0E4h]"
"	      0045697d    call 00471847h"
"	      00456982    mov tempButtonWindow2,eax"
"	      00456985    jmp near ptr 00456991h"
"	      0045698a    mov tempButtonWindow2,0"
);
// LINE 1106:
	asm( 
"	      00456991    push 0"
"	      00456993    push 8Eh"
"	      00456998    call 0042B15Fh"
"	      0045699d    add esp,8"
"	      004569a0    mov nFullStringID,eax"
);
// LINE 1107:
	asm( 
"	      004569a3    push 0FFFh"
"	      004569a8    lea eax,[ebp-2154h]"
"	      004569ae    push eax"
"	      004569af    mov eax,nFullStringID"
"	      004569b2    push eax"
"	      004569b3    mov eax,ds:[5C28C8h]"
"	      004569b8    push eax"
"	      004569b9    call dword ptr ds:[6C38B4h]"
"	      004569bf    mov [ebp-2158h],eax"
"	      004569c5    cmp dword ptr [ebp-2158h],0"
"	      004569cc    jne near ptr 00456CC0h"
"	      004569d2    push 0FFFh"
"	      004569d7    lea eax,[ebp-2154h]"
"	      004569dd    push eax"
"	      004569de    mov ecx,3E8h"
"	      004569e3    mov eax,nFullStringID"
"	      004569e6    sub edx,edx"
"	      004569e8    div ecx"
"	      004569ea    push edx"
"	      004569eb    mov eax,ds:[5C28C8h]"
"	      004569f0    push eax"
"	      004569f1    call dword ptr ds:[6C38B4h]"
"	      004569f7    mov [ebp-2158h],eax"
"	      004569fd    jmp near ptr 00456A02h"
"	      00456a02    lea eax,[ebp-2154h]"
"	      00456a08    push eax"
"	      00456a09    call 0056ABE0h"
"	      00456a0e    add esp,4"
"	      00456a11    mov [ebp-216Ch],eax"
"	      00456a17    cmp dword ptr [ebp-216Ch],0FFFFFFFFh"
"	      00456a1e    jne near ptr 00456A5Ch"
"	      00456a24    push 5971E4h"
"	      00456a29    mov ecx,638C00h"
"	      00456a2e    call 00569960h"
"	      00456a33    mov [ebp-2168h],eax"
"	      00456a39    mov eax,[ebp-2168h]"
"	      00456a3f    push eax"
"	      00456a40    call 004011B0h"
"	      00456a45    add esp,4"
"	      00456a48    jmp near ptr 00456A4Dh"
"	      00456a4d    push 1"
"	      00456a4f    call 00569430h"
"	      00456a54    add esp,4"
"	      00456a57    jmp near ptr 00456A5Ch"
"	      00456a5c    jmp near ptr 00456A61h"
"	      00456a61    mov eax,sText.reference"
"	      00456a64    cmp dword ptr [eax+0Ch],1"
"	      00456a68    ja near ptr 00456A92h"
"	      00456a6e    cmp dword ptr [ebp-216Ch],0"
"	      00456a75    je near ptr 00456AF3h"
"	      00456a7b    jmp near ptr 00456A80h"
"	      00456a80    mov eax,sText.reference"
"	      00456a83    mov ecx,[ebp-216Ch]"
"	      00456a89    cmp [eax+8],ecx"
"	      00456a8c    jae near ptr 00456AF3h"
"	      00456a92    push 10h"
"	      00456a94    call 0056A600h"
"	      00456a99    add esp,4"
"	      00456a9c    mov [ebp-2160h],eax"
"	      00456aa2    cmp dword ptr [ebp-2160h],0"
"	      00456aa9    je near ptr 00456AD3h"
"	      00456aaf    mov eax,[ebp-216Ch]"
"	      00456ab5    push eax"
"	      00456ab6    lea eax,[ebp-2154h]"
"	      00456abc    push eax"
"	      00456abd    mov ecx,[ebp-2160h]"
"	      00456ac3    call 0041E090h"
"	      00456ac8    mov [ebp-215Ch],eax"
"	      00456ace    jmp near ptr 00456ADDh"
"	      00456ad3    mov dword ptr [ebp-215Ch],0"
"	      00456add    lea ecx,sText.c_str_ptr"
"	      00456ae0    call 00412080h"
"	      00456ae5    mov eax,[ebp-215Ch]"
"	      00456aeb    mov sText.reference,eax"
"	      00456aee    jmp near ptr 00456B32h"
"	      00456af3    cmp dword ptr [ebp-216Ch],0"
"	      00456afa    je near ptr 00456B32h"
"	      00456b00    jmp near ptr 00456B05h"
"	      00456b05    mov eax,sText.reference"
"	      00456b08    mov eax,[eax]"
"	      00456b0a    mov [ebp-2164h],eax"
"	      00456b10    mov eax,[ebp-216Ch]"
"	      00456b16    push eax"
"	      00456b17    lea eax,[ebp-2154h]"
"	      00456b1d    push eax"
"	      00456b1e    mov eax,[ebp-2164h]"
"	      00456b24    push eax"
"	      00456b25    call 0056A800h"
"	      00456b2a    add esp,0Ch"
"	      00456b2d    jmp near ptr 00456B32h"
"	      00456b32    mov eax,[ebp-216Ch]"
"	      00456b38    mov ecx,sText.reference"
"	      00456b3b    mov [ecx+4],eax"
"	      00456b3e    jmp near ptr 00456B43h"
"	      00456b43    jmp near ptr 00456B48h"
"	      00456b48    jmp near ptr 00456B4Dh"
"	      00456b4d    push 597200h"
"	      00456b52    call 0056ABE0h"
"	      00456b57    add esp,4"
"	      00456b5a    mov [ebp-2180h],eax"
"	      00456b60    jmp near ptr 00456B65h"
"	      00456b65    mov eax,sText.reference"
"	      00456b68    mov ecx,0FFFFFFFFh"
"	      00456b6d    sub ecx,[ebp-2180h]"
"	      00456b73    cmp [eax+4],ecx"
"	      00456b76    jb near ptr 00456BB4h"
"	      00456b7c    push 5971E4h"
"	      00456b81    mov ecx,638C00h"
"	      00456b86    call 00569960h"
"	      00456b8b    mov [ebp-217Ch],eax"
"	      00456b91    mov eax,[ebp-217Ch]"
"	      00456b97    push eax"
"	      00456b98    call 004011B0h"
"	      00456b9d    add esp,4"
"	      00456ba0    jmp near ptr 00456BA5h"
"	      00456ba5    push 1"
"	      00456ba7    call 00569430h"
"	      00456bac    add esp,4"
"	      00456baf    jmp near ptr 00456BB4h"
"	      00456bb4    jmp near ptr 00456BB9h"
"	      00456bb9    mov eax,sText.reference"
"	      00456bbc    cmp dword ptr [eax+0Ch],1"
"	      00456bc0    ja near ptr 00456BE8h"
"	      00456bc6    jmp near ptr 00456BCBh"
"	      00456bcb    jmp near ptr 00456BD0h"
"	      00456bd0    mov eax,sText.reference"
"	      00456bd3    mov eax,[eax+8]"
"	      00456bd6    mov ecx,sText.reference"
"	      00456bd9    sub eax,[ecx+4]"
"	      00456bdc    cmp eax,[ebp-2180h]"
"	      00456be2    jae near ptr 00456C5Dh"
"	      00456be8    push 10h"
"	      00456bea    call 0056A600h"
"	      00456bef    add esp,4"
"	      00456bf2    mov [ebp-2174h],eax"
"	      00456bf8    cmp dword ptr [ebp-2174h],0"
"	      00456bff    je near ptr 00456C42h"
"	      00456c05    jmp near ptr 00456C0Ah"
"	      00456c0a    jmp near ptr 00456C0Fh"
"	      00456c0f    mov eax,sText.reference"
"	      00456c12    mov eax,[eax+4]"
"	      00456c15    add eax,[ebp-2180h]"
"	      00456c1b    push eax"
"	      00456c1c    mov eax,sText.reference"
"	      00456c1f    mov eax,[eax+4]"
"	      00456c22    push eax"
"	      00456c23    lea ecx,sText.c_str_ptr"
"	      00456c26    call 00417C00h"
"	      00456c2b    push eax"
"	      00456c2c    mov ecx,[ebp-2174h]"
"	      00456c32    call 0041E160h"
"	      00456c37    mov [ebp-2170h],eax"
"	      00456c3d    jmp near ptr 00456C4Ch"
"	      00456c42    mov dword ptr [ebp-2170h],0"
"	      00456c4c    lea ecx,sText.c_str_ptr"
"	      00456c4f    call 00412080h"
"	      00456c54    mov eax,[ebp-2170h]"
"	      00456c5a    mov sText.reference,eax"
"	      00456c5d    cmp dword ptr [ebp-2180h],0"
"	      00456c64    je near ptr 00456CA5h"
"	      00456c6a    jmp near ptr 00456C6Fh"
"	      00456c6f    jmp near ptr 00456C74h"
"	      00456c74    mov eax,sText.reference"
"	      00456c77    mov eax,[eax+4]"
"	      00456c7a    mov ecx,sText.reference"
"	      00456c7d    add eax,[ecx]"
"	      00456c7f    mov [ebp-2178h],eax"
"	      00456c85    mov eax,[ebp-2180h]"
"	      00456c8b    push eax"
"	      00456c8c    push 597200h"
"	      00456c91    mov eax,[ebp-2178h]"
"	      00456c97    push eax"
"	      00456c98    call 0056A800h"
"	      00456c9d    add esp,0Ch"
"	      00456ca0    jmp near ptr 00456CA5h"
"	      00456ca5    mov eax,[ebp-2180h]"
"	      00456cab    mov ecx,sText.reference"
"	      00456cae    add [ecx+4],eax"
"	      00456cb1    jmp near ptr 00456CB6h"
"	      00456cb6    jmp near ptr 00456CBBh"
"	      00456cbb    jmp near ptr 00456E10h"
"	      00456cc0    jmp near ptr 00456CC5h"
"	      00456cc5    lea eax,[ebp-2154h]"
"	      00456ccb    push eax"
"	      00456ccc    call 0056ABE0h"
"	      00456cd1    add esp,4"
"	      00456cd4    mov [ebp-2194h],eax"
"	      00456cda    cmp dword ptr [ebp-2194h],0FFFFFFFFh"
"	      00456ce1    jne near ptr 00456D1Fh"
"	      00456ce7    push 5971E4h"
"	      00456cec    mov ecx,638C00h"
"	      00456cf1    call 00569960h"
"	      00456cf6    mov [ebp-2190h],eax"
"	      00456cfc    mov eax,[ebp-2190h]"
"	      00456d02    push eax"
"	      00456d03    call 004011B0h"
"	      00456d08    add esp,4"
"	      00456d0b    jmp near ptr 00456D10h"
"	      00456d10    push 1"
"	      00456d12    call 00569430h"
"	      00456d17    add esp,4"
"	      00456d1a    jmp near ptr 00456D1Fh"
"	      00456d1f    jmp near ptr 00456D24h"
"	      00456d24    mov eax,sText.reference"
"	      00456d27    cmp dword ptr [eax+0Ch],1"
"	      00456d2b    ja near ptr 00456D55h"
"	      00456d31    cmp dword ptr [ebp-2194h],0"
"	      00456d38    je near ptr 00456DB6h"
"	      00456d3e    jmp near ptr 00456D43h"
"	      00456d43    mov eax,sText.reference"
"	      00456d46    mov ecx,[ebp-2194h]"
"	      00456d4c    cmp [eax+8],ecx"
"	      00456d4f    jae near ptr 00456DB6h"
"	      00456d55    push 10h"
"	      00456d57    call 0056A600h"
"	      00456d5c    add esp,4"
"	      00456d5f    mov [ebp-2188h],eax"
"	      00456d65    cmp dword ptr [ebp-2188h],0"
"	      00456d6c    je near ptr 00456D96h"
"	      00456d72    mov eax,[ebp-2194h]"
"	      00456d78    push eax"
"	      00456d79    lea eax,[ebp-2154h]"
"	      00456d7f    push eax"
"	      00456d80    mov ecx,[ebp-2188h]"
"	      00456d86    call 0041E090h"
"	      00456d8b    mov [ebp-2184h],eax"
"	      00456d91    jmp near ptr 00456DA0h"
"	      00456d96    mov dword ptr [ebp-2184h],0"
"	      00456da0    lea ecx,sText.c_str_ptr"
"	      00456da3    call 00412080h"
"	      00456da8    mov eax,[ebp-2184h]"
"	      00456dae    mov sText.reference,eax"
"	      00456db1    jmp near ptr 00456DF5h"
"	      00456db6    cmp dword ptr [ebp-2194h],0"
"	      00456dbd    je near ptr 00456DF5h"
"	      00456dc3    jmp near ptr 00456DC8h"
"	      00456dc8    mov eax,sText.reference"
"	      00456dcb    mov eax,[eax]"
"	      00456dcd    mov [ebp-218Ch],eax"
"	      00456dd3    mov eax,[ebp-2194h]"
"	      00456dd9    push eax"
"	      00456dda    lea eax,[ebp-2154h]"
"	      00456de0    push eax"
"	      00456de1    mov eax,[ebp-218Ch]"
"	      00456de7    push eax"
"	      00456de8    call 0056A800h"
"	      00456ded    add esp,0Ch"
"	      00456df0    jmp near ptr 00456DF5h"
"	      00456df5    mov eax,[ebp-2194h]"
"	      00456dfb    mov ecx,sText.reference"
"	      00456dfe    mov [ecx+4],eax"
"	      00456e01    jmp near ptr 00456E06h"
"	      00456e06    jmp near ptr 00456E0Bh"
"	      00456e0b    jmp near ptr 00456E10h"
);
// LINE 1108:
	asm( 
"	      00456e10    lea eax,sText.c_str_ptr"
"	      00456e13    push eax"
"	      00456e14    mov eax,tempButtonWindow2"
"	      00456e17    mov eax,[eax]"
"	      00456e19    mov ecx,tempButtonWindow2"
"	      00456e1c    call dword ptr [eax+48h]"
);
// LINE 1109:
	asm( 
"	      00456e1f    push 603AB8h"
"	      00456e24    push 603AB0h"
"	      00456e29    mov eax,tempButtonWindow2"
"	      00456e2c    mov eax,[eax]"
"	      00456e2e    mov ecx,tempButtonWindow2"
"	      00456e31    call dword ptr [eax+0D8h]"
);
// LINE 1110:
	asm( 
"	      00456e37    mov eax,tempButtonWindow2"
"	      00456e3a    mov eax,[eax]"
"	      00456e3c    mov ecx,tempButtonWindow2"
"	      00456e3f    call dword ptr [eax+4]"
);
// LINE 1112:
	asm( 
"	      00456e42    mov eax,this"
"	      00456e48    push eax"
"	      00456e49    call 004A7075h"
"	      00456e4e    add esp,4"
);
// LINE 1113:
	asm( 
"	      00456e51    mov eax,this"
"	      00456e57    push eax"
"	      00456e58    call 004A7470h"
"	      00456e5d    add esp,4"
);
// LINE 1115:
	asm( 
"	      00456e60    mov dword ptr [ebp-0F8h],1"
"	      00456e6a    mov eax,sText.reference"
"	      00456e6d    dec dword ptr [eax+0Ch]"
"	      00456e70    mov eax,sText.reference"
"	      00456e73    cmp dword ptr [eax+0Ch],0"
"	      00456e77    jne near ptr 00456EC8h"
"	      00456e7d    mov eax,sText.reference"
"	      00456e80    mov [ebp-10Ch],eax"
"	      00456e86    mov eax,[ebp-10Ch]"
"	      00456e8c    mov [ebp-108h],eax"
"	      00456e92    cmp dword ptr [ebp-108h],0"
"	      00456e99    je near ptr 00456EC8h"
"	      00456e9f    mov ecx,[ebp-108h]"
"	      00456ea5    call 0041F4B0h"
"	      00456eaa    jmp near ptr 00456EAFh"
"	      00456eaf    mov eax,[ebp-108h]"
"	      00456eb5    push eax"
"	      00456eb6    call 0056A740h"
"	      00456ebb    add esp,4"
"	      00456ebe    jmp near ptr 00456EC3h"
"	      00456ec3    jmp near ptr 00456EC8h"
"	      00456ec8    jmp near ptr 00456ECDh"
"	      00456ecd    cmp sText.c_str_ptr,0"
"	      00456ed1    je near ptr 00456EFBh"
"	      00456ed7    mov eax,sText.c_str_ptr"
"	      00456eda    mov [ebp-100h],eax"
"	      00456ee0    mov eax,[ebp-100h]"
"	      00456ee6    mov [ebp-104h],eax"
"	      00456eec    mov eax,[ebp-104h]"
"	      00456ef2    push eax"
"	      00456ef3    call 0056A740h"
"	      00456ef8    add esp,4"
"	      00456efb    jmp near ptr 00456F00h"
"	      00456f00    mov eax,[ebp-0F8h]"
"	      00456f06    jmp near ptr 00456F0Bh"
);
// LINE 1116:
	asm( 
"	      00456f0b    pop edi"
"	      00456f0c    pop esi"
"	      00456f0d    pop ebx"
"	      00456f0e    leave"
"	      00456f0f    ret"
);
}

// FUNCTION: COPTER_D 0x00456f10
long SoundSettingsWindow::DoKeyDown(long lKey, char chModifiers) {
// LINE 1123:
	asm( 
"	      00456f10    push ebp"
"	      00456f11    mov ebp,esp"
"	      00456f13    sub esp,4"
"	      00456f16    push ebx"
"	      00456f17    push esi"
"	      00456f18    push edi"
"	      00456f19    mov this,ecx"
);
// LINE 1124:
	asm( 
"	      00456f1c    cmp lKey,1Bh"
"	      00456f20    jne near ptr 00456F55h"
);
// LINE 1125:
	asm( 
"	      00456f26    mov eax,this"
"	      00456f29    cmp dword ptr [eax+38h],0"
"	      00456f2d    je near ptr 00456F55h"
);
// LINE 1126:
	asm( 
"	      00456f33    push 0"
"	      00456f35    push 3EAh"
"	      00456f3a    mov eax,this"
"	      00456f3d    mov eax,[eax+4]"
"	      00456f40    push eax"
"	      00456f41    mov eax,this"
"	      00456f44    push eax"
"	      00456f45    mov eax,this"
"	      00456f48    mov ecx,this"
"	      00456f4b    mov ecx,[ecx+38h]"
"	      00456f4e    mov edx,[ecx]"
"	      00456f50    mov ecx,[eax+38h]"
"	      00456f53    call dword ptr [edx]"
);
// LINE 1128:
	asm( 
"	      00456f55    mov eax,1"
"	      00456f5a    jmp near ptr 00456F5Fh"
);
// LINE 1129:
	asm( 
"	      00456f5f    pop edi"
"	      00456f60    pop esi"
"	      00456f61    pop ebx"
"	      00456f62    leave"
"	      00456f63    ret 8"
);
}

// FUNCTION: COPTER_D 0x00456f66
int32_t SoundSettingsWindow::SetCurrentVolumeSettings(struct SoundPreferences& newSoundPreferences) {
// LINE 1136:
	asm( 
"	      00456f66    push ebp"
"	      00456f67    mov ebp,esp"
"	      00456f69    sub esp,4"
"	      00456f6c    push ebx"
"	      00456f6d    push esi"
"	      00456f6e    push edi"
"	      00456f6f    mov this,ecx"
);
// LINE 1137:
	asm( 
"	      00456f72    mov eax,newSoundPreferences"
"	      00456f75    mov eax,[eax]"
"	      00456f77    push eax"
"	      00456f78    call 004572A2h"
"	      00456f7d    add esp,4"
"	      00456f80    push eax"
"	      00456f81    mov eax,this"
"	      00456f84    mov ecx,[eax+74h]"
"	      00456f87    call 004B273Ah"
);
// LINE 1141:
	asm( 
"	      00456f8c    mov eax,1"
"	      00456f91    jmp near ptr 00456F96h"
);
// LINE 1142:
	asm( 
"	      00456f96    pop edi"
"	      00456f97    pop esi"
"	      00456f98    pop ebx"
"	      00456f99    leave"
"	      00456f9a    ret 4"
);
}

// FUNCTION: COPTER_D 0x00456f9d
int32_t SoundSettingsWindow::SetCurrentRadioSettings(struct RadioPreferences& newRadioPreferences, long lCurrentStations) {
// LINE 1149:
	asm( 
"	      00456f9d    push ebp"
"	      00456f9e    mov ebp,esp"
"	      00456fa0    sub esp,4"
"	      00456fa3    push ebx"
"	      00456fa4    push esi"
"	      00456fa5    push edi"
"	      00456fa6    mov this,ecx"
);
// LINE 1151:
	asm( 
"	      00456fa9    mov eax,newRadioPreferences"
"	      00456fac    mov eax,[eax]"
"	      00456fae    push eax"
"	      00456faf    call 004572A2h"
"	      00456fb4    add esp,4"
"	      00456fb7    push eax"
"	      00456fb8    mov eax,this"
"	      00456fbb    mov ecx,[eax+7Ch]"
"	      00456fbe    call 004B273Ah"
);
// LINE 1152:
	asm( 
"	      00456fc3    mov eax,newRadioPreferences"
"	      00456fc6    cmp dword ptr [eax+4],0"
"	      00456fca    jne near ptr 00456FDDh"
);
// LINE 1153:
	asm( 
"	      00456fd0    push 0"
"	      00456fd2    mov eax,this"
"	      00456fd5    mov ecx,[eax+7Ch]"
"	      00456fd8    call 004B273Ah"
);
// LINE 1156:
	asm( 
"	      00456fdd    mov eax,lCurrentStations"
"	      00456fe0    dec eax"
"	      00456fe1    push eax"
"	      00456fe2    mov eax,this"
"	      00456fe5    mov ecx,[eax+78h]"
"	      00456fe8    call 004B2872h"
);
// LINE 1157:
	asm( 
"	      00456fed    mov eax,newRadioPreferences"
"	      00456ff0    mov eax,[eax+8]"
"	      00456ff3    push eax"
"	      00456ff4    mov eax,this"
"	      00456ff7    mov ecx,[eax+78h]"
"	      00456ffa    call 004B273Ah"
);
// LINE 1160:
	asm( 
"	      00456fff    mov eax,newRadioPreferences"
"	      00457002    cmp dword ptr [eax+0Ch],0"
"	      00457006    je near ptr 0045702Dh"
);
// LINE 1161:
	asm( 
"	      0045700c    push 2"
"	      0045700e    mov eax,this"
"	      00457011    mov ecx,this"
"	      00457014    mov ecx,[ecx+80h]"
"	      0045701a    mov edx,[ecx]"
"	      0045701c    mov ecx,[eax+80h]"
"	      00457022    call dword ptr [edx+0C8h]"
);
// LINE 1162:
	asm( 
"	      00457028    jmp near ptr 00457049h"
);
// LINE 1163:
	asm( 
"	      0045702d    push 1"
"	      0045702f    mov eax,this"
"	      00457032    mov ecx,this"
"	      00457035    mov ecx,[ecx+80h]"
"	      0045703b    mov edx,[ecx]"
"	      0045703d    mov ecx,[eax+80h]"
"	      00457043    call dword ptr [edx+0C8h]"
);
// LINE 1166:
	asm( 
"	      00457049    mov eax,newRadioPreferences"
"	      0045704c    cmp dword ptr [eax+10h],0"
"	      00457050    je near ptr 00457077h"
);
// LINE 1167:
	asm( 
"	      00457056    push 2"
"	      00457058    mov eax,this"
"	      0045705b    mov ecx,this"
"	      0045705e    mov ecx,[ecx+84h]"
"	      00457064    mov edx,[ecx]"
"	      00457066    mov ecx,[eax+84h]"
"	      0045706c    call dword ptr [edx+0C8h]"
);
// LINE 1168:
	asm( 
"	      00457072    jmp near ptr 00457093h"
);
// LINE 1169:
	asm( 
"	      00457077    push 1"
"	      00457079    mov eax,this"
"	      0045707c    mov ecx,this"
"	      0045707f    mov ecx,[ecx+84h]"
"	      00457085    mov edx,[ecx]"
"	      00457087    mov ecx,[eax+84h]"
"	      0045708d    call dword ptr [edx+0C8h]"
);
// LINE 1179:
	asm( 
"	      00457093    mov eax,1"
"	      00457098    jmp near ptr 0045709Dh"
);
// LINE 1180:
	asm( 
"	      0045709d    pop edi"
"	      0045709e    pop esi"
"	      0045709f    pop ebx"
"	      004570a0    leave"
"	      004570a1    ret 8"
);
}

// FUNCTION: COPTER_D 0x004570a4
void SoundSettingsWindow::GetCurrentVolumeSettings(struct SoundPreferences& currentSoundPreferences) {
// LINE 1186:
	asm( 
"	      004570a4    push ebp"
"	      004570a5    mov ebp,esp"
"	      004570a7    sub esp,4"
"	      004570aa    push ebx"
"	      004570ab    push esi"
"	      004570ac    push edi"
"	      004570ad    mov this,ecx"
);
// LINE 1187:
	asm( 
"	      004570b0    mov eax,this"
"	      004570b3    mov ecx,[eax+74h]"
"	      004570b6    call 004B271Bh"
"	      004570bb    mov ecx,currentSoundPreferences"
"	      004570be    mov [ecx],eax"
);
// LINE 1189:
	asm( 
"	      004570c0    mov eax,currentSoundPreferences"
"	      004570c3    mov eax,[eax]"
"	      004570c5    push eax"
"	      004570c6    call 004572EAh"
"	      004570cb    add esp,4"
"	      004570ce    mov ecx,currentSoundPreferences"
"	      004570d1    mov [ecx],eax"
);
// LINE 1193:
	asm( 
"	      004570d3    jmp near ptr 004570D8h"
"	      004570d8    pop edi"
"	      004570d9    pop esi"
"	      004570da    pop ebx"
"	      004570db    leave"
"	      004570dc    ret 4"
);
}

// FUNCTION: COPTER_D 0x004570df
void SoundSettingsWindow::GetCurrentRadioSettings(struct RadioPreferences& currentRadioPreferences) {
// LINE 1199:
	asm( 
"	      004570df    push ebp"
"	      004570e0    mov ebp,esp"
"	      004570e2    sub esp,4"
"	      004570e5    push ebx"
"	      004570e6    push esi"
"	      004570e7    push edi"
"	      004570e8    mov this,ecx"
);
// LINE 1200:
	asm( 
"	      004570eb    mov eax,this"
"	      004570ee    mov ecx,[eax+7Ch]"
"	      004570f1    call 004B271Bh"
"	      004570f6    mov ecx,currentRadioPreferences"
"	      004570f9    mov [ecx],eax"
);
// LINE 1201:
	asm( 
"	      004570fb    mov eax,currentRadioPreferences"
"	      004570fe    cmp dword ptr [eax],258h"
"	      00457104    jge near ptr 00457113h"
);
// LINE 1202:
	asm( 
"	      0045710a    mov eax,currentRadioPreferences"
"	      0045710d    mov dword ptr [eax],140h"
);
// LINE 1203:
	asm( 
"	      00457113    mov eax,currentRadioPreferences"
"	      00457116    cmp dword ptr [eax],140h"
"	      0045711c    je near ptr 00457131h"
"	      00457122    mov eax,currentRadioPreferences"
"	      00457125    mov dword ptr [eax+4],1"
"	      0045712c    jmp near ptr 0045713Bh"
"	      00457131    mov eax,currentRadioPreferences"
"	      00457134    mov dword ptr [eax+4],0"
);
// LINE 1205:
	asm( 
"	      0045713b    mov eax,currentRadioPreferences"
"	      0045713e    mov eax,[eax]"
"	      00457140    push eax"
"	      00457141    call 004572EAh"
"	      00457146    add esp,4"
"	      00457149    mov ecx,currentRadioPreferences"
"	      0045714c    mov [ecx],eax"
);
// LINE 1206:
	asm( 
"	      0045714e    mov eax,this"
"	      00457151    mov ecx,[eax+78h]"
"	      00457154    call 004B271Bh"
"	      00457159    mov ecx,currentRadioPreferences"
"	      0045715c    mov [ecx+8],eax"
);
// LINE 1207:
	asm( 
"	      0045715f    mov eax,this"
"	      00457162    mov ecx,this"
"	      00457165    mov ecx,[ecx+80h]"
"	      0045716b    mov edx,[ecx]"
"	      0045716d    mov ecx,[eax+80h]"
"	      00457173    call dword ptr [edx+0CCh]"
"	      00457179    cmp eax,2"
"	      0045717c    jne near ptr 00457191h"
"	      00457182    mov eax,currentRadioPreferences"
"	      00457185    mov dword ptr [eax+0Ch],1"
"	      0045718c    jmp near ptr 0045719Bh"
"	      00457191    mov eax,currentRadioPreferences"
"	      00457194    mov dword ptr [eax+0Ch],0"
);
// LINE 1208:
	asm( 
"	      0045719b    mov eax,this"
"	      0045719e    mov ecx,this"
"	      004571a1    mov ecx,[ecx+84h]"
"	      004571a7    mov edx,[ecx]"
"	      004571a9    mov ecx,[eax+84h]"
"	      004571af    call dword ptr [edx+0CCh]"
"	      004571b5    cmp eax,2"
"	      004571b8    jne near ptr 004571CDh"
"	      004571be    mov eax,currentRadioPreferences"
"	      004571c1    mov dword ptr [eax+10h],1"
"	      004571c8    jmp near ptr 004571D7h"
"	      004571cd    mov eax,currentRadioPreferences"
"	      004571d0    mov dword ptr [eax+10h],0"
);
// LINE 1210:
	asm( 
"	      004571d7    mov eax,currentRadioPreferences"
"	      004571da    mov dword ptr [eax+18h],1"
);
// LINE 1211:
	asm( 
"	      004571e1    jmp near ptr 004571E6h"
"	      004571e6    pop edi"
"	      004571e7    pop esi"
"	      004571e8    pop ebx"
"	      004571e9    leave"
"	      004571ea    ret 4"
);
}

// FUNCTION: COPTER_D 0x004571ed
int32_t SoundSettingsWindow::DoMessage(class GraphicWindow* gwSource, long lWindowID, long lMessage, void * __ptr32 pMessageData) {
// LINE 1219:
	asm( 
"	      004571ed    push ebp"
"	      004571ee    mov ebp,esp"
"	      004571f0    sub esp,8"
"	      004571f3    push ebx"
"	      004571f4    push esi"
"	      004571f5    push edi"
"	      004571f6    mov this,ecx"
);
// LINE 1220:
	asm( 
"	      004571f9    mov eax,lWindowID"
"	      004571fc    mov [ebp-8],eax"
"	      004571ff    jmp near ptr 0045727Bh"
);
// LINE 1222:
	asm( 
"	      00457204    mov eax,this"
"	      00457207    cmp dword ptr [eax+38h],0"
"	      0045720b    je near ptr 00457233h"
);
// LINE 1223:
	asm( 
"	      00457211    push 0"
"	      00457213    push 3E9h"
"	      00457218    mov eax,this"
"	      0045721b    mov eax,[eax+4]"
"	      0045721e    push eax"
"	      0045721f    mov eax,this"
"	      00457222    push eax"
"	      00457223    mov eax,this"
"	      00457226    mov ecx,this"
"	      00457229    mov ecx,[ecx+38h]"
"	      0045722c    mov edx,[ecx]"
"	      0045722e    mov ecx,[eax+38h]"
"	      00457231    call dword ptr [edx]"
);
// LINE 1224:
	asm( 
"	      00457233    mov eax,1"
"	      00457238    jmp near ptr 0045729Bh"
);
// LINE 1227:
	asm( 
"	      0045723d    mov eax,this"
"	      00457240    cmp dword ptr [eax+38h],0"
"	      00457244    je near ptr 0045726Ch"
);
// LINE 1228:
	asm( 
"	      0045724a    push 0"
"	      0045724c    push 3EAh"
"	      00457251    mov eax,this"
"	      00457254    mov eax,[eax+4]"
"	      00457257    push eax"
"	      00457258    mov eax,this"
"	      0045725b    push eax"
"	      0045725c    mov eax,this"
"	      0045725f    mov ecx,this"
"	      00457262    mov ecx,[ecx+38h]"
"	      00457265    mov edx,[ecx]"
"	      00457267    mov ecx,[eax+38h]"
"	      0045726a    call dword ptr [edx]"
);
// LINE 1229:
	asm( 
"	      0045726c    mov eax,1"
"	      00457271    jmp near ptr 0045729Bh"
);
// LINE 1230:
	asm( 
"	      00457276    jmp near ptr 00457294h"
"	      0045727b    cmp dword ptr [ebp-8],1"
"	      0045727f    je near ptr 00457204h"
"	      00457285    cmp dword ptr [ebp-8],2"
"	      00457289    je near ptr 0045723Dh"
"	      0045728f    jmp near ptr 00457294h"
);
// LINE 1232:
	asm( 
"	      00457294    xor eax,eax"
"	      00457296    jmp near ptr 0045729Bh"
);
// LINE 1233:
	asm( 
"	      0045729b    pop edi"
"	      0045729c    pop esi"
"	      0045729d    pop ebx"
"	      0045729e    leave"
"	      0045729f    ret 10h"
);
}

// FUNCTION: COPTER_D 0x004572a2
long SoundSettingsWindow::ConvertSoundValueToSliderValue(long lSoundValue) {
// LINE 1243:
	asm( 
"	      004572a2    push ebp"
"	      004572a3    mov ebp,esp"
"	      004572a5    sub esp,4"
"	      004572a8    push ebx"
"	      004572a9    push esi"
"	      004572aa    push edi"
);
// LINE 1247:
	asm( 
"	      004572ab    fld qword ptr ds:[58FDB0h]"
"	      004572b1    mov eax,lSoundValue"
"	      004572b4    mov [ebp-4],eax"
"	      004572b7    fisub dword ptr [ebp-4]"
"	      004572ba    fdiv qword ptr ds:[58FDB8h]"
"	      004572c0    sub esp,8"
"	      004572c3    fstp qword ptr [esp]"
"	      004572c6    push 40000000h"
"	      004572cb    push 0"
"	      004572cd    call 0056F380h"
"	      004572d2    add esp,10h"
"	      004572d5    fdivr qword ptr ds:[58FDB0h]"
"	      004572db    call 0056EBE8h"
"	      004572e0    jmp near ptr 004572E5h"
);
// LINE 1254:
	asm( 
"	      004572e5    pop edi"
"	      004572e6    pop esi"
"	      004572e7    pop ebx"
"	      004572e8    leave"
"	      004572e9    ret"
);
}

// FUNCTION: COPTER_D 0x004572ea
long SoundSettingsWindow::ConvertSliderValueToSoundValue(long lSliderValue) {
// LINE 1272:
	asm( 
"	      004572ea    push ebp"
"	      004572eb    mov ebp,esp"
"	      004572ed    sub esp,4"
"	      004572f0    push ebx"
"	      004572f1    push esi"
"	      004572f2    push edi"
);
// LINE 1276:
	asm( 
"	      004572f3    fld qword ptr ds:[58FDB0h]"
"	      004572f9    mov eax,lSliderValue"
"	      004572fc    mov [ebp-4],eax"
"	      004572ff    fidiv dword ptr [ebp-4]"
"	      00457302    sub esp,8"
"	      00457305    fstp qword ptr [esp]"
"	      00457308    call 0056F38Ah"
"	      0045730d    add esp,8"
"	      00457310    fdiv qword ptr ds:[58FDC8h]"
"	      00457316    fmul qword ptr ds:[58FDB8h]"
"	      0045731c    fsubr qword ptr ds:[58FDB0h]"
"	      00457322    call 0056EBE8h"
"	      00457327    jmp near ptr 0045732Ch"
);
// LINE 1283:
	asm( 
"	      0045732c    pop edi"
"	      0045732d    pop esi"
"	      0045732e    pop ebx"
"	      0045732f    leave"
"	      00457330    ret"
);
}

// FUNCTION: COPTER_D 0x00457331
void CitySettingsWindow::CitySettingsWindow(class MRect& rectNewPosition, int32_t nNewID, class GraphicWindow* windowNewParent, class GraphicWindowOwner* myNewOwner, int32_t bAddToParentList) {
	int32_t i;

// LINE 1321:
	asm( 
"	      00457331    push ebp"
"	      00457332    mov ebp,esp"
"	      00457334    sub esp,8"
"	      00457337    push ebx"
"	      00457338    push esi"
"	      00457339    push edi"
"	      0045733a    mov this,ecx"
"	      0045733d    mov eax,ds:[606988h]"
"	      00457342    push eax"
"	      00457343    mov eax,bAddToParentList"
"	      00457346    push eax"
"	      00457347    mov eax,myNewOwner"
"	      0045734a    push eax"
"	      0045734b    mov eax,windowNewParent"
"	      0045734e    push eax"
"	      0045734f    mov eax,nNewID"
"	      00457352    push eax"
"	      00457353    mov eax,rectNewPosition"
"	      00457356    push eax"
"	      00457357    mov eax,ds:[599178h]"
"	      0045735c    push eax"
"	      0045735d    mov ecx,this"
"	      00457360    call 004A393Dh"
"	      00457365    mov eax,this"
"	      00457368    mov dword ptr [eax],58FDD0h"
);
// LINE 1324:
	asm( 
"	      0045736e    mov i,0"
"	      00457375    jmp near ptr 0045737Dh"
"	      0045737a    inc i"
"	      0045737d    cmp i,8"
"	      00457381    jge near ptr 0045739Ah"
);
// LINE 1325:
	asm( 
"	      00457387    mov eax,i"
"	      0045738a    mov ecx,this"
"	      0045738d    mov dword ptr [ecx+eax*4+74h],0"
"	      00457395    jmp near ptr 0045737Ah"
);
// LINE 1326:
	asm( 
"	      0045739a    jmp near ptr 0045739Fh"
"	      0045739f    mov eax,this"
"	      004573a2    pop edi"
"	      004573a3    pop esi"
"	      004573a4    pop ebx"
"	      004573a5    leave"
"	      004573a6    ret 14h"
);
}

// FUNCTION: COPTER_D 0x004573a9
int32_t CitySettingsWindow::Initialize() {
	class ButtonWindow* tempButtonWindow;
	class TextWindow* tempTextWindow;
	class basic_string<char> sText;
	int32_t nFullStringID;

// LINE 1332:
	asm( 
"	      004573a9    push ebp"
"	      004573aa    mov ebp,esp"
"	      004573ac    mov eax,228Ch"
"	      004573b1    call 0056AC60h"
"	      004573b6    push ebx"
"	      004573b7    push esi"
"	      004573b8    push edi"
"	      004573b9    mov this,ecx"
);
// LINE 1335:
	asm( 
"	      004573bf    push 10h"
"	      004573c1    call 0056A600h"
"	      004573c6    add esp,4"
"	      004573c9    mov [ebp-184h],eax"
"	      004573cf    cmp dword ptr [ebp-184h],0"
"	      004573d6    je near ptr 00457427h"
"	      004573dc    mov eax,[ebp-184h]"
"	      004573e2    mov dword ptr [eax+4],0"
"	      004573e9    mov eax,[ebp-184h]"
"	      004573ef    mov eax,[eax+4]"
"	      004573f2    mov ecx,[ebp-184h]"
"	      004573f8    mov [ecx+8],eax"
"	      004573fb    mov eax,[ebp-184h]"
"	      00457401    mov dword ptr [eax],0"
"	      00457407    mov eax,[ebp-184h]"
"	      0045740d    mov dword ptr [eax+0Ch],1"
"	      00457414    jmp near ptr 00457419h"
"	      00457419    mov eax,[ebp-184h]"
"	      0045741f    mov sText.reference,eax"
"	      00457422    jmp near ptr 0045742Eh"
"	      00457427    mov sText.reference,0"
"	      0045742e    mov sText.c_str_ptr,0"
"	      00457435    jmp near ptr 0045743Ah"
);
// LINE 1338:
	asm( 
"	      0045743a    mov ecx,this"
"	      00457440    call 004A44D4h"
);
// LINE 1345:
	asm( 
"	      00457445    push 0A4h"
"	      0045744a    call 0056A600h"
"	      0045744f    add esp,4"
"	      00457452    mov [ebp-18h],eax"
"	      00457455    cmp dword ptr [ebp-18h],0"
"	      00457459    je near ptr 004574B0h"
"	      0045745f    jmp near ptr 00457464h"
"	      00457464    mov dword ptr [ebp-28h],2Ah"
"	      0045746b    mov dword ptr [ebp-24h],2Fh"
"	      00457472    mov dword ptr [ebp-20h],80h"
"	      00457479    mov dword ptr [ebp-1Ch],46h"
"	      00457480    jmp near ptr 00457485h"
"	      00457485    push 1"
"	      00457487    mov eax,this"
"	      0045748d    push eax"
"	      0045748e    mov eax,this"
"	      00457494    push eax"
"	      00457495    push 14Dh"
"	      0045749a    push 0"
"	      0045749c    lea eax,[ebp-28h]"
"	      0045749f    push eax"
"	      004574a0    mov ecx,[ebp-18h]"
"	      004574a3    call 004ACCE6h"
"	      004574a8    mov tempTextWindow,eax"
"	      004574ab    jmp near ptr 004574B7h"
"	      004574b0    mov tempTextWindow,0"
);
// LINE 1346:
	asm( 
"	      004574b7    push 0"
"	      004574b9    push 0"
"	      004574bb    push 12h"
"	      004574bd    mov eax,tempTextWindow"
"	      004574c0    mov eax,[eax]"
"	      004574c2    mov ecx,tempTextWindow"
"	      004574c5    call dword ptr [eax+0CCh]"
);
// LINE 1347:
	asm( 
"	      004574cb    push 1"
"	      004574cd    mov eax,tempTextWindow"
"	      004574d0    mov eax,[eax]"
"	      004574d2    mov ecx,tempTextWindow"
"	      004574d5    call dword ptr [eax+0D0h]"
);
// LINE 1348:
	asm( 
"	      004574db    push 603AB8h"
"	      004574e0    mov eax,tempTextWindow"
"	      004574e3    mov eax,[eax]"
"	      004574e5    mov ecx,tempTextWindow"
"	      004574e8    call dword ptr [eax+0D4h]"
);
// LINE 1350:
	asm( 
"	      004574ee    push 0A4h"
"	      004574f3    call 0056A600h"
"	      004574f8    add esp,4"
"	      004574fb    mov [ebp-2Ch],eax"
"	      004574fe    cmp dword ptr [ebp-2Ch],0"
"	      00457502    je near ptr 00457559h"
"	      00457508    jmp near ptr 0045750Dh"
"	      0045750d    mov dword ptr [ebp-3Ch],34h"
"	      00457514    mov dword ptr [ebp-38h],147h"
"	      0045751b    mov dword ptr [ebp-34h],88h"
"	      00457522    mov dword ptr [ebp-30h],15Eh"
"	      00457529    jmp near ptr 0045752Eh"
"	      0045752e    push 1"
"	      00457530    mov eax,this"
"	      00457536    push eax"
"	      00457537    mov eax,this"
"	      0045753d    push eax"
"	      0045753e    push 14Eh"
"	      00457543    push 0"
"	      00457545    lea eax,[ebp-3Ch]"
"	      00457548    push eax"
"	      00457549    mov ecx,[ebp-2Ch]"
"	      0045754c    call 004ACCE6h"
"	      00457551    mov tempTextWindow,eax"
"	      00457554    jmp near ptr 00457560h"
"	      00457559    mov tempTextWindow,0"
);
// LINE 1351:
	asm( 
"	      00457560    push 0"
"	      00457562    push 0"
"	      00457564    push 12h"
"	      00457566    mov eax,tempTextWindow"
"	      00457569    mov eax,[eax]"
"	      0045756b    mov ecx,tempTextWindow"
"	      0045756e    call dword ptr [eax+0CCh]"
);
// LINE 1352:
	asm( 
"	      00457574    push 1"
"	      00457576    mov eax,tempTextWindow"
"	      00457579    mov eax,[eax]"
"	      0045757b    mov ecx,tempTextWindow"
"	      0045757e    call dword ptr [eax+0D0h]"
);
// LINE 1353:
	asm( 
"	      00457584    push 603AB8h"
"	      00457589    mov eax,tempTextWindow"
"	      0045758c    mov eax,[eax]"
"	      0045758e    mov ecx,tempTextWindow"
"	      00457591    call dword ptr [eax+0D4h]"
);
// LINE 1355:
	asm( 
"	      00457597    push 0A4h"
"	      0045759c    call 0056A600h"
"	      004575a1    add esp,4"
"	      004575a4    mov [ebp-40h],eax"
"	      004575a7    cmp dword ptr [ebp-40h],0"
"	      004575ab    je near ptr 00457602h"
"	      004575b1    jmp near ptr 004575B6h"
"	      004575b6    mov dword ptr [ebp-50h],0B3h"
"	      004575bd    mov dword ptr [ebp-4Ch],147h"
"	      004575c4    mov dword ptr [ebp-48h],109h"
"	      004575cb    mov dword ptr [ebp-44h],15Eh"
"	      004575d2    jmp near ptr 004575D7h"
"	      004575d7    push 1"
"	      004575d9    mov eax,this"
"	      004575df    push eax"
"	      004575e0    mov eax,this"
"	      004575e6    push eax"
"	      004575e7    push 14Fh"
"	      004575ec    push 0"
"	      004575ee    lea eax,[ebp-50h]"
"	      004575f1    push eax"
"	      004575f2    mov ecx,[ebp-40h]"
"	      004575f5    call 004ACCE6h"
"	      004575fa    mov tempTextWindow,eax"
"	      004575fd    jmp near ptr 00457609h"
"	      00457602    mov tempTextWindow,0"
);
// LINE 1356:
	asm( 
"	      00457609    push 0"
"	      0045760b    push 0"
"	      0045760d    push 12h"
"	      0045760f    mov eax,tempTextWindow"
"	      00457612    mov eax,[eax]"
"	      00457614    mov ecx,tempTextWindow"
"	      00457617    call dword ptr [eax+0CCh]"
);
// LINE 1357:
	asm( 
"	      0045761d    push 1"
"	      0045761f    mov eax,tempTextWindow"
"	      00457622    mov eax,[eax]"
"	      00457624    mov ecx,tempTextWindow"
"	      00457627    call dword ptr [eax+0D0h]"
);
// LINE 1358:
	asm( 
"	      0045762d    push 603AB8h"
"	      00457632    mov eax,tempTextWindow"
"	      00457635    mov eax,[eax]"
"	      00457637    mov ecx,tempTextWindow"
"	      0045763a    call dword ptr [eax+0D4h]"
);
// LINE 1360:
	asm( 
"	      00457640    push 0A4h"
"	      00457645    call 0056A600h"
"	      0045764a    add esp,4"
"	      0045764d    mov [ebp-54h],eax"
"	      00457650    cmp dword ptr [ebp-54h],0"
"	      00457654    je near ptr 004576ABh"
"	      0045765a    jmp near ptr 0045765Fh"
"	      0045765f    mov dword ptr [ebp-64h],0BBh"
"	      00457666    mov dword ptr [ebp-60h],2Fh"
"	      0045766d    mov dword ptr [ebp-5Ch],111h"
"	      00457674    mov dword ptr [ebp-58h],45h"
"	      0045767b    jmp near ptr 00457680h"
"	      00457680    push 1"
"	      00457682    mov eax,this"
"	      00457688    push eax"
"	      00457689    mov eax,this"
"	      0045768f    push eax"
"	      00457690    push 150h"
"	      00457695    push 0"
"	      00457697    lea eax,[ebp-64h]"
"	      0045769a    push eax"
"	      0045769b    mov ecx,[ebp-54h]"
"	      0045769e    call 004ACCE6h"
"	      004576a3    mov tempTextWindow,eax"
"	      004576a6    jmp near ptr 004576B2h"
"	      004576ab    mov tempTextWindow,0"
);
// LINE 1361:
	asm( 
"	      004576b2    push 0"
"	      004576b4    push 0"
"	      004576b6    push 12h"
"	      004576b8    mov eax,tempTextWindow"
"	      004576bb    mov eax,[eax]"
"	      004576bd    mov ecx,tempTextWindow"
"	      004576c0    call dword ptr [eax+0CCh]"
);
// LINE 1362:
	asm( 
"	      004576c6    push 1"
"	      004576c8    mov eax,tempTextWindow"
"	      004576cb    mov eax,[eax]"
"	      004576cd    mov ecx,tempTextWindow"
"	      004576d0    call dword ptr [eax+0D0h]"
);
// LINE 1363:
	asm( 
"	      004576d6    push 603AB8h"
"	      004576db    mov eax,tempTextWindow"
"	      004576de    mov eax,[eax]"
"	      004576e0    mov ecx,tempTextWindow"
"	      004576e3    call dword ptr [eax+0D4h]"
);
// LINE 1365:
	asm( 
"	      004576e9    push 0A4h"
"	      004576ee    call 0056A600h"
"	      004576f3    add esp,4"
"	      004576f6    mov [ebp-68h],eax"
"	      004576f9    cmp dword ptr [ebp-68h],0"
"	      004576fd    je near ptr 00457754h"
"	      00457703    jmp near ptr 00457708h"
"	      00457708    mov dword ptr [ebp-78h],13Ah"
"	      0045770f    mov dword ptr [ebp-74h],2Fh"
"	      00457716    mov dword ptr [ebp-70h],190h"
"	      0045771d    mov dword ptr [ebp-6Ch],45h"
"	      00457724    jmp near ptr 00457729h"
"	      00457729    push 1"
"	      0045772b    mov eax,this"
"	      00457731    push eax"
"	      00457732    mov eax,this"
"	      00457738    push eax"
"	      00457739    push 151h"
"	      0045773e    push 0"
"	      00457740    lea eax,[ebp-78h]"
"	      00457743    push eax"
"	      00457744    mov ecx,[ebp-68h]"
"	      00457747    call 004ACCE6h"
"	      0045774c    mov tempTextWindow,eax"
"	      0045774f    jmp near ptr 0045775Bh"
"	      00457754    mov tempTextWindow,0"
);
// LINE 1366:
	asm( 
"	      0045775b    push 0"
"	      0045775d    push 0"
"	      0045775f    push 12h"
"	      00457761    mov eax,tempTextWindow"
"	      00457764    mov eax,[eax]"
"	      00457766    mov ecx,tempTextWindow"
"	      00457769    call dword ptr [eax+0CCh]"
);
// LINE 1367:
	asm( 
"	      0045776f    push 1"
"	      00457771    mov eax,tempTextWindow"
"	      00457774    mov eax,[eax]"
"	      00457776    mov ecx,tempTextWindow"
"	      00457779    call dword ptr [eax+0D0h]"
);
// LINE 1368:
	asm( 
"	      0045777f    push 603AB8h"
"	      00457784    mov eax,tempTextWindow"
"	      00457787    mov eax,[eax]"
"	      00457789    mov ecx,tempTextWindow"
"	      0045778c    call dword ptr [eax+0D4h]"
);
// LINE 1370:
	asm( 
"	      00457792    push 0A4h"
"	      00457797    call 0056A600h"
"	      0045779c    add esp,4"
"	      0045779f    mov [ebp-7Ch],eax"
"	      004577a2    cmp dword ptr [ebp-7Ch],0"
"	      004577a6    je near ptr 00457809h"
"	      004577ac    jmp near ptr 004577B1h"
"	      004577b1    mov dword ptr [ebp-8Ch],143h"
"	      004577bb    mov dword ptr [ebp-88h],147h"
"	      004577c5    mov dword ptr [ebp-84h],198h"
"	      004577cf    mov dword ptr [ebp-80h],15Eh"
"	      004577d6    jmp near ptr 004577DBh"
"	      004577db    push 1"
"	      004577dd    mov eax,this"
"	      004577e3    push eax"
"	      004577e4    mov eax,this"
"	      004577ea    push eax"
"	      004577eb    push 152h"
"	      004577f0    push 0"
"	      004577f2    lea eax,[ebp-8Ch]"
"	      004577f8    push eax"
"	      004577f9    mov ecx,[ebp-7Ch]"
"	      004577fc    call 004ACCE6h"
"	      00457801    mov tempTextWindow,eax"
"	      00457804    jmp near ptr 00457810h"
"	      00457809    mov tempTextWindow,0"
);
// LINE 1371:
	asm( 
"	      00457810    push 0"
"	      00457812    push 0"
"	      00457814    push 12h"
"	      00457816    mov eax,tempTextWindow"
"	      00457819    mov eax,[eax]"
"	      0045781b    mov ecx,tempTextWindow"
"	      0045781e    call dword ptr [eax+0CCh]"
);
// LINE 1372:
	asm( 
"	      00457824    push 1"
"	      00457826    mov eax,tempTextWindow"
"	      00457829    mov eax,[eax]"
"	      0045782b    mov ecx,tempTextWindow"
"	      0045782e    call dword ptr [eax+0D0h]"
);
// LINE 1373:
	asm( 
"	      00457834    push 603AB8h"
"	      00457839    mov eax,tempTextWindow"
"	      0045783c    mov eax,[eax]"
"	      0045783e    mov ecx,tempTextWindow"
"	      00457841    call dword ptr [eax+0D4h]"
);
// LINE 1375:
	asm( 
"	      00457847    push 0A4h"
"	      0045784c    call 0056A600h"
"	      00457851    add esp,4"
"	      00457854    mov [ebp-90h],eax"
"	      0045785a    cmp dword ptr [ebp-90h],0"
"	      00457861    je near ptr 004578CAh"
"	      00457867    jmp near ptr 0045786Ch"
"	      0045786c    mov dword ptr [ebp-0A0h],1C4h"
"	      00457876    mov dword ptr [ebp-9Ch],147h"
"	      00457880    mov dword ptr [ebp-98h],218h"
"	      0045788a    mov dword ptr [ebp-94h],15Eh"
"	      00457894    jmp near ptr 00457899h"
"	      00457899    push 1"
"	      0045789b    mov eax,this"
"	      004578a1    push eax"
"	      004578a2    mov eax,this"
"	      004578a8    push eax"
"	      004578a9    push 153h"
"	      004578ae    push 0"
"	      004578b0    lea eax,[ebp-0A0h]"
"	      004578b6    push eax"
"	      004578b7    mov ecx,[ebp-90h]"
"	      004578bd    call 004ACCE6h"
"	      004578c2    mov tempTextWindow,eax"
"	      004578c5    jmp near ptr 004578D1h"
"	      004578ca    mov tempTextWindow,0"
);
// LINE 1376:
	asm( 
"	      004578d1    push 0"
"	      004578d3    push 0"
"	      004578d5    push 12h"
"	      004578d7    mov eax,tempTextWindow"
"	      004578da    mov eax,[eax]"
"	      004578dc    mov ecx,tempTextWindow"
"	      004578df    call dword ptr [eax+0CCh]"
);
// LINE 1377:
	asm( 
"	      004578e5    push 1"
"	      004578e7    mov eax,tempTextWindow"
"	      004578ea    mov eax,[eax]"
"	      004578ec    mov ecx,tempTextWindow"
"	      004578ef    call dword ptr [eax+0D0h]"
);
// LINE 1378:
	asm( 
"	      004578f5    push 603AB8h"
"	      004578fa    mov eax,tempTextWindow"
"	      004578fd    mov eax,[eax]"
"	      004578ff    mov ecx,tempTextWindow"
"	      00457902    call dword ptr [eax+0D4h]"
);
// LINE 1380:
	asm( 
"	      00457908    push 0A4h"
"	      0045790d    call 0056A600h"
"	      00457912    add esp,4"
"	      00457915    mov [ebp-0A4h],eax"
"	      0045791b    cmp dword ptr [ebp-0A4h],0"
"	      00457922    je near ptr 0045798Bh"
"	      00457928    jmp near ptr 0045792Dh"
"	      0045792d    mov dword ptr [ebp-0B4h],1CDh"
"	      00457937    mov dword ptr [ebp-0B0h],2Fh"
"	      00457941    mov dword ptr [ebp-0ACh],220h"
"	      0045794b    mov dword ptr [ebp-0A8h],46h"
"	      00457955    jmp near ptr 0045795Ah"
"	      0045795a    push 1"
"	      0045795c    mov eax,this"
"	      00457962    push eax"
"	      00457963    mov eax,this"
"	      00457969    push eax"
"	      0045796a    push 154h"
"	      0045796f    push 0"
"	      00457971    lea eax,[ebp-0B4h]"
"	      00457977    push eax"
"	      00457978    mov ecx,[ebp-0A4h]"
"	      0045797e    call 004ACCE6h"
"	      00457983    mov tempTextWindow,eax"
"	      00457986    jmp near ptr 00457992h"
"	      0045798b    mov tempTextWindow,0"
);
// LINE 1381:
	asm( 
"	      00457992    push 0"
"	      00457994    push 0"
"	      00457996    push 12h"
"	      00457998    mov eax,tempTextWindow"
"	      0045799b    mov eax,[eax]"
"	      0045799d    mov ecx,tempTextWindow"
"	      004579a0    call dword ptr [eax+0CCh]"
);
// LINE 1382:
	asm( 
"	      004579a6    push 1"
"	      004579a8    mov eax,tempTextWindow"
"	      004579ab    mov eax,[eax]"
"	      004579ad    mov ecx,tempTextWindow"
"	      004579b0    call dword ptr [eax+0D0h]"
);
// LINE 1383:
	asm( 
"	      004579b6    push 603AB8h"
"	      004579bb    mov eax,tempTextWindow"
"	      004579be    mov eax,[eax]"
"	      004579c0    mov ecx,tempTextWindow"
"	      004579c3    call dword ptr [eax+0D4h]"
);
// LINE 1388:
	asm( 
"	      004579c9    push 0B4h"
"	      004579ce    call 0056A600h"
"	      004579d3    add esp,4"
"	      004579d6    mov [ebp-0B8h],eax"
"	      004579dc    cmp dword ptr [ebp-0B8h],0"
"	      004579e3    je near ptr 00457A59h"
"	      004579e9    jmp near ptr 004579EEh"
"	      004579ee    mov dword ptr [ebp-0C8h],2Ah"
"	      004579f8    mov dword ptr [ebp-0C4h],60h"
"	      00457a02    mov dword ptr [ebp-0C0h],44h"
"	      00457a0c    mov dword ptr [ebp-0BCh],12Ah"
"	      00457a16    jmp near ptr 00457A1Bh"
"	      00457a1b    push 8"
"	      00457a1d    mov eax,ds:[59917Ch]"
"	      00457a22    push eax"
"	      00457a23    push 0"
"	      00457a25    push 1"
"	      00457a27    mov eax,this"
"	      00457a2d    push eax"
"	      00457a2e    mov eax,this"
"	      00457a34    push eax"
"	      00457a35    push 1"
"	      00457a37    push 3"
"	      00457a39    lea eax,[ebp-0C8h]"
"	      00457a3f    push eax"
"	      00457a40    mov ecx,[ebp-0B8h]"
"	      00457a46    call 004B1256h"
"	      00457a4b    mov ecx,this"
"	      00457a51    mov [ecx+74h],eax"
"	      00457a54    jmp near ptr 00457A66h"
"	      00457a59    mov eax,this"
"	      00457a5f    mov dword ptr [eax+74h],0"
);
// LINE 1389:
	asm( 
"	      00457a66    mov eax,this"
"	      00457a6c    mov ecx,this"
"	      00457a72    mov ecx,[ecx+74h]"
"	      00457a75    mov edx,[ecx]"
"	      00457a77    mov ecx,[eax+74h]"
"	      00457a7a    call dword ptr [edx+4]"
);
// LINE 1390:
	asm( 
"	      00457a7d    push 0"
"	      00457a7f    mov eax,this"
"	      00457a85    mov ecx,[eax+74h]"
"	      00457a88    call 004B2834h"
);
// LINE 1391:
	asm( 
"	      00457a8d    push 3"
"	      00457a8f    mov eax,this"
"	      00457a95    mov ecx,[eax+74h]"
"	      00457a98    call 004B2872h"
);
// LINE 1395:
	asm( 
"	      00457a9d    push 0B4h"
"	      00457aa2    call 0056A600h"
"	      00457aa7    add esp,4"
"	      00457aaa    mov [ebp-0CCh],eax"
"	      00457ab0    cmp dword ptr [ebp-0CCh],0"
"	      00457ab7    je near ptr 00457B2Dh"
"	      00457abd    jmp near ptr 00457AC2h"
"	      00457ac2    mov dword ptr [ebp-0DCh],6Fh"
"	      00457acc    mov dword ptr [ebp-0D8h],60h"
"	      00457ad6    mov dword ptr [ebp-0D4h],89h"
"	      00457ae0    mov dword ptr [ebp-0D0h],12Ah"
"	      00457aea    jmp near ptr 00457AEFh"
"	      00457aef    push 8"
"	      00457af1    mov eax,ds:[59917Ch]"
"	      00457af6    push eax"
"	      00457af7    push 0"
"	      00457af9    push 1"
"	      00457afb    mov eax,this"
"	      00457b01    push eax"
"	      00457b02    mov eax,this"
"	      00457b08    push eax"
"	      00457b09    push 1"
"	      00457b0b    push 4"
"	      00457b0d    lea eax,[ebp-0DCh]"
"	      00457b13    push eax"
"	      00457b14    mov ecx,[ebp-0CCh]"
"	      00457b1a    call 004B1256h"
"	      00457b1f    mov ecx,this"
"	      00457b25    mov [ecx+78h],eax"
"	      00457b28    jmp near ptr 00457B3Ah"
"	      00457b2d    mov eax,this"
"	      00457b33    mov dword ptr [eax+78h],0"
);
// LINE 1396:
	asm( 
"	      00457b3a    mov eax,this"
"	      00457b40    mov ecx,this"
"	      00457b46    mov ecx,[ecx+78h]"
"	      00457b49    mov edx,[ecx]"
"	      00457b4b    mov ecx,[eax+78h]"
"	      00457b4e    call dword ptr [edx+4]"
);
// LINE 1397:
	asm( 
"	      00457b51    push 0"
"	      00457b53    mov eax,this"
"	      00457b59    mov ecx,[eax+78h]"
"	      00457b5c    call 004B2834h"
);
// LINE 1398:
	asm( 
"	      00457b61    push 64h"
"	      00457b63    mov eax,this"
"	      00457b69    mov ecx,[eax+78h]"
"	      00457b6c    call 004B2872h"
);
// LINE 1402:
	asm( 
"	      00457b71    push 0B4h"
"	      00457b76    call 0056A600h"
"	      00457b7b    add esp,4"
"	      00457b7e    mov [ebp-0E0h],eax"
"	      00457b84    cmp dword ptr [ebp-0E0h],0"
"	      00457b8b    je near ptr 00457C01h"
"	      00457b91    jmp near ptr 00457B96h"
"	      00457b96    mov dword ptr [ebp-0F0h],0B3h"
"	      00457ba0    mov dword ptr [ebp-0ECh],60h"
"	      00457baa    mov dword ptr [ebp-0E8h],0CDh"
"	      00457bb4    mov dword ptr [ebp-0E4h],12Ah"
"	      00457bbe    jmp near ptr 00457BC3h"
"	      00457bc3    push 8"
"	      00457bc5    mov eax,ds:[59917Ch]"
"	      00457bca    push eax"
"	      00457bcb    push 0"
"	      00457bcd    push 1"
"	      00457bcf    mov eax,this"
"	      00457bd5    push eax"
"	      00457bd6    mov eax,this"
"	      00457bdc    push eax"
"	      00457bdd    push 1"
"	      00457bdf    push 5"
"	      00457be1    lea eax,[ebp-0F0h]"
"	      00457be7    push eax"
"	      00457be8    mov ecx,[ebp-0E0h]"
"	      00457bee    call 004B1256h"
"	      00457bf3    mov ecx,this"
"	      00457bf9    mov [ecx+7Ch],eax"
"	      00457bfc    jmp near ptr 00457C0Eh"
"	      00457c01    mov eax,this"
"	      00457c07    mov dword ptr [eax+7Ch],0"
);
// LINE 1403:
	asm( 
"	      00457c0e    mov eax,this"
"	      00457c14    mov ecx,this"
"	      00457c1a    mov ecx,[ecx+7Ch]"
"	      00457c1d    mov edx,[ecx]"
"	      00457c1f    mov ecx,[eax+7Ch]"
"	      00457c22    call dword ptr [edx+4]"
);
// LINE 1404:
	asm( 
"	      00457c25    push 0"
"	      00457c27    mov eax,this"
"	      00457c2d    mov ecx,[eax+7Ch]"
"	      00457c30    call 004B2834h"
);
// LINE 1405:
	asm( 
"	      00457c35    push 64h"
"	      00457c37    mov eax,this"
"	      00457c3d    mov ecx,[eax+7Ch]"
"	      00457c40    call 004B2872h"
);
// LINE 1409:
	asm( 
"	      00457c45    push 0B4h"
"	      00457c4a    call 0056A600h"
"	      00457c4f    add esp,4"
"	      00457c52    mov [ebp-0F4h],eax"
"	      00457c58    cmp dword ptr [ebp-0F4h],0"
"	      00457c5f    je near ptr 00457CD8h"
"	      00457c65    jmp near ptr 00457C6Ah"
"	      00457c6a    mov dword ptr [ebp-104h],0F8h"
"	      00457c74    mov dword ptr [ebp-100h],60h"
"	      00457c7e    mov dword ptr [ebp-0FCh],112h"
"	      00457c88    mov dword ptr [ebp-0F8h],12Ah"
"	      00457c92    jmp near ptr 00457C97h"
"	      00457c97    push 8"
"	      00457c99    mov eax,ds:[59917Ch]"
"	      00457c9e    push eax"
"	      00457c9f    push 0"
"	      00457ca1    push 1"
"	      00457ca3    mov eax,this"
"	      00457ca9    push eax"
"	      00457caa    mov eax,this"
"	      00457cb0    push eax"
"	      00457cb1    push 1"
"	      00457cb3    push 6"
"	      00457cb5    lea eax,[ebp-104h]"
"	      00457cbb    push eax"
"	      00457cbc    mov ecx,[ebp-0F4h]"
"	      00457cc2    call 004B1256h"
"	      00457cc7    mov ecx,this"
"	      00457ccd    mov [ecx+80h],eax"
"	      00457cd3    jmp near ptr 00457CE8h"
"	      00457cd8    mov eax,this"
"	      00457cde    mov dword ptr [eax+80h],0"
);
// LINE 1410:
	asm( 
"	      00457ce8    mov eax,this"
"	      00457cee    mov ecx,this"
"	      00457cf4    mov ecx,[ecx+80h]"
"	      00457cfa    mov edx,[ecx]"
"	      00457cfc    mov ecx,[eax+80h]"
"	      00457d02    call dword ptr [edx+4]"
);
// LINE 1411:
	asm( 
"	      00457d05    push 0"
"	      00457d07    mov eax,this"
"	      00457d0d    mov ecx,[eax+80h]"
"	      00457d13    call 004B2834h"
);
// LINE 1412:
	asm( 
"	      00457d18    push 64h"
"	      00457d1a    mov eax,this"
"	      00457d20    mov ecx,[eax+80h]"
"	      00457d26    call 004B2872h"
);
// LINE 1416:
	asm( 
"	      00457d2b    push 0B4h"
"	      00457d30    call 0056A600h"
"	      00457d35    add esp,4"
"	      00457d38    mov [ebp-108h],eax"
"	      00457d3e    cmp dword ptr [ebp-108h],0"
"	      00457d45    je near ptr 00457DBEh"
"	      00457d4b    jmp near ptr 00457D50h"
"	      00457d50    mov dword ptr [ebp-118h],13Ch"
"	      00457d5a    mov dword ptr [ebp-114h],60h"
"	      00457d64    mov dword ptr [ebp-110h],156h"
"	      00457d6e    mov dword ptr [ebp-10Ch],12Ah"
"	      00457d78    jmp near ptr 00457D7Dh"
"	      00457d7d    push 8"
"	      00457d7f    mov eax,ds:[59917Ch]"
"	      00457d84    push eax"
"	      00457d85    push 0"
"	      00457d87    push 1"
"	      00457d89    mov eax,this"
"	      00457d8f    push eax"
"	      00457d90    mov eax,this"
"	      00457d96    push eax"
"	      00457d97    push 1"
"	      00457d99    push 7"
"	      00457d9b    lea eax,[ebp-118h]"
"	      00457da1    push eax"
"	      00457da2    mov ecx,[ebp-108h]"
"	      00457da8    call 004B1256h"
"	      00457dad    mov ecx,this"
"	      00457db3    mov [ecx+84h],eax"
"	      00457db9    jmp near ptr 00457DCEh"
"	      00457dbe    mov eax,this"
"	      00457dc4    mov dword ptr [eax+84h],0"
);
// LINE 1417:
	asm( 
"	      00457dce    mov eax,this"
"	      00457dd4    mov ecx,this"
"	      00457dda    mov ecx,[ecx+84h]"
"	      00457de0    mov edx,[ecx]"
"	      00457de2    mov ecx,[eax+84h]"
"	      00457de8    call dword ptr [edx+4]"
);
// LINE 1418:
	asm( 
"	      00457deb    push 0"
"	      00457ded    mov eax,this"
"	      00457df3    mov ecx,[eax+84h]"
"	      00457df9    call 004B2834h"
);
// LINE 1419:
	asm( 
"	      00457dfe    push 64h"
"	      00457e00    mov eax,this"
"	      00457e06    mov ecx,[eax+84h]"
"	      00457e0c    call 004B2872h"
);
// LINE 1423:
	asm( 
"	      00457e11    push 0B4h"
"	      00457e16    call 0056A600h"
"	      00457e1b    add esp,4"
"	      00457e1e    mov [ebp-11Ch],eax"
"	      00457e24    cmp dword ptr [ebp-11Ch],0"
"	      00457e2b    je near ptr 00457EA4h"
"	      00457e31    jmp near ptr 00457E36h"
"	      00457e36    mov dword ptr [ebp-12Ch],181h"
"	      00457e40    mov dword ptr [ebp-128h],60h"
"	      00457e4a    mov dword ptr [ebp-124h],19Bh"
"	      00457e54    mov dword ptr [ebp-120h],12Ah"
"	      00457e5e    jmp near ptr 00457E63h"
"	      00457e63    push 8"
"	      00457e65    mov eax,ds:[59917Ch]"
"	      00457e6a    push eax"
"	      00457e6b    push 0"
"	      00457e6d    push 1"
"	      00457e6f    mov eax,this"
"	      00457e75    push eax"
"	      00457e76    mov eax,this"
"	      00457e7c    push eax"
"	      00457e7d    push 1"
"	      00457e7f    push 8"
"	      00457e81    lea eax,[ebp-12Ch]"
"	      00457e87    push eax"
"	      00457e88    mov ecx,[ebp-11Ch]"
"	      00457e8e    call 004B1256h"
"	      00457e93    mov ecx,this"
"	      00457e99    mov [ecx+88h],eax"
"	      00457e9f    jmp near ptr 00457EB4h"
"	      00457ea4    mov eax,this"
"	      00457eaa    mov dword ptr [eax+88h],0"
);
// LINE 1424:
	asm( 
"	      00457eb4    mov eax,this"
"	      00457eba    mov ecx,this"
"	      00457ec0    mov ecx,[ecx+88h]"
"	      00457ec6    mov edx,[ecx]"
"	      00457ec8    mov ecx,[eax+88h]"
"	      00457ece    call dword ptr [edx+4]"
);
// LINE 1425:
	asm( 
"	      00457ed1    push 0"
"	      00457ed3    mov eax,this"
"	      00457ed9    mov ecx,[eax+88h]"
"	      00457edf    call 004B2834h"
);
// LINE 1426:
	asm( 
"	      00457ee4    push 64h"
"	      00457ee6    mov eax,this"
"	      00457eec    mov ecx,[eax+88h]"
"	      00457ef2    call 004B2872h"
);
// LINE 1430:
	asm( 
"	      00457ef7    push 0B4h"
"	      00457efc    call 0056A600h"
"	      00457f01    add esp,4"
"	      00457f04    mov [ebp-130h],eax"
"	      00457f0a    cmp dword ptr [ebp-130h],0"
"	      00457f11    je near ptr 00457F8Ah"
"	      00457f17    jmp near ptr 00457F1Ch"
"	      00457f1c    mov dword ptr [ebp-140h],1C6h"
"	      00457f26    mov dword ptr [ebp-13Ch],60h"
"	      00457f30    mov dword ptr [ebp-138h],1E0h"
"	      00457f3a    mov dword ptr [ebp-134h],12Ah"
"	      00457f44    jmp near ptr 00457F49h"
"	      00457f49    push 8"
"	      00457f4b    mov eax,ds:[59917Ch]"
"	      00457f50    push eax"
"	      00457f51    push 0"
"	      00457f53    push 1"
"	      00457f55    mov eax,this"
"	      00457f5b    push eax"
"	      00457f5c    mov eax,this"
"	      00457f62    push eax"
"	      00457f63    push 1"
"	      00457f65    push 9"
"	      00457f67    lea eax,[ebp-140h]"
"	      00457f6d    push eax"
"	      00457f6e    mov ecx,[ebp-130h]"
"	      00457f74    call 004B1256h"
"	      00457f79    mov ecx,this"
"	      00457f7f    mov [ecx+8Ch],eax"
"	      00457f85    jmp near ptr 00457F9Ah"
"	      00457f8a    mov eax,this"
"	      00457f90    mov dword ptr [eax+8Ch],0"
);
// LINE 1431:
	asm( 
"	      00457f9a    mov eax,this"
"	      00457fa0    mov ecx,this"
"	      00457fa6    mov ecx,[ecx+8Ch]"
"	      00457fac    mov edx,[ecx]"
"	      00457fae    mov ecx,[eax+8Ch]"
"	      00457fb4    call dword ptr [edx+4]"
);
// LINE 1432:
	asm( 
"	      00457fb7    push 0"
"	      00457fb9    mov eax,this"
"	      00457fbf    mov ecx,[eax+8Ch]"
"	      00457fc5    call 004B2834h"
);
// LINE 1433:
	asm( 
"	      00457fca    push 64h"
"	      00457fcc    mov eax,this"
"	      00457fd2    mov ecx,[eax+8Ch]"
"	      00457fd8    call 004B2872h"
);
// LINE 1437:
	asm( 
"	      00457fdd    push 0B4h"
"	      00457fe2    call 0056A600h"
"	      00457fe7    add esp,4"
"	      00457fea    mov [ebp-144h],eax"
"	      00457ff0    cmp dword ptr [ebp-144h],0"
"	      00457ff7    je near ptr 00458070h"
"	      00457ffd    jmp near ptr 00458002h"
"	      00458002    mov dword ptr [ebp-154h],20Ah"
"	      0045800c    mov dword ptr [ebp-150h],60h"
"	      00458016    mov dword ptr [ebp-14Ch],224h"
"	      00458020    mov dword ptr [ebp-148h],12Ah"
"	      0045802a    jmp near ptr 0045802Fh"
"	      0045802f    push 8"
"	      00458031    mov eax,ds:[59917Ch]"
"	      00458036    push eax"
"	      00458037    push 0"
"	      00458039    push 1"
"	      0045803b    mov eax,this"
"	      00458041    push eax"
"	      00458042    mov eax,this"
"	      00458048    push eax"
"	      00458049    push 1"
"	      0045804b    push 0Ah"
"	      0045804d    lea eax,[ebp-154h]"
"	      00458053    push eax"
"	      00458054    mov ecx,[ebp-144h]"
"	      0045805a    call 004B1256h"
"	      0045805f    mov ecx,this"
"	      00458065    mov [ecx+90h],eax"
"	      0045806b    jmp near ptr 00458080h"
"	      00458070    mov eax,this"
"	      00458076    mov dword ptr [eax+90h],0"
);
// LINE 1438:
	asm( 
"	      00458080    mov eax,this"
"	      00458086    mov ecx,this"
"	      0045808c    mov ecx,[ecx+90h]"
"	      00458092    mov edx,[ecx]"
"	      00458094    mov ecx,[eax+90h]"
"	      0045809a    call dword ptr [edx+4]"
);
// LINE 1439:
	asm( 
"	      0045809d    push 0"
"	      0045809f    mov eax,this"
"	      004580a5    mov ecx,[eax+90h]"
"	      004580ab    call 004B2834h"
);
// LINE 1440:
	asm( 
"	      004580b0    push 64h"
"	      004580b2    mov eax,this"
"	      004580b8    mov ecx,[eax+90h]"
"	      004580be    call 004B2872h"
);
// LINE 1443:
	asm( 
"	      004580c3    push 94h"
"	      004580c8    call 0056A600h"
"	      004580cd    add esp,4"
"	      004580d0    mov [ebp-158h],eax"
"	      004580d6    cmp dword ptr [ebp-158h],0"
"	      004580dd    je near ptr 00458143h"
"	      004580e3    jmp near ptr 004580E8h"
"	      004580e8    mov dword ptr [ebp-168h],82h"
"	      004580f2    mov dword ptr [ebp-164h],178h"
"	      004580fc    mov dword ptr [ebp-160h],83h"
"	      00458106    mov dword ptr [ebp-15Ch],179h"
"	      00458110    jmp near ptr 00458115h"
"	      00458115    push 1"
"	      00458117    mov eax,this"
"	      0045811d    push eax"
"	      0045811e    push 0"
"	      00458120    mov eax,this"
"	      00458126    push eax"
"	      00458127    push 1"
"	      00458129    lea eax,[ebp-168h]"
"	      0045812f    push eax"
"	      00458130    mov ecx,[ebp-158h]"
"	      00458136    call 00471847h"
"	      0045813b    mov tempButtonWindow,eax"
"	      0045813e    jmp near ptr 0045814Ah"
"	      00458143    mov tempButtonWindow,0"
);
// LINE 1444:
	asm( 
"	      0045814a    push 0"
"	      0045814c    push 14Bh"
"	      00458151    call 0042B15Fh"
"	      00458156    add esp,8"
"	      00458159    mov nFullStringID,eax"
);
// LINE 1445:
	asm( 
"	      0045815c    push 0FFFh"
"	      00458161    lea eax,[ebp-119Ch]"
"	      00458167    push eax"
"	      00458168    mov eax,nFullStringID"
"	      0045816b    push eax"
"	      0045816c    mov eax,ds:[5C28C8h]"
"	      00458171    push eax"
"	      00458172    call dword ptr ds:[6C38B4h]"
"	      00458178    mov [ebp-11A0h],eax"
"	      0045817e    cmp dword ptr [ebp-11A0h],0"
"	      00458185    jne near ptr 0045862Bh"
"	      0045818b    push 0FFFh"
"	      00458190    lea eax,[ebp-119Ch]"
"	      00458196    push eax"
"	      00458197    mov ecx,3E8h"
"	      0045819c    mov eax,nFullStringID"
"	      0045819f    sub edx,edx"
"	      004581a1    div ecx"
"	      004581a3    push edx"
"	      004581a4    mov eax,ds:[5C28C8h]"
"	      004581a9    push eax"
"	      004581aa    call dword ptr ds:[6C38B4h]"
"	      004581b0    mov [ebp-11A0h],eax"
"	      004581b6    jmp near ptr 004581BBh"
"	      004581bb    lea eax,[ebp-119Ch]"
"	      004581c1    push eax"
"	      004581c2    call 0056ABE0h"
"	      004581c7    add esp,4"
"	      004581ca    mov [ebp-11C8h],eax"
"	      004581d0    cmp dword ptr [ebp-11C8h],0FFFFFFFFh"
"	      004581d7    jne near ptr 00458215h"
"	      004581dd    push 5971E4h"
"	      004581e2    mov ecx,638C00h"
"	      004581e7    call 00569960h"
"	      004581ec    mov [ebp-11B0h],eax"
"	      004581f2    mov eax,[ebp-11B0h]"
"	      004581f8    push eax"
"	      004581f9    call 004011B0h"
"	      004581fe    add esp,4"
"	      00458201    jmp near ptr 00458206h"
"	      00458206    push 1"
"	      00458208    call 00569430h"
"	      0045820d    add esp,4"
"	      00458210    jmp near ptr 00458215h"
"	      00458215    jmp near ptr 0045821Ah"
"	      0045821a    mov eax,sText.reference"
"	      0045821d    cmp dword ptr [eax+0Ch],1"
"	      00458221    ja near ptr 0045824Bh"
"	      00458227    cmp dword ptr [ebp-11C8h],0"
"	      0045822e    je near ptr 004583E6h"
"	      00458234    jmp near ptr 00458239h"
"	      00458239    mov eax,sText.reference"
"	      0045823c    mov ecx,[ebp-11C8h]"
"	      00458242    cmp [eax+8],ecx"
"	      00458245    jae near ptr 004583E6h"
"	      0045824b    push 10h"
"	      0045824d    call 0056A600h"
"	      00458252    add esp,4"
"	      00458255    mov [ebp-11A8h],eax"
"	      0045825b    cmp dword ptr [ebp-11A8h],0"
"	      00458262    je near ptr 0045836Bh"
"	      00458268    cmp dword ptr [ebp-11C8h],0FFFFFFFFh"
"	      0045826f    jne near ptr 004582ADh"
"	      00458275    push 5971E4h"
"	      0045827a    mov ecx,638C00h"
"	      0045827f    call 00569960h"
"	      00458284    mov [ebp-11C4h],eax"
"	      0045828a    mov eax,[ebp-11C4h]"
"	      00458290    push eax"
"	      00458291    call 004011B0h"
"	      00458296    add esp,4"
"	      00458299    jmp near ptr 0045829Eh"
"	      0045829e    push 1"
"	      004582a0    call 00569430h"
"	      004582a5    add esp,4"
"	      004582a8    jmp near ptr 004582ADh"
"	      004582ad    mov eax,[ebp-11C8h]"
"	      004582b3    mov ecx,[ebp-11A8h]"
"	      004582b9    mov [ecx+4],eax"
"	      004582bc    mov eax,[ebp-11A8h]"
"	      004582c2    mov eax,[eax+4]"
"	      004582c5    mov ecx,[ebp-11A8h]"
"	      004582cb    mov [ecx+8],eax"
"	      004582ce    mov eax,[ebp-11A8h]"
"	      004582d4    cmp dword ptr [eax+8],0"
"	      004582d8    je near ptr 0045833Ch"
"	      004582de    mov eax,[ebp-11A8h]"
"	      004582e4    mov eax,[eax+8]"
"	      004582e7    push eax"
"	      004582e8    call 0056A600h"
"	      004582ed    add esp,4"
"	      004582f0    mov ecx,[ebp-11A8h]"
"	      004582f6    mov [ecx],eax"
"	      004582f8    mov eax,[ebp-11A8h]"
"	      004582fe    mov eax,[eax+4]"
"	      00458301    mov [ebp-11BCh],eax"
"	      00458307    mov eax,[ebp-11A8h]"
"	      0045830d    mov eax,[eax]"
"	      0045830f    mov [ebp-11C0h],eax"
"	      00458315    mov eax,[ebp-11BCh]"
"	      0045831b    push eax"
"	      0045831c    lea eax,[ebp-119Ch]"
"	      00458322    push eax"
"	      00458323    mov eax,[ebp-11C0h]"
"	      00458329    push eax"
"	      0045832a    call 0056A800h"
"	      0045832f    add esp,0Ch"
"	      00458332    jmp near ptr 00458337h"
"	      00458337    jmp near ptr 00458348h"
"	      0045833c    mov eax,[ebp-11A8h]"
"	      00458342    mov dword ptr [eax],0"
"	      00458348    mov eax,[ebp-11A8h]"
"	      0045834e    mov dword ptr [eax+0Ch],1"
"	      00458355    jmp near ptr 0045835Ah"
"	      0045835a    mov eax,[ebp-11A8h]"
"	      00458360    mov [ebp-11A4h],eax"
"	      00458366    jmp near ptr 00458375h"
"	      0045836b    mov dword ptr [ebp-11A4h],0"
"	      00458375    mov eax,sText.reference"
"	      00458378    dec dword ptr [eax+0Ch]"
"	      0045837b    mov eax,sText.reference"
"	      0045837e    cmp dword ptr [eax+0Ch],0"
"	      00458382    jne near ptr 004583D3h"
"	      00458388    mov eax,sText.reference"
"	      0045838b    mov [ebp-11B8h],eax"
"	      00458391    mov eax,[ebp-11B8h]"
"	      00458397    mov [ebp-11B4h],eax"
"	      0045839d    cmp dword ptr [ebp-11B4h],0"
"	      004583a4    je near ptr 004583D3h"
"	      004583aa    mov ecx,[ebp-11B4h]"
"	      004583b0    call 0041F4B0h"
"	      004583b5    jmp near ptr 004583BAh"
"	      004583ba    mov eax,[ebp-11B4h]"
"	      004583c0    push eax"
"	      004583c1    call 0056A740h"
"	      004583c6    add esp,4"
"	      004583c9    jmp near ptr 004583CEh"
"	      004583ce    jmp near ptr 004583D3h"
"	      004583d3    jmp near ptr 004583D8h"
"	      004583d8    mov eax,[ebp-11A4h]"
"	      004583de    mov sText.reference,eax"
"	      004583e1    jmp near ptr 00458425h"
"	      004583e6    cmp dword ptr [ebp-11C8h],0"
"	      004583ed    je near ptr 00458425h"
"	      004583f3    jmp near ptr 004583F8h"
"	      004583f8    mov eax,sText.reference"
"	      004583fb    mov eax,[eax]"
"	      004583fd    mov [ebp-11ACh],eax"
"	      00458403    mov eax,[ebp-11C8h]"
"	      00458409    push eax"
"	      0045840a    lea eax,[ebp-119Ch]"
"	      00458410    push eax"
"	      00458411    mov eax,[ebp-11ACh]"
"	      00458417    push eax"
"	      00458418    call 0056A800h"
"	      0045841d    add esp,0Ch"
"	      00458420    jmp near ptr 00458425h"
"	      00458425    mov eax,[ebp-11C8h]"
"	      0045842b    mov ecx,sText.reference"
"	      0045842e    mov [ecx+4],eax"
"	      00458431    jmp near ptr 00458436h"
"	      00458436    jmp near ptr 0045843Bh"
"	      0045843b    jmp near ptr 00458440h"
"	      00458440    push 597200h"
"	      00458445    call 0056ABE0h"
"	      0045844a    add esp,4"
"	      0045844d    mov [ebp-11E8h],eax"
"	      00458453    jmp near ptr 00458458h"
"	      00458458    mov eax,sText.reference"
"	      0045845b    mov ecx,0FFFFFFFFh"
"	      00458460    sub ecx,[ebp-11E8h]"
"	      00458466    cmp [eax+4],ecx"
"	      00458469    jb near ptr 004584A7h"
"	      0045846f    push 5971E4h"
"	      00458474    mov ecx,638C00h"
"	      00458479    call 00569960h"
"	      0045847e    mov [ebp-11DCh],eax"
"	      00458484    mov eax,[ebp-11DCh]"
"	      0045848a    push eax"
"	      0045848b    call 004011B0h"
"	      00458490    add esp,4"
"	      00458493    jmp near ptr 00458498h"
"	      00458498    push 1"
"	      0045849a    call 00569430h"
"	      0045849f    add esp,4"
"	      004584a2    jmp near ptr 004584A7h"
"	      004584a7    jmp near ptr 004584ACh"
"	      004584ac    mov eax,sText.reference"
"	      004584af    cmp dword ptr [eax+0Ch],1"
"	      004584b3    ja near ptr 004584DBh"
"	      004584b9    jmp near ptr 004584BEh"
"	      004584be    jmp near ptr 004584C3h"
"	      004584c3    mov eax,sText.reference"
"	      004584c6    mov eax,[eax+8]"
"	      004584c9    mov ecx,sText.reference"
"	      004584cc    sub eax,[ecx+4]"
"	      004584cf    cmp eax,[ebp-11E8h]"
"	      004584d5    jae near ptr 004585C8h"
"	      004584db    push 10h"
"	      004584dd    call 0056A600h"
"	      004584e2    add esp,4"
"	      004584e5    mov [ebp-11D0h],eax"
"	      004584eb    cmp dword ptr [ebp-11D0h],0"
"	      004584f2    je near ptr 00458569h"
"	      004584f8    jmp near ptr 004584FDh"
"	      004584fd    jmp near ptr 00458502h"
"	      00458502    jmp near ptr 00458507h"
"	      00458507    mov eax,sText.reference"
"	      0045850a    cmp dword ptr [eax+4],0"
"	      0045850e    je near ptr 00458529h"
"	      00458514    mov eax,sText.reference"
"	      00458517    mov eax,[eax]"
"	      00458519    mov [ebp-11D8h],eax"
"	      0045851f    jmp near ptr 00458538h"
"	      00458524    jmp near ptr 00458538h"
"	      00458529    mov dword ptr [ebp-11D8h],0"
"	      00458533    jmp near ptr 00458538h"
"	      00458538    mov eax,sText.reference"
"	      0045853b    mov eax,[eax+4]"
"	      0045853e    add eax,[ebp-11E8h]"
"	      00458544    push eax"
"	      00458545    mov eax,sText.reference"
"	      00458548    mov eax,[eax+4]"
"	      0045854b    push eax"
"	      0045854c    mov eax,[ebp-11D8h]"
"	      00458552    push eax"
"	      00458553    mov ecx,[ebp-11D0h]"
"	      00458559    call 0041E160h"
"	      0045855e    mov [ebp-11CCh],eax"
"	      00458564    jmp near ptr 00458573h"
"	      00458569    mov dword ptr [ebp-11CCh],0"
"	      00458573    mov eax,sText.reference"
"	      00458576    dec dword ptr [eax+0Ch]"
"	      00458579    mov eax,sText.reference"
"	      0045857c    cmp dword ptr [eax+0Ch],0"
"	      00458580    jne near ptr 004585BAh"
"	      00458586    mov eax,sText.reference"
"	      00458589    mov [ebp-11E4h],eax"
"	      0045858f    mov eax,[ebp-11E4h]"
"	      00458595    mov [ebp-11E0h],eax"
"	      0045859b    cmp dword ptr [ebp-11E0h],0"
"	      004585a2    je near ptr 004585BAh"
"	      004585a8    push 1"
"	      004585aa    mov ecx,[ebp-11E0h]"
"	      004585b0    call 0041DD70h"
"	      004585b5    jmp near ptr 004585BAh"
"	      004585ba    jmp near ptr 004585BFh"
"	      004585bf    mov eax,[ebp-11CCh]"
"	      004585c5    mov sText.reference,eax"
"	      004585c8    cmp dword ptr [ebp-11E8h],0"
"	      004585cf    je near ptr 00458610h"
"	      004585d5    jmp near ptr 004585DAh"
"	      004585da    jmp near ptr 004585DFh"
"	      004585df    mov eax,sText.reference"
"	      004585e2    mov eax,[eax+4]"
"	      004585e5    mov ecx,sText.reference"
"	      004585e8    add eax,[ecx]"
"	      004585ea    mov [ebp-11D4h],eax"
"	      004585f0    mov eax,[ebp-11E8h]"
"	      004585f6    push eax"
"	      004585f7    push 597200h"
"	      004585fc    mov eax,[ebp-11D4h]"
"	      00458602    push eax"
"	      00458603    call 0056A800h"
"	      00458608    add esp,0Ch"
"	      0045860b    jmp near ptr 00458610h"
"	      00458610    mov eax,[ebp-11E8h]"
"	      00458616    mov ecx,sText.reference"
"	      00458619    add [ecx+4],eax"
"	      0045861c    jmp near ptr 00458621h"
"	      00458621    jmp near ptr 00458626h"
"	      00458626    jmp near ptr 00458901h"
"	      0045862b    jmp near ptr 00458630h"
"	      00458630    lea eax,[ebp-119Ch]"
"	      00458636    push eax"
"	      00458637    call 0056ABE0h"
"	      0045863c    add esp,4"
"	      0045863f    mov [ebp-1218h],eax"
"	      00458645    cmp dword ptr [ebp-1218h],0FFFFFFFFh"
"	      0045864c    jne near ptr 0045868Ah"
"	      00458652    push 5971E4h"
"	      00458657    mov ecx,638C00h"
"	      0045865c    call 00569960h"
"	      00458661    mov [ebp-11F8h],eax"
"	      00458667    mov eax,[ebp-11F8h]"
"	      0045866d    push eax"
"	      0045866e    call 004011B0h"
"	      00458673    add esp,4"
"	      00458676    jmp near ptr 0045867Bh"
"	      0045867b    push 1"
"	      0045867d    call 00569430h"
"	      00458682    add esp,4"
"	      00458685    jmp near ptr 0045868Ah"
"	      0045868a    jmp near ptr 0045868Fh"
"	      0045868f    mov eax,sText.reference"
"	      00458692    cmp dword ptr [eax+0Ch],1"
"	      00458696    ja near ptr 004586C0h"
"	      0045869c    cmp dword ptr [ebp-1218h],0"
"	      004586a3    je near ptr 004588A7h"
"	      004586a9    jmp near ptr 004586AEh"
"	      004586ae    mov eax,sText.reference"
"	      004586b1    mov ecx,[ebp-1218h]"
"	      004586b7    cmp [eax+8],ecx"
"	      004586ba    jae near ptr 004588A7h"
"	      004586c0    push 10h"
"	      004586c2    call 0056A600h"
"	      004586c7    add esp,4"
"	      004586ca    mov [ebp-11F0h],eax"
"	      004586d0    cmp dword ptr [ebp-11F0h],0"
"	      004586d7    je near ptr 004587E0h"
"	      004586dd    cmp dword ptr [ebp-1218h],0FFFFFFFFh"
"	      004586e4    jne near ptr 00458722h"
"	      004586ea    push 5971E4h"
"	      004586ef    mov ecx,638C00h"
"	      004586f4    call 00569960h"
"	      004586f9    mov [ebp-1214h],eax"
"	      004586ff    mov eax,[ebp-1214h]"
"	      00458705    push eax"
"	      00458706    call 004011B0h"
"	      0045870b    add esp,4"
"	      0045870e    jmp near ptr 00458713h"
"	      00458713    push 1"
"	      00458715    call 00569430h"
"	      0045871a    add esp,4"
"	      0045871d    jmp near ptr 00458722h"
"	      00458722    mov eax,[ebp-1218h]"
"	      00458728    mov ecx,[ebp-11F0h]"
"	      0045872e    mov [ecx+4],eax"
"	      00458731    mov eax,[ebp-11F0h]"
"	      00458737    mov eax,[eax+4]"
"	      0045873a    mov ecx,[ebp-11F0h]"
"	      00458740    mov [ecx+8],eax"
"	      00458743    mov eax,[ebp-11F0h]"
"	      00458749    cmp dword ptr [eax+8],0"
"	      0045874d    je near ptr 004587B1h"
"	      00458753    mov eax,[ebp-11F0h]"
"	      00458759    mov eax,[eax+8]"
"	      0045875c    push eax"
"	      0045875d    call 0056A600h"
"	      00458762    add esp,4"
"	      00458765    mov ecx,[ebp-11F0h]"
"	      0045876b    mov [ecx],eax"
"	      0045876d    mov eax,[ebp-11F0h]"
"	      00458773    mov eax,[eax+4]"
"	      00458776    mov [ebp-120Ch],eax"
"	      0045877c    mov eax,[ebp-11F0h]"
"	      00458782    mov eax,[eax]"
"	      00458784    mov [ebp-1210h],eax"
"	      0045878a    mov eax,[ebp-120Ch]"
"	      00458790    push eax"
"	      00458791    lea eax,[ebp-119Ch]"
"	      00458797    push eax"
"	      00458798    mov eax,[ebp-1210h]"
"	      0045879e    push eax"
"	      0045879f    call 0056A800h"
"	      004587a4    add esp,0Ch"
"	      004587a7    jmp near ptr 004587ACh"
"	      004587ac    jmp near ptr 004587BDh"
"	      004587b1    mov eax,[ebp-11F0h]"
"	      004587b7    mov dword ptr [eax],0"
"	      004587bd    mov eax,[ebp-11F0h]"
"	      004587c3    mov dword ptr [eax+0Ch],1"
"	      004587ca    jmp near ptr 004587CFh"
"	      004587cf    mov eax,[ebp-11F0h]"
"	      004587d5    mov [ebp-11ECh],eax"
"	      004587db    jmp near ptr 004587EAh"
"	      004587e0    mov dword ptr [ebp-11ECh],0"
"	      004587ea    mov eax,sText.reference"
"	      004587ed    dec dword ptr [eax+0Ch]"
"	      004587f0    mov eax,sText.reference"
"	      004587f3    cmp dword ptr [eax+0Ch],0"
"	      004587f7    jne near ptr 00458894h"
"	      004587fd    mov eax,sText.reference"
"	      00458800    mov [ebp-1200h],eax"
"	      00458806    mov eax,[ebp-1200h]"
"	      0045880c    mov [ebp-11FCh],eax"
"	      00458812    cmp dword ptr [ebp-11FCh],0"
"	      00458819    je near ptr 00458894h"
"	      0045881f    mov eax,[ebp-11FCh]"
"	      00458825    cmp dword ptr [eax+8],0"
"	      00458829    je near ptr 00458871h"
"	      0045882f    mov eax,[ebp-11FCh]"
"	      00458835    mov eax,[eax]"
"	      00458837    mov [ebp-1204h],eax"
"	      0045883d    mov eax,[ebp-1204h]"
"	      00458843    mov [ebp-1208h],eax"
"	      00458849    mov eax,[ebp-1208h]"
"	      0045884f    push eax"
"	      00458850    call 0056A740h"
"	      00458855    add esp,4"
"	      00458858    mov eax,[ebp-11FCh]"
"	      0045885e    mov dword ptr [eax+8],0"
"	      00458865    mov eax,[ebp-11FCh]"
"	      0045886b    mov dword ptr [eax],0"
"	      00458871    jmp near ptr 00458876h"
"	      00458876    jmp near ptr 0045887Bh"
"	      0045887b    mov eax,[ebp-11FCh]"
"	      00458881    push eax"
"	      00458882    call 0056A740h"
"	      00458887    add esp,4"
"	      0045888a    jmp near ptr 0045888Fh"
"	      0045888f    jmp near ptr 00458894h"
"	      00458894    jmp near ptr 00458899h"
"	      00458899    mov eax,[ebp-11ECh]"
"	      0045889f    mov sText.reference,eax"
"	      004588a2    jmp near ptr 004588E6h"
"	      004588a7    cmp dword ptr [ebp-1218h],0"
"	      004588ae    je near ptr 004588E6h"
"	      004588b4    jmp near ptr 004588B9h"
"	      004588b9    mov eax,sText.reference"
"	      004588bc    mov eax,[eax]"
"	      004588be    mov [ebp-11F4h],eax"
"	      004588c4    mov eax,[ebp-1218h]"
"	      004588ca    push eax"
"	      004588cb    lea eax,[ebp-119Ch]"
"	      004588d1    push eax"
"	      004588d2    mov eax,[ebp-11F4h]"
"	      004588d8    push eax"
"	      004588d9    call 0056A800h"
"	      004588de    add esp,0Ch"
"	      004588e1    jmp near ptr 004588E6h"
"	      004588e6    mov eax,[ebp-1218h]"
"	      004588ec    mov ecx,sText.reference"
"	      004588ef    mov [ecx+4],eax"
"	      004588f2    jmp near ptr 004588F7h"
"	      004588f7    jmp near ptr 004588FCh"
"	      004588fc    jmp near ptr 00458901h"
);
// LINE 1446:
	asm( 
"	      00458901    lea eax,sText.c_str_ptr"
"	      00458904    push eax"
"	      00458905    mov eax,tempButtonWindow"
"	      00458908    mov eax,[eax]"
"	      0045890a    mov ecx,tempButtonWindow"
"	      0045890d    call dword ptr [eax+48h]"
);
// LINE 1447:
	asm( 
"	      00458910    push 603AB8h"
"	      00458915    push 603AB0h"
"	      0045891a    mov eax,tempButtonWindow"
"	      0045891d    mov eax,[eax]"
"	      0045891f    mov ecx,tempButtonWindow"
"	      00458922    call dword ptr [eax+0D8h]"
);
// LINE 1448:
	asm( 
"	      00458928    mov eax,tempButtonWindow"
"	      0045892b    mov eax,[eax]"
"	      0045892d    mov ecx,tempButtonWindow"
"	      00458930    call dword ptr [eax+4]"
);
// LINE 1450:
	asm( 
"	      00458933    push 94h"
"	      00458938    call 0056A600h"
"	      0045893d    add esp,4"
"	      00458940    mov [ebp-16Ch],eax"
"	      00458946    cmp dword ptr [ebp-16Ch],0"
"	      0045894d    je near ptr 004589B3h"
"	      00458953    jmp near ptr 00458958h"
"	      00458958    mov dword ptr [ebp-17Ch],16Ch"
"	      00458962    mov dword ptr [ebp-178h],178h"
"	      0045896c    mov dword ptr [ebp-174h],16Dh"
"	      00458976    mov dword ptr [ebp-170h],179h"
"	      00458980    jmp near ptr 00458985h"
"	      00458985    push 1"
"	      00458987    mov eax,this"
"	      0045898d    push eax"
"	      0045898e    push 0"
"	      00458990    mov eax,this"
"	      00458996    push eax"
"	      00458997    push 2"
"	      00458999    lea eax,[ebp-17Ch]"
"	      0045899f    push eax"
"	      004589a0    mov ecx,[ebp-16Ch]"
"	      004589a6    call 00471847h"
"	      004589ab    mov tempButtonWindow,eax"
"	      004589ae    jmp near ptr 004589BAh"
"	      004589b3    mov tempButtonWindow,0"
);
// LINE 1451:
	asm( 
"	      004589ba    push 0"
"	      004589bc    push 14Ch"
"	      004589c1    call 0042B15Fh"
"	      004589c6    add esp,8"
"	      004589c9    mov nFullStringID,eax"
);
// LINE 1452:
	asm( 
"	      004589cc    push 0FFFh"
"	      004589d1    lea eax,[ebp-2218h]"
"	      004589d7    push eax"
"	      004589d8    mov eax,nFullStringID"
"	      004589db    push eax"
"	      004589dc    mov eax,ds:[5C28C8h]"
"	      004589e1    push eax"
"	      004589e2    call dword ptr ds:[6C38B4h]"
"	      004589e8    mov [ebp-221Ch],eax"
"	      004589ee    cmp dword ptr [ebp-221Ch],0"
"	      004589f5    jne near ptr 00458DD3h"
"	      004589fb    push 0FFFh"
"	      00458a00    lea eax,[ebp-2218h]"
"	      00458a06    push eax"
"	      00458a07    mov ecx,3E8h"
"	      00458a0c    mov eax,nFullStringID"
"	      00458a0f    sub edx,edx"
"	      00458a11    div ecx"
"	      00458a13    push edx"
"	      00458a14    mov eax,ds:[5C28C8h]"
"	      00458a19    push eax"
"	      00458a1a    call dword ptr ds:[6C38B4h]"
"	      00458a20    mov [ebp-221Ch],eax"
"	      00458a26    jmp near ptr 00458A2Bh"
"	      00458a2b    lea eax,[ebp-2218h]"
"	      00458a31    push eax"
"	      00458a32    call 0056ABE0h"
"	      00458a37    add esp,4"
"	      00458a3a    mov [ebp-2238h],eax"
"	      00458a40    cmp dword ptr [ebp-2238h],0FFFFFFFFh"
"	      00458a47    jne near ptr 00458A85h"
"	      00458a4d    push 5971E4h"
"	      00458a52    mov ecx,638C00h"
"	      00458a57    call 00569960h"
"	      00458a5c    mov [ebp-222Ch],eax"
"	      00458a62    mov eax,[ebp-222Ch]"
"	      00458a68    push eax"
"	      00458a69    call 004011B0h"
"	      00458a6e    add esp,4"
"	      00458a71    jmp near ptr 00458A76h"
"	      00458a76    push 1"
"	      00458a78    call 00569430h"
"	      00458a7d    add esp,4"
"	      00458a80    jmp near ptr 00458A85h"
"	      00458a85    jmp near ptr 00458A8Ah"
"	      00458a8a    mov eax,sText.reference"
"	      00458a8d    cmp dword ptr [eax+0Ch],1"
"	      00458a91    ja near ptr 00458ABBh"
"	      00458a97    cmp dword ptr [ebp-2238h],0"
"	      00458a9e    je near ptr 00458B77h"
"	      00458aa4    jmp near ptr 00458AA9h"
"	      00458aa9    mov eax,sText.reference"
"	      00458aac    mov ecx,[ebp-2238h]"
"	      00458ab2    cmp [eax+8],ecx"
"	      00458ab5    jae near ptr 00458B77h"
"	      00458abb    push 10h"
"	      00458abd    call 0056A600h"
"	      00458ac2    add esp,4"
"	      00458ac5    mov [ebp-2224h],eax"
"	      00458acb    cmp dword ptr [ebp-2224h],0"
"	      00458ad2    je near ptr 00458AFCh"
"	      00458ad8    mov eax,[ebp-2238h]"
"	      00458ade    push eax"
"	      00458adf    lea eax,[ebp-2218h]"
"	      00458ae5    push eax"
"	      00458ae6    mov ecx,[ebp-2224h]"
"	      00458aec    call 0041E090h"
"	      00458af1    mov [ebp-2220h],eax"
"	      00458af7    jmp near ptr 00458B06h"
"	      00458afc    mov dword ptr [ebp-2220h],0"
"	      00458b06    mov eax,sText.reference"
"	      00458b09    dec dword ptr [eax+0Ch]"
"	      00458b0c    mov eax,sText.reference"
"	      00458b0f    cmp dword ptr [eax+0Ch],0"
"	      00458b13    jne near ptr 00458B64h"
"	      00458b19    mov eax,sText.reference"
"	      00458b1c    mov [ebp-2234h],eax"
"	      00458b22    mov eax,[ebp-2234h]"
"	      00458b28    mov [ebp-2230h],eax"
"	      00458b2e    cmp dword ptr [ebp-2230h],0"
"	      00458b35    je near ptr 00458B64h"
"	      00458b3b    mov ecx,[ebp-2230h]"
"	      00458b41    call 0041F4B0h"
"	      00458b46    jmp near ptr 00458B4Bh"
"	      00458b4b    mov eax,[ebp-2230h]"
"	      00458b51    push eax"
"	      00458b52    call 0056A740h"
"	      00458b57    add esp,4"
"	      00458b5a    jmp near ptr 00458B5Fh"
"	      00458b5f    jmp near ptr 00458B64h"
"	      00458b64    jmp near ptr 00458B69h"
"	      00458b69    mov eax,[ebp-2220h]"
"	      00458b6f    mov sText.reference,eax"
"	      00458b72    jmp near ptr 00458BB6h"
"	      00458b77    cmp dword ptr [ebp-2238h],0"
"	      00458b7e    je near ptr 00458BB6h"
"	      00458b84    jmp near ptr 00458B89h"
"	      00458b89    mov eax,sText.reference"
"	      00458b8c    mov eax,[eax]"
"	      00458b8e    mov [ebp-2228h],eax"
"	      00458b94    mov eax,[ebp-2238h]"
"	      00458b9a    push eax"
"	      00458b9b    lea eax,[ebp-2218h]"
"	      00458ba1    push eax"
"	      00458ba2    mov eax,[ebp-2228h]"
"	      00458ba8    push eax"
"	      00458ba9    call 0056A800h"
"	      00458bae    add esp,0Ch"
"	      00458bb1    jmp near ptr 00458BB6h"
"	      00458bb6    mov eax,[ebp-2238h]"
"	      00458bbc    mov ecx,sText.reference"
"	      00458bbf    mov [ecx+4],eax"
"	      00458bc2    jmp near ptr 00458BC7h"
"	      00458bc7    jmp near ptr 00458BCCh"
"	      00458bcc    jmp near ptr 00458BD1h"
"	      00458bd1    push 597200h"
"	      00458bd6    call 0056ABE0h"
"	      00458bdb    add esp,4"
"	      00458bde    mov [ebp-2258h],eax"
"	      00458be4    jmp near ptr 00458BE9h"
"	      00458be9    mov eax,sText.reference"
"	      00458bec    mov ecx,0FFFFFFFFh"
"	      00458bf1    sub ecx,[ebp-2258h]"
"	      00458bf7    cmp [eax+4],ecx"
"	      00458bfa    jb near ptr 00458C38h"
"	      00458c00    push 5971E4h"
"	      00458c05    mov ecx,638C00h"
"	      00458c0a    call 00569960h"
"	      00458c0f    mov [ebp-224Ch],eax"
"	      00458c15    mov eax,[ebp-224Ch]"
"	      00458c1b    push eax"
"	      00458c1c    call 004011B0h"
"	      00458c21    add esp,4"
"	      00458c24    jmp near ptr 00458C29h"
"	      00458c29    push 1"
"	      00458c2b    call 00569430h"
"	      00458c30    add esp,4"
"	      00458c33    jmp near ptr 00458C38h"
"	      00458c38    jmp near ptr 00458C3Dh"
"	      00458c3d    mov eax,sText.reference"
"	      00458c40    cmp dword ptr [eax+0Ch],1"
"	      00458c44    ja near ptr 00458C6Ch"
"	      00458c4a    jmp near ptr 00458C4Fh"
"	      00458c4f    jmp near ptr 00458C54h"
"	      00458c54    mov eax,sText.reference"
"	      00458c57    mov eax,[eax+8]"
"	      00458c5a    mov ecx,sText.reference"
"	      00458c5d    sub eax,[ecx+4]"
"	      00458c60    cmp eax,[ebp-2258h]"
"	      00458c66    jae near ptr 00458D70h"
"	      00458c6c    push 10h"
"	      00458c6e    call 0056A600h"
"	      00458c73    add esp,4"
"	      00458c76    mov [ebp-2240h],eax"
"	      00458c7c    cmp dword ptr [ebp-2240h],0"
"	      00458c83    je near ptr 00458CFAh"
"	      00458c89    jmp near ptr 00458C8Eh"
"	      00458c8e    jmp near ptr 00458C93h"
"	      00458c93    jmp near ptr 00458C98h"
"	      00458c98    mov eax,sText.reference"
"	      00458c9b    cmp dword ptr [eax+4],0"
"	      00458c9f    je near ptr 00458CBAh"
"	      00458ca5    mov eax,sText.reference"
"	      00458ca8    mov eax,[eax]"
"	      00458caa    mov [ebp-2248h],eax"
"	      00458cb0    jmp near ptr 00458CC9h"
"	      00458cb5    jmp near ptr 00458CC9h"
"	      00458cba    mov dword ptr [ebp-2248h],0"
"	      00458cc4    jmp near ptr 00458CC9h"
"	      00458cc9    mov eax,sText.reference"
"	      00458ccc    mov eax,[eax+4]"
"	      00458ccf    add eax,[ebp-2258h]"
"	      00458cd5    push eax"
"	      00458cd6    mov eax,sText.reference"
"	      00458cd9    mov eax,[eax+4]"
"	      00458cdc    push eax"
"	      00458cdd    mov eax,[ebp-2248h]"
"	      00458ce3    push eax"
"	      00458ce4    mov ecx,[ebp-2240h]"
"	      00458cea    call 0041E160h"
"	      00458cef    mov [ebp-223Ch],eax"
"	      00458cf5    jmp near ptr 00458D04h"
"	      00458cfa    mov dword ptr [ebp-223Ch],0"
"	      00458d04    mov eax,sText.reference"
"	      00458d07    dec dword ptr [eax+0Ch]"
"	      00458d0a    mov eax,sText.reference"
"	      00458d0d    cmp dword ptr [eax+0Ch],0"
"	      00458d11    jne near ptr 00458D62h"
"	      00458d17    mov eax,sText.reference"
"	      00458d1a    mov [ebp-2254h],eax"
"	      00458d20    mov eax,[ebp-2254h]"
"	      00458d26    mov [ebp-2250h],eax"
"	      00458d2c    cmp dword ptr [ebp-2250h],0"
"	      00458d33    je near ptr 00458D62h"
"	      00458d39    mov ecx,[ebp-2250h]"
"	      00458d3f    call 0041F4B0h"
"	      00458d44    jmp near ptr 00458D49h"
"	      00458d49    mov eax,[ebp-2250h]"
"	      00458d4f    push eax"
"	      00458d50    call 0056A740h"
"	      00458d55    add esp,4"
"	      00458d58    jmp near ptr 00458D5Dh"
"	      00458d5d    jmp near ptr 00458D62h"
"	      00458d62    jmp near ptr 00458D67h"
"	      00458d67    mov eax,[ebp-223Ch]"
"	      00458d6d    mov sText.reference,eax"
"	      00458d70    cmp dword ptr [ebp-2258h],0"
"	      00458d77    je near ptr 00458DB8h"
"	      00458d7d    jmp near ptr 00458D82h"
"	      00458d82    jmp near ptr 00458D87h"
"	      00458d87    mov eax,sText.reference"
"	      00458d8a    mov eax,[eax+4]"
"	      00458d8d    mov ecx,sText.reference"
"	      00458d90    add eax,[ecx]"
"	      00458d92    mov [ebp-2244h],eax"
"	      00458d98    mov eax,[ebp-2258h]"
"	      00458d9e    push eax"
"	      00458d9f    push 597200h"
"	      00458da4    mov eax,[ebp-2244h]"
"	      00458daa    push eax"
"	      00458dab    call 0056A800h"
"	      00458db0    add esp,0Ch"
"	      00458db3    jmp near ptr 00458DB8h"
"	      00458db8    mov eax,[ebp-2258h]"
"	      00458dbe    mov ecx,sText.reference"
"	      00458dc1    add [ecx+4],eax"
"	      00458dc4    jmp near ptr 00458DC9h"
"	      00458dc9    jmp near ptr 00458DCEh"
"	      00458dce    jmp near ptr 004590A9h"
"	      00458dd3    jmp near ptr 00458DD8h"
"	      00458dd8    lea eax,[ebp-2218h]"
"	      00458dde    push eax"
"	      00458ddf    call 0056ABE0h"
"	      00458de4    add esp,4"
"	      00458de7    mov [ebp-2288h],eax"
"	      00458ded    cmp dword ptr [ebp-2288h],0FFFFFFFFh"
"	      00458df4    jne near ptr 00458E32h"
"	      00458dfa    push 5971E4h"
"	      00458dff    mov ecx,638C00h"
"	      00458e04    call 00569960h"
"	      00458e09    mov [ebp-2268h],eax"
"	      00458e0f    mov eax,[ebp-2268h]"
"	      00458e15    push eax"
"	      00458e16    call 004011B0h"
"	      00458e1b    add esp,4"
"	      00458e1e    jmp near ptr 00458E23h"
"	      00458e23    push 1"
"	      00458e25    call 00569430h"
"	      00458e2a    add esp,4"
"	      00458e2d    jmp near ptr 00458E32h"
"	      00458e32    jmp near ptr 00458E37h"
"	      00458e37    mov eax,sText.reference"
"	      00458e3a    cmp dword ptr [eax+0Ch],1"
"	      00458e3e    ja near ptr 00458E68h"
"	      00458e44    cmp dword ptr [ebp-2288h],0"
"	      00458e4b    je near ptr 0045904Fh"
"	      00458e51    jmp near ptr 00458E56h"
"	      00458e56    mov eax,sText.reference"
"	      00458e59    mov ecx,[ebp-2288h]"
"	      00458e5f    cmp [eax+8],ecx"
"	      00458e62    jae near ptr 0045904Fh"
"	      00458e68    push 10h"
"	      00458e6a    call 0056A600h"
"	      00458e6f    add esp,4"
"	      00458e72    mov [ebp-2260h],eax"
"	      00458e78    cmp dword ptr [ebp-2260h],0"
"	      00458e7f    je near ptr 00458F88h"
"	      00458e85    cmp dword ptr [ebp-2288h],0FFFFFFFFh"
"	      00458e8c    jne near ptr 00458ECAh"
"	      00458e92    push 5971E4h"
"	      00458e97    mov ecx,638C00h"
"	      00458e9c    call 00569960h"
"	      00458ea1    mov [ebp-2284h],eax"
"	      00458ea7    mov eax,[ebp-2284h]"
"	      00458ead    push eax"
"	      00458eae    call 004011B0h"
"	      00458eb3    add esp,4"
"	      00458eb6    jmp near ptr 00458EBBh"
"	      00458ebb    push 1"
"	      00458ebd    call 00569430h"
"	      00458ec2    add esp,4"
"	      00458ec5    jmp near ptr 00458ECAh"
"	      00458eca    mov eax,[ebp-2288h]"
"	      00458ed0    mov ecx,[ebp-2260h]"
"	      00458ed6    mov [ecx+4],eax"
"	      00458ed9    mov eax,[ebp-2260h]"
"	      00458edf    mov eax,[eax+4]"
"	      00458ee2    mov ecx,[ebp-2260h]"
"	      00458ee8    mov [ecx+8],eax"
"	      00458eeb    mov eax,[ebp-2260h]"
"	      00458ef1    cmp dword ptr [eax+8],0"
"	      00458ef5    je near ptr 00458F59h"
"	      00458efb    mov eax,[ebp-2260h]"
"	      00458f01    mov eax,[eax+8]"
"	      00458f04    push eax"
"	      00458f05    call 0056A600h"
"	      00458f0a    add esp,4"
"	      00458f0d    mov ecx,[ebp-2260h]"
"	      00458f13    mov [ecx],eax"
"	      00458f15    mov eax,[ebp-2260h]"
"	      00458f1b    mov eax,[eax+4]"
"	      00458f1e    mov [ebp-227Ch],eax"
"	      00458f24    mov eax,[ebp-2260h]"
"	      00458f2a    mov eax,[eax]"
"	      00458f2c    mov [ebp-2280h],eax"
"	      00458f32    mov eax,[ebp-227Ch]"
"	      00458f38    push eax"
"	      00458f39    lea eax,[ebp-2218h]"
"	      00458f3f    push eax"
"	      00458f40    mov eax,[ebp-2280h]"
"	      00458f46    push eax"
"	      00458f47    call 0056A800h"
"	      00458f4c    add esp,0Ch"
"	      00458f4f    jmp near ptr 00458F54h"
"	      00458f54    jmp near ptr 00458F65h"
"	      00458f59    mov eax,[ebp-2260h]"
"	      00458f5f    mov dword ptr [eax],0"
"	      00458f65    mov eax,[ebp-2260h]"
"	      00458f6b    mov dword ptr [eax+0Ch],1"
"	      00458f72    jmp near ptr 00458F77h"
"	      00458f77    mov eax,[ebp-2260h]"
"	      00458f7d    mov [ebp-225Ch],eax"
"	      00458f83    jmp near ptr 00458F92h"
"	      00458f88    mov dword ptr [ebp-225Ch],0"
"	      00458f92    mov eax,sText.reference"
"	      00458f95    dec dword ptr [eax+0Ch]"
"	      00458f98    mov eax,sText.reference"
"	      00458f9b    cmp dword ptr [eax+0Ch],0"
"	      00458f9f    jne near ptr 0045903Ch"
"	      00458fa5    mov eax,sText.reference"
"	      00458fa8    mov [ebp-2270h],eax"
"	      00458fae    mov eax,[ebp-2270h]"
"	      00458fb4    mov [ebp-226Ch],eax"
"	      00458fba    cmp dword ptr [ebp-226Ch],0"
"	      00458fc1    je near ptr 0045903Ch"
"	      00458fc7    mov eax,[ebp-226Ch]"
"	      00458fcd    cmp dword ptr [eax+8],0"
"	      00458fd1    je near ptr 00459019h"
"	      00458fd7    mov eax,[ebp-226Ch]"
"	      00458fdd    mov eax,[eax]"
"	      00458fdf    mov [ebp-2274h],eax"
"	      00458fe5    mov eax,[ebp-2274h]"
"	      00458feb    mov [ebp-2278h],eax"
"	      00458ff1    mov eax,[ebp-2278h]"
"	      00458ff7    push eax"
"	      00458ff8    call 0056A740h"
"	      00458ffd    add esp,4"
"	      00459000    mov eax,[ebp-226Ch]"
"	      00459006    mov dword ptr [eax+8],0"
"	      0045900d    mov eax,[ebp-226Ch]"
"	      00459013    mov dword ptr [eax],0"
"	      00459019    jmp near ptr 0045901Eh"
"	      0045901e    jmp near ptr 00459023h"
"	      00459023    mov eax,[ebp-226Ch]"
"	      00459029    push eax"
"	      0045902a    call 0056A740h"
"	      0045902f    add esp,4"
"	      00459032    jmp near ptr 00459037h"
"	      00459037    jmp near ptr 0045903Ch"
"	      0045903c    jmp near ptr 00459041h"
"	      00459041    mov eax,[ebp-225Ch]"
"	      00459047    mov sText.reference,eax"
"	      0045904a    jmp near ptr 0045908Eh"
"	      0045904f    cmp dword ptr [ebp-2288h],0"
"	      00459056    je near ptr 0045908Eh"
"	      0045905c    jmp near ptr 00459061h"
"	      00459061    mov eax,sText.reference"
"	      00459064    mov eax,[eax]"
"	      00459066    mov [ebp-2264h],eax"
"	      0045906c    mov eax,[ebp-2288h]"
"	      00459072    push eax"
"	      00459073    lea eax,[ebp-2218h]"
"	      00459079    push eax"
"	      0045907a    mov eax,[ebp-2264h]"
"	      00459080    push eax"
"	      00459081    call 0056A800h"
"	      00459086    add esp,0Ch"
"	      00459089    jmp near ptr 0045908Eh"
"	      0045908e    mov eax,[ebp-2288h]"
"	      00459094    mov ecx,sText.reference"
"	      00459097    mov [ecx+4],eax"
"	      0045909a    jmp near ptr 0045909Fh"
"	      0045909f    jmp near ptr 004590A4h"
"	      004590a4    jmp near ptr 004590A9h"
);
// LINE 1453:
	asm( 
"	      004590a9    lea eax,sText.c_str_ptr"
"	      004590ac    push eax"
"	      004590ad    mov eax,tempButtonWindow"
"	      004590b0    mov eax,[eax]"
"	      004590b2    mov ecx,tempButtonWindow"
"	      004590b5    call dword ptr [eax+48h]"
);
// LINE 1454:
	asm( 
"	      004590b8    push 603AB8h"
"	      004590bd    push 603AB0h"
"	      004590c2    mov eax,tempButtonWindow"
"	      004590c5    mov eax,[eax]"
"	      004590c7    mov ecx,tempButtonWindow"
"	      004590ca    call dword ptr [eax+0D8h]"
);
// LINE 1455:
	asm( 
"	      004590d0    mov eax,tempButtonWindow"
"	      004590d3    mov eax,[eax]"
"	      004590d5    mov ecx,tempButtonWindow"
"	      004590d8    call dword ptr [eax+4]"
);
// LINE 1457:
	asm( 
"	      004590db    mov eax,this"
"	      004590e1    push eax"
"	      004590e2    call 004A7075h"
"	      004590e7    add esp,4"
);
// LINE 1458:
	asm( 
"	      004590ea    mov eax,this"
"	      004590f0    push eax"
"	      004590f1    call 004A7470h"
"	      004590f6    add esp,4"
);
// LINE 1460:
	asm( 
"	      004590f9    mov dword ptr [ebp-180h],1"
"	      00459103    mov eax,sText.reference"
"	      00459106    dec dword ptr [eax+0Ch]"
"	      00459109    mov eax,sText.reference"
"	      0045910c    cmp dword ptr [eax+0Ch],0"
"	      00459110    jne near ptr 004591ADh"
"	      00459116    mov eax,sText.reference"
"	      00459119    mov [ebp-194h],eax"
"	      0045911f    mov eax,[ebp-194h]"
"	      00459125    mov [ebp-190h],eax"
"	      0045912b    cmp dword ptr [ebp-190h],0"
"	      00459132    je near ptr 004591ADh"
"	      00459138    mov eax,[ebp-190h]"
"	      0045913e    cmp dword ptr [eax+8],0"
"	      00459142    je near ptr 0045918Ah"
"	      00459148    mov eax,[ebp-190h]"
"	      0045914e    mov eax,[eax]"
"	      00459150    mov [ebp-198h],eax"
"	      00459156    mov eax,[ebp-198h]"
"	      0045915c    mov [ebp-19Ch],eax"
"	      00459162    mov eax,[ebp-19Ch]"
"	      00459168    push eax"
"	      00459169    call 0056A740h"
"	      0045916e    add esp,4"
"	      00459171    mov eax,[ebp-190h]"
"	      00459177    mov dword ptr [eax+8],0"
"	      0045917e    mov eax,[ebp-190h]"
"	      00459184    mov dword ptr [eax],0"
"	      0045918a    jmp near ptr 0045918Fh"
"	      0045918f    jmp near ptr 00459194h"
"	      00459194    mov eax,[ebp-190h]"
"	      0045919a    push eax"
"	      0045919b    call 0056A740h"
"	      004591a0    add esp,4"
"	      004591a3    jmp near ptr 004591A8h"
"	      004591a8    jmp near ptr 004591ADh"
"	      004591ad    jmp near ptr 004591B2h"
"	      004591b2    cmp sText.c_str_ptr,0"
"	      004591b6    je near ptr 004591E0h"
"	      004591bc    mov eax,sText.c_str_ptr"
"	      004591bf    mov [ebp-188h],eax"
"	      004591c5    mov eax,[ebp-188h]"
"	      004591cb    mov [ebp-18Ch],eax"
"	      004591d1    mov eax,[ebp-18Ch]"
"	      004591d7    push eax"
"	      004591d8    call 0056A740h"
"	      004591dd    add esp,4"
"	      004591e0    jmp near ptr 004591E5h"
"	      004591e5    mov eax,[ebp-180h]"
"	      004591eb    jmp near ptr 004591F0h"
);
// LINE 1461:
	asm( 
"	      004591f0    pop edi"
"	      004591f1    pop esi"
"	      004591f2    pop ebx"
"	      004591f3    leave"
"	      004591f4    ret"
);
}

// FUNCTION: COPTER_D 0x004591f5
void CitySettingsWindow::SetCurrentCitySettings(struct tagCitySettings* newCitySettings) {
// LINE 1469:
	asm( 
"	      004591f5    push ebp"
"	      004591f6    mov ebp,esp"
"	      004591f8    sub esp,4"
"	      004591fb    push ebx"
"	      004591fc    push esi"
"	      004591fd    push edi"
"	      004591fe    mov this,ecx"
);
// LINE 1470:
	asm( 
"	      00459201    mov eax,newCitySettings"
"	      00459204    mov eax,[eax]"
"	      00459206    push eax"
"	      00459207    mov eax,this"
"	      0045920a    mov ecx,[eax+74h]"
"	      0045920d    call 004B273Ah"
);
// LINE 1471:
	asm( 
"	      00459212    mov eax,newCitySettings"
"	      00459215    mov eax,[eax+4]"
"	      00459218    push eax"
"	      00459219    mov eax,this"
"	      0045921c    mov ecx,[eax+78h]"
"	      0045921f    call 004B273Ah"
);
// LINE 1472:
	asm( 
"	      00459224    mov eax,newCitySettings"
"	      00459227    mov eax,[eax+8]"
"	      0045922a    push eax"
"	      0045922b    mov eax,this"
"	      0045922e    mov ecx,[eax+7Ch]"
"	      00459231    call 004B273Ah"
);
// LINE 1473:
	asm( 
"	      00459236    mov eax,newCitySettings"
"	      00459239    mov eax,[eax+0Ch]"
"	      0045923c    push eax"
"	      0045923d    mov eax,this"
"	      00459240    mov ecx,[eax+80h]"
"	      00459246    call 004B273Ah"
);
// LINE 1474:
	asm( 
"	      0045924b    mov eax,newCitySettings"
"	      0045924e    mov eax,[eax+10h]"
"	      00459251    push eax"
"	      00459252    mov eax,this"
"	      00459255    mov ecx,[eax+84h]"
"	      0045925b    call 004B273Ah"
);
// LINE 1475:
	asm( 
"	      00459260    mov eax,newCitySettings"
"	      00459263    mov eax,[eax+14h]"
"	      00459266    push eax"
"	      00459267    mov eax,this"
"	      0045926a    mov ecx,[eax+88h]"
"	      00459270    call 004B273Ah"
);
// LINE 1476:
	asm( 
"	      00459275    mov eax,newCitySettings"
"	      00459278    mov eax,[eax+18h]"
"	      0045927b    push eax"
"	      0045927c    mov eax,this"
"	      0045927f    mov ecx,[eax+8Ch]"
"	      00459285    call 004B273Ah"
);
// LINE 1477:
	asm( 
"	      0045928a    mov eax,newCitySettings"
"	      0045928d    mov eax,[eax+1Ch]"
"	      00459290    push eax"
"	      00459291    mov eax,this"
"	      00459294    mov ecx,[eax+90h]"
"	      0045929a    call 004B273Ah"
);
// LINE 1478:
	asm( 
"	      0045929f    jmp near ptr 004592A4h"
"	      004592a4    pop edi"
"	      004592a5    pop esi"
"	      004592a6    pop ebx"
"	      004592a7    leave"
"	      004592a8    ret 4"
);
}

// FUNCTION: COPTER_D 0x004592ab
void CitySettingsWindow::GetCurrentCitySettings(struct tagCitySettings* currentCitySettings) {
// LINE 1485:
	asm( 
"	      004592ab    push ebp"
"	      004592ac    mov ebp,esp"
"	      004592ae    sub esp,4"
"	      004592b1    push ebx"
"	      004592b2    push esi"
"	      004592b3    push edi"
"	      004592b4    mov this,ecx"
);
// LINE 1486:
	asm( 
"	      004592b7    mov eax,this"
"	      004592ba    mov ecx,[eax+74h]"
"	      004592bd    call 004B271Bh"
"	      004592c2    mov ecx,currentCitySettings"
"	      004592c5    mov [ecx],eax"
);
// LINE 1487:
	asm( 
"	      004592c7    mov eax,this"
"	      004592ca    mov ecx,[eax+78h]"
"	      004592cd    call 004B271Bh"
"	      004592d2    mov ecx,currentCitySettings"
"	      004592d5    mov [ecx+4],eax"
);
// LINE 1488:
	asm( 
"	      004592d8    mov eax,this"
"	      004592db    mov ecx,[eax+7Ch]"
"	      004592de    call 004B271Bh"
"	      004592e3    mov ecx,currentCitySettings"
"	      004592e6    mov [ecx+8],eax"
);
// LINE 1489:
	asm( 
"	      004592e9    mov eax,this"
"	      004592ec    mov ecx,[eax+80h]"
"	      004592f2    call 004B271Bh"
"	      004592f7    mov ecx,currentCitySettings"
"	      004592fa    mov [ecx+0Ch],eax"
);
// LINE 1490:
	asm( 
"	      004592fd    mov eax,this"
"	      00459300    mov ecx,[eax+84h]"
"	      00459306    call 004B271Bh"
"	      0045930b    mov ecx,currentCitySettings"
"	      0045930e    mov [ecx+10h],eax"
);
// LINE 1491:
	asm( 
"	      00459311    mov eax,this"
"	      00459314    mov ecx,[eax+88h]"
"	      0045931a    call 004B271Bh"
"	      0045931f    mov ecx,currentCitySettings"
"	      00459322    mov [ecx+14h],eax"
);
// LINE 1492:
	asm( 
"	      00459325    mov eax,this"
"	      00459328    mov ecx,[eax+8Ch]"
"	      0045932e    call 004B271Bh"
"	      00459333    mov ecx,currentCitySettings"
"	      00459336    mov [ecx+18h],eax"
);
// LINE 1493:
	asm( 
"	      00459339    mov eax,this"
"	      0045933c    mov ecx,[eax+90h]"
"	      00459342    call 004B271Bh"
"	      00459347    mov ecx,currentCitySettings"
"	      0045934a    mov [ecx+1Ch],eax"
);
// LINE 1494:
	asm( 
"	      0045934d    jmp near ptr 00459352h"
"	      00459352    pop edi"
"	      00459353    pop esi"
"	      00459354    pop ebx"
"	      00459355    leave"
"	      00459356    ret 4"
);
}

// FUNCTION: COPTER_D 0x00459359
int32_t CitySettingsWindow::DoMessage(class GraphicWindow* gwSource, long lWindowID, long lMessage, void * __ptr32 pMessageData) {
// LINE 1503:
	asm( 
"	      00459359    push ebp"
"	      0045935a    mov ebp,esp"
"	      0045935c    sub esp,8"
"	      0045935f    push ebx"
"	      00459360    push esi"
"	      00459361    push edi"
"	      00459362    mov this,ecx"
);
// LINE 1504:
	asm( 
"	      00459365    mov eax,lWindowID"
"	      00459368    mov [ebp-8],eax"
"	      0045936b    jmp near ptr 004593E7h"
);
// LINE 1506:
	asm( 
"	      00459370    mov eax,this"
"	      00459373    cmp dword ptr [eax+38h],0"
"	      00459377    je near ptr 0045939Fh"
);
// LINE 1507:
	asm( 
"	      0045937d    push 0"
"	      0045937f    push 3E9h"
"	      00459384    mov eax,this"
"	      00459387    mov eax,[eax+4]"
"	      0045938a    push eax"
"	      0045938b    mov eax,this"
"	      0045938e    push eax"
"	      0045938f    mov eax,this"
"	      00459392    mov ecx,this"
"	      00459395    mov ecx,[ecx+38h]"
"	      00459398    mov edx,[ecx]"
"	      0045939a    mov ecx,[eax+38h]"
"	      0045939d    call dword ptr [edx]"
);
// LINE 1508:
	asm( 
"	      0045939f    mov eax,1"
"	      004593a4    jmp near ptr 00459407h"
);
// LINE 1511:
	asm( 
"	      004593a9    mov eax,this"
"	      004593ac    cmp dword ptr [eax+38h],0"
"	      004593b0    je near ptr 004593D8h"
);
// LINE 1512:
	asm( 
"	      004593b6    push 0"
"	      004593b8    push 3EAh"
"	      004593bd    mov eax,this"
"	      004593c0    mov eax,[eax+4]"
"	      004593c3    push eax"
"	      004593c4    mov eax,this"
"	      004593c7    push eax"
"	      004593c8    mov eax,this"
"	      004593cb    mov ecx,this"
"	      004593ce    mov ecx,[ecx+38h]"
"	      004593d1    mov edx,[ecx]"
"	      004593d3    mov ecx,[eax+38h]"
"	      004593d6    call dword ptr [edx]"
);
// LINE 1513:
	asm( 
"	      004593d8    mov eax,1"
"	      004593dd    jmp near ptr 00459407h"
);
// LINE 1514:
	asm( 
"	      004593e2    jmp near ptr 00459400h"
"	      004593e7    cmp dword ptr [ebp-8],1"
"	      004593eb    je near ptr 00459370h"
"	      004593f1    cmp dword ptr [ebp-8],2"
"	      004593f5    je near ptr 004593A9h"
"	      004593fb    jmp near ptr 00459400h"
);
// LINE 1516:
	asm( 
"	      00459400    xor eax,eax"
"	      00459402    jmp near ptr 00459407h"
);
// LINE 1517:
	asm( 
"	      00459407    pop edi"
"	      00459408    pop esi"
"	      00459409    pop ebx"
"	      0045940a    leave"
"	      0045940b    ret 10h"
);
}

// FUNCTION: COPTER_D 0x0045940e
long CitySettingsWindow::DoKeyDown(long lKey, char chModifiers) {
// LINE 1522:
	asm( 
"	      0045940e    push ebp"
"	      0045940f    mov ebp,esp"
"	      00459411    sub esp,4"
"	      00459414    push ebx"
"	      00459415    push esi"
"	      00459416    push edi"
"	      00459417    mov this,ecx"
);
// LINE 1523:
	asm( 
"	      0045941a    cmp lKey,1Bh"
"	      0045941e    jne near ptr 00459453h"
);
// LINE 1524:
	asm( 
"	      00459424    mov eax,this"
"	      00459427    cmp dword ptr [eax+38h],0"
"	      0045942b    je near ptr 00459453h"
);
// LINE 1525:
	asm( 
"	      00459431    push 0"
"	      00459433    push 3EAh"
"	      00459438    mov eax,this"
"	      0045943b    mov eax,[eax+4]"
"	      0045943e    push eax"
"	      0045943f    mov eax,this"
"	      00459442    push eax"
"	      00459443    mov eax,this"
"	      00459446    mov ecx,this"
"	      00459449    mov ecx,[ecx+38h]"
"	      0045944c    mov edx,[ecx]"
"	      0045944e    mov ecx,[eax+38h]"
"	      00459451    call dword ptr [edx]"
);
// LINE 1527:
	asm( 
"	      00459453    mov eax,1"
"	      00459458    jmp near ptr 0045945Dh"
);
// LINE 1528:
	asm( 
"	      0045945d    pop edi"
"	      0045945e    pop esi"
"	      0045945f    pop ebx"
"	      00459460    leave"
"	      00459461    ret 8"
);
}

// FUNCTION: COPTER_D 0x00459464
void PopupMenuExtra::PopupMenuExtra(class MRect& rectNewWindow, int32_t nNewID, class GraphicWindow* windowNewParent, class GraphicWindowOwner* myNewOwner, int32_t bAddToParentList, char * szNewBackgroundImageFileName) {
// LINE 1550:
	asm( 
"	      00459464    push ebp"
"	      00459465    mov ebp,esp"
"	      00459467    sub esp,44h"
"	      0045946a    push ebx"
"	      0045946b    push esi"
"	      0045946c    push edi"
"	      0045946d    mov this,ecx"
"	      00459470    mov eax,bAddToParentList"
"	      00459473    push eax"
"	      00459474    mov eax,myNewOwner"
"	      00459477    push eax"
"	      00459478    mov eax,windowNewParent"
"	      0045947b    push eax"
"	      0045947c    mov eax,nNewID"
"	      0045947f    push eax"
"	      00459480    mov eax,rectNewWindow"
"	      00459483    push eax"
"	      00459484    mov ecx,this"
"	      00459487    call 004B7C25h"
"	      0045948c    mov eax,this"
"	      0045948f    mov dword ptr [eax+0CCh],0"
"	      00459499    push 10h"
"	      0045949b    call 0056A600h"
"	      004594a0    add esp,4"
"	      004594a3    mov [ebp-40h],eax"
"	      004594a6    cmp dword ptr [ebp-40h],0"
"	      004594aa    je near ptr 004594EFh"
"	      004594b0    mov eax,[ebp-40h]"
"	      004594b3    mov dword ptr [eax+4],0"
"	      004594ba    mov eax,[ebp-40h]"
"	      004594bd    mov eax,[eax+4]"
"	      004594c0    mov ecx,[ebp-40h]"
"	      004594c3    mov [ecx+8],eax"
"	      004594c6    mov eax,[ebp-40h]"
"	      004594c9    mov dword ptr [eax],0"
"	      004594cf    mov eax,[ebp-40h]"
"	      004594d2    mov dword ptr [eax+0Ch],1"
"	      004594d9    jmp near ptr 004594DEh"
"	      004594de    mov eax,[ebp-40h]"
"	      004594e1    mov ecx,this"
"	      004594e4    mov [ecx+0D4h],eax"
"	      004594ea    jmp near ptr 004594FCh"
"	      004594ef    mov eax,this"
"	      004594f2    mov dword ptr [eax+0D4h],0"
"	      004594fc    mov eax,this"
"	      004594ff    mov dword ptr [eax+0D0h],0"
"	      00459509    jmp near ptr 0045950Eh"
"	      0045950e    mov eax,this"
"	      00459511    mov dword ptr [eax],58FE98h"
);
// LINE 1551:
	asm( 
"	      00459517    push 603AB8h"
"	      0045951c    push 603AB0h"
"	      00459521    mov ecx,this"
"	      00459524    call 004B4A55h"
);
// LINE 1552:
	asm( 
"	      00459529    cmp szNewBackgroundImageFileName,0"
"	      0045952d    je near ptr 004596BDh"
);
// LINE 1553:
	asm( 
"	      00459533    jmp near ptr 00459538h"
"	      00459538    mov eax,szNewBackgroundImageFileName"
"	      0045953b    push eax"
"	      0045953c    call 0056ABE0h"
"	      00459541    add esp,4"
"	      00459544    mov [ebp-1Ch],eax"
"	      00459547    cmp dword ptr [ebp-1Ch],0FFFFFFFFh"
"	      0045954b    jne near ptr 00459583h"
"	      00459551    push 5971E4h"
"	      00459556    mov ecx,638C00h"
"	      0045955b    call 00569960h"
"	      00459560    mov [ebp-10h],eax"
"	      00459563    mov eax,[ebp-10h]"
"	      00459566    push eax"
"	      00459567    call 004011B0h"
"	      0045956c    add esp,4"
"	      0045956f    jmp near ptr 00459574h"
"	      00459574    push 1"
"	      00459576    call 00569430h"
"	      0045957b    add esp,4"
"	      0045957e    jmp near ptr 00459583h"
"	      00459583    jmp near ptr 00459588h"
"	      00459588    mov eax,this"
"	      0045958b    mov eax,[eax+0D4h]"
"	      00459591    cmp dword ptr [eax+0Ch],1"
"	      00459595    ja near ptr 004595BFh"
"	      0045959b    cmp dword ptr [ebp-1Ch],0"
"	      0045959f    je near ptr 00459669h"
"	      004595a5    jmp near ptr 004595AAh"
"	      004595aa    mov eax,this"
"	      004595ad    mov eax,[eax+0D4h]"
"	      004595b3    mov ecx,[ebp-1Ch]"
"	      004595b6    cmp [eax+8],ecx"
"	      004595b9    jae near ptr 00459669h"
"	      004595bf    push 10h"
"	      004595c1    call 0056A600h"
"	      004595c6    add esp,4"
"	      004595c9    mov [ebp-8],eax"
"	      004595cc    cmp dword ptr [ebp-8],0"
"	      004595d0    je near ptr 004595EEh"
"	      004595d6    mov eax,[ebp-1Ch]"
"	      004595d9    push eax"
"	      004595da    mov eax,szNewBackgroundImageFileName"
"	      004595dd    push eax"
"	      004595de    mov ecx,[ebp-8]"
"	      004595e1    call 0041E090h"
"	      004595e6    mov [ebp-4],eax"
"	      004595e9    jmp near ptr 004595F5h"
"	      004595ee    mov dword ptr [ebp-4],0"
"	      004595f5    mov eax,this"
"	      004595f8    mov eax,[eax+0D4h]"
"	      004595fe    dec dword ptr [eax+0Ch]"
"	      00459601    mov eax,this"
"	      00459604    mov eax,[eax+0D4h]"
"	      0045960a    cmp dword ptr [eax+0Ch],0"
"	      0045960e    jne near ptr 00459653h"
"	      00459614    mov eax,this"
"	      00459617    mov eax,[eax+0D4h]"
"	      0045961d    mov [ebp-18h],eax"
"	      00459620    mov eax,[ebp-18h]"
"	      00459623    mov [ebp-14h],eax"
"	      00459626    cmp dword ptr [ebp-14h],0"
"	      0045962a    je near ptr 00459653h"
"	      00459630    mov ecx,[ebp-14h]"
"	      00459633    call 0041F4B0h"
"	      00459638    jmp near ptr 0045963Dh"
"	      0045963d    mov eax,[ebp-14h]"
"	      00459640    push eax"
"	      00459641    call 0056A740h"
"	      00459646    add esp,4"
"	      00459649    jmp near ptr 0045964Eh"
"	      0045964e    jmp near ptr 00459653h"
"	      00459653    jmp near ptr 00459658h"
"	      00459658    mov eax,[ebp-4]"
"	      0045965b    mov ecx,this"
"	      0045965e    mov [ecx+0D4h],eax"
"	      00459664    jmp near ptr 0045969Fh"
"	      00459669    cmp dword ptr [ebp-1Ch],0"
"	      0045966d    je near ptr 0045969Fh"
"	      00459673    jmp near ptr 00459678h"
"	      00459678    mov eax,this"
"	      0045967b    mov eax,[eax+0D4h]"
"	      00459681    mov eax,[eax]"
"	      00459683    mov [ebp-0Ch],eax"
"	      00459686    mov eax,[ebp-1Ch]"
"	      00459689    push eax"
"	      0045968a    mov eax,szNewBackgroundImageFileName"
"	      0045968d    push eax"
"	      0045968e    mov eax,[ebp-0Ch]"
"	      00459691    push eax"
"	      00459692    call 0056A800h"
"	      00459697    add esp,0Ch"
"	      0045969a    jmp near ptr 0045969Fh"
"	      0045969f    mov eax,[ebp-1Ch]"
"	      004596a2    mov ecx,this"
"	      004596a5    mov ecx,[ecx+0D4h]"
"	      004596ab    mov [ecx+4],eax"
"	      004596ae    jmp near ptr 004596B3h"
"	      004596b3    jmp near ptr 004596B8h"
);
// LINE 1554:
	asm( 
"	      004596b8    jmp near ptr 0045984Ah"
);
// LINE 1555:
	asm( 
"	      004596bd    mov eax,ds:[599180h]"
"	      004596c2    mov [ebp-3Ch],eax"
"	      004596c5    jmp near ptr 004596CAh"
"	      004596ca    mov eax,[ebp-3Ch]"
"	      004596cd    push eax"
"	      004596ce    call 0056ABE0h"
"	      004596d3    add esp,4"
"	      004596d6    mov [ebp-38h],eax"
"	      004596d9    cmp dword ptr [ebp-38h],0FFFFFFFFh"
"	      004596dd    jne near ptr 00459715h"
"	      004596e3    push 5971E4h"
"	      004596e8    mov ecx,638C00h"
"	      004596ed    call 00569960h"
"	      004596f2    mov [ebp-2Ch],eax"
"	      004596f5    mov eax,[ebp-2Ch]"
"	      004596f8    push eax"
"	      004596f9    call 004011B0h"
"	      004596fe    add esp,4"
"	      00459701    jmp near ptr 00459706h"
"	      00459706    push 1"
"	      00459708    call 00569430h"
"	      0045970d    add esp,4"
"	      00459710    jmp near ptr 00459715h"
"	      00459715    jmp near ptr 0045971Ah"
"	      0045971a    mov eax,this"
"	      0045971d    mov eax,[eax+0D4h]"
"	      00459723    cmp dword ptr [eax+0Ch],1"
"	      00459727    ja near ptr 00459751h"
"	      0045972d    cmp dword ptr [ebp-38h],0"
"	      00459731    je near ptr 004597FBh"
"	      00459737    jmp near ptr 0045973Ch"
"	      0045973c    mov eax,this"
"	      0045973f    mov eax,[eax+0D4h]"
"	      00459745    mov ecx,[ebp-38h]"
"	      00459748    cmp [eax+8],ecx"
"	      0045974b    jae near ptr 004597FBh"
"	      00459751    push 10h"
"	      00459753    call 0056A600h"
"	      00459758    add esp,4"
"	      0045975b    mov [ebp-24h],eax"
"	      0045975e    cmp dword ptr [ebp-24h],0"
"	      00459762    je near ptr 00459780h"
"	      00459768    mov eax,[ebp-38h]"
"	      0045976b    push eax"
"	      0045976c    mov eax,[ebp-3Ch]"
"	      0045976f    push eax"
"	      00459770    mov ecx,[ebp-24h]"
"	      00459773    call 0041E090h"
"	      00459778    mov [ebp-20h],eax"
"	      0045977b    jmp near ptr 00459787h"
"	      00459780    mov dword ptr [ebp-20h],0"
"	      00459787    mov eax,this"
"	      0045978a    mov eax,[eax+0D4h]"
"	      00459790    dec dword ptr [eax+0Ch]"
"	      00459793    mov eax,this"
"	      00459796    mov eax,[eax+0D4h]"
"	      0045979c    cmp dword ptr [eax+0Ch],0"
"	      004597a0    jne near ptr 004597E5h"
"	      004597a6    mov eax,this"
"	      004597a9    mov eax,[eax+0D4h]"
"	      004597af    mov [ebp-34h],eax"
"	      004597b2    mov eax,[ebp-34h]"
"	      004597b5    mov [ebp-30h],eax"
"	      004597b8    cmp dword ptr [ebp-30h],0"
"	      004597bc    je near ptr 004597E5h"
"	      004597c2    mov ecx,[ebp-30h]"
"	      004597c5    call 0041F4B0h"
"	      004597ca    jmp near ptr 004597CFh"
"	      004597cf    mov eax,[ebp-30h]"
"	      004597d2    push eax"
"	      004597d3    call 0056A740h"
"	      004597d8    add esp,4"
"	      004597db    jmp near ptr 004597E0h"
"	      004597e0    jmp near ptr 004597E5h"
"	      004597e5    jmp near ptr 004597EAh"
"	      004597ea    mov eax,[ebp-20h]"
"	      004597ed    mov ecx,this"
"	      004597f0    mov [ecx+0D4h],eax"
"	      004597f6    jmp near ptr 00459831h"
"	      004597fb    cmp dword ptr [ebp-38h],0"
"	      004597ff    je near ptr 00459831h"
"	      00459805    jmp near ptr 0045980Ah"
"	      0045980a    mov eax,this"
"	      0045980d    mov eax,[eax+0D4h]"
"	      00459813    mov eax,[eax]"
"	      00459815    mov [ebp-28h],eax"
"	      00459818    mov eax,[ebp-38h]"
"	      0045981b    push eax"
"	      0045981c    mov eax,[ebp-3Ch]"
"	      0045981f    push eax"
"	      00459820    mov eax,[ebp-28h]"
"	      00459823    push eax"
"	      00459824    call 0056A800h"
"	      00459829    add esp,0Ch"
"	      0045982c    jmp near ptr 00459831h"
"	      00459831    mov eax,[ebp-38h]"
"	      00459834    mov ecx,this"
"	      00459837    mov ecx,[ecx+0D4h]"
"	      0045983d    mov [ecx+4],eax"
"	      00459840    jmp near ptr 00459845h"
"	      00459845    jmp near ptr 0045984Ah"
);
// LINE 1556:
	asm( 
"	      0045984a    jmp near ptr 0045984Fh"
"	      0045984f    mov eax,this"
"	      00459852    pop edi"
"	      00459853    pop esi"
"	      00459854    pop ebx"
"	      00459855    leave"
"	      00459856    ret 18h"
);
}

// FUNCTION: COPTER_D 0x00459859
void PopupMenuExtra::~PopupMenuExtra() {
// LINE 1562:
	asm( 
"	      00459859    push ebp"
"	      0045985a    mov ebp,esp"
"	      0045985c    sub esp,50h"
"	      0045985f    push ebx"
"	      00459860    push esi"
"	      00459861    push edi"
"	      00459862    mov this,ecx"
"	      00459865    mov eax,this"
"	      00459868    mov dword ptr [eax],58FE98h"
);
// LINE 1563:
	asm( 
"	      0045986e    mov ecx,this"
"	      00459871    call 0045A8BDh"
);
// LINE 1564:
	asm( 
"	      00459876    jmp near ptr 0045987Bh"
"	      0045987b    mov eax,this"
"	      0045987e    mov eax,[eax+0D4h]"
"	      00459884    dec dword ptr [eax+0Ch]"
"	      00459887    mov eax,this"
"	      0045988a    mov eax,[eax+0D4h]"
"	      00459890    cmp dword ptr [eax+0Ch],0"
"	      00459894    jne near ptr 00459910h"
"	      0045989a    mov eax,this"
"	      0045989d    mov eax,[eax+0D4h]"
"	      004598a3    mov [ebp-44h],eax"
"	      004598a6    mov eax,[ebp-44h]"
"	      004598a9    mov [ebp-40h],eax"
"	      004598ac    cmp dword ptr [ebp-40h],0"
"	      004598b0    je near ptr 00459910h"
"	      004598b6    mov eax,[ebp-40h]"
"	      004598b9    cmp dword ptr [eax+8],0"
"	      004598bd    je near ptr 004598F0h"
"	      004598c3    mov eax,[ebp-40h]"
"	      004598c6    mov eax,[eax]"
"	      004598c8    mov [ebp-48h],eax"
"	      004598cb    mov eax,[ebp-48h]"
"	      004598ce    mov [ebp-4Ch],eax"
"	      004598d1    mov eax,[ebp-4Ch]"
"	      004598d4    push eax"
"	      004598d5    call 0056A740h"
"	      004598da    add esp,4"
"	      004598dd    mov eax,[ebp-40h]"
"	      004598e0    mov dword ptr [eax+8],0"
"	      004598e7    mov eax,[ebp-40h]"
"	      004598ea    mov dword ptr [eax],0"
"	      004598f0    jmp near ptr 004598F5h"
"	      004598f5    jmp near ptr 004598FAh"
"	      004598fa    mov eax,[ebp-40h]"
"	      004598fd    push eax"
"	      004598fe    call 0056A740h"
"	      00459903    add esp,4"
"	      00459906    jmp near ptr 0045990Bh"
"	      0045990b    jmp near ptr 00459910h"
"	      00459910    jmp near ptr 00459915h"
"	      00459915    mov eax,this"
"	      00459918    cmp dword ptr [eax+0D0h],0"
"	      0045991f    je near ptr 00459943h"
"	      00459925    mov eax,this"
"	      00459928    mov eax,[eax+0D0h]"
"	      0045992e    mov [ebp-38h],eax"
"	      00459931    mov eax,[ebp-38h]"
"	      00459934    mov [ebp-3Ch],eax"
"	      00459937    mov eax,[ebp-3Ch]"
"	      0045993a    push eax"
"	      0045993b    call 0056A740h"
"	      00459940    add esp,4"
"	      00459943    jmp near ptr 00459948h"
"	      00459948    jmp near ptr 0045994Dh"
"	      0045994d    jmp near ptr 00459952h"
"	      00459952    mov ecx,this"
"	      00459955    add ecx,8Ch"
"	      0045995b    call 0049FC4Eh"
"	      00459960    mov eax,this"
"	      00459963    mov eax,[eax+74h]"
"	      00459966    mov [ebp-10h],eax"
"	      00459969    mov eax,[ebp-10h]"
"	      0045996c    mov [ebp-4],eax"
"	      0045996f    jmp near ptr 00459974h"
"	      00459974    jmp near ptr 00459979h"
"	      00459979    mov eax,this"
"	      0045997c    mov eax,[eax+74h]"
"	      0045997f    mov eax,[eax]"
"	      00459981    mov [ebp-14h],eax"
"	      00459984    mov eax,[ebp-14h]"
"	      00459987    mov [ebp-8],eax"
"	      0045998a    jmp near ptr 0045998Fh"
"	      0045998f    jmp near ptr 00459994h"
"	      00459994    mov eax,[ebp-4]"
"	      00459997    mov [ebp-28h],eax"
"	      0045999a    mov eax,[ebp-8]"
"	      0045999d    mov [ebp-2Ch],eax"
"	      004599a0    mov eax,[ebp-28h]"
"	      004599a3    cmp [ebp-2Ch],eax"
"	      004599a6    jne near ptr 004599B6h"
"	      004599ac    jmp near ptr 004599CAh"
"	      004599b1    jmp near ptr 004599B6h"
"	      004599b6    jmp near ptr 004599C5h"
"	      004599bb    cmp dword ptr [ebp-20h],0"
"	      004599bf    jne near ptr 004599CAh"
"	      004599c5    jmp near ptr 004599CFh"
"	      004599ca    jmp near ptr 00459A10h"
"	      004599cf    jmp near ptr 004599DEh"
"	      004599d4    cmp dword ptr [ebp-24h],0"
"	      004599d8    je near ptr 00459A10h"
"	      004599de    mov eax,[ebp-2Ch]"
"	      004599e1    mov [ebp-1Ch],eax"
"	      004599e4    mov eax,[ebp-2Ch]"
"	      004599e7    mov eax,[eax]"
"	      004599e9    mov [ebp-2Ch],eax"
"	      004599ec    jmp near ptr 004599F1h"
"	      004599f1    mov eax,[ebp-1Ch]"
"	      004599f4    mov [ebp-18h],eax"
"	      004599f7    jmp near ptr 004599FCh"
"	      004599fc    mov eax,[ebp-18h]"
"	      004599ff    push eax"
"	      00459a00    mov ecx,this"
"	      00459a03    add ecx,74h"
"	      00459a06    call 0043A310h"
"	      00459a0b    jmp near ptr 004599A0h"
"	      00459a10    jmp near ptr 00459A15h"
"	      00459a15    mov eax,this"
"	      00459a18    mov eax,[eax+74h]"
"	      00459a1b    mov [ebp-0Ch],eax"
"	      00459a1e    mov eax,ds:[59856Ch]"
"	      00459a23    mov ecx,[ebp-0Ch]"
"	      00459a26    mov [ecx],eax"
"	      00459a28    mov eax,[ebp-0Ch]"
"	      00459a2b    mov ds:[59856Ch],eax"
"	      00459a30    jmp near ptr 00459A35h"
"	      00459a35    dec dword ptr ds:[598560h]"
"	      00459a3b    jne near ptr 00459ABFh"
"	      00459a41    cmp dword ptr ds:[598570h],0"
"	      00459a48    je near ptr 00459A9Ch"
"	      00459a4e    mov eax,ds:[598570h]"
"	      00459a53    mov [ebp-30h],eax"
"	      00459a56    mov eax,ds:[598570h]"
"	      00459a5b    mov eax,[eax]"
"	      00459a5d    mov ds:[598570h],eax"
"	      00459a62    mov eax,[ebp-30h]"
"	      00459a65    mov eax,[eax+4]"
"	      00459a68    mov [ebp-34h],eax"
"	      00459a6b    mov eax,[ebp-34h]"
"	      00459a6e    push eax"
"	      00459a6f    call 0056A740h"
"	      00459a74    add esp,4"
"	      00459a77    jmp near ptr 00459A7Ch"
"	      00459a7c    jmp near ptr 00459A81h"
"	      00459a81    mov eax,[ebp-30h]"
"	      00459a84    push eax"
"	      00459a85    call 0056A740h"
"	      00459a8a    add esp,4"
"	      00459a8d    jmp near ptr 00459A92h"
"	      00459a92    jmp near ptr 00459A97h"
"	      00459a97    jmp near ptr 00459A41h"
"	      00459a9c    mov dword ptr ds:[59856Ch],0"
"	      00459aa6    mov dword ptr ds:[598568h],0"
"	      00459ab0    mov dword ptr ds:[598564h],0"
"	      00459aba    jmp near ptr 00459ABFh"
"	      00459abf    jmp near ptr 00459AC4h"
"	      00459ac4    mov ecx,this"
"	      00459ac7    call 004A4045h"
"	      00459acc    pop edi"
"	      00459acd    pop esi"
"	      00459ace    pop ebx"
"	      00459acf    leave"
"	      00459ad0    ret"
);
}

// FUNCTION: COPTER_D 0x00459ad1
int32_t PopupMenuExtra::Initialize() {
// LINE 1570:
	asm( 
"	      00459ad1    push ebp"
"	      00459ad2    mov ebp,esp"
"	      00459ad4    sub esp,4"
"	      00459ad7    push ebx"
"	      00459ad8    push esi"
"	      00459ad9    push edi"
"	      00459ada    mov this,ecx"
);
// LINE 1571:
	asm( 
"	      00459add    mov eax,this"
"	      00459ae0    mov eax,[eax]"
"	      00459ae2    mov ecx,this"
"	      00459ae5    call dword ptr [eax+15Ch]"
);
// LINE 1572:
	asm( 
"	      00459aeb    mov ecx,this"
"	      00459aee    call 004B7C65h"
"	      00459af3    jmp near ptr 00459AF8h"
);
// LINE 1573:
	asm( 
"	      00459af8    pop edi"
"	      00459af9    pop esi"
"	      00459afa    pop ebx"
"	      00459afb    leave"
"	      00459afc    ret"
);
}

// FUNCTION: COPTER_D 0x00459afd
int32_t PopupMenuExtra::DrawSelf() {
	long lCurrentXPosition;
	int32_t j;
	long lEndXPosition;
	int32_t i;
	class list<basic_string<char>>::iterator tempStringListIterator;
	class MRect rectHighlighted;
	long lSourceWidth;
	class MRect rectCurrentText;

// LINE 1580:
	asm( 
"	      00459afd    push ebp"
"	      00459afe    mov ebp,esp"
"	      00459b00    sub esp,0C4h"
"	      00459b06    push ebx"
"	      00459b07    push esi"
"	      00459b08    push edi"
"	      00459b09    mov this,ecx"
);
// LINE 1585:
	asm( 
"	      00459b0f    mov eax,this"
"	      00459b15    mov eax,[eax+74h]"
"	      00459b18    mov eax,[eax]"
"	      00459b1a    mov [ebp-70h],eax"
"	      00459b1d    mov eax,[ebp-70h]"
"	      00459b20    mov tempStringListIterator.node,eax"
"	      00459b23    jmp near ptr 00459B28h"
"	      00459b28    jmp near ptr 00459B2Dh"
);
// LINE 1586:
	asm( 
"	      00459b2d    jmp near ptr 00459B32h"
"	      00459b32    jmp near ptr 00459B37h"
);
// LINE 1587:
	asm( 
"	      00459b37    jmp near ptr 00459B3Ch"
"	      00459b3c    jmp near ptr 00459B41h"
);
// LINE 1591:
	asm( 
"	      00459b41    mov eax,this"
"	      00459b47    cmp dword ptr [eax+54h],0"
"	      00459b4b    jne near ptr 00459B58h"
);
// LINE 1592:
	asm( 
"	      00459b51    xor eax,eax"
"	      00459b53    jmp near ptr 0045A5F3h"
);
// LINE 1603:
	asm( 
"	      00459b58    mov eax,this"
"	      00459b5e    mov eax,[eax+28h]"
"	      00459b61    mov lEndXPosition,eax"
);
// LINE 1604:
	asm( 
"	      00459b64    jmp near ptr 00459B69h"
"	      00459b69    mov eax,this"
"	      00459b6f    mov eax,[eax+0CCh]"
"	      00459b75    mov ecx,3"
"	      00459b7a    mov eax,[eax+8]"
"	      00459b7d    cdq"
"	      00459b7e    idiv ecx"
"	      00459b80    mov lSourceWidth,eax"
);
// LINE 1605:
	asm( 
"	      00459b83    mov eax,this"
"	      00459b89    mov eax,[eax+20h]"
"	      00459b8c    mov lCurrentXPosition,eax"
);
// LINE 1607:
	asm( 
"	      00459b8f    mov eax,this"
"	      00459b95    mov eax,[eax+0B8h]"
"	      00459b9b    push eax"
"	      00459b9c    mov eax,lSourceWidth"
"	      00459b9f    push eax"
"	      00459ba0    push 0"
"	      00459ba2    push 0"
"	      00459ba4    mov eax,this"
"	      00459baa    mov eax,[eax+24h]"
"	      00459bad    push eax"
"	      00459bae    mov eax,lCurrentXPosition"
"	      00459bb1    push eax"
"	      00459bb2    mov eax,this"
"	      00459bb8    mov eax,[eax+44h]"
"	      00459bbb    push eax"
"	      00459bbc    mov eax,this"
"	      00459bc2    mov ecx,this"
"	      00459bc8    mov ecx,[ecx+0CCh]"
"	      00459bce    mov edx,[ecx]"
"	      00459bd0    mov ecx,[eax+0CCh]"
"	      00459bd6    call dword ptr [edx+0Ch]"
);
// LINE 1608:
	asm( 
"	      00459bd9    mov eax,lSourceWidth"
"	      00459bdc    add lCurrentXPosition,eax"
);
// LINE 1609:
	asm( 
"	      00459bdf    mov eax,lEndXPosition"
"	      00459be2    sub eax,lSourceWidth"
"	      00459be5    cmp eax,lCurrentXPosition"
"	      00459be8    jle near ptr 00459C48h"
);
// LINE 1611:
	asm( 
"	      00459bee    mov eax,this"
"	      00459bf4    mov eax,[eax+0B8h]"
"	      00459bfa    push eax"
"	      00459bfb    mov eax,lSourceWidth"
"	      00459bfe    add eax,lSourceWidth"
"	      00459c01    push eax"
"	      00459c02    push 0"
"	      00459c04    mov eax,lSourceWidth"
"	      00459c07    push eax"
"	      00459c08    mov eax,this"
"	      00459c0e    mov eax,[eax+24h]"
"	      00459c11    push eax"
"	      00459c12    mov eax,lCurrentXPosition"
"	      00459c15    push eax"
"	      00459c16    mov eax,this"
"	      00459c1c    mov eax,[eax+44h]"
"	      00459c1f    push eax"
"	      00459c20    mov eax,this"
"	      00459c26    mov ecx,this"
"	      00459c2c    mov ecx,[ecx+0CCh]"
"	      00459c32    mov edx,[ecx]"
"	      00459c34    mov ecx,[eax+0CCh]"
"	      00459c3a    call dword ptr [edx+0Ch]"
);
// LINE 1612:
	asm( 
"	      00459c3d    mov eax,lSourceWidth"
"	      00459c40    add lCurrentXPosition,eax"
);
// LINE 1613:
	asm( 
"	      00459c43    jmp near ptr 00459BDFh"
);
// LINE 1615:
	asm( 
"	      00459c48    mov eax,this"
"	      00459c4e    mov eax,[eax+0B8h]"
"	      00459c54    push eax"
"	      00459c55    mov eax,lSourceWidth"
"	      00459c58    add eax,lSourceWidth"
"	      00459c5b    add eax,lSourceWidth"
"	      00459c5e    push eax"
"	      00459c5f    push 0"
"	      00459c61    mov eax,lSourceWidth"
"	      00459c64    add eax,lSourceWidth"
"	      00459c67    push eax"
"	      00459c68    mov eax,this"
"	      00459c6e    mov eax,[eax+24h]"
"	      00459c71    push eax"
"	      00459c72    mov eax,lCurrentXPosition"
"	      00459c75    push eax"
"	      00459c76    mov eax,this"
"	      00459c7c    mov eax,[eax+44h]"
"	      00459c7f    push eax"
"	      00459c80    mov eax,this"
"	      00459c86    mov ecx,this"
"	      00459c8c    mov ecx,[ecx+0CCh]"
"	      00459c92    mov edx,[ecx]"
"	      00459c94    mov ecx,[eax+0CCh]"
"	      00459c9a    call dword ptr [edx+0Ch]"
);
// LINE 1617:
	asm( 
"	      00459c9d    mov i,1"
"	      00459ca4    jmp near ptr 00459CACh"
"	      00459ca9    inc i"
"	      00459cac    mov eax,this"
"	      00459cb2    mov eax,[eax+0B0h]"
"	      00459cb8    dec eax"
"	      00459cb9    cmp eax,i"
"	      00459cbc    jle near ptr 00459E56h"
);
// LINE 1618:
	asm( 
"	      00459cc2    mov eax,this"
"	      00459cc8    mov eax,[eax+20h]"
"	      00459ccb    mov lCurrentXPosition,eax"
);
// LINE 1620:
	asm( 
"	      00459cce    mov eax,this"
"	      00459cd4    mov eax,[eax+0B8h]"
"	      00459cda    mov ecx,this"
"	      00459ce0    add eax,[ecx+0B8h]"
"	      00459ce6    push eax"
"	      00459ce7    mov eax,lSourceWidth"
"	      00459cea    push eax"
"	      00459ceb    mov eax,this"
"	      00459cf1    mov eax,[eax+0B8h]"
"	      00459cf7    push eax"
"	      00459cf8    push 0"
"	      00459cfa    mov eax,this"
"	      00459d00    mov eax,[eax+0B8h]"
"	      00459d06    imul eax,i"
"	      00459d0a    mov ecx,this"
"	      00459d10    add eax,[ecx+24h]"
"	      00459d13    push eax"
"	      00459d14    mov eax,lCurrentXPosition"
"	      00459d17    push eax"
"	      00459d18    mov eax,this"
"	      00459d1e    mov eax,[eax+44h]"
"	      00459d21    push eax"
"	      00459d22    mov eax,this"
"	      00459d28    mov ecx,this"
"	      00459d2e    mov ecx,[ecx+0CCh]"
"	      00459d34    mov edx,[ecx]"
"	      00459d36    mov ecx,[eax+0CCh]"
"	      00459d3c    call dword ptr [edx+0Ch]"
);
// LINE 1621:
	asm( 
"	      00459d3f    mov eax,lSourceWidth"
"	      00459d42    add lCurrentXPosition,eax"
);
// LINE 1622:
	asm( 
"	      00459d45    mov eax,lEndXPosition"
"	      00459d48    sub eax,lSourceWidth"
"	      00459d4b    cmp eax,lCurrentXPosition"
"	      00459d4e    jle near ptr 00459DD5h"
);
// LINE 1624:
	asm( 
"	      00459d54    mov eax,this"
"	      00459d5a    mov eax,[eax+0B8h]"
"	      00459d60    mov ecx,this"
"	      00459d66    add eax,[ecx+0B8h]"
"	      00459d6c    push eax"
"	      00459d6d    mov eax,lSourceWidth"
"	      00459d70    add eax,lSourceWidth"
"	      00459d73    push eax"
"	      00459d74    mov eax,this"
"	      00459d7a    mov eax,[eax+0B8h]"
"	      00459d80    push eax"
"	      00459d81    mov eax,lSourceWidth"
"	      00459d84    push eax"
"	      00459d85    mov eax,this"
"	      00459d8b    mov eax,[eax+0B8h]"
"	      00459d91    imul eax,i"
"	      00459d95    mov ecx,this"
"	      00459d9b    add eax,[ecx+24h]"
"	      00459d9e    push eax"
"	      00459d9f    mov eax,lCurrentXPosition"
"	      00459da2    push eax"
"	      00459da3    mov eax,this"
"	      00459da9    mov eax,[eax+44h]"
"	      00459dac    push eax"
"	      00459dad    mov eax,this"
"	      00459db3    mov ecx,this"
"	      00459db9    mov ecx,[ecx+0CCh]"
"	      00459dbf    mov edx,[ecx]"
"	      00459dc1    mov ecx,[eax+0CCh]"
"	      00459dc7    call dword ptr [edx+0Ch]"
);
// LINE 1625:
	asm( 
"	      00459dca    mov eax,lSourceWidth"
"	      00459dcd    add lCurrentXPosition,eax"
);
// LINE 1626:
	asm( 
"	      00459dd0    jmp near ptr 00459D45h"
);
// LINE 1628:
	asm( 
"	      00459dd5    mov eax,this"
"	      00459ddb    mov eax,[eax+0B8h]"
"	      00459de1    mov ecx,this"
"	      00459de7    add eax,[ecx+0B8h]"
"	      00459ded    push eax"
"	      00459dee    mov eax,lSourceWidth"
"	      00459df1    add eax,lSourceWidth"
"	      00459df4    add eax,lSourceWidth"
"	      00459df7    push eax"
"	      00459df8    mov eax,this"
"	      00459dfe    mov eax,[eax+0B8h]"
"	      00459e04    push eax"
"	      00459e05    mov eax,lSourceWidth"
"	      00459e08    add eax,lSourceWidth"
"	      00459e0b    push eax"
"	      00459e0c    mov eax,this"
"	      00459e12    mov eax,[eax+0B8h]"
"	      00459e18    imul eax,i"
"	      00459e1c    mov ecx,this"
"	      00459e22    add eax,[ecx+24h]"
"	      00459e25    push eax"
"	      00459e26    mov eax,lCurrentXPosition"
"	      00459e29    push eax"
"	      00459e2a    mov eax,this"
"	      00459e30    mov eax,[eax+44h]"
"	      00459e33    push eax"
"	      00459e34    mov eax,this"
"	      00459e3a    mov ecx,this"
"	      00459e40    mov ecx,[ecx+0CCh]"
"	      00459e46    mov edx,[ecx]"
"	      00459e48    mov ecx,[eax+0CCh]"
"	      00459e4e    call dword ptr [edx+0Ch]"
);
// LINE 1629:
	asm( 
"	      00459e51    jmp near ptr 00459CA9h"
);
// LINE 1630:
	asm( 
"	      00459e56    mov eax,this"
"	      00459e5c    mov eax,[eax+20h]"
"	      00459e5f    mov lCurrentXPosition,eax"
);
// LINE 1632:
	asm( 
"	      00459e62    mov eax,this"
"	      00459e68    mov eax,[eax+0B8h]"
"	      00459e6e    mov ecx,this"
"	      00459e74    add eax,[ecx+0B8h]"
"	      00459e7a    mov ecx,this"
"	      00459e80    add eax,[ecx+0B8h]"
"	      00459e86    push eax"
"	      00459e87    mov eax,lSourceWidth"
"	      00459e8a    push eax"
"	      00459e8b    mov eax,this"
"	      00459e91    mov eax,[eax+0B8h]"
"	      00459e97    mov ecx,this"
"	      00459e9d    add eax,[ecx+0B8h]"
"	      00459ea3    push eax"
"	      00459ea4    push 0"
"	      00459ea6    mov eax,this"
"	      00459eac    mov eax,[eax+0B8h]"
"	      00459eb2    imul eax,i"
"	      00459eb6    mov ecx,this"
"	      00459ebc    add eax,[ecx+24h]"
"	      00459ebf    push eax"
"	      00459ec0    mov eax,lCurrentXPosition"
"	      00459ec3    push eax"
"	      00459ec4    mov eax,this"
"	      00459eca    mov eax,[eax+44h]"
"	      00459ecd    push eax"
"	      00459ece    mov eax,this"
"	      00459ed4    mov ecx,this"
"	      00459eda    mov ecx,[ecx+0CCh]"
"	      00459ee0    mov edx,[ecx]"
"	      00459ee2    mov ecx,[eax+0CCh]"
"	      00459ee8    call dword ptr [edx+0Ch]"
);
// LINE 1633:
	asm( 
"	      00459eeb    mov eax,lSourceWidth"
"	      00459eee    add lCurrentXPosition,eax"
);
// LINE 1634:
	asm( 
"	      00459ef1    mov eax,lEndXPosition"
"	      00459ef4    sub eax,lSourceWidth"
"	      00459ef7    cmp eax,lCurrentXPosition"
"	      00459efa    jle near ptr 00459F99h"
);
// LINE 1636:
	asm( 
"	      00459f00    mov eax,this"
"	      00459f06    mov eax,[eax+0B8h]"
"	      00459f0c    mov ecx,this"
"	      00459f12    add eax,[ecx+0B8h]"
"	      00459f18    mov ecx,this"
"	      00459f1e    add eax,[ecx+0B8h]"
"	      00459f24    push eax"
"	      00459f25    mov eax,lSourceWidth"
"	      00459f28    add eax,lSourceWidth"
"	      00459f2b    push eax"
"	      00459f2c    mov eax,this"
"	      00459f32    mov eax,[eax+0B8h]"
"	      00459f38    mov ecx,this"
"	      00459f3e    add eax,[ecx+0B8h]"
"	      00459f44    push eax"
"	      00459f45    mov eax,lSourceWidth"
"	      00459f48    push eax"
"	      00459f49    mov eax,this"
"	      00459f4f    mov eax,[eax+0B8h]"
"	      00459f55    imul eax,i"
"	      00459f59    mov ecx,this"
"	      00459f5f    add eax,[ecx+24h]"
"	      00459f62    push eax"
"	      00459f63    mov eax,lCurrentXPosition"
"	      00459f66    push eax"
"	      00459f67    mov eax,this"
"	      00459f6d    mov eax,[eax+44h]"
"	      00459f70    push eax"
"	      00459f71    mov eax,this"
"	      00459f77    mov ecx,this"
"	      00459f7d    mov ecx,[ecx+0CCh]"
"	      00459f83    mov edx,[ecx]"
"	      00459f85    mov ecx,[eax+0CCh]"
"	      00459f8b    call dword ptr [edx+0Ch]"
);
// LINE 1637:
	asm( 
"	      00459f8e    mov eax,lSourceWidth"
"	      00459f91    add lCurrentXPosition,eax"
);
// LINE 1638:
	asm( 
"	      00459f94    jmp near ptr 00459EF1h"
);
// LINE 1640:
	asm( 
"	      00459f99    mov eax,this"
"	      00459f9f    mov eax,[eax+0B8h]"
"	      00459fa5    mov ecx,this"
"	      00459fab    add eax,[ecx+0B8h]"
"	      00459fb1    mov ecx,this"
"	      00459fb7    add eax,[ecx+0B8h]"
"	      00459fbd    push eax"
"	      00459fbe    mov eax,lSourceWidth"
"	      00459fc1    add eax,lSourceWidth"
"	      00459fc4    add eax,lSourceWidth"
"	      00459fc7    push eax"
"	      00459fc8    mov eax,this"
"	      00459fce    mov eax,[eax+0B8h]"
"	      00459fd4    mov ecx,this"
"	      00459fda    add eax,[ecx+0B8h]"
"	      00459fe0    push eax"
"	      00459fe1    mov eax,lSourceWidth"
"	      00459fe4    add eax,lSourceWidth"
"	      00459fe7    push eax"
"	      00459fe8    mov eax,this"
"	      00459fee    mov eax,[eax+0B8h]"
"	      00459ff4    imul eax,i"
"	      00459ff8    mov ecx,this"
"	      00459ffe    add eax,[ecx+24h]"
"	      0045a001    push eax"
"	      0045a002    mov eax,lCurrentXPosition"
"	      0045a005    push eax"
"	      0045a006    mov eax,this"
"	      0045a00c    mov eax,[eax+44h]"
"	      0045a00f    push eax"
"	      0045a010    mov eax,this"
"	      0045a016    mov ecx,this"
"	      0045a01c    mov ecx,[ecx+0CCh]"
"	      0045a022    mov edx,[ecx]"
"	      0045a024    mov ecx,[eax+0CCh]"
"	      0045a02a    call dword ptr [edx+0Ch]"
);
// LINE 1645:
	asm( 
"	      0045a02d    mov eax,this"
"	      0045a033    mov eax,[eax+20h]"
"	      0045a036    add eax,0Ah"
"	      0045a039    mov rectCurrentText.left,eax"
);
// LINE 1646:
	asm( 
"	      0045a03c    mov eax,this"
"	      0045a042    mov eax,[eax+28h]"
"	      0045a045    mov rectCurrentText.right,eax"
"	      0045a048    mov eax,this"
"	      0045a04e    mov eax,[eax+44h]"
"	      0045a051    mov [ebp-6Ch],eax"
);
// LINE 1648:
	asm( 
"	      0045a054    mov eax,this"
"	      0045a05a    mov eax,[eax+7Ch]"
"	      0045a05d    mov ecx,[ebp-6Ch]"
"	      0045a060    mov [ecx+38h],eax"
"	      0045a063    jmp near ptr 0045A068h"
);
// LINE 1651:
	asm( 
"	      0045a068    mov i,0"
);
// LINE 1652:
	asm( 
"	      0045a06f    mov eax,this"
"	      0045a075    mov ecx,i"
"	      0045a078    cmp [eax+0B4h],ecx"
"	      0045a07e    jle near ptr 0045A104h"
"	      0045a084    mov eax,this"
"	      0045a08a    mov eax,[eax+74h]"
"	      0045a08d    mov [ebp-60h],eax"
"	      0045a090    mov eax,[ebp-60h]"
"	      0045a093    mov [ebp-3Ch],eax"
"	      0045a096    jmp near ptr 0045A09Bh"
"	      0045a09b    jmp near ptr 0045A0A0h"
"	      0045a0a0    mov eax,[ebp-3Ch]"
"	      0045a0a3    cmp tempStringListIterator.node,eax"
"	      0045a0a6    jne near ptr 0045A0B6h"
"	      0045a0ac    jmp near ptr 0045A0CAh"
"	      0045a0b1    jmp near ptr 0045A0B6h"
"	      0045a0b6    jmp near ptr 0045A0C5h"
"	      0045a0bb    cmp dword ptr [ebp-64h],0"
"	      0045a0bf    jne near ptr 0045A0CAh"
"	      0045a0c5    jmp near ptr 0045A0CFh"
"	      0045a0ca    jmp near ptr 0045A104h"
"	      0045a0cf    jmp near ptr 0045A0DEh"
"	      0045a0d4    cmp dword ptr [ebp-68h],0"
"	      0045a0d8    je near ptr 0045A104h"
);
// LINE 1653:
	asm( 
"	      0045a0de    mov eax,tempStringListIterator.node"
"	      0045a0e1    mov [ebp-74h],eax"
"	      0045a0e4    mov eax,tempStringListIterator.node"
"	      0045a0e7    mov eax,[eax]"
"	      0045a0e9    mov tempStringListIterator.node,eax"
"	      0045a0ec    jmp near ptr 0045A0F1h"
"	      0045a0f1    mov eax,[ebp-74h]"
"	      0045a0f4    mov [ebp-40h],eax"
"	      0045a0f7    jmp near ptr 0045A0FCh"
);
// LINE 1654:
	asm( 
"	      0045a0fc    inc i"
);
// LINE 1655:
	asm( 
"	      0045a0ff    jmp near ptr 0045A06Fh"
);
// LINE 1658:
	asm( 
"	      0045a104    mov j,0"
);
// LINE 23:
	asm( 
"	      0045a10b    jmp near ptr 0045A113h"
);
// LINE 1658:
	asm( 
"	      0045a110    inc j"
"	      0045a113    mov eax,this"
"	      0045a119    mov eax,[eax+74h]"
"	      0045a11c    mov [ebp-54h],eax"
"	      0045a11f    mov eax,[ebp-54h]"
"	      0045a122    mov [ebp-44h],eax"
"	      0045a125    jmp near ptr 0045A12Ah"
"	      0045a12a    jmp near ptr 0045A12Fh"
"	      0045a12f    mov eax,[ebp-44h]"
"	      0045a132    cmp tempStringListIterator.node,eax"
"	      0045a135    jne near ptr 0045A145h"
"	      0045a13b    jmp near ptr 0045A159h"
"	      0045a140    jmp near ptr 0045A145h"
"	      0045a145    jmp near ptr 0045A154h"
"	      0045a14a    cmp dword ptr [ebp-58h],0"
"	      0045a14e    jne near ptr 0045A159h"
"	      0045a154    jmp near ptr 0045A15Eh"
"	      0045a159    jmp near ptr 0045A5E9h"
"	      0045a15e    jmp near ptr 0045A16Dh"
"	      0045a163    cmp dword ptr [ebp-5Ch],0"
"	      0045a167    je near ptr 0045A5E9h"
"	      0045a16d    mov eax,this"
"	      0045a173    mov ecx,j"
"	      0045a176    cmp [eax+0B0h],ecx"
"	      0045a17c    jle near ptr 0045A5E9h"
);
// LINE 1659:
	asm( 
"	      0045a182    mov eax,this"
"	      0045a188    mov ecx,i"
"	      0045a18b    cmp [eax+0ACh],ecx"
"	      0045a191    jne near ptr 0045A3CBh"
);
// LINE 1660:
	asm( 
"	      0045a197    mov eax,this"
"	      0045a19d    mov eax,[eax+0B8h]"
"	      0045a1a3    imul eax,j"
"	      0045a1a7    mov ecx,this"
"	      0045a1ad    add eax,[ecx+24h]"
"	      0045a1b0    mov rectCurrentText.top,eax"
);
// LINE 1661:
	asm( 
"	      0045a1b3    mov eax,rectCurrentText.top"
"	      0045a1b6    mov ecx,this"
"	      0045a1bc    add eax,[ecx+0B8h]"
"	      0045a1c2    mov rectCurrentText.bottom,eax"
);
// LINE 1662:
	asm( 
"	      0045a1c5    mov eax,this"
"	      0045a1cb    mov ecx,rectCurrentText.bottom"
"	      0045a1ce    cmp [eax+2Ch],ecx"
"	      0045a1d1    jge near ptr 0045A1E3h"
);
// LINE 1663:
	asm( 
"	      0045a1d7    mov eax,this"
"	      0045a1dd    mov eax,[eax+2Ch]"
"	      0045a1e0    mov rectCurrentText.bottom,eax"
);
// LINE 1664:
	asm( 
"	      0045a1e3    mov eax,this"
"	      0045a1e9    mov eax,[eax+44h]"
"	      0045a1ec    mov [ebp-4Ch],eax"
"	      0045a1ef    mov eax,this"
"	      0045a1f5    mov eax,[eax+80h]"
"	      0045a1fb    mov ecx,[ebp-4Ch]"
"	      0045a1fe    mov [ecx+38h],eax"
"	      0045a201    jmp near ptr 0045A206h"
);
// LINE 1667:
	asm( 
"	      0045a206    jmp near ptr 0045A20Bh"
"	      0045a20b    mov eax,tempStringListIterator.node"
"	      0045a20e    add eax,8"
"	      0045a211    mov [ebp-9Ch],eax"
"	      0045a217    mov eax,[ebp-9Ch]"
"	      0045a21d    cmp dword ptr [eax],0"
"	      0045a220    je near ptr 0045A249h"
"	      0045a226    mov eax,[ebp-9Ch]"
"	      0045a22c    mov eax,[eax]"
"	      0045a22e    mov [ebp-7Ch],eax"
"	      0045a231    mov eax,[ebp-7Ch]"
"	      0045a234    mov [ebp-84h],eax"
"	      0045a23a    mov eax,[ebp-84h]"
"	      0045a240    push eax"
"	      0045a241    call 0056A740h"
"	      0045a246    add esp,4"
"	      0045a249    jmp near ptr 0045A24Eh"
"	      0045a24e    mov eax,[ebp-9Ch]"
"	      0045a254    mov eax,[eax+4]"
"	      0045a257    mov eax,[eax+4]"
"	      0045a25a    inc eax"
"	      0045a25b    push eax"
"	      0045a25c    call 0056A600h"
"	      0045a261    add esp,4"
"	      0045a264    mov ecx,[ebp-9Ch]"
"	      0045a26a    mov [ecx],eax"
"	      0045a26c    jmp near ptr 0045A271h"
"	      0045a271    mov eax,[ebp-9Ch]"
"	      0045a277    mov eax,[eax+4]"
"	      0045a27a    cmp dword ptr [eax+4],0"
"	      0045a27e    je near ptr 0045A30Dh"
"	      0045a284    jmp near ptr 0045A289h"
"	      0045a289    jmp near ptr 0045A28Eh"
"	      0045a28e    mov eax,[ebp-9Ch]"
"	      0045a294    mov eax,[eax+4]"
"	      0045a297    cmp dword ptr [eax+4],0"
"	      0045a29b    je near ptr 0045A2BCh"
"	      0045a2a1    mov eax,[ebp-9Ch]"
"	      0045a2a7    mov eax,[eax+4]"
"	      0045a2aa    mov eax,[eax]"
"	      0045a2ac    mov [ebp-90h],eax"
"	      0045a2b2    jmp near ptr 0045A2CBh"
"	      0045a2b7    jmp near ptr 0045A2CBh"
"	      0045a2bc    mov dword ptr [ebp-90h],0"
"	      0045a2c6    jmp near ptr 0045A2CBh"
"	      0045a2cb    mov eax,[ebp-9Ch]"
"	      0045a2d1    mov eax,[eax+4]"
"	      0045a2d4    mov eax,[eax+4]"
"	      0045a2d7    mov [ebp-94h],eax"
"	      0045a2dd    mov eax,[ebp-9Ch]"
"	      0045a2e3    mov eax,[eax]"
"	      0045a2e5    mov [ebp-98h],eax"
"	      0045a2eb    mov eax,[ebp-94h]"
"	      0045a2f1    push eax"
"	      0045a2f2    mov eax,[ebp-90h]"
"	      0045a2f8    push eax"
"	      0045a2f9    mov eax,[ebp-98h]"
"	      0045a2ff    push eax"
"	      0045a300    call 0056A800h"
"	      0045a305    add esp,0Ch"
"	      0045a308    jmp near ptr 0045A30Dh"
"	      0045a30d    jmp near ptr 0045A312h"
"	      0045a312    mov byte ptr [ebp-80h],0"
"	      0045a316    jmp near ptr 0045A31Bh"
"	      0045a31b    lea eax,[ebp-80h]"
"	      0045a31e    mov [ebp-88h],eax"
"	      0045a324    jmp near ptr 0045A329h"
"	      0045a329    mov eax,[ebp-9Ch]"
"	      0045a32f    mov eax,[eax+4]"
"	      0045a332    mov eax,[eax+4]"
"	      0045a335    mov ecx,[ebp-9Ch]"
"	      0045a33b    add eax,[ecx]"
"	      0045a33d    mov [ebp-8Ch],eax"
"	      0045a343    mov eax,[ebp-88h]"
"	      0045a349    mov al,[eax]"
"	      0045a34b    mov ecx,[ebp-8Ch]"
"	      0045a351    mov [ecx],al"
"	      0045a353    jmp near ptr 0045A358h"
"	      0045a358    jmp near ptr 0045A35Dh"
"	      0045a35d    mov eax,this"
"	      0045a363    add eax,8Ch"
"	      0045a368    push eax"
"	      0045a369    lea eax,rectCurrentText.bottom"
"	      0045a36c    push eax"
"	      0045a36d    lea eax,rectCurrentText.right"
"	      0045a370    push eax"
"	      0045a371    lea eax,rectCurrentText.top"
"	      0045a374    push eax"
"	      0045a375    lea eax,rectCurrentText.left"
"	      0045a378    push eax"
"	      0045a379    mov eax,this"
"	      0045a37f    mov eax,[eax+0A8h]"
"	      0045a385    push eax"
"	      0045a386    mov eax,[ebp-9Ch]"
"	      0045a38c    mov eax,[eax]"
"	      0045a38e    push eax"
"	      0045a38f    mov eax,this"
"	      0045a395    mov ecx,this"
"	      0045a39b    mov ecx,[ecx+44h]"
"	      0045a39e    mov edx,[ecx]"
"	      0045a3a0    mov ecx,[eax+44h]"
"	      0045a3a3    call dword ptr [edx+4Ch]"
"	      0045a3a6    mov eax,this"
"	      0045a3ac    mov eax,[eax+44h]"
"	      0045a3af    mov [ebp-50h],eax"
);
// LINE 1668:
	asm( 
"	      0045a3b2    mov eax,this"
"	      0045a3b8    mov eax,[eax+7Ch]"
"	      0045a3bb    mov ecx,[ebp-50h]"
"	      0045a3be    mov [ecx+38h],eax"
"	      0045a3c1    jmp near ptr 0045A3C6h"
);
// LINE 1670:
	asm( 
"	      0045a3c6    jmp near ptr 0045A5C3h"
);
// LINE 1671:
	asm( 
"	      0045a3cb    mov eax,this"
"	      0045a3d1    mov eax,[eax+0B8h]"
"	      0045a3d7    imul eax,j"
"	      0045a3db    mov ecx,this"
"	      0045a3e1    add eax,[ecx+24h]"
"	      0045a3e4    mov rectCurrentText.top,eax"
);
// LINE 1672:
	asm( 
"	      0045a3e7    mov eax,rectCurrentText.top"
"	      0045a3ea    mov ecx,this"
"	      0045a3f0    add eax,[ecx+0B8h]"
"	      0045a3f6    mov rectCurrentText.bottom,eax"
);
// LINE 1673:
	asm( 
"	      0045a3f9    mov eax,this"
"	      0045a3ff    mov ecx,rectCurrentText.bottom"
"	      0045a402    cmp [eax+2Ch],ecx"
"	      0045a405    jge near ptr 0045A417h"
);
// LINE 1674:
	asm( 
"	      0045a40b    mov eax,this"
"	      0045a411    mov eax,[eax+2Ch]"
"	      0045a414    mov rectCurrentText.bottom,eax"
);
// LINE 1677:
	asm( 
"	      0045a417    jmp near ptr 0045A41Ch"
"	      0045a41c    mov eax,tempStringListIterator.node"
"	      0045a41f    add eax,8"
"	      0045a422    mov [ebp-0C0h],eax"
"	      0045a428    mov eax,[ebp-0C0h]"
"	      0045a42e    cmp dword ptr [eax],0"
"	      0045a431    je near ptr 0045A460h"
"	      0045a437    mov eax,[ebp-0C0h]"
"	      0045a43d    mov eax,[eax]"
"	      0045a43f    mov [ebp-0A0h],eax"
"	      0045a445    mov eax,[ebp-0A0h]"
"	      0045a44b    mov [ebp-0A8h],eax"
"	      0045a451    mov eax,[ebp-0A8h]"
"	      0045a457    push eax"
"	      0045a458    call 0056A740h"
"	      0045a45d    add esp,4"
"	      0045a460    jmp near ptr 0045A465h"
"	      0045a465    mov eax,[ebp-0C0h]"
"	      0045a46b    mov eax,[eax+4]"
"	      0045a46e    mov eax,[eax+4]"
"	      0045a471    inc eax"
"	      0045a472    push eax"
"	      0045a473    call 0056A600h"
"	      0045a478    add esp,4"
"	      0045a47b    mov ecx,[ebp-0C0h]"
"	      0045a481    mov [ecx],eax"
"	      0045a483    jmp near ptr 0045A488h"
"	      0045a488    mov eax,[ebp-0C0h]"
"	      0045a48e    mov eax,[eax+4]"
"	      0045a491    cmp dword ptr [eax+4],0"
"	      0045a495    je near ptr 0045A524h"
"	      0045a49b    jmp near ptr 0045A4A0h"
"	      0045a4a0    jmp near ptr 0045A4A5h"
"	      0045a4a5    mov eax,[ebp-0C0h]"
"	      0045a4ab    mov eax,[eax+4]"
"	      0045a4ae    cmp dword ptr [eax+4],0"
"	      0045a4b2    je near ptr 0045A4D3h"
"	      0045a4b8    mov eax,[ebp-0C0h]"
"	      0045a4be    mov eax,[eax+4]"
"	      0045a4c1    mov eax,[eax]"
"	      0045a4c3    mov [ebp-0B4h],eax"
"	      0045a4c9    jmp near ptr 0045A4E2h"
"	      0045a4ce    jmp near ptr 0045A4E2h"
"	      0045a4d3    mov dword ptr [ebp-0B4h],0"
"	      0045a4dd    jmp near ptr 0045A4E2h"
"	      0045a4e2    mov eax,[ebp-0C0h]"
"	      0045a4e8    mov eax,[eax+4]"
"	      0045a4eb    mov eax,[eax+4]"
"	      0045a4ee    mov [ebp-0B8h],eax"
"	      0045a4f4    mov eax,[ebp-0C0h]"
"	      0045a4fa    mov eax,[eax]"
"	      0045a4fc    mov [ebp-0BCh],eax"
"	      0045a502    mov eax,[ebp-0B8h]"
"	      0045a508    push eax"
"	      0045a509    mov eax,[ebp-0B4h]"
"	      0045a50f    push eax"
"	      0045a510    mov eax,[ebp-0BCh]"
"	      0045a516    push eax"
"	      0045a517    call 0056A800h"
"	      0045a51c    add esp,0Ch"
"	      0045a51f    jmp near ptr 0045A524h"
"	      0045a524    jmp near ptr 0045A529h"
"	      0045a529    mov byte ptr [ebp-0A4h],0"
"	      0045a530    jmp near ptr 0045A535h"
"	      0045a535    lea eax,[ebp-0A4h]"
"	      0045a53b    mov [ebp-0ACh],eax"
"	      0045a541    jmp near ptr 0045A546h"
"	      0045a546    mov eax,[ebp-0C0h]"
"	      0045a54c    mov eax,[eax+4]"
"	      0045a54f    mov eax,[eax+4]"
"	      0045a552    mov ecx,[ebp-0C0h]"
"	      0045a558    add eax,[ecx]"
"	      0045a55a    mov [ebp-0B0h],eax"
"	      0045a560    mov eax,[ebp-0ACh]"
"	      0045a566    mov al,[eax]"
"	      0045a568    mov ecx,[ebp-0B0h]"
"	      0045a56e    mov [ecx],al"
"	      0045a570    jmp near ptr 0045A575h"
"	      0045a575    jmp near ptr 0045A57Ah"
"	      0045a57a    mov eax,this"
"	      0045a580    add eax,8Ch"
"	      0045a585    push eax"
"	      0045a586    lea eax,rectCurrentText.bottom"
"	      0045a589    push eax"
"	      0045a58a    lea eax,rectCurrentText.right"
"	      0045a58d    push eax"
"	      0045a58e    lea eax,rectCurrentText.top"
"	      0045a591    push eax"
"	      0045a592    lea eax,rectCurrentText.left"
"	      0045a595    push eax"
"	      0045a596    mov eax,this"
"	      0045a59c    mov eax,[eax+0A8h]"
"	      0045a5a2    push eax"
"	      0045a5a3    mov eax,[ebp-0C0h]"
"	      0045a5a9    mov eax,[eax]"
"	      0045a5ab    push eax"
"	      0045a5ac    mov eax,this"
"	      0045a5b2    mov ecx,this"
"	      0045a5b8    mov ecx,[ecx+44h]"
"	      0045a5bb    mov edx,[ecx]"
"	      0045a5bd    mov ecx,[eax+44h]"
"	      0045a5c0    call dword ptr [edx+4Ch]"
);
// LINE 1679:
	asm( 
"	      0045a5c3    mov eax,tempStringListIterator.node"
"	      0045a5c6    mov [ebp-78h],eax"
"	      0045a5c9    mov eax,tempStringListIterator.node"
"	      0045a5cc    mov eax,[eax]"
"	      0045a5ce    mov tempStringListIterator.node,eax"
"	      0045a5d1    jmp near ptr 0045A5D6h"
"	      0045a5d6    mov eax,[ebp-78h]"
"	      0045a5d9    mov [ebp-48h],eax"
"	      0045a5dc    jmp near ptr 0045A5E1h"
);
// LINE 1680:
	asm( 
"	      0045a5e1    inc i"
);
// LINE 1681:
	asm( 
"	      0045a5e4    jmp near ptr 0045A110h"
);
// LINE 1683:
	asm( 
"	      0045a5e9    mov eax,1"
"	      0045a5ee    jmp near ptr 0045A5F3h"
);
// LINE 1684:
	asm( 
"	      0045a5f3    pop edi"
"	      0045a5f4    pop esi"
"	      0045a5f5    pop ebx"
"	      0045a5f6    leave"
"	      0045a5f7    ret"
);
}

// FUNCTION: COPTER_D 0x0045a5f8
int32_t PopupMenuExtra::CreateImage() {
	class basic_string<char> sImagePath;

// LINE 1690:
	asm( 
"	      0045a5f8    push ebp"
"	      0045a5f9    mov ebp,esp"
"	      0045a5fb    sub esp,50h"
"	      0045a5fe    push ebx"
"	      0045a5ff    push esi"
"	      0045a600    push edi"
"	      0045a601    mov this,ecx"
);
// LINE 1691:
	asm( 
"	      0045a604    push 10h"
"	      0045a606    call 0056A600h"
"	      0045a60b    add esp,4"
"	      0045a60e    mov [ebp-14h],eax"
"	      0045a611    cmp dword ptr [ebp-14h],0"
"	      0045a615    je near ptr 0045A654h"
"	      0045a61b    mov eax,[ebp-14h]"
"	      0045a61e    mov dword ptr [eax+4],0"
"	      0045a625    mov eax,[ebp-14h]"
"	      0045a628    mov eax,[eax+4]"
"	      0045a62b    mov ecx,[ebp-14h]"
"	      0045a62e    mov [ecx+8],eax"
"	      0045a631    mov eax,[ebp-14h]"
"	      0045a634    mov dword ptr [eax],0"
"	      0045a63a    mov eax,[ebp-14h]"
"	      0045a63d    mov dword ptr [eax+0Ch],1"
"	      0045a644    jmp near ptr 0045A649h"
"	      0045a649    mov eax,[ebp-14h]"
"	      0045a64c    mov sImagePath.reference,eax"
"	      0045a64f    jmp near ptr 0045A65Bh"
"	      0045a654    mov sImagePath.reference,0"
"	      0045a65b    mov sImagePath.c_str_ptr,0"
"	      0045a662    jmp near ptr 0045A667h"
);
// LINE 1693:
	asm( 
"	      0045a667    mov eax,this"
"	      0045a66a    cmp dword ptr [eax+0CCh],0"
"	      0045a671    jne near ptr 0045A7F4h"
);
// LINE 1694:
	asm( 
"	      0045a677    lea eax,sImagePath.c_str_ptr"
"	      0045a67a    push eax"
"	      0045a67b    mov eax,this"
"	      0045a67e    add eax,0D0h"
"	      0045a683    push eax"
"	      0045a684    push 0"
"	      0045a686    push 6"
"	      0045a688    mov ecx,604C00h"
"	      0045a68d    call 00494F82h"
"	      0045a692    jmp near ptr 0045A697h"
);
// LINE 1695:
	asm( 
"	      0045a697    push 134h"
"	      0045a69c    call 0056A600h"
"	      0045a6a1    add esp,4"
"	      0045a6a4    mov [ebp-0Ch],eax"
"	      0045a6a7    cmp dword ptr [ebp-0Ch],0"
"	      0045a6ab    je near ptr 0045A7ADh"
"	      0045a6b1    cmp sImagePath.c_str_ptr,0"
"	      0045a6b5    je near ptr 0045A6D3h"
"	      0045a6bb    mov eax,sImagePath.c_str_ptr"
"	      0045a6be    mov [ebp-30h],eax"
"	      0045a6c1    mov eax,[ebp-30h]"
"	      0045a6c4    mov [ebp-38h],eax"
"	      0045a6c7    mov eax,[ebp-38h]"
"	      0045a6ca    push eax"
"	      0045a6cb    call 0056A740h"
"	      0045a6d0    add esp,4"
"	      0045a6d3    jmp near ptr 0045A6D8h"
"	      0045a6d8    mov eax,sImagePath.reference"
"	      0045a6db    mov eax,[eax+4]"
"	      0045a6de    inc eax"
"	      0045a6df    push eax"
"	      0045a6e0    call 0056A600h"
"	      0045a6e5    add esp,4"
"	      0045a6e8    mov sImagePath.c_str_ptr,eax"
"	      0045a6eb    jmp near ptr 0045A6F0h"
"	      0045a6f0    mov eax,sImagePath.reference"
"	      0045a6f3    cmp dword ptr [eax+4],0"
"	      0045a6f7    je near ptr 0045A75Ah"
"	      0045a6fd    jmp near ptr 0045A702h"
"	      0045a702    jmp near ptr 0045A707h"
"	      0045a707    mov eax,sImagePath.reference"
"	      0045a70a    cmp dword ptr [eax+4],0"
"	      0045a70e    je near ptr 0045A726h"
"	      0045a714    mov eax,sImagePath.reference"
"	      0045a717    mov eax,[eax]"
"	      0045a719    mov [ebp-44h],eax"
"	      0045a71c    jmp near ptr 0045A732h"
"	      0045a721    jmp near ptr 0045A732h"
"	      0045a726    mov dword ptr [ebp-44h],0"
"	      0045a72d    jmp near ptr 0045A732h"
"	      0045a732    mov eax,sImagePath.reference"
"	      0045a735    mov eax,[eax+4]"
"	      0045a738    mov [ebp-48h],eax"
"	      0045a73b    mov eax,sImagePath.c_str_ptr"
"	      0045a73e    mov [ebp-4Ch],eax"
"	      0045a741    mov eax,[ebp-48h]"
"	      0045a744    push eax"
"	      0045a745    mov eax,[ebp-44h]"
"	      0045a748    push eax"
"	      0045a749    mov eax,[ebp-4Ch]"
"	      0045a74c    push eax"
"	      0045a74d    call 0056A800h"
"	      0045a752    add esp,0Ch"
"	      0045a755    jmp near ptr 0045A75Ah"
"	      0045a75a    jmp near ptr 0045A75Fh"
"	      0045a75f    mov byte ptr [ebp-34h],0"
"	      0045a763    jmp near ptr 0045A768h"
"	      0045a768    lea eax,[ebp-34h]"
"	      0045a76b    mov [ebp-3Ch],eax"
"	      0045a76e    jmp near ptr 0045A773h"
"	      0045a773    mov eax,sImagePath.reference"
"	      0045a776    mov eax,[eax+4]"
"	      0045a779    add eax,sImagePath.c_str_ptr"
"	      0045a77c    mov [ebp-40h],eax"
"	      0045a77f    mov eax,[ebp-3Ch]"
"	      0045a782    mov al,[eax]"
"	      0045a784    mov ecx,[ebp-40h]"
"	      0045a787    mov [ecx],al"
"	      0045a789    jmp near ptr 0045A78Eh"
"	      0045a78e    jmp near ptr 0045A793h"
"	      0045a793    mov eax,sImagePath.c_str_ptr"
"	      0045a796    push eax"
"	      0045a797    mov ecx,[ebp-0Ch]"
"	      0045a79a    call 0046E6DFh"
"	      0045a79f    mov ecx,this"
"	      0045a7a2    mov [ecx+0CCh],eax"
"	      0045a7a8    jmp near ptr 0045A7BAh"
"	      0045a7ad    mov eax,this"
"	      0045a7b0    mov dword ptr [eax+0CCh],0"
);
// LINE 1696:
	asm( 
"	      0045a7ba    mov eax,ds:[606988h]"
"	      0045a7bf    push eax"
"	      0045a7c0    push 1"
"	      0045a7c2    mov eax,this"
"	      0045a7c5    mov ecx,this"
"	      0045a7c8    mov ecx,[ecx+0CCh]"
"	      0045a7ce    mov edx,[ecx]"
"	      0045a7d0    mov ecx,[eax+0CCh]"
"	      0045a7d6    call dword ptr [edx+8]"
);
// LINE 1697:
	asm( 
"	      0045a7d9    mov eax,this"
"	      0045a7dc    mov eax,[eax]"
"	      0045a7de    mov ecx,this"
"	      0045a7e1    call dword ptr [eax+134h]"
);
// LINE 1698:
	asm( 
"	      0045a7e7    push 0"
"	      0045a7e9    mov eax,this"
"	      0045a7ec    mov eax,[eax]"
"	      0045a7ee    mov ecx,this"
"	      0045a7f1    call dword ptr [eax+28h]"
);
// LINE 1700:
	asm( 
"	      0045a7f4    push 1"
"	      0045a7f6    mov ecx,this"
"	      0045a7f9    call 004A4AA0h"
"	      0045a7fe    mov [ebp-10h],eax"
"	      0045a801    mov eax,sImagePath.reference"
"	      0045a804    dec dword ptr [eax+0Ch]"
"	      0045a807    mov eax,sImagePath.reference"
"	      0045a80a    cmp dword ptr [eax+0Ch],0"
"	      0045a80e    jne near ptr 0045A884h"
"	      0045a814    mov eax,sImagePath.reference"
"	      0045a817    mov [ebp-24h],eax"
"	      0045a81a    mov eax,[ebp-24h]"
"	      0045a81d    mov [ebp-20h],eax"
"	      0045a820    cmp dword ptr [ebp-20h],0"
"	      0045a824    je near ptr 0045A884h"
"	      0045a82a    mov eax,[ebp-20h]"
"	      0045a82d    cmp dword ptr [eax+8],0"
"	      0045a831    je near ptr 0045A864h"
"	      0045a837    mov eax,[ebp-20h]"
"	      0045a83a    mov eax,[eax]"
"	      0045a83c    mov [ebp-28h],eax"
"	      0045a83f    mov eax,[ebp-28h]"
"	      0045a842    mov [ebp-2Ch],eax"
"	      0045a845    mov eax,[ebp-2Ch]"
"	      0045a848    push eax"
"	      0045a849    call 0056A740h"
"	      0045a84e    add esp,4"
"	      0045a851    mov eax,[ebp-20h]"
"	      0045a854    mov dword ptr [eax+8],0"
"	      0045a85b    mov eax,[ebp-20h]"
"	      0045a85e    mov dword ptr [eax],0"
"	      0045a864    jmp near ptr 0045A869h"
"	      0045a869    jmp near ptr 0045A86Eh"
"	      0045a86e    mov eax,[ebp-20h]"
"	      0045a871    push eax"
"	      0045a872    call 0056A740h"
"	      0045a877    add esp,4"
"	      0045a87a    jmp near ptr 0045A87Fh"
"	      0045a87f    jmp near ptr 0045A884h"
"	      0045a884    jmp near ptr 0045A889h"
"	      0045a889    cmp sImagePath.c_str_ptr,0"
"	      0045a88d    je near ptr 0045A8ABh"
"	      0045a893    mov eax,sImagePath.c_str_ptr"
"	      0045a896    mov [ebp-18h],eax"
"	      0045a899    mov eax,[ebp-18h]"
"	      0045a89c    mov [ebp-1Ch],eax"
"	      0045a89f    mov eax,[ebp-1Ch]"
"	      0045a8a2    push eax"
"	      0045a8a3    call 0056A740h"
"	      0045a8a8    add esp,4"
"	      0045a8ab    jmp near ptr 0045A8B0h"
"	      0045a8b0    mov eax,[ebp-10h]"
"	      0045a8b3    jmp near ptr 0045A8B8h"
);
// LINE 1701:
	asm( 
"	      0045a8b8    pop edi"
"	      0045a8b9    pop esi"
"	      0045a8ba    pop ebx"
"	      0045a8bb    leave"
"	      0045a8bc    ret"
);
}

// FUNCTION: COPTER_D 0x0045a8bd
void PopupMenuExtra::DestroyImage() {
// LINE 1707:
	asm( 
"	      0045a8bd    push ebp"
"	      0045a8be    mov ebp,esp"
"	      0045a8c0    sub esp,0Ch"
"	      0045a8c3    push ebx"
"	      0045a8c4    push esi"
"	      0045a8c5    push edi"
"	      0045a8c6    mov this,ecx"
);
// LINE 1708:
	asm( 
"	      0045a8c9    mov eax,this"
"	      0045a8cc    cmp dword ptr [eax+0CCh],0"
"	      0045a8d3    je near ptr 0045A920h"
);
// LINE 1709:
	asm( 
"	      0045a8d9    mov eax,this"
"	      0045a8dc    mov eax,[eax+0CCh]"
"	      0045a8e2    mov [ebp-8],eax"
"	      0045a8e5    mov eax,[ebp-8]"
"	      0045a8e8    mov [ebp-4],eax"
"	      0045a8eb    cmp dword ptr [ebp-4],0"
"	      0045a8ef    je near ptr 0045A913h"
"	      0045a8f5    mov ecx,[ebp-4]"
"	      0045a8f8    call 0046EC7Ah"
"	      0045a8fd    mov eax,[ebp-4]"
"	      0045a900    push eax"
"	      0045a901    call 0056A740h"
"	      0045a906    add esp,4"
"	      0045a909    jmp near ptr 0045A90Eh"
"	      0045a90e    jmp near ptr 0045A913h"
);
// LINE 1710:
	asm( 
"	      0045a913    mov eax,this"
"	      0045a916    mov dword ptr [eax+0CCh],0"
);
// LINE 1712:
	asm( 
"	      0045a920    mov ecx,this"
"	      0045a923    call 004A4CABh"
);
// LINE 1713:
	asm( 
"	      0045a928    jmp near ptr 0045A92Dh"
"	      0045a92d    pop edi"
"	      0045a92e    pop esi"
"	      0045a92f    pop ebx"
"	      0045a930    leave"
"	      0045a931    ret"
);
}

// FUNCTION: COPTER_D 0x0045a932
void PopupMenuExtra::CalculateAllMetrics() {
// LINE 1719:
	asm( 
"	      0045a932    push ebp"
"	      0045a933    mov ebp,esp"
"	      0045a935    sub esp,4"
"	      0045a938    push ebx"
"	      0045a939    push esi"
"	      0045a93a    push edi"
"	      0045a93b    mov this,ecx"
);
// LINE 1720:
	asm( 
"	      0045a93e    mov eax,this"
"	      0045a941    cmp dword ptr [eax+0CCh],0"
"	      0045a948    je near ptr 0045A975h"
);
// LINE 1721:
	asm( 
"	      0045a94e    jmp near ptr 0045A953h"
"	      0045a953    mov eax,this"
"	      0045a956    mov eax,[eax+0CCh]"
"	      0045a95c    mov ecx,3"
"	      0045a961    mov eax,[eax+0Ch]"
"	      0045a964    cdq"
"	      0045a965    idiv ecx"
"	      0045a967    mov ecx,this"
"	      0045a96a    mov [ecx+0B8h],eax"
);
// LINE 1722:
	asm( 
"	      0045a970    jmp near ptr 0045A982h"
);
// LINE 1723:
	asm( 
"	      0045a975    mov eax,this"
"	      0045a978    mov dword ptr [eax+0B8h],0Ah"
);
// LINE 1724:
	asm( 
"	      0045a982    jmp near ptr 0045A987h"
"	      0045a987    mov eax,this"
"	      0045a98a    mov eax,[eax+1Ch]"
"	      0045a98d    mov ecx,this"
"	      0045a990    sub eax,[ecx+14h]"
"	      0045a993    mov ecx,this"
"	      0045a996    cdq"
"	      0045a997    idiv dword ptr [ecx+0B8h]"
"	      0045a99d    mov ecx,this"
"	      0045a9a0    mov [ecx+0B0h],eax"
);
// LINE 1725:
	asm( 
"	      0045a9a6    jmp near ptr 0045A9ABh"
"	      0045a9ab    pop edi"
"	      0045a9ac    pop esi"
"	      0045a9ad    pop ebx"
"	      0045a9ae    leave"
"	      0045a9af    ret"
);
}

// FUNCTION: COPTER_D 0x0045a9b0
void PopupMenuExtra::ResizeWindowToFitMenuItems() {
	long lCurrentWidth;
	class MRect rectSelf;
	long lTileWidth;
	class MPoint ptSelf;
	class MPoint ptParentWindowCenter;

// LINE 1737:
	asm( 
"	      0045a9b0    push ebp"
"	      0045a9b1    mov ebp,esp"
"	      0045a9b3    sub esp,34h"
"	      0045a9b6    push ebx"
"	      0045a9b7    push esi"
"	      0045a9b8    push edi"
"	      0045a9b9    mov this,ecx"
);
// LINE 1738:
	asm( 
"	      0045a9bc    jmp near ptr 0045A9C1h"
"	      0045a9c1    jmp near ptr 0045A9C6h"
"	      0045a9c6    mov eax,this"
"	      0045a9c9    mov eax,[eax+14h]"
"	      0045a9cc    mov [ebp-2Ch],eax"
"	      0045a9cf    mov eax,this"
"	      0045a9d2    mov eax,[eax+10h]"
"	      0045a9d5    mov [ebp-30h],eax"
);
// LINE 1739:
	asm( 
"	      0045a9d8    jmp near ptr 0045A9DDh"
"	      0045a9dd    mov eax,[ebp-30h]"
"	      0045a9e0    mov ptSelf.x,eax"
"	      0045a9e3    mov eax,[ebp-2Ch]"
"	      0045a9e6    mov ptSelf.y,eax"
"	      0045a9e9    jmp near ptr 0045A9EEh"
);
// LINE 1740:
	asm( 
"	      0045a9ee    jmp near ptr 0045A9F3h"
"	      0045a9f3    jmp near ptr 0045A9F8h"
);
// LINE 1745:
	asm( 
"	      0045a9f8    mov ecx,this"
"	      0045a9fb    call 004B7F9Eh"
);
// LINE 1750:
	asm( 
"	      0045aa00    jmp near ptr 0045AA05h"
"	      0045aa05    mov eax,this"
"	      0045aa08    mov eax,[eax+0CCh]"
"	      0045aa0e    mov ecx,3"
"	      0045aa13    mov eax,[eax+8]"
"	      0045aa16    cdq"
"	      0045aa17    idiv ecx"
"	      0045aa19    mov lTileWidth,eax"
);
// LINE 1751:
	asm( 
"	      0045aa1c    jmp near ptr 0045AA21h"
"	      0045aa21    mov eax,this"
"	      0045aa24    mov eax,[eax+18h]"
"	      0045aa27    mov ecx,this"
"	      0045aa2a    sub eax,[ecx+10h]"
"	      0045aa2d    mov lCurrentWidth,eax"
);
// LINE 1752:
	asm( 
"	      0045aa30    mov eax,lTileWidth"
"	      0045aa33    dec eax"
"	      0045aa34    add lCurrentWidth,eax"
);
// LINE 1753:
	asm( 
"	      0045aa37    mov eax,lCurrentWidth"
"	      0045aa3a    cdq"
"	      0045aa3b    idiv lTileWidth"
"	      0045aa3e    mov lCurrentWidth,eax"
);
// LINE 1754:
	asm( 
"	      0045aa41    mov eax,lCurrentWidth"
"	      0045aa44    imul eax,lTileWidth"
"	      0045aa48    mov lCurrentWidth,eax"
);
// LINE 1755:
	asm( 
"	      0045aa4b    push 0FFFFFFFFh"
"	      0045aa4d    mov eax,lCurrentWidth"
"	      0045aa50    push eax"
"	      0045aa51    mov eax,this"
"	      0045aa54    mov eax,[eax]"
"	      0045aa56    mov ecx,this"
"	      0045aa59    call dword ptr [eax+38h]"
);
// LINE 1757:
	asm( 
"	      0045aa5c    mov eax,this"
"	      0045aa5f    cmp dword ptr [eax+3Ch],0"
"	      0045aa63    je near ptr 0045AAAAh"
);
// LINE 1758:
	asm( 
"	      0045aa69    mov eax,this"
"	      0045aa6c    add eax,10h"
"	      0045aa6f    lea ecx,rectSelf.left"
"	      0045aa72    mov edx,[eax]"
"	      0045aa74    mov [ecx],edx"
"	      0045aa76    mov edx,[eax+4]"
"	      0045aa79    mov [ecx+4],edx"
"	      0045aa7c    mov edx,[eax+8]"
"	      0045aa7f    mov [ecx+8],edx"
"	      0045aa82    mov eax,[eax+0Ch]"
"	      0045aa85    mov [ecx+0Ch],eax"
);
// LINE 1759:
	asm( 
"	      0045aa88    lea eax,rectSelf.left"
"	      0045aa8b    push eax"
"	      0045aa8c    mov eax,this"
"	      0045aa8f    mov ecx,[eax+3Ch]"
"	      0045aa92    call 004A4F5Ch"
);
// LINE 1760:
	asm( 
"	      0045aa97    mov eax,rectSelf.top"
"	      0045aa9a    push eax"
"	      0045aa9b    mov eax,rectSelf.left"
"	      0045aa9e    push eax"
"	      0045aa9f    mov eax,this"
"	      0045aaa2    mov eax,[eax]"
"	      0045aaa4    mov ecx,this"
"	      0045aaa7    call dword ptr [eax+34h]"
);
// LINE 1771:
	asm( 
"	      0045aaaa    jmp near ptr 0045AAAFh"
"	      0045aaaf    pop edi"
"	      0045aab0    pop esi"
"	      0045aab1    pop ebx"
"	      0045aab2    leave"
"	      0045aab3    ret"
);
}

// FUNCTION: COPTER_D 0x0045aab4
void TooltipWindow::TooltipWindow(class MRect& rectNewWindow, int32_t nNewID, int32_t nNewWindowTitleTextID, class GraphicWindow* windowNewParent, class GraphicWindowOwner* myNewOwner, int32_t bAddToParentList, char * szNewBackgroundImageFileName) {
// LINE 1798:
	asm( 
"	      0045aab4    push ebp"
"	      0045aab5    mov ebp,esp"
"	      0045aab7    sub esp,44h"
"	      0045aaba    push ebx"
"	      0045aabb    push esi"
"	      0045aabc    push edi"
"	      0045aabd    mov this,ecx"
"	      0045aac0    mov eax,bAddToParentList"
"	      0045aac3    push eax"
"	      0045aac4    mov eax,myNewOwner"
"	      0045aac7    push eax"
"	      0045aac8    mov eax,windowNewParent"
"	      0045aacb    push eax"
"	      0045aacc    mov eax,nNewWindowTitleTextID"
"	      0045aacf    push eax"
"	      0045aad0    mov eax,nNewID"
"	      0045aad3    push eax"
"	      0045aad4    mov eax,rectNewWindow"
"	      0045aad7    push eax"
"	      0045aad8    mov ecx,this"
"	      0045aadb    call 004ACCE6h"
"	      0045aae0    push 10h"
"	      0045aae2    call 0056A600h"
"	      0045aae7    add esp,4"
"	      0045aaea    mov [ebp-40h],eax"
"	      0045aaed    cmp dword ptr [ebp-40h],0"
"	      0045aaf1    je near ptr 0045AB36h"
"	      0045aaf7    mov eax,[ebp-40h]"
"	      0045aafa    mov dword ptr [eax+4],0"
"	      0045ab01    mov eax,[ebp-40h]"
"	      0045ab04    mov eax,[eax+4]"
"	      0045ab07    mov ecx,[ebp-40h]"
"	      0045ab0a    mov [ecx+8],eax"
"	      0045ab0d    mov eax,[ebp-40h]"
"	      0045ab10    mov dword ptr [eax],0"
"	      0045ab16    mov eax,[ebp-40h]"
"	      0045ab19    mov dword ptr [eax+0Ch],1"
"	      0045ab20    jmp near ptr 0045AB25h"
"	      0045ab25    mov eax,[ebp-40h]"
"	      0045ab28    mov ecx,this"
"	      0045ab2b    mov [ecx+0ACh],eax"
"	      0045ab31    jmp near ptr 0045AB43h"
"	      0045ab36    mov eax,this"
"	      0045ab39    mov dword ptr [eax+0ACh],0"
"	      0045ab43    mov eax,this"
"	      0045ab46    mov dword ptr [eax+0A8h],0"
"	      0045ab50    jmp near ptr 0045AB55h"
"	      0045ab55    mov eax,this"
"	      0045ab58    mov dword ptr [eax],58FFF8h"
);
// LINE 1799:
	asm( 
"	      0045ab5e    push 603AB8h"
"	      0045ab63    mov ecx,this"
"	      0045ab66    call 004ADD6Fh"
);
// LINE 1800:
	asm( 
"	      0045ab6b    cmp szNewBackgroundImageFileName,0"
"	      0045ab6f    je near ptr 0045ACFFh"
);
// LINE 1801:
	asm( 
"	      0045ab75    jmp near ptr 0045AB7Ah"
"	      0045ab7a    mov eax,szNewBackgroundImageFileName"
"	      0045ab7d    push eax"
"	      0045ab7e    call 0056ABE0h"
"	      0045ab83    add esp,4"
"	      0045ab86    mov [ebp-1Ch],eax"
"	      0045ab89    cmp dword ptr [ebp-1Ch],0FFFFFFFFh"
"	      0045ab8d    jne near ptr 0045ABC5h"
"	      0045ab93    push 5971E4h"
"	      0045ab98    mov ecx,638C00h"
"	      0045ab9d    call 00569960h"
"	      0045aba2    mov [ebp-10h],eax"
"	      0045aba5    mov eax,[ebp-10h]"
"	      0045aba8    push eax"
"	      0045aba9    call 004011B0h"
"	      0045abae    add esp,4"
"	      0045abb1    jmp near ptr 0045ABB6h"
"	      0045abb6    push 1"
"	      0045abb8    call 00569430h"
"	      0045abbd    add esp,4"
"	      0045abc0    jmp near ptr 0045ABC5h"
"	      0045abc5    jmp near ptr 0045ABCAh"
"	      0045abca    mov eax,this"
"	      0045abcd    mov eax,[eax+0ACh]"
"	      0045abd3    cmp dword ptr [eax+0Ch],1"
"	      0045abd7    ja near ptr 0045AC01h"
"	      0045abdd    cmp dword ptr [ebp-1Ch],0"
"	      0045abe1    je near ptr 0045ACABh"
"	      0045abe7    jmp near ptr 0045ABECh"
"	      0045abec    mov eax,this"
"	      0045abef    mov eax,[eax+0ACh]"
"	      0045abf5    mov ecx,[ebp-1Ch]"
"	      0045abf8    cmp [eax+8],ecx"
"	      0045abfb    jae near ptr 0045ACABh"
"	      0045ac01    push 10h"
"	      0045ac03    call 0056A600h"
"	      0045ac08    add esp,4"
"	      0045ac0b    mov [ebp-8],eax"
"	      0045ac0e    cmp dword ptr [ebp-8],0"
"	      0045ac12    je near ptr 0045AC30h"
"	      0045ac18    mov eax,[ebp-1Ch]"
"	      0045ac1b    push eax"
"	      0045ac1c    mov eax,szNewBackgroundImageFileName"
"	      0045ac1f    push eax"
"	      0045ac20    mov ecx,[ebp-8]"
"	      0045ac23    call 0041E090h"
"	      0045ac28    mov [ebp-4],eax"
"	      0045ac2b    jmp near ptr 0045AC37h"
"	      0045ac30    mov dword ptr [ebp-4],0"
"	      0045ac37    mov eax,this"
"	      0045ac3a    mov eax,[eax+0ACh]"
"	      0045ac40    dec dword ptr [eax+0Ch]"
"	      0045ac43    mov eax,this"
"	      0045ac46    mov eax,[eax+0ACh]"
"	      0045ac4c    cmp dword ptr [eax+0Ch],0"
"	      0045ac50    jne near ptr 0045AC95h"
"	      0045ac56    mov eax,this"
"	      0045ac59    mov eax,[eax+0ACh]"
"	      0045ac5f    mov [ebp-18h],eax"
"	      0045ac62    mov eax,[ebp-18h]"
"	      0045ac65    mov [ebp-14h],eax"
"	      0045ac68    cmp dword ptr [ebp-14h],0"
"	      0045ac6c    je near ptr 0045AC95h"
"	      0045ac72    mov ecx,[ebp-14h]"
"	      0045ac75    call 0041F4B0h"
"	      0045ac7a    jmp near ptr 0045AC7Fh"
"	      0045ac7f    mov eax,[ebp-14h]"
"	      0045ac82    push eax"
"	      0045ac83    call 0056A740h"
"	      0045ac88    add esp,4"
"	      0045ac8b    jmp near ptr 0045AC90h"
"	      0045ac90    jmp near ptr 0045AC95h"
"	      0045ac95    jmp near ptr 0045AC9Ah"
"	      0045ac9a    mov eax,[ebp-4]"
"	      0045ac9d    mov ecx,this"
"	      0045aca0    mov [ecx+0ACh],eax"
"	      0045aca6    jmp near ptr 0045ACE1h"
"	      0045acab    cmp dword ptr [ebp-1Ch],0"
"	      0045acaf    je near ptr 0045ACE1h"
"	      0045acb5    jmp near ptr 0045ACBAh"
"	      0045acba    mov eax,this"
"	      0045acbd    mov eax,[eax+0ACh]"
"	      0045acc3    mov eax,[eax]"
"	      0045acc5    mov [ebp-0Ch],eax"
"	      0045acc8    mov eax,[ebp-1Ch]"
"	      0045accb    push eax"
"	      0045accc    mov eax,szNewBackgroundImageFileName"
"	      0045accf    push eax"
"	      0045acd0    mov eax,[ebp-0Ch]"
"	      0045acd3    push eax"
"	      0045acd4    call 0056A800h"
"	      0045acd9    add esp,0Ch"
"	      0045acdc    jmp near ptr 0045ACE1h"
"	      0045ace1    mov eax,[ebp-1Ch]"
"	      0045ace4    mov ecx,this"
"	      0045ace7    mov ecx,[ecx+0ACh]"
"	      0045aced    mov [ecx+4],eax"
"	      0045acf0    jmp near ptr 0045ACF5h"
"	      0045acf5    jmp near ptr 0045ACFAh"
);
// LINE 1802:
	asm( 
"	      0045acfa    jmp near ptr 0045AE8Ch"
);
// LINE 1803:
	asm( 
"	      0045acff    mov eax,ds:[599180h]"
"	      0045ad04    mov [ebp-3Ch],eax"
"	      0045ad07    jmp near ptr 0045AD0Ch"
"	      0045ad0c    mov eax,[ebp-3Ch]"
"	      0045ad0f    push eax"
"	      0045ad10    call 0056ABE0h"
"	      0045ad15    add esp,4"
"	      0045ad18    mov [ebp-38h],eax"
"	      0045ad1b    cmp dword ptr [ebp-38h],0FFFFFFFFh"
"	      0045ad1f    jne near ptr 0045AD57h"
"	      0045ad25    push 5971E4h"
"	      0045ad2a    mov ecx,638C00h"
"	      0045ad2f    call 00569960h"
"	      0045ad34    mov [ebp-2Ch],eax"
"	      0045ad37    mov eax,[ebp-2Ch]"
"	      0045ad3a    push eax"
"	      0045ad3b    call 004011B0h"
"	      0045ad40    add esp,4"
"	      0045ad43    jmp near ptr 0045AD48h"
"	      0045ad48    push 1"
"	      0045ad4a    call 00569430h"
"	      0045ad4f    add esp,4"
"	      0045ad52    jmp near ptr 0045AD57h"
"	      0045ad57    jmp near ptr 0045AD5Ch"
"	      0045ad5c    mov eax,this"
"	      0045ad5f    mov eax,[eax+0ACh]"
"	      0045ad65    cmp dword ptr [eax+0Ch],1"
"	      0045ad69    ja near ptr 0045AD93h"
"	      0045ad6f    cmp dword ptr [ebp-38h],0"
"	      0045ad73    je near ptr 0045AE3Dh"
"	      0045ad79    jmp near ptr 0045AD7Eh"
"	      0045ad7e    mov eax,this"
"	      0045ad81    mov eax,[eax+0ACh]"
"	      0045ad87    mov ecx,[ebp-38h]"
"	      0045ad8a    cmp [eax+8],ecx"
"	      0045ad8d    jae near ptr 0045AE3Dh"
"	      0045ad93    push 10h"
"	      0045ad95    call 0056A600h"
"	      0045ad9a    add esp,4"
"	      0045ad9d    mov [ebp-24h],eax"
"	      0045ada0    cmp dword ptr [ebp-24h],0"
"	      0045ada4    je near ptr 0045ADC2h"
"	      0045adaa    mov eax,[ebp-38h]"
"	      0045adad    push eax"
"	      0045adae    mov eax,[ebp-3Ch]"
"	      0045adb1    push eax"
"	      0045adb2    mov ecx,[ebp-24h]"
"	      0045adb5    call 0041E090h"
"	      0045adba    mov [ebp-20h],eax"
"	      0045adbd    jmp near ptr 0045ADC9h"
"	      0045adc2    mov dword ptr [ebp-20h],0"
"	      0045adc9    mov eax,this"
"	      0045adcc    mov eax,[eax+0ACh]"
"	      0045add2    dec dword ptr [eax+0Ch]"
"	      0045add5    mov eax,this"
"	      0045add8    mov eax,[eax+0ACh]"
"	      0045adde    cmp dword ptr [eax+0Ch],0"
"	      0045ade2    jne near ptr 0045AE27h"
"	      0045ade8    mov eax,this"
"	      0045adeb    mov eax,[eax+0ACh]"
"	      0045adf1    mov [ebp-34h],eax"
"	      0045adf4    mov eax,[ebp-34h]"
"	      0045adf7    mov [ebp-30h],eax"
"	      0045adfa    cmp dword ptr [ebp-30h],0"
"	      0045adfe    je near ptr 0045AE27h"
"	      0045ae04    mov ecx,[ebp-30h]"
"	      0045ae07    call 0041F4B0h"
"	      0045ae0c    jmp near ptr 0045AE11h"
"	      0045ae11    mov eax,[ebp-30h]"
"	      0045ae14    push eax"
"	      0045ae15    call 0056A740h"
"	      0045ae1a    add esp,4"
"	      0045ae1d    jmp near ptr 0045AE22h"
"	      0045ae22    jmp near ptr 0045AE27h"
"	      0045ae27    jmp near ptr 0045AE2Ch"
"	      0045ae2c    mov eax,[ebp-20h]"
"	      0045ae2f    mov ecx,this"
"	      0045ae32    mov [ecx+0ACh],eax"
"	      0045ae38    jmp near ptr 0045AE73h"
"	      0045ae3d    cmp dword ptr [ebp-38h],0"
"	      0045ae41    je near ptr 0045AE73h"
"	      0045ae47    jmp near ptr 0045AE4Ch"
"	      0045ae4c    mov eax,this"
"	      0045ae4f    mov eax,[eax+0ACh]"
"	      0045ae55    mov eax,[eax]"
"	      0045ae57    mov [ebp-28h],eax"
"	      0045ae5a    mov eax,[ebp-38h]"
"	      0045ae5d    push eax"
"	      0045ae5e    mov eax,[ebp-3Ch]"
"	      0045ae61    push eax"
"	      0045ae62    mov eax,[ebp-28h]"
"	      0045ae65    push eax"
"	      0045ae66    call 0056A800h"
"	      0045ae6b    add esp,0Ch"
"	      0045ae6e    jmp near ptr 0045AE73h"
"	      0045ae73    mov eax,[ebp-38h]"
"	      0045ae76    mov ecx,this"
"	      0045ae79    mov ecx,[ecx+0ACh]"
"	      0045ae7f    mov [ecx+4],eax"
"	      0045ae82    jmp near ptr 0045AE87h"
"	      0045ae87    jmp near ptr 0045AE8Ch"
);
// LINE 1804:
	asm( 
"	      0045ae8c    jmp near ptr 0045AE91h"
"	      0045ae91    mov eax,this"
"	      0045ae94    pop edi"
"	      0045ae95    pop esi"
"	      0045ae96    pop ebx"
"	      0045ae97    leave"
"	      0045ae98    ret 1Ch"
);
}

// FUNCTION: COPTER_D 0x0045ae9b
void TooltipWindow::TooltipWindow(class MRect& rectNewWindow, int32_t nNewID, class basic_string<char>& sNewWindowTitle, class GraphicWindow* windowNewParent, class GraphicWindowOwner* myNewOwner, int32_t bAddToParentList, char * szNewBackgroundImageFileName) {
// LINE 1815:
	asm( 
"	      0045ae9b    push ebp"
"	      0045ae9c    mov ebp,esp"
"	      0045ae9e    sub esp,48h"
"	      0045aea1    push ebx"
"	      0045aea2    push esi"
"	      0045aea3    push edi"
"	      0045aea4    mov this,ecx"
"	      0045aea7    mov eax,bAddToParentList"
"	      0045aeaa    push eax"
"	      0045aeab    mov eax,myNewOwner"
"	      0045aeae    push eax"
"	      0045aeaf    mov eax,windowNewParent"
"	      0045aeb2    push eax"
"	      0045aeb3    mov eax,sNewWindowTitle"
"	      0045aeb6    push eax"
"	      0045aeb7    mov eax,nNewID"
"	      0045aeba    push eax"
"	      0045aebb    mov eax,rectNewWindow"
"	      0045aebe    push eax"
"	      0045aebf    mov ecx,this"
"	      0045aec2    call 004ACDA2h"
"	      0045aec7    push 10h"
"	      0045aec9    call 0056A600h"
"	      0045aece    add esp,4"
"	      0045aed1    mov [ebp-44h],eax"
"	      0045aed4    cmp dword ptr [ebp-44h],0"
"	      0045aed8    je near ptr 0045AF1Dh"
"	      0045aede    mov eax,[ebp-44h]"
"	      0045aee1    mov dword ptr [eax+4],0"
"	      0045aee8    mov eax,[ebp-44h]"
"	      0045aeeb    mov eax,[eax+4]"
"	      0045aeee    mov ecx,[ebp-44h]"
"	      0045aef1    mov [ecx+8],eax"
"	      0045aef4    mov eax,[ebp-44h]"
"	      0045aef7    mov dword ptr [eax],0"
"	      0045aefd    mov eax,[ebp-44h]"
"	      0045af00    mov dword ptr [eax+0Ch],1"
"	      0045af07    jmp near ptr 0045AF0Ch"
"	      0045af0c    mov eax,[ebp-44h]"
"	      0045af0f    mov ecx,this"
"	      0045af12    mov [ecx+0ACh],eax"
"	      0045af18    jmp near ptr 0045AF2Ah"
"	      0045af1d    mov eax,this"
"	      0045af20    mov dword ptr [eax+0ACh],0"
"	      0045af2a    mov eax,this"
"	      0045af2d    mov dword ptr [eax+0A8h],0"
"	      0045af37    jmp near ptr 0045AF3Ch"
"	      0045af3c    mov eax,this"
"	      0045af3f    mov dword ptr [eax],58FFF8h"
);
// LINE 1816:
	asm( 
"	      0045af45    mov byte ptr [ebp-4],6Fh"
"	      0045af49    mov byte ptr [ebp-3],0DAh"
"	      0045af4d    mov byte ptr [ebp-2],0FFh"
"	      0045af51    jmp near ptr 0045AF56h"
"	      0045af56    lea eax,[ebp-4]"
"	      0045af59    push eax"
"	      0045af5a    mov ecx,this"
"	      0045af5d    call 004ADD6Fh"
);
// LINE 1817:
	asm( 
"	      0045af62    cmp szNewBackgroundImageFileName,0"
"	      0045af66    je near ptr 0045B0E2h"
);
// LINE 1818:
	asm( 
"	      0045af6c    jmp near ptr 0045AF71h"
"	      0045af71    mov eax,szNewBackgroundImageFileName"
"	      0045af74    push eax"
"	      0045af75    call 0056ABE0h"
"	      0045af7a    add esp,4"
"	      0045af7d    mov [ebp-20h],eax"
"	      0045af80    cmp dword ptr [ebp-20h],0FFFFFFFFh"
"	      0045af84    jne near ptr 0045AFBCh"
"	      0045af8a    push 5971E4h"
"	      0045af8f    mov ecx,638C00h"
"	      0045af94    call 00569960h"
"	      0045af99    mov [ebp-14h],eax"
"	      0045af9c    mov eax,[ebp-14h]"
"	      0045af9f    push eax"
"	      0045afa0    call 004011B0h"
"	      0045afa5    add esp,4"
"	      0045afa8    jmp near ptr 0045AFADh"
"	      0045afad    push 1"
"	      0045afaf    call 00569430h"
"	      0045afb4    add esp,4"
"	      0045afb7    jmp near ptr 0045AFBCh"
"	      0045afbc    jmp near ptr 0045AFC1h"
"	      0045afc1    mov eax,this"
"	      0045afc4    mov eax,[eax+0ACh]"
"	      0045afca    cmp dword ptr [eax+0Ch],1"
"	      0045afce    ja near ptr 0045AFF8h"
"	      0045afd4    cmp dword ptr [ebp-20h],0"
"	      0045afd8    je near ptr 0045B08Eh"
"	      0045afde    jmp near ptr 0045AFE3h"
"	      0045afe3    mov eax,this"
"	      0045afe6    mov eax,[eax+0ACh]"
"	      0045afec    mov ecx,[ebp-20h]"
"	      0045afef    cmp [eax+8],ecx"
"	      0045aff2    jae near ptr 0045B08Eh"
"	      0045aff8    push 10h"
"	      0045affa    call 0056A600h"
"	      0045afff    add esp,4"
"	      0045b002    mov [ebp-0Ch],eax"
"	      0045b005    cmp dword ptr [ebp-0Ch],0"
"	      0045b009    je near ptr 0045B027h"
"	      0045b00f    mov eax,[ebp-20h]"
"	      0045b012    push eax"
"	      0045b013    mov eax,szNewBackgroundImageFileName"
"	      0045b016    push eax"
"	      0045b017    mov ecx,[ebp-0Ch]"
"	      0045b01a    call 0041E090h"
"	      0045b01f    mov [ebp-8],eax"
"	      0045b022    jmp near ptr 0045B02Eh"
"	      0045b027    mov dword ptr [ebp-8],0"
"	      0045b02e    mov eax,this"
"	      0045b031    mov eax,[eax+0ACh]"
"	      0045b037    dec dword ptr [eax+0Ch]"
"	      0045b03a    mov eax,this"
"	      0045b03d    mov eax,[eax+0ACh]"
"	      0045b043    cmp dword ptr [eax+0Ch],0"
"	      0045b047    jne near ptr 0045B078h"
"	      0045b04d    mov eax,this"
"	      0045b050    mov eax,[eax+0ACh]"
"	      0045b056    mov [ebp-1Ch],eax"
"	      0045b059    mov eax,[ebp-1Ch]"
"	      0045b05c    mov [ebp-18h],eax"
"	      0045b05f    cmp dword ptr [ebp-18h],0"
"	      0045b063    je near ptr 0045B078h"
"	      0045b069    push 1"
"	      0045b06b    mov ecx,[ebp-18h]"
"	      0045b06e    call 0041DD70h"
"	      0045b073    jmp near ptr 0045B078h"
"	      0045b078    jmp near ptr 0045B07Dh"
"	      0045b07d    mov eax,[ebp-8]"
"	      0045b080    mov ecx,this"
"	      0045b083    mov [ecx+0ACh],eax"
"	      0045b089    jmp near ptr 0045B0C4h"
"	      0045b08e    cmp dword ptr [ebp-20h],0"
"	      0045b092    je near ptr 0045B0C4h"
"	      0045b098    jmp near ptr 0045B09Dh"
"	      0045b09d    mov eax,this"
"	      0045b0a0    mov eax,[eax+0ACh]"
"	      0045b0a6    mov eax,[eax]"
"	      0045b0a8    mov [ebp-10h],eax"
"	      0045b0ab    mov eax,[ebp-20h]"
"	      0045b0ae    push eax"
"	      0045b0af    mov eax,szNewBackgroundImageFileName"
"	      0045b0b2    push eax"
"	      0045b0b3    mov eax,[ebp-10h]"
"	      0045b0b6    push eax"
"	      0045b0b7    call 0056A800h"
"	      0045b0bc    add esp,0Ch"
"	      0045b0bf    jmp near ptr 0045B0C4h"
"	      0045b0c4    mov eax,[ebp-20h]"
"	      0045b0c7    mov ecx,this"
"	      0045b0ca    mov ecx,[ecx+0ACh]"
"	      0045b0d0    mov [ecx+4],eax"
"	      0045b0d3    jmp near ptr 0045B0D8h"
"	      0045b0d8    jmp near ptr 0045B0DDh"
);
// LINE 1819:
	asm( 
"	      0045b0dd    jmp near ptr 0045B25Bh"
);
// LINE 1820:
	asm( 
"	      0045b0e2    mov eax,ds:[599180h]"
"	      0045b0e7    mov [ebp-40h],eax"
"	      0045b0ea    jmp near ptr 0045B0EFh"
"	      0045b0ef    mov eax,[ebp-40h]"
"	      0045b0f2    push eax"
"	      0045b0f3    call 0056ABE0h"
"	      0045b0f8    add esp,4"
"	      0045b0fb    mov [ebp-3Ch],eax"
"	      0045b0fe    cmp dword ptr [ebp-3Ch],0FFFFFFFFh"
"	      0045b102    jne near ptr 0045B13Ah"
"	      0045b108    push 5971E4h"
"	      0045b10d    mov ecx,638C00h"
"	      0045b112    call 00569960h"
"	      0045b117    mov [ebp-30h],eax"
"	      0045b11a    mov eax,[ebp-30h]"
"	      0045b11d    push eax"
"	      0045b11e    call 004011B0h"
"	      0045b123    add esp,4"
"	      0045b126    jmp near ptr 0045B12Bh"
"	      0045b12b    push 1"
"	      0045b12d    call 00569430h"
"	      0045b132    add esp,4"
"	      0045b135    jmp near ptr 0045B13Ah"
"	      0045b13a    jmp near ptr 0045B13Fh"
"	      0045b13f    mov eax,this"
"	      0045b142    mov eax,[eax+0ACh]"
"	      0045b148    cmp dword ptr [eax+0Ch],1"
"	      0045b14c    ja near ptr 0045B176h"
"	      0045b152    cmp dword ptr [ebp-3Ch],0"
"	      0045b156    je near ptr 0045B20Ch"
"	      0045b15c    jmp near ptr 0045B161h"
"	      0045b161    mov eax,this"
"	      0045b164    mov eax,[eax+0ACh]"
"	      0045b16a    mov ecx,[ebp-3Ch]"
"	      0045b16d    cmp [eax+8],ecx"
"	      0045b170    jae near ptr 0045B20Ch"
"	      0045b176    push 10h"
"	      0045b178    call 0056A600h"
"	      0045b17d    add esp,4"
"	      0045b180    mov [ebp-28h],eax"
"	      0045b183    cmp dword ptr [ebp-28h],0"
"	      0045b187    je near ptr 0045B1A5h"
"	      0045b18d    mov eax,[ebp-3Ch]"
"	      0045b190    push eax"
"	      0045b191    mov eax,[ebp-40h]"
"	      0045b194    push eax"
"	      0045b195    mov ecx,[ebp-28h]"
"	      0045b198    call 0041E090h"
"	      0045b19d    mov [ebp-24h],eax"
"	      0045b1a0    jmp near ptr 0045B1ACh"
"	      0045b1a5    mov dword ptr [ebp-24h],0"
"	      0045b1ac    mov eax,this"
"	      0045b1af    mov eax,[eax+0ACh]"
"	      0045b1b5    dec dword ptr [eax+0Ch]"
"	      0045b1b8    mov eax,this"
"	      0045b1bb    mov eax,[eax+0ACh]"
"	      0045b1c1    cmp dword ptr [eax+0Ch],0"
"	      0045b1c5    jne near ptr 0045B1F6h"
"	      0045b1cb    mov eax,this"
"	      0045b1ce    mov eax,[eax+0ACh]"
"	      0045b1d4    mov [ebp-38h],eax"
"	      0045b1d7    mov eax,[ebp-38h]"
"	      0045b1da    mov [ebp-34h],eax"
"	      0045b1dd    cmp dword ptr [ebp-34h],0"
"	      0045b1e1    je near ptr 0045B1F6h"
"	      0045b1e7    push 1"
"	      0045b1e9    mov ecx,[ebp-34h]"
"	      0045b1ec    call 0041DD70h"
"	      0045b1f1    jmp near ptr 0045B1F6h"
"	      0045b1f6    jmp near ptr 0045B1FBh"
"	      0045b1fb    mov eax,[ebp-24h]"
"	      0045b1fe    mov ecx,this"
"	      0045b201    mov [ecx+0ACh],eax"
"	      0045b207    jmp near ptr 0045B242h"
"	      0045b20c    cmp dword ptr [ebp-3Ch],0"
"	      0045b210    je near ptr 0045B242h"
"	      0045b216    jmp near ptr 0045B21Bh"
"	      0045b21b    mov eax,this"
"	      0045b21e    mov eax,[eax+0ACh]"
"	      0045b224    mov eax,[eax]"
"	      0045b226    mov [ebp-2Ch],eax"
"	      0045b229    mov eax,[ebp-3Ch]"
"	      0045b22c    push eax"
"	      0045b22d    mov eax,[ebp-40h]"
"	      0045b230    push eax"
"	      0045b231    mov eax,[ebp-2Ch]"
"	      0045b234    push eax"
"	      0045b235    call 0056A800h"
"	      0045b23a    add esp,0Ch"
"	      0045b23d    jmp near ptr 0045B242h"
"	      0045b242    mov eax,[ebp-3Ch]"
"	      0045b245    mov ecx,this"
"	      0045b248    mov ecx,[ecx+0ACh]"
"	      0045b24e    mov [ecx+4],eax"
"	      0045b251    jmp near ptr 0045B256h"
"	      0045b256    jmp near ptr 0045B25Bh"
);
// LINE 1821:
	asm( 
"	      0045b25b    jmp near ptr 0045B260h"
"	      0045b260    mov eax,this"
"	      0045b263    pop edi"
"	      0045b264    pop esi"
"	      0045b265    pop ebx"
"	      0045b266    leave"
"	      0045b267    ret 1Ch"
);
}

// FUNCTION: COPTER_D 0x0045b26a
void TooltipWindow::~TooltipWindow() {
// LINE 1827:
	asm( 
"	      0045b26a    push ebp"
"	      0045b26b    mov ebp,esp"
"	      0045b26d    sub esp,1Ch"
"	      0045b270    push ebx"
"	      0045b271    push esi"
"	      0045b272    push edi"
"	      0045b273    mov this,ecx"
"	      0045b276    mov eax,this"
"	      0045b279    mov dword ptr [eax],58FFF8h"
);
// LINE 1828:
	asm( 
"	      0045b27f    mov ecx,this"
"	      0045b282    call 0045B981h"
);
// LINE 1829:
	asm( 
"	      0045b287    jmp near ptr 0045B28Ch"
"	      0045b28c    mov eax,this"
"	      0045b28f    mov eax,[eax+0ACh]"
"	      0045b295    dec dword ptr [eax+0Ch]"
"	      0045b298    mov eax,this"
"	      0045b29b    mov eax,[eax+0ACh]"
"	      0045b2a1    cmp dword ptr [eax+0Ch],0"
"	      0045b2a5    jne near ptr 0045B321h"
"	      0045b2ab    mov eax,this"
"	      0045b2ae    mov eax,[eax+0ACh]"
"	      0045b2b4    mov [ebp-10h],eax"
"	      0045b2b7    mov eax,[ebp-10h]"
"	      0045b2ba    mov [ebp-0Ch],eax"
"	      0045b2bd    cmp dword ptr [ebp-0Ch],0"
"	      0045b2c1    je near ptr 0045B321h"
"	      0045b2c7    mov eax,[ebp-0Ch]"
"	      0045b2ca    cmp dword ptr [eax+8],0"
"	      0045b2ce    je near ptr 0045B301h"
"	      0045b2d4    mov eax,[ebp-0Ch]"
"	      0045b2d7    mov eax,[eax]"
"	      0045b2d9    mov [ebp-14h],eax"
"	      0045b2dc    mov eax,[ebp-14h]"
"	      0045b2df    mov [ebp-18h],eax"
"	      0045b2e2    mov eax,[ebp-18h]"
"	      0045b2e5    push eax"
"	      0045b2e6    call 0056A740h"
"	      0045b2eb    add esp,4"
"	      0045b2ee    mov eax,[ebp-0Ch]"
"	      0045b2f1    mov dword ptr [eax+8],0"
"	      0045b2f8    mov eax,[ebp-0Ch]"
"	      0045b2fb    mov dword ptr [eax],0"
"	      0045b301    jmp near ptr 0045B306h"
"	      0045b306    jmp near ptr 0045B30Bh"
"	      0045b30b    mov eax,[ebp-0Ch]"
"	      0045b30e    push eax"
"	      0045b30f    call 0056A740h"
"	      0045b314    add esp,4"
"	      0045b317    jmp near ptr 0045B31Ch"
"	      0045b31c    jmp near ptr 0045B321h"
"	      0045b321    jmp near ptr 0045B326h"
"	      0045b326    mov eax,this"
"	      0045b329    cmp dword ptr [eax+0A8h],0"
"	      0045b330    je near ptr 0045B354h"
"	      0045b336    mov eax,this"
"	      0045b339    mov eax,[eax+0A8h]"
"	      0045b33f    mov [ebp-4],eax"
"	      0045b342    mov eax,[ebp-4]"
"	      0045b345    mov [ebp-8],eax"
"	      0045b348    mov eax,[ebp-8]"
"	      0045b34b    push eax"
"	      0045b34c    call 0056A740h"
"	      0045b351    add esp,4"
"	      0045b354    jmp near ptr 0045B359h"
"	      0045b359    jmp near ptr 0045B35Eh"
"	      0045b35e    mov ecx,this"
"	      0045b361    add ecx,84h"
"	      0045b367    call 0049FC4Eh"
"	      0045b36c    mov ecx,this"
"	      0045b36f    call 004A4045h"
"	      0045b374    pop edi"
"	      0045b375    pop esi"
"	      0045b376    pop ebx"
"	      0045b377    leave"
"	      0045b378    ret"
);
}

// FUNCTION: COPTER_D 0x0045b379
int32_t TooltipWindow::Initialize() {
// LINE 1835:
	asm( 
"	      0045b379    push ebp"
"	      0045b37a    mov ebp,esp"
"	      0045b37c    sub esp,4"
"	      0045b37f    push ebx"
"	      0045b380    push esi"
"	      0045b381    push edi"
"	      0045b382    mov this,ecx"
);
// LINE 1836:
	asm( 
"	      0045b385    mov eax,this"
"	      0045b388    mov eax,[eax]"
"	      0045b38a    mov ecx,this"
"	      0045b38d    call dword ptr [eax+0E8h]"
);
// LINE 1837:
	asm( 
"	      0045b393    mov ecx,this"
"	      0045b396    call 004A44D4h"
"	      0045b39b    jmp near ptr 0045B3A0h"
);
// LINE 1838:
	asm( 
"	      0045b3a0    pop edi"
"	      0045b3a1    pop esi"
"	      0045b3a2    pop ebx"
"	      0045b3a3    leave"
"	      0045b3a4    ret"
);
}

// FUNCTION: COPTER_D 0x0045b3a5
void TooltipWindow::SetWindowTitle(int32_t nNewWindowTitleTextID) {
// LINE 1845:
	asm( 
"	      0045b3a5    push ebp"
"	      0045b3a6    mov ebp,esp"
"	      0045b3a8    sub esp,4"
"	      0045b3ab    push ebx"
"	      0045b3ac    push esi"
"	      0045b3ad    push edi"
"	      0045b3ae    mov this,ecx"
);
// LINE 1846:
	asm( 
"	      0045b3b1    mov eax,nNewWindowTitleTextID"
"	      0045b3b4    push eax"
"	      0045b3b5    mov ecx,this"
"	      0045b3b8    call 004AD775h"
);
// LINE 1847:
	asm( 
"	      0045b3bd    mov eax,this"
"	      0045b3c0    mov eax,[eax]"
"	      0045b3c2    mov ecx,this"
"	      0045b3c5    call dword ptr [eax+0E0h]"
);
// LINE 1848:
	asm( 
"	      0045b3cb    jmp near ptr 0045B3D0h"
"	      0045b3d0    pop edi"
"	      0045b3d1    pop esi"
"	      0045b3d2    pop ebx"
"	      0045b3d3    leave"
"	      0045b3d4    ret 4"
);
}

// FUNCTION: COPTER_D 0x0045b3d7
void TooltipWindow::SetWindowTitle(class basic_string<char>& sNewWindowTitle) {
// LINE 1855:
	asm( 
"	      0045b3d7    push ebp"
"	      0045b3d8    mov ebp,esp"
"	      0045b3da    sub esp,4"
"	      0045b3dd    push ebx"
"	      0045b3de    push esi"
"	      0045b3df    push edi"
"	      0045b3e0    mov this,ecx"
);
// LINE 1856:
	asm( 
"	      0045b3e3    mov eax,sNewWindowTitle"
"	      0045b3e6    push eax"
"	      0045b3e7    mov ecx,this"
"	      0045b3ea    call 004AD7B6h"
);
// LINE 1857:
	asm( 
"	      0045b3ef    push 1"
"	      0045b3f1    push 1"
"	      0045b3f3    mov eax,this"
"	      0045b3f6    mov eax,[eax]"
"	      0045b3f8    mov ecx,this"
"	      0045b3fb    call dword ptr [eax+30h]"
);
// LINE 1858:
	asm( 
"	      0045b3fe    jmp near ptr 0045B403h"
"	      0045b403    pop edi"
"	      0045b404    pop esi"
"	      0045b405    pop ebx"
"	      0045b406    leave"
"	      0045b407    ret 4"
);
}

// FUNCTION: COPTER_D 0x0045b40a
int32_t TooltipWindow::DrawSelf() {
	class MRect rectText;
	long lCurrentXPosition;
	long lEndXPosition;
	long lSourceWidth;

// LINE 1865:
	asm( 
"	      0045b40a    push ebp"
"	      0045b40b    mov ebp,esp"
"	      0045b40d    sub esp,44h"
"	      0045b410    push ebx"
"	      0045b411    push esi"
"	      0045b412    push edi"
"	      0045b413    mov this,ecx"
);
// LINE 1866:
	asm( 
"	      0045b416    mov eax,this"
"	      0045b419    add eax,20h"
"	      0045b41c    lea ecx,rectText.left"
"	      0045b41f    mov edx,[eax]"
"	      0045b421    mov [ecx],edx"
"	      0045b423    mov edx,[eax+4]"
"	      0045b426    mov [ecx+4],edx"
"	      0045b429    mov edx,[eax+8]"
"	      0045b42c    mov [ecx+8],edx"
"	      0045b42f    mov eax,[eax+0Ch]"
"	      0045b432    mov [ecx+0Ch],eax"
);
// LINE 1869:
	asm( 
"	      0045b435    mov eax,this"
"	      0045b438    mov eax,[eax+28h]"
"	      0045b43b    mov lEndXPosition,eax"
);
// LINE 1870:
	asm( 
"	      0045b43e    jmp near ptr 0045B443h"
"	      0045b443    mov eax,this"
"	      0045b446    mov eax,[eax+0A4h]"
"	      0045b44c    mov ecx,3"
"	      0045b451    mov eax,[eax+8]"
"	      0045b454    cdq"
"	      0045b455    idiv ecx"
"	      0045b457    mov lSourceWidth,eax"
);
// LINE 1871:
	asm( 
"	      0045b45a    mov eax,this"
"	      0045b45d    mov eax,[eax+20h]"
"	      0045b460    mov lCurrentXPosition,eax"
);
// LINE 1873:
	asm( 
"	      0045b463    jmp near ptr 0045B468h"
"	      0045b468    mov eax,this"
"	      0045b46b    mov eax,[eax+0A4h]"
"	      0045b471    mov eax,[eax+0Ch]"
"	      0045b474    push eax"
"	      0045b475    mov eax,lSourceWidth"
"	      0045b478    push eax"
"	      0045b479    push 0"
"	      0045b47b    push 0"
"	      0045b47d    mov eax,this"
"	      0045b480    mov eax,[eax+24h]"
"	      0045b483    push eax"
"	      0045b484    mov eax,lCurrentXPosition"
"	      0045b487    push eax"
"	      0045b488    mov eax,this"
"	      0045b48b    mov eax,[eax+44h]"
"	      0045b48e    push eax"
"	      0045b48f    mov eax,this"
"	      0045b492    mov ecx,this"
"	      0045b495    mov ecx,[ecx+0A4h]"
"	      0045b49b    mov edx,[ecx]"
"	      0045b49d    mov ecx,[eax+0A4h]"
"	      0045b4a3    call dword ptr [edx+0Ch]"
);
// LINE 1874:
	asm( 
"	      0045b4a6    mov eax,lSourceWidth"
"	      0045b4a9    add lCurrentXPosition,eax"
);
// LINE 1875:
	asm( 
"	      0045b4ac    mov eax,lEndXPosition"
"	      0045b4af    sub eax,lSourceWidth"
"	      0045b4b2    cmp eax,lCurrentXPosition"
"	      0045b4b5    jle near ptr 0045B50Eh"
);
// LINE 1877:
	asm( 
"	      0045b4bb    jmp near ptr 0045B4C0h"
"	      0045b4c0    mov eax,this"
"	      0045b4c3    mov eax,[eax+0A4h]"
"	      0045b4c9    mov eax,[eax+0Ch]"
"	      0045b4cc    push eax"
"	      0045b4cd    mov eax,lSourceWidth"
"	      0045b4d0    add eax,lSourceWidth"
"	      0045b4d3    push eax"
"	      0045b4d4    push 0"
"	      0045b4d6    mov eax,lSourceWidth"
"	      0045b4d9    push eax"
"	      0045b4da    mov eax,this"
"	      0045b4dd    mov eax,[eax+24h]"
"	      0045b4e0    push eax"
"	      0045b4e1    mov eax,lCurrentXPosition"
"	      0045b4e4    push eax"
"	      0045b4e5    mov eax,this"
"	      0045b4e8    mov eax,[eax+44h]"
"	      0045b4eb    push eax"
"	      0045b4ec    mov eax,this"
"	      0045b4ef    mov ecx,this"
"	      0045b4f2    mov ecx,[ecx+0A4h]"
"	      0045b4f8    mov edx,[ecx]"
"	      0045b4fa    mov ecx,[eax+0A4h]"
"	      0045b500    call dword ptr [edx+0Ch]"
);
// LINE 1878:
	asm( 
"	      0045b503    mov eax,lSourceWidth"
"	      0045b506    add lCurrentXPosition,eax"
);
// LINE 1879:
	asm( 
"	      0045b509    jmp near ptr 0045B4ACh"
);
// LINE 1881:
	asm( 
"	      0045b50e    jmp near ptr 0045B513h"
"	      0045b513    mov eax,this"
"	      0045b516    mov eax,[eax+0A4h]"
"	      0045b51c    mov eax,[eax+0Ch]"
"	      0045b51f    push eax"
"	      0045b520    mov eax,lSourceWidth"
"	      0045b523    add eax,lSourceWidth"
"	      0045b526    add eax,lSourceWidth"
"	      0045b529    push eax"
"	      0045b52a    push 0"
"	      0045b52c    mov eax,lSourceWidth"
"	      0045b52f    add eax,lSourceWidth"
"	      0045b532    push eax"
"	      0045b533    mov eax,this"
"	      0045b536    mov eax,[eax+24h]"
"	      0045b539    push eax"
"	      0045b53a    mov eax,lCurrentXPosition"
"	      0045b53d    push eax"
"	      0045b53e    mov eax,this"
"	      0045b541    mov eax,[eax+44h]"
"	      0045b544    push eax"
"	      0045b545    mov eax,this"
"	      0045b548    mov ecx,this"
"	      0045b54b    mov ecx,[ecx+0A4h]"
"	      0045b551    mov edx,[ecx]"
"	      0045b553    mov ecx,[eax+0A4h]"
"	      0045b559    call dword ptr [edx+0Ch]"
);
// LINE 1883:
	asm( 
"	      0045b55c    add rectText.left,5"
);
// LINE 1884:
	asm( 
"	      0045b560    inc rectText.top"
"	      0045b563    mov eax,this"
"	      0045b566    mov eax,[eax+44h]"
"	      0045b569    mov [ebp-20h],eax"
);
// LINE 1885:
	asm( 
"	      0045b56c    mov eax,this"
"	      0045b56f    mov eax,[eax+78h]"
"	      0045b572    mov ecx,[ebp-20h]"
"	      0045b575    mov [ecx+38h],eax"
"	      0045b578    jmp near ptr 0045B57Dh"
);
// LINE 1887:
	asm( 
"	      0045b57d    mov eax,this"
"	      0045b580    cmp dword ptr [eax+8],0"
"	      0045b584    je near ptr 0045B5A5h"
"	      0045b58a    mov eax,this"
"	      0045b58d    mov eax,[eax+8]"
"	      0045b590    mov [ebp-24h],eax"
"	      0045b593    mov eax,[ebp-24h]"
"	      0045b596    mov [ebp-2Ch],eax"
"	      0045b599    mov eax,[ebp-2Ch]"
"	      0045b59c    push eax"
"	      0045b59d    call 0056A740h"
"	      0045b5a2    add esp,4"
"	      0045b5a5    jmp near ptr 0045B5AAh"
"	      0045b5aa    mov eax,this"
"	      0045b5ad    mov eax,[eax+0Ch]"
"	      0045b5b0    mov eax,[eax+4]"
"	      0045b5b3    inc eax"
"	      0045b5b4    push eax"
"	      0045b5b5    call 0056A600h"
"	      0045b5ba    add esp,4"
"	      0045b5bd    mov ecx,this"
"	      0045b5c0    mov [ecx+8],eax"
"	      0045b5c3    jmp near ptr 0045B5C8h"
"	      0045b5c8    mov eax,this"
"	      0045b5cb    mov eax,[eax+0Ch]"
"	      0045b5ce    cmp dword ptr [eax+4],0"
"	      0045b5d2    je near ptr 0045B641h"
"	      0045b5d8    jmp near ptr 0045B5DDh"
"	      0045b5dd    jmp near ptr 0045B5E2h"
"	      0045b5e2    mov eax,this"
"	      0045b5e5    mov eax,[eax+0Ch]"
"	      0045b5e8    cmp dword ptr [eax+4],0"
"	      0045b5ec    je near ptr 0045B607h"
"	      0045b5f2    mov eax,this"
"	      0045b5f5    mov eax,[eax+0Ch]"
"	      0045b5f8    mov eax,[eax]"
"	      0045b5fa    mov [ebp-38h],eax"
"	      0045b5fd    jmp near ptr 0045B613h"
"	      0045b602    jmp near ptr 0045B613h"
"	      0045b607    mov dword ptr [ebp-38h],0"
"	      0045b60e    jmp near ptr 0045B613h"
"	      0045b613    mov eax,this"
"	      0045b616    mov eax,[eax+0Ch]"
"	      0045b619    mov eax,[eax+4]"
"	      0045b61c    mov [ebp-3Ch],eax"
"	      0045b61f    mov eax,this"
"	      0045b622    mov eax,[eax+8]"
"	      0045b625    mov [ebp-40h],eax"
"	      0045b628    mov eax,[ebp-3Ch]"
"	      0045b62b    push eax"
"	      0045b62c    mov eax,[ebp-38h]"
"	      0045b62f    push eax"
"	      0045b630    mov eax,[ebp-40h]"
"	      0045b633    push eax"
"	      0045b634    call 0056A800h"
"	      0045b639    add esp,0Ch"
"	      0045b63c    jmp near ptr 0045B641h"
"	      0045b641    jmp near ptr 0045B646h"
"	      0045b646    mov byte ptr [ebp-28h],0"
"	      0045b64a    jmp near ptr 0045B64Fh"
"	      0045b64f    lea eax,[ebp-28h]"
"	      0045b652    mov [ebp-30h],eax"
"	      0045b655    jmp near ptr 0045B65Ah"
"	      0045b65a    mov eax,this"
"	      0045b65d    mov eax,[eax+0Ch]"
"	      0045b660    mov eax,[eax+4]"
"	      0045b663    mov ecx,this"
"	      0045b666    add eax,[ecx+8]"
"	      0045b669    mov [ebp-34h],eax"
"	      0045b66c    mov eax,[ebp-30h]"
"	      0045b66f    mov al,[eax]"
"	      0045b671    mov ecx,[ebp-34h]"
"	      0045b674    mov [ecx],al"
"	      0045b676    jmp near ptr 0045B67Bh"
"	      0045b67b    jmp near ptr 0045B680h"
"	      0045b680    mov eax,this"
"	      0045b683    add eax,84h"
"	      0045b688    push eax"
"	      0045b689    lea eax,rectText.bottom"
"	      0045b68c    push eax"
"	      0045b68d    lea eax,rectText.right"
"	      0045b690    push eax"
"	      0045b691    lea eax,rectText.top"
"	      0045b694    push eax"
"	      0045b695    lea eax,rectText.left"
"	      0045b698    push eax"
"	      0045b699    mov eax,this"
"	      0045b69c    mov eax,[eax+0A0h]"
"	      0045b6a2    push eax"
"	      0045b6a3    mov eax,this"
"	      0045b6a6    mov eax,[eax+8]"
"	      0045b6a9    push eax"
"	      0045b6aa    mov eax,this"
"	      0045b6ad    mov ecx,this"
"	      0045b6b0    mov ecx,[ecx+44h]"
"	      0045b6b3    mov edx,[ecx]"
"	      0045b6b5    mov ecx,[eax+44h]"
"	      0045b6b8    call dword ptr [edx+4Ch]"
);
// LINE 1888:
	asm( 
"	      0045b6bb    mov eax,1"
"	      0045b6c0    jmp near ptr 0045B6C5h"
);
// LINE 1889:
	asm( 
"	      0045b6c5    pop edi"
"	      0045b6c6    pop esi"
"	      0045b6c7    pop ebx"
"	      0045b6c8    leave"
"	      0045b6c9    ret"
);
}

// FUNCTION: COPTER_D 0x0045b6ca
int32_t TooltipWindow::CreateImage() {
	class basic_string<char> sImagePath;

// LINE 1896:
	asm( 
"	      0045b6ca    push ebp"
"	      0045b6cb    mov ebp,esp"
"	      0045b6cd    sub esp,50h"
"	      0045b6d0    push ebx"
"	      0045b6d1    push esi"
"	      0045b6d2    push edi"
"	      0045b6d3    mov this,ecx"
);
// LINE 1897:
	asm( 
"	      0045b6d6    push 10h"
"	      0045b6d8    call 0056A600h"
"	      0045b6dd    add esp,4"
"	      0045b6e0    mov [ebp-14h],eax"
"	      0045b6e3    cmp dword ptr [ebp-14h],0"
"	      0045b6e7    je near ptr 0045B726h"
"	      0045b6ed    mov eax,[ebp-14h]"
"	      0045b6f0    mov dword ptr [eax+4],0"
"	      0045b6f7    mov eax,[ebp-14h]"
"	      0045b6fa    mov eax,[eax+4]"
"	      0045b6fd    mov ecx,[ebp-14h]"
"	      0045b700    mov [ecx+8],eax"
"	      0045b703    mov eax,[ebp-14h]"
"	      0045b706    mov dword ptr [eax],0"
"	      0045b70c    mov eax,[ebp-14h]"
"	      0045b70f    mov dword ptr [eax+0Ch],1"
"	      0045b716    jmp near ptr 0045B71Bh"
"	      0045b71b    mov eax,[ebp-14h]"
"	      0045b71e    mov sImagePath.reference,eax"
"	      0045b721    jmp near ptr 0045B72Dh"
"	      0045b726    mov sImagePath.reference,0"
"	      0045b72d    mov sImagePath.c_str_ptr,0"
"	      0045b734    jmp near ptr 0045B739h"
);
// LINE 1899:
	asm( 
"	      0045b739    mov eax,this"
"	      0045b73c    cmp dword ptr [eax+0A4h],0"
"	      0045b743    jne near ptr 0045B8B8h"
);
// LINE 1900:
	asm( 
"	      0045b749    lea eax,sImagePath.c_str_ptr"
"	      0045b74c    push eax"
"	      0045b74d    mov eax,this"
"	      0045b750    add eax,0A8h"
"	      0045b755    push eax"
"	      0045b756    push 0"
"	      0045b758    push 6"
"	      0045b75a    mov ecx,604C00h"
"	      0045b75f    call 00494F82h"
"	      0045b764    jmp near ptr 0045B769h"
);
// LINE 1901:
	asm( 
"	      0045b769    push 134h"
"	      0045b76e    call 0056A600h"
"	      0045b773    add esp,4"
"	      0045b776    mov [ebp-0Ch],eax"
"	      0045b779    cmp dword ptr [ebp-0Ch],0"
"	      0045b77d    je near ptr 0045B87Fh"
"	      0045b783    cmp sImagePath.c_str_ptr,0"
"	      0045b787    je near ptr 0045B7A5h"
"	      0045b78d    mov eax,sImagePath.c_str_ptr"
"	      0045b790    mov [ebp-30h],eax"
"	      0045b793    mov eax,[ebp-30h]"
"	      0045b796    mov [ebp-38h],eax"
"	      0045b799    mov eax,[ebp-38h]"
"	      0045b79c    push eax"
"	      0045b79d    call 0056A740h"
"	      0045b7a2    add esp,4"
"	      0045b7a5    jmp near ptr 0045B7AAh"
"	      0045b7aa    mov eax,sImagePath.reference"
"	      0045b7ad    mov eax,[eax+4]"
"	      0045b7b0    inc eax"
"	      0045b7b1    push eax"
"	      0045b7b2    call 0056A600h"
"	      0045b7b7    add esp,4"
"	      0045b7ba    mov sImagePath.c_str_ptr,eax"
"	      0045b7bd    jmp near ptr 0045B7C2h"
"	      0045b7c2    mov eax,sImagePath.reference"
"	      0045b7c5    cmp dword ptr [eax+4],0"
"	      0045b7c9    je near ptr 0045B82Ch"
"	      0045b7cf    jmp near ptr 0045B7D4h"
"	      0045b7d4    jmp near ptr 0045B7D9h"
"	      0045b7d9    mov eax,sImagePath.reference"
"	      0045b7dc    cmp dword ptr [eax+4],0"
"	      0045b7e0    je near ptr 0045B7F8h"
"	      0045b7e6    mov eax,sImagePath.reference"
"	      0045b7e9    mov eax,[eax]"
"	      0045b7eb    mov [ebp-44h],eax"
"	      0045b7ee    jmp near ptr 0045B804h"
"	      0045b7f3    jmp near ptr 0045B804h"
"	      0045b7f8    mov dword ptr [ebp-44h],0"
"	      0045b7ff    jmp near ptr 0045B804h"
"	      0045b804    mov eax,sImagePath.reference"
"	      0045b807    mov eax,[eax+4]"
"	      0045b80a    mov [ebp-48h],eax"
"	      0045b80d    mov eax,sImagePath.c_str_ptr"
"	      0045b810    mov [ebp-4Ch],eax"
"	      0045b813    mov eax,[ebp-48h]"
"	      0045b816    push eax"
"	      0045b817    mov eax,[ebp-44h]"
"	      0045b81a    push eax"
"	      0045b81b    mov eax,[ebp-4Ch]"
"	      0045b81e    push eax"
"	      0045b81f    call 0056A800h"
"	      0045b824    add esp,0Ch"
"	      0045b827    jmp near ptr 0045B82Ch"
"	      0045b82c    jmp near ptr 0045B831h"
"	      0045b831    mov byte ptr [ebp-34h],0"
"	      0045b835    jmp near ptr 0045B83Ah"
"	      0045b83a    lea eax,[ebp-34h]"
"	      0045b83d    mov [ebp-3Ch],eax"
"	      0045b840    jmp near ptr 0045B845h"
"	      0045b845    mov eax,sImagePath.reference"
"	      0045b848    mov eax,[eax+4]"
"	      0045b84b    add eax,sImagePath.c_str_ptr"
"	      0045b84e    mov [ebp-40h],eax"
"	      0045b851    mov eax,[ebp-3Ch]"
"	      0045b854    mov al,[eax]"
"	      0045b856    mov ecx,[ebp-40h]"
"	      0045b859    mov [ecx],al"
"	      0045b85b    jmp near ptr 0045B860h"
"	      0045b860    jmp near ptr 0045B865h"
"	      0045b865    mov eax,sImagePath.c_str_ptr"
"	      0045b868    push eax"
"	      0045b869    mov ecx,[ebp-0Ch]"
"	      0045b86c    call 0046E6DFh"
"	      0045b871    mov ecx,this"
"	      0045b874    mov [ecx+0A4h],eax"
"	      0045b87a    jmp near ptr 0045B88Ch"
"	      0045b87f    mov eax,this"
"	      0045b882    mov dword ptr [eax+0A4h],0"
);
// LINE 1902:
	asm( 
"	      0045b88c    mov eax,ds:[606988h]"
"	      0045b891    push eax"
"	      0045b892    push 1"
"	      0045b894    mov eax,this"
"	      0045b897    mov ecx,this"
"	      0045b89a    mov ecx,[ecx+0A4h]"
"	      0045b8a0    mov edx,[ecx]"
"	      0045b8a2    mov ecx,[eax+0A4h]"
"	      0045b8a8    call dword ptr [edx+8]"
);
// LINE 1903:
	asm( 
"	      0045b8ab    push 0"
"	      0045b8ad    mov eax,this"
"	      0045b8b0    mov eax,[eax]"
"	      0045b8b2    mov ecx,this"
"	      0045b8b5    call dword ptr [eax+28h]"
);
// LINE 1905:
	asm( 
"	      0045b8b8    push 1"
"	      0045b8ba    mov ecx,this"
"	      0045b8bd    call 004A4AA0h"
"	      0045b8c2    mov [ebp-10h],eax"
"	      0045b8c5    mov eax,sImagePath.reference"
"	      0045b8c8    dec dword ptr [eax+0Ch]"
"	      0045b8cb    mov eax,sImagePath.reference"
"	      0045b8ce    cmp dword ptr [eax+0Ch],0"
"	      0045b8d2    jne near ptr 0045B948h"
"	      0045b8d8    mov eax,sImagePath.reference"
"	      0045b8db    mov [ebp-24h],eax"
"	      0045b8de    mov eax,[ebp-24h]"
"	      0045b8e1    mov [ebp-20h],eax"
"	      0045b8e4    cmp dword ptr [ebp-20h],0"
"	      0045b8e8    je near ptr 0045B948h"
"	      0045b8ee    mov eax,[ebp-20h]"
"	      0045b8f1    cmp dword ptr [eax+8],0"
"	      0045b8f5    je near ptr 0045B928h"
"	      0045b8fb    mov eax,[ebp-20h]"
"	      0045b8fe    mov eax,[eax]"
"	      0045b900    mov [ebp-28h],eax"
"	      0045b903    mov eax,[ebp-28h]"
"	      0045b906    mov [ebp-2Ch],eax"
"	      0045b909    mov eax,[ebp-2Ch]"
"	      0045b90c    push eax"
"	      0045b90d    call 0056A740h"
"	      0045b912    add esp,4"
"	      0045b915    mov eax,[ebp-20h]"
"	      0045b918    mov dword ptr [eax+8],0"
"	      0045b91f    mov eax,[ebp-20h]"
"	      0045b922    mov dword ptr [eax],0"
"	      0045b928    jmp near ptr 0045B92Dh"
"	      0045b92d    jmp near ptr 0045B932h"
"	      0045b932    mov eax,[ebp-20h]"
"	      0045b935    push eax"
"	      0045b936    call 0056A740h"
"	      0045b93b    add esp,4"
"	      0045b93e    jmp near ptr 0045B943h"
"	      0045b943    jmp near ptr 0045B948h"
"	      0045b948    jmp near ptr 0045B94Dh"
"	      0045b94d    cmp sImagePath.c_str_ptr,0"
"	      0045b951    je near ptr 0045B96Fh"
"	      0045b957    mov eax,sImagePath.c_str_ptr"
"	      0045b95a    mov [ebp-18h],eax"
"	      0045b95d    mov eax,[ebp-18h]"
"	      0045b960    mov [ebp-1Ch],eax"
"	      0045b963    mov eax,[ebp-1Ch]"
"	      0045b966    push eax"
"	      0045b967    call 0056A740h"
"	      0045b96c    add esp,4"
"	      0045b96f    jmp near ptr 0045B974h"
"	      0045b974    mov eax,[ebp-10h]"
"	      0045b977    jmp near ptr 0045B97Ch"
);
// LINE 1906:
	asm( 
"	      0045b97c    pop edi"
"	      0045b97d    pop esi"
"	      0045b97e    pop ebx"
"	      0045b97f    leave"
"	      0045b980    ret"
);
}

// FUNCTION: COPTER_D 0x0045b981
void TooltipWindow::DestroyImage() {
// LINE 1913:
	asm( 
"	      0045b981    push ebp"
"	      0045b982    mov ebp,esp"
"	      0045b984    sub esp,0Ch"
"	      0045b987    push ebx"
"	      0045b988    push esi"
"	      0045b989    push edi"
"	      0045b98a    mov this,ecx"
);
// LINE 1914:
	asm( 
"	      0045b98d    mov eax,this"
"	      0045b990    cmp dword ptr [eax+0A4h],0"
"	      0045b997    je near ptr 0045B9E4h"
);
// LINE 1915:
	asm( 
"	      0045b99d    mov eax,this"
"	      0045b9a0    mov eax,[eax+0A4h]"
"	      0045b9a6    mov [ebp-8],eax"
"	      0045b9a9    mov eax,[ebp-8]"
"	      0045b9ac    mov [ebp-4],eax"
"	      0045b9af    cmp dword ptr [ebp-4],0"
"	      0045b9b3    je near ptr 0045B9D7h"
"	      0045b9b9    mov ecx,[ebp-4]"
"	      0045b9bc    call 0046EC7Ah"
"	      0045b9c1    mov eax,[ebp-4]"
"	      0045b9c4    push eax"
"	      0045b9c5    call 0056A740h"
"	      0045b9ca    add esp,4"
"	      0045b9cd    jmp near ptr 0045B9D2h"
"	      0045b9d2    jmp near ptr 0045B9D7h"
);
// LINE 1916:
	asm( 
"	      0045b9d7    mov eax,this"
"	      0045b9da    mov dword ptr [eax+0A4h],0"
);
// LINE 1918:
	asm( 
"	      0045b9e4    mov ecx,this"
"	      0045b9e7    call 004A4CABh"
);
// LINE 1919:
	asm( 
"	      0045b9ec    jmp near ptr 0045B9F1h"
"	      0045b9f1    pop edi"
"	      0045b9f2    pop esi"
"	      0045b9f3    pop ebx"
"	      0045b9f4    leave"
"	      0045b9f5    ret"
);
}

// FUNCTION: COPTER_D 0x0045b9f6
void TooltipWindow::SetTextAndShow(class MPoint& ptNewPosition, class basic_string<char>& sNewText) {
// LINE 1926:
	asm( 
"	      0045b9f6    push ebp"
"	      0045b9f7    mov ebp,esp"
"	      0045b9f9    sub esp,4"
"	      0045b9fc    push ebx"
"	      0045b9fd    push esi"
"	      0045b9fe    push edi"
"	      0045b9ff    mov this,ecx"
);
// LINE 1927:
	asm( 
"	      0045ba02    mov eax,ptNewPosition"
"	      0045ba05    mov eax,[eax+4]"
"	      0045ba08    push eax"
"	      0045ba09    mov eax,ptNewPosition"
"	      0045ba0c    mov eax,[eax]"
"	      0045ba0e    push eax"
"	      0045ba0f    mov eax,this"
"	      0045ba12    mov eax,[eax]"
"	      0045ba14    mov ecx,this"
"	      0045ba17    call dword ptr [eax+34h]"
);
// LINE 1928:
	asm( 
"	      0045ba1a    mov eax,sNewText"
"	      0045ba1d    push eax"
"	      0045ba1e    mov eax,this"
"	      0045ba21    mov eax,[eax]"
"	      0045ba23    mov ecx,this"
"	      0045ba26    call dword ptr [eax+48h]"
);
// LINE 1929:
	asm( 
"	      0045ba29    mov eax,this"
"	      0045ba2c    mov dword ptr [eax+54h],1"
"	      0045ba33    jmp near ptr 0045BA38h"
);
// LINE 1930:
	asm( 
"	      0045ba38    jmp near ptr 0045BA3Dh"
"	      0045ba3d    pop edi"
"	      0045ba3e    pop esi"
"	      0045ba3f    pop ebx"
"	      0045ba40    leave"
"	      0045ba41    ret 8"
);
}

// FUNCTION: COPTER_D 0x0045ba44
void TooltipWindow::SetTextAndShow(class MPoint& ptNewPosition, int32_t nNewWindowTitleTextID) {
// LINE 1936:
	asm( 
"	      0045ba44    push ebp"
"	      0045ba45    mov ebp,esp"
"	      0045ba47    sub esp,4"
"	      0045ba4a    push ebx"
"	      0045ba4b    push esi"
"	      0045ba4c    push edi"
"	      0045ba4d    mov this,ecx"
);
// LINE 1937:
	asm( 
"	      0045ba50    mov eax,ptNewPosition"
"	      0045ba53    mov eax,[eax+4]"
"	      0045ba56    push eax"
"	      0045ba57    mov eax,ptNewPosition"
"	      0045ba5a    mov eax,[eax]"
"	      0045ba5c    push eax"
"	      0045ba5d    mov eax,this"
"	      0045ba60    mov eax,[eax]"
"	      0045ba62    mov ecx,this"
"	      0045ba65    call dword ptr [eax+34h]"
);
// LINE 1938:
	asm( 
"	      0045ba68    mov eax,nNewWindowTitleTextID"
"	      0045ba6b    push eax"
"	      0045ba6c    mov eax,this"
"	      0045ba6f    mov eax,[eax]"
"	      0045ba71    mov ecx,this"
"	      0045ba74    call dword ptr [eax+0C8h]"
);
// LINE 1939:
	asm( 
"	      0045ba7a    mov eax,this"
"	      0045ba7d    mov dword ptr [eax+54h],1"
"	      0045ba84    jmp near ptr 0045BA89h"
);
// LINE 1940:
	asm( 
"	      0045ba89    jmp near ptr 0045BA8Eh"
"	      0045ba8e    pop edi"
"	      0045ba8f    pop esi"
"	      0045ba90    pop ebx"
"	      0045ba91    leave"
"	      0045ba92    ret 8"
);
}

// FUNCTION: COPTER_D 0x0045ba95
void BoneheadTextEditWindow::BoneheadTextEditWindow() {
// LINE 1963:
	asm( 
"	      0045ba95    push ebp"
"	      0045ba96    mov ebp,esp"
"	      0045ba98    sub esp,10h"
"	      0045ba9b    push ebx"
"	      0045ba9c    push esi"
"	      0045ba9d    push edi"
"	      0045ba9e    mov this,ecx"
"	      0045baa1    mov ecx,this"
"	      0045baa4    call 004ACC43h"
"	      0045baa9    mov eax,this"
"	      0045baac    mov dword ptr [eax+0A4h],0"
"	      0045bab6    mov eax,this"
"	      0045bab9    mov dword ptr [eax+0A8h],0"
"	      0045bac3    mov eax,this"
"	      0045bac6    mov dword ptr [eax+0ACh],0"
"	      0045bad0    mov eax,this"
"	      0045bad3    mov dword ptr [eax+0B0h],0"
"	      0045badd    mov eax,this"
"	      0045bae0    mov dword ptr [eax+0B4h],0"
"	      0045baea    mov eax,this"
"	      0045baed    cmp dword ptr [eax+0A8h],0"
"	      0045baf4    jne near ptr 0045BB1Bh"
"	      0045bafa    lea eax,[ebp-0Ch]"
"	      0045bafd    push eax"
"	      0045bafe    call dword ptr ds:[6C3668h]"
"	      0045bb04    mov eax,[ebp-0Ch]"
"	      0045bb07    mov [ebp-4],eax"
"	      0045bb0a    mov eax,[ebp-4]"
"	      0045bb0d    mov ecx,this"
"	      0045bb10    mov [ecx+0B4h],eax"
"	      0045bb16    jmp near ptr 0045BB1Bh"
"	      0045bb1b    jmp near ptr 0045BB20h"
"	      0045bb20    mov eax,this"
"	      0045bb23    mov dword ptr [eax+0B8h],0AAE60h"
"	      0045bb2d    mov eax,this"
"	      0045bb30    mov dword ptr [eax+0BCh],0"
"	      0045bb3a    mov eax,this"
"	      0045bb3d    mov dword ptr [eax],5900F0h"
);
// LINE 1964:
	asm( 
"	      0045bb43    jmp near ptr 0045BB48h"
"	      0045bb48    mov eax,this"
"	      0045bb4b    pop edi"
"	      0045bb4c    pop esi"
"	      0045bb4d    pop ebx"
"	      0045bb4e    leave"
"	      0045bb4f    ret"
);
}

// FUNCTION: COPTER_D 0x0045bb50
void BoneheadTextEditWindow::BoneheadTextEditWindow(class MRect& rectNewWindow, int32_t nNewID, int32_t nNewWindowTitleTextID, class GraphicWindow* windowNewParent, class GraphicWindowOwner* myNewOwner, int32_t bAddToParentList, char * szNewImageFileName) {
// LINE 1977:
	asm( 
"	      0045bb50    push ebp"
"	      0045bb51    mov ebp,esp"
"	      0045bb53    sub esp,40h"
"	      0045bb56    push ebx"
"	      0045bb57    push esi"
"	      0045bb58    push edi"
"	      0045bb59    mov this,ecx"
"	      0045bb5c    mov eax,bAddToParentList"
"	      0045bb5f    push eax"
"	      0045bb60    mov eax,myNewOwner"
"	      0045bb63    push eax"
"	      0045bb64    mov eax,windowNewParent"
"	      0045bb67    push eax"
"	      0045bb68    mov eax,nNewWindowTitleTextID"
"	      0045bb6b    push eax"
"	      0045bb6c    mov eax,nNewID"
"	      0045bb6f    push eax"
"	      0045bb70    mov eax,rectNewWindow"
"	      0045bb73    push eax"
"	      0045bb74    mov ecx,this"
"	      0045bb77    call 004ACCE6h"
"	      0045bb7c    mov eax,this"
"	      0045bb7f    mov dword ptr [eax+0A4h],0"
"	      0045bb89    mov eax,this"
"	      0045bb8c    mov dword ptr [eax+0A8h],0"
"	      0045bb96    mov eax,this"
"	      0045bb99    mov dword ptr [eax+0ACh],0"
"	      0045bba3    mov eax,this"
"	      0045bba6    mov dword ptr [eax+0B0h],0"
"	      0045bbb0    mov eax,this"
"	      0045bbb3    mov dword ptr [eax+0B4h],0"
"	      0045bbbd    mov eax,this"
"	      0045bbc0    cmp dword ptr [eax+0A8h],0"
"	      0045bbc7    jne near ptr 0045BBEEh"
"	      0045bbcd    lea eax,[ebp-3Ch]"
"	      0045bbd0    push eax"
"	      0045bbd1    call dword ptr ds:[6C3668h]"
"	      0045bbd7    mov eax,[ebp-3Ch]"
"	      0045bbda    mov [ebp-34h],eax"
"	      0045bbdd    mov eax,[ebp-34h]"
"	      0045bbe0    mov ecx,this"
"	      0045bbe3    mov [ecx+0B4h],eax"
"	      0045bbe9    jmp near ptr 0045BBEEh"
"	      0045bbee    jmp near ptr 0045BBF3h"
"	      0045bbf3    mov eax,this"
"	      0045bbf6    mov dword ptr [eax+0B8h],0AAE60h"
"	      0045bc00    mov eax,this"
"	      0045bc03    mov dword ptr [eax+0BCh],0"
"	      0045bc0d    mov eax,this"
"	      0045bc10    mov dword ptr [eax+0C0h],100h"
"	      0045bc1a    mov eax,this"
"	      0045bc1d    mov dword ptr [eax],5900F0h"
);
// LINE 1978:
	asm( 
"	      0045bc23    cmp szNewImageFileName,0"
"	      0045bc27    je near ptr 0045BE87h"
);
// LINE 1979:
	asm( 
"	      0045bc2d    mov eax,this"
"	      0045bc30    mov dword ptr [eax+74h],1"
);
// LINE 1980:
	asm( 
"	      0045bc37    jmp near ptr 0045BC3Ch"
"	      0045bc3c    mov eax,szNewImageFileName"
"	      0045bc3f    push eax"
"	      0045bc40    call 0056ABE0h"
"	      0045bc45    add esp,4"
"	      0045bc48    mov [ebp-30h],eax"
"	      0045bc4b    cmp dword ptr [ebp-30h],0FFFFFFFFh"
"	      0045bc4f    jne near ptr 0045BC87h"
"	      0045bc55    push 5971E4h"
"	      0045bc5a    mov ecx,638C00h"
"	      0045bc5f    call 00569960h"
"	      0045bc64    mov [ebp-10h],eax"
"	      0045bc67    mov eax,[ebp-10h]"
"	      0045bc6a    push eax"
"	      0045bc6b    call 004011B0h"
"	      0045bc70    add esp,4"
"	      0045bc73    jmp near ptr 0045BC78h"
"	      0045bc78    push 1"
"	      0045bc7a    call 00569430h"
"	      0045bc7f    add esp,4"
"	      0045bc82    jmp near ptr 0045BC87h"
"	      0045bc87    jmp near ptr 0045BC8Ch"
"	      0045bc8c    mov eax,this"
"	      0045bc8f    mov eax,[eax+60h]"
"	      0045bc92    cmp dword ptr [eax+0Ch],1"
"	      0045bc96    ja near ptr 0045BCBDh"
"	      0045bc9c    cmp dword ptr [ebp-30h],0"
"	      0045bca0    je near ptr 0045BE3Eh"
"	      0045bca6    jmp near ptr 0045BCABh"
"	      0045bcab    mov eax,this"
"	      0045bcae    mov eax,[eax+60h]"
"	      0045bcb1    mov ecx,[ebp-30h]"
"	      0045bcb4    cmp [eax+8],ecx"
"	      0045bcb7    jae near ptr 0045BE3Eh"
"	      0045bcbd    push 10h"
"	      0045bcbf    call 0056A600h"
"	      0045bcc4    add esp,4"
"	      0045bcc7    mov [ebp-8],eax"
"	      0045bcca    cmp dword ptr [ebp-8],0"
"	      0045bcce    je near ptr 0045BD98h"
"	      0045bcd4    cmp dword ptr [ebp-30h],0FFFFFFFFh"
"	      0045bcd8    jne near ptr 0045BD10h"
"	      0045bcde    push 5971E4h"
"	      0045bce3    mov ecx,638C00h"
"	      0045bce8    call 00569960h"
"	      0045bced    mov [ebp-2Ch],eax"
"	      0045bcf0    mov eax,[ebp-2Ch]"
"	      0045bcf3    push eax"
"	      0045bcf4    call 004011B0h"
"	      0045bcf9    add esp,4"
"	      0045bcfc    jmp near ptr 0045BD01h"
"	      0045bd01    push 1"
"	      0045bd03    call 00569430h"
"	      0045bd08    add esp,4"
"	      0045bd0b    jmp near ptr 0045BD10h"
"	      0045bd10    mov eax,[ebp-30h]"
"	      0045bd13    mov ecx,[ebp-8]"
"	      0045bd16    mov [ecx+4],eax"
"	      0045bd19    mov eax,[ebp-8]"
"	      0045bd1c    mov eax,[eax+4]"
"	      0045bd1f    mov ecx,[ebp-8]"
"	      0045bd22    mov [ecx+8],eax"
"	      0045bd25    mov eax,[ebp-8]"
"	      0045bd28    cmp dword ptr [eax+8],0"
"	      0045bd2c    je near ptr 0045BD75h"
"	      0045bd32    mov eax,[ebp-8]"
"	      0045bd35    mov eax,[eax+8]"
"	      0045bd38    push eax"
"	      0045bd39    call 0056A600h"
"	      0045bd3e    add esp,4"
"	      0045bd41    mov ecx,[ebp-8]"
"	      0045bd44    mov [ecx],eax"
"	      0045bd46    mov eax,[ebp-8]"
"	      0045bd49    mov eax,[eax+4]"
"	      0045bd4c    mov [ebp-24h],eax"
"	      0045bd4f    mov eax,[ebp-8]"
"	      0045bd52    mov eax,[eax]"
"	      0045bd54    mov [ebp-28h],eax"
"	      0045bd57    mov eax,[ebp-24h]"
"	      0045bd5a    push eax"
"	      0045bd5b    mov eax,szNewImageFileName"
"	      0045bd5e    push eax"
"	      0045bd5f    mov eax,[ebp-28h]"
"	      0045bd62    push eax"
"	      0045bd63    call 0056A800h"
"	      0045bd68    add esp,0Ch"
"	      0045bd6b    jmp near ptr 0045BD70h"
"	      0045bd70    jmp near ptr 0045BD7Eh"
"	      0045bd75    mov eax,[ebp-8]"
"	      0045bd78    mov dword ptr [eax],0"
"	      0045bd7e    mov eax,[ebp-8]"
"	      0045bd81    mov dword ptr [eax+0Ch],1"
"	      0045bd88    jmp near ptr 0045BD8Dh"
"	      0045bd8d    mov eax,[ebp-8]"
"	      0045bd90    mov [ebp-4],eax"
"	      0045bd93    jmp near ptr 0045BD9Fh"
"	      0045bd98    mov dword ptr [ebp-4],0"
"	      0045bd9f    mov eax,this"
"	      0045bda2    mov eax,[eax+60h]"
"	      0045bda5    dec dword ptr [eax+0Ch]"
"	      0045bda8    mov eax,this"
"	      0045bdab    mov eax,[eax+60h]"
"	      0045bdae    cmp dword ptr [eax+0Ch],0"
"	      0045bdb2    jne near ptr 0045BE2Bh"
"	      0045bdb8    mov eax,this"
"	      0045bdbb    mov eax,[eax+60h]"
"	      0045bdbe    mov [ebp-18h],eax"
"	      0045bdc1    mov eax,[ebp-18h]"
"	      0045bdc4    mov [ebp-14h],eax"
"	      0045bdc7    cmp dword ptr [ebp-14h],0"
"	      0045bdcb    je near ptr 0045BE2Bh"
"	      0045bdd1    mov eax,[ebp-14h]"
"	      0045bdd4    cmp dword ptr [eax+8],0"
"	      0045bdd8    je near ptr 0045BE0Bh"
"	      0045bdde    mov eax,[ebp-14h]"
"	      0045bde1    mov eax,[eax]"
"	      0045bde3    mov [ebp-1Ch],eax"
"	      0045bde6    mov eax,[ebp-1Ch]"
"	      0045bde9    mov [ebp-20h],eax"
"	      0045bdec    mov eax,[ebp-20h]"
"	      0045bdef    push eax"
"	      0045bdf0    call 0056A740h"
"	      0045bdf5    add esp,4"
"	      0045bdf8    mov eax,[ebp-14h]"
"	      0045bdfb    mov dword ptr [eax+8],0"
"	      0045be02    mov eax,[ebp-14h]"
"	      0045be05    mov dword ptr [eax],0"
"	      0045be0b    jmp near ptr 0045BE10h"
"	      0045be10    jmp near ptr 0045BE15h"
"	      0045be15    mov eax,[ebp-14h]"
"	      0045be18    push eax"
"	      0045be19    call 0056A740h"
"	      0045be1e    add esp,4"
"	      0045be21    jmp near ptr 0045BE26h"
"	      0045be26    jmp near ptr 0045BE2Bh"
"	      0045be2b    jmp near ptr 0045BE30h"
"	      0045be30    mov eax,[ebp-4]"
"	      0045be33    mov ecx,this"
"	      0045be36    mov [ecx+60h],eax"
"	      0045be39    jmp near ptr 0045BE71h"
"	      0045be3e    cmp dword ptr [ebp-30h],0"
"	      0045be42    je near ptr 0045BE71h"
"	      0045be48    jmp near ptr 0045BE4Dh"
"	      0045be4d    mov eax,this"
"	      0045be50    mov eax,[eax+60h]"
"	      0045be53    mov eax,[eax]"
"	      0045be55    mov [ebp-0Ch],eax"
"	      0045be58    mov eax,[ebp-30h]"
"	      0045be5b    push eax"
"	      0045be5c    mov eax,szNewImageFileName"
"	      0045be5f    push eax"
"	      0045be60    mov eax,[ebp-0Ch]"
"	      0045be63    push eax"
"	      0045be64    call 0056A800h"
"	      0045be69    add esp,0Ch"
"	      0045be6c    jmp near ptr 0045BE71h"
"	      0045be71    mov eax,[ebp-30h]"
"	      0045be74    mov ecx,this"
"	      0045be77    mov ecx,[ecx+60h]"
"	      0045be7a    mov [ecx+4],eax"
"	      0045be7d    jmp near ptr 0045BE82h"
"	      0045be82    jmp near ptr 0045BE87h"
);
// LINE 1982:
	asm( 
"	      0045be87    jmp near ptr 0045BE8Ch"
"	      0045be8c    mov eax,this"
"	      0045be8f    pop edi"
"	      0045be90    pop esi"
"	      0045be91    pop ebx"
"	      0045be92    leave"
"	      0045be93    ret 1Ch"
);
}

// FUNCTION: COPTER_D 0x0045be96
void BoneheadTextEditWindow::BoneheadTextEditWindow(class MRect& rectNewWindow, int32_t nNewID, const class basic_string<char>& sNewWindowTitle, class GraphicWindow* windowNewParent, class GraphicWindowOwner* myNewOwner, int32_t bAddToParentList, char * szNewImageFileName) {
// LINE 1997:
	asm( 
"	      0045be96    push ebp"
"	      0045be97    mov ebp,esp"
"	      0045be99    sub esp,64h"
"	      0045be9c    push ebx"
"	      0045be9d    push esi"
"	      0045be9e    push edi"
"	      0045be9f    mov this,ecx"
"	      0045bea2    mov eax,bAddToParentList"
"	      0045bea5    push eax"
"	      0045bea6    mov eax,myNewOwner"
"	      0045bea9    push eax"
"	      0045beaa    mov eax,windowNewParent"
"	      0045bead    push eax"
"	      0045beae    mov eax,sNewWindowTitle"
"	      0045beb1    push eax"
"	      0045beb2    mov eax,nNewID"
"	      0045beb5    push eax"
"	      0045beb6    mov eax,rectNewWindow"
"	      0045beb9    push eax"
"	      0045beba    mov ecx,this"
"	      0045bebd    call 004ACDA2h"
"	      0045bec2    mov eax,this"
"	      0045bec5    mov dword ptr [eax+0A4h],0"
"	      0045becf    mov eax,this"
"	      0045bed2    mov dword ptr [eax+0A8h],0"
"	      0045bedc    mov eax,this"
"	      0045bedf    mov dword ptr [eax+0ACh],0"
"	      0045bee9    mov eax,this"
"	      0045beec    mov dword ptr [eax+0B0h],0"
"	      0045bef6    mov eax,this"
"	      0045bef9    mov dword ptr [eax+0B4h],0"
"	      0045bf03    mov eax,this"
"	      0045bf06    cmp dword ptr [eax+0A8h],0"
"	      0045bf0d    jne near ptr 0045BF34h"
"	      0045bf13    lea eax,[ebp-28h]"
"	      0045bf16    push eax"
"	      0045bf17    call dword ptr ds:[6C3668h]"
"	      0045bf1d    mov eax,[ebp-28h]"
"	      0045bf20    mov [ebp-20h],eax"
"	      0045bf23    mov eax,[ebp-20h]"
"	      0045bf26    mov ecx,this"
"	      0045bf29    mov [ecx+0B4h],eax"
"	      0045bf2f    jmp near ptr 0045BF34h"
"	      0045bf34    jmp near ptr 0045BF39h"
"	      0045bf39    mov eax,this"
"	      0045bf3c    mov dword ptr [eax+0B8h],0AAE60h"
"	      0045bf46    mov eax,this"
"	      0045bf49    mov dword ptr [eax+0BCh],0"
"	      0045bf53    mov eax,this"
"	      0045bf56    mov dword ptr [eax+0C0h],100h"
"	      0045bf60    mov eax,this"
"	      0045bf63    mov dword ptr [eax],5900F0h"
"	      0045bf69    mov byte ptr [ebp-60h],5Fh"
);
// LINE 1998:
	asm( 
"	      0045bf6d    jmp near ptr 0045BF72h"
"	      0045bf72    mov eax,this"
"	      0045bf75    mov eax,[eax+0Ch]"
"	      0045bf78    cmp dword ptr [eax+4],0FFFFFFFEh"
"	      0045bf7c    jb near ptr 0045BFB4h"
"	      0045bf82    push 5971E4h"
"	      0045bf87    mov ecx,638C00h"
"	      0045bf8c    call 00569960h"
"	      0045bf91    mov [ebp-3Ch],eax"
"	      0045bf94    mov eax,[ebp-3Ch]"
"	      0045bf97    push eax"
"	      0045bf98    call 004011B0h"
"	      0045bf9d    add esp,4"
"	      0045bfa0    jmp near ptr 0045BFA5h"
"	      0045bfa5    push 1"
"	      0045bfa7    call 00569430h"
"	      0045bfac    add esp,4"
"	      0045bfaf    jmp near ptr 0045BFB4h"
"	      0045bfb4    jmp near ptr 0045BFB9h"
"	      0045bfb9    mov eax,this"
"	      0045bfbc    mov eax,[eax+0Ch]"
"	      0045bfbf    cmp dword ptr [eax+0Ch],1"
"	      0045bfc3    jne near ptr 0045BFEBh"
"	      0045bfc9    jmp near ptr 0045BFCEh"
"	      0045bfce    jmp near ptr 0045BFD3h"
"	      0045bfd3    mov eax,this"
"	      0045bfd6    mov eax,[eax+0Ch]"
"	      0045bfd9    mov ecx,this"
"	      0045bfdc    mov ecx,[ecx+0Ch]"
"	      0045bfdf    mov ecx,[ecx+8]"
"	      0045bfe2    cmp [eax+4],ecx"
"	      0045bfe5    jb near ptr 0045C18Eh"
"	      0045bfeb    push 10h"
"	      0045bfed    call 0056A600h"
"	      0045bff2    add esp,4"
"	      0045bff5    mov [ebp-30h],eax"
"	      0045bff8    cmp dword ptr [ebp-30h],0"
"	      0045bffc    je near ptr 0045C0EDh"
"	      0045c002    jmp near ptr 0045C007h"
"	      0045c007    jmp near ptr 0045C00Ch"
"	      0045c00c    jmp near ptr 0045C011h"
"	      0045c011    mov eax,this"
"	      0045c014    mov eax,[eax+0Ch]"
"	      0045c017    cmp dword ptr [eax+4],0"
"	      0045c01b    je near ptr 0045C036h"
"	      0045c021    mov eax,this"
"	      0045c024    mov eax,[eax+0Ch]"
"	      0045c027    mov eax,[eax]"
"	      0045c029    mov [ebp-38h],eax"
"	      0045c02c    jmp near ptr 0045C042h"
"	      0045c031    jmp near ptr 0045C042h"
"	      0045c036    mov dword ptr [ebp-38h],0"
"	      0045c03d    jmp near ptr 0045C042h"
"	      0045c042    mov eax,this"
"	      0045c045    mov eax,[eax+0Ch]"
"	      0045c048    mov eax,[eax+4]"
"	      0045c04b    inc eax"
"	      0045c04c    mov [ebp-58h],eax"
"	      0045c04f    mov eax,this"
"	      0045c052    mov eax,[eax+0Ch]"
"	      0045c055    mov eax,[eax+4]"
"	      0045c058    mov [ebp-5Ch],eax"
"	      0045c05b    mov eax,[ebp-58h]"
"	      0045c05e    mov ecx,[ebp-30h]"
"	      0045c061    mov [ecx+8],eax"
"	      0045c064    mov eax,[ebp-5Ch]"
"	      0045c067    mov ecx,[ebp-30h]"
"	      0045c06a    mov [ecx+4],eax"
"	      0045c06d    mov eax,[ebp-30h]"
"	      0045c070    cmp dword ptr [eax+8],0"
"	      0045c074    je near ptr 0045C0CAh"
"	      0045c07a    mov eax,[ebp-30h]"
"	      0045c07d    mov eax,[eax+8]"
"	      0045c080    push eax"
"	      0045c081    call 0056A600h"
"	      0045c086    add esp,4"
"	      0045c089    mov ecx,[ebp-30h]"
"	      0045c08c    mov [ecx],eax"
"	      0045c08e    mov eax,[ebp-30h]"
"	      0045c091    cmp dword ptr [eax+4],0"
"	      0045c095    je near ptr 0045C0C5h"
"	      0045c09b    mov eax,[ebp-30h]"
"	      0045c09e    mov eax,[eax+4]"
"	      0045c0a1    mov [ebp-50h],eax"
"	      0045c0a4    mov eax,[ebp-30h]"
"	      0045c0a7    mov eax,[eax]"
"	      0045c0a9    mov [ebp-54h],eax"
"	      0045c0ac    mov eax,[ebp-50h]"
"	      0045c0af    push eax"
"	      0045c0b0    mov eax,[ebp-38h]"
"	      0045c0b3    push eax"
"	      0045c0b4    mov eax,[ebp-54h]"
"	      0045c0b7    push eax"
"	      0045c0b8    call 0056A800h"
"	      0045c0bd    add esp,0Ch"
"	      0045c0c0    jmp near ptr 0045C0C5h"
"	      0045c0c5    jmp near ptr 0045C0D3h"
"	      0045c0ca    mov eax,[ebp-30h]"
"	      0045c0cd    mov dword ptr [eax],0"
"	      0045c0d3    mov eax,[ebp-30h]"
"	      0045c0d6    mov dword ptr [eax+0Ch],1"
"	      0045c0dd    jmp near ptr 0045C0E2h"
"	      0045c0e2    mov eax,[ebp-30h]"
"	      0045c0e5    mov [ebp-2Ch],eax"
"	      0045c0e8    jmp near ptr 0045C0F4h"
"	      0045c0ed    mov dword ptr [ebp-2Ch],0"
"	      0045c0f4    mov eax,this"
"	      0045c0f7    mov eax,[eax+0Ch]"
"	      0045c0fa    dec dword ptr [eax+0Ch]"
"	      0045c0fd    mov eax,this"
"	      0045c100    mov eax,[eax+0Ch]"
"	      0045c103    cmp dword ptr [eax+0Ch],0"
"	      0045c107    jne near ptr 0045C180h"
"	      0045c10d    mov eax,this"
"	      0045c110    mov eax,[eax+0Ch]"
"	      0045c113    mov [ebp-44h],eax"
"	      0045c116    mov eax,[ebp-44h]"
"	      0045c119    mov [ebp-40h],eax"
"	      0045c11c    cmp dword ptr [ebp-40h],0"
"	      0045c120    je near ptr 0045C180h"
"	      0045c126    mov eax,[ebp-40h]"
"	      0045c129    cmp dword ptr [eax+8],0"
"	      0045c12d    je near ptr 0045C160h"
"	      0045c133    mov eax,[ebp-40h]"
"	      0045c136    mov eax,[eax]"
"	      0045c138    mov [ebp-48h],eax"
"	      0045c13b    mov eax,[ebp-48h]"
"	      0045c13e    mov [ebp-4Ch],eax"
"	      0045c141    mov eax,[ebp-4Ch]"
"	      0045c144    push eax"
"	      0045c145    call 0056A740h"
"	      0045c14a    add esp,4"
"	      0045c14d    mov eax,[ebp-40h]"
"	      0045c150    mov dword ptr [eax+8],0"
"	      0045c157    mov eax,[ebp-40h]"
"	      0045c15a    mov dword ptr [eax],0"
"	      0045c160    jmp near ptr 0045C165h"
"	      0045c165    jmp near ptr 0045C16Ah"
"	      0045c16a    mov eax,[ebp-40h]"
"	      0045c16d    push eax"
"	      0045c16e    call 0056A740h"
"	      0045c173    add esp,4"
"	      0045c176    jmp near ptr 0045C17Bh"
"	      0045c17b    jmp near ptr 0045C180h"
"	      0045c180    jmp near ptr 0045C185h"
"	      0045c185    mov eax,[ebp-2Ch]"
"	      0045c188    mov ecx,this"
"	      0045c18b    mov [ecx+0Ch],eax"
"	      0045c18e    jmp near ptr 0045C193h"
"	      0045c193    jmp near ptr 0045C198h"
"	      0045c198    mov eax,this"
"	      0045c19b    mov eax,[eax+0Ch]"
"	      0045c19e    mov eax,[eax+4]"
"	      0045c1a1    mov ecx,this"
"	      0045c1a4    mov ecx,[ecx+0Ch]"
"	      0045c1a7    add eax,[ecx]"
"	      0045c1a9    mov [ebp-34h],eax"
"	      0045c1ac    mov al,[ebp-60h]"
"	      0045c1af    mov ecx,[ebp-34h]"
"	      0045c1b2    mov [ecx],al"
"	      0045c1b4    jmp near ptr 0045C1B9h"
"	      0045c1b9    mov eax,this"
"	      0045c1bc    mov eax,[eax+0Ch]"
"	      0045c1bf    inc dword ptr [eax+4]"
"	      0045c1c2    jmp near ptr 0045C1C7h"
);
// LINE 1999:
	asm( 
"	      0045c1c7    cmp szNewImageFileName,0"
"	      0045c1cb    je near ptr 0045C348h"
);
// LINE 2000:
	asm( 
"	      0045c1d1    mov eax,this"
"	      0045c1d4    mov dword ptr [eax+74h],1"
);
// LINE 2001:
	asm( 
"	      0045c1db    jmp near ptr 0045C1E0h"
"	      0045c1e0    mov eax,szNewImageFileName"
"	      0045c1e3    push eax"
"	      0045c1e4    call 0056ABE0h"
"	      0045c1e9    add esp,4"
"	      0045c1ec    mov [ebp-1Ch],eax"
"	      0045c1ef    cmp dword ptr [ebp-1Ch],0FFFFFFFFh"
"	      0045c1f3    jne near ptr 0045C22Bh"
"	      0045c1f9    push 5971E4h"
"	      0045c1fe    mov ecx,638C00h"
"	      0045c203    call 00569960h"
"	      0045c208    mov [ebp-10h],eax"
"	      0045c20b    mov eax,[ebp-10h]"
"	      0045c20e    push eax"
"	      0045c20f    call 004011B0h"
"	      0045c214    add esp,4"
"	      0045c217    jmp near ptr 0045C21Ch"
"	      0045c21c    push 1"
"	      0045c21e    call 00569430h"
"	      0045c223    add esp,4"
"	      0045c226    jmp near ptr 0045C22Bh"
"	      0045c22b    jmp near ptr 0045C230h"
"	      0045c230    mov eax,this"
"	      0045c233    mov eax,[eax+60h]"
"	      0045c236    cmp dword ptr [eax+0Ch],1"
"	      0045c23a    ja near ptr 0045C261h"
"	      0045c240    cmp dword ptr [ebp-1Ch],0"
"	      0045c244    je near ptr 0045C2FFh"
"	      0045c24a    jmp near ptr 0045C24Fh"
"	      0045c24f    mov eax,this"
"	      0045c252    mov eax,[eax+60h]"
"	      0045c255    mov ecx,[ebp-1Ch]"
"	      0045c258    cmp [eax+8],ecx"
"	      0045c25b    jae near ptr 0045C2FFh"
"	      0045c261    push 10h"
"	      0045c263    call 0056A600h"
"	      0045c268    add esp,4"
"	      0045c26b    mov [ebp-8],eax"
"	      0045c26e    cmp dword ptr [ebp-8],0"
"	      0045c272    je near ptr 0045C290h"
"	      0045c278    mov eax,[ebp-1Ch]"
"	      0045c27b    push eax"
"	      0045c27c    mov eax,szNewImageFileName"
"	      0045c27f    push eax"
"	      0045c280    mov ecx,[ebp-8]"
"	      0045c283    call 0041E090h"
"	      0045c288    mov [ebp-4],eax"
"	      0045c28b    jmp near ptr 0045C297h"
"	      0045c290    mov dword ptr [ebp-4],0"
"	      0045c297    mov eax,this"
"	      0045c29a    mov eax,[eax+60h]"
"	      0045c29d    dec dword ptr [eax+0Ch]"
"	      0045c2a0    mov eax,this"
"	      0045c2a3    mov eax,[eax+60h]"
"	      0045c2a6    cmp dword ptr [eax+0Ch],0"
"	      0045c2aa    jne near ptr 0045C2ECh"
"	      0045c2b0    mov eax,this"
"	      0045c2b3    mov eax,[eax+60h]"
"	      0045c2b6    mov [ebp-18h],eax"
"	      0045c2b9    mov eax,[ebp-18h]"
"	      0045c2bc    mov [ebp-14h],eax"
"	      0045c2bf    cmp dword ptr [ebp-14h],0"
"	      0045c2c3    je near ptr 0045C2ECh"
"	      0045c2c9    mov ecx,[ebp-14h]"
"	      0045c2cc    call 0041F4B0h"
"	      0045c2d1    jmp near ptr 0045C2D6h"
"	      0045c2d6    mov eax,[ebp-14h]"
"	      0045c2d9    push eax"
"	      0045c2da    call 0056A740h"
"	      0045c2df    add esp,4"
"	      0045c2e2    jmp near ptr 0045C2E7h"
"	      0045c2e7    jmp near ptr 0045C2ECh"
"	      0045c2ec    jmp near ptr 0045C2F1h"
"	      0045c2f1    mov eax,[ebp-4]"
"	      0045c2f4    mov ecx,this"
"	      0045c2f7    mov [ecx+60h],eax"
"	      0045c2fa    jmp near ptr 0045C332h"
"	      0045c2ff    cmp dword ptr [ebp-1Ch],0"
"	      0045c303    je near ptr 0045C332h"
"	      0045c309    jmp near ptr 0045C30Eh"
"	      0045c30e    mov eax,this"
"	      0045c311    mov eax,[eax+60h]"
"	      0045c314    mov eax,[eax]"
"	      0045c316    mov [ebp-0Ch],eax"
"	      0045c319    mov eax,[ebp-1Ch]"
"	      0045c31c    push eax"
"	      0045c31d    mov eax,szNewImageFileName"
"	      0045c320    push eax"
"	      0045c321    mov eax,[ebp-0Ch]"
"	      0045c324    push eax"
"	      0045c325    call 0056A800h"
"	      0045c32a    add esp,0Ch"
"	      0045c32d    jmp near ptr 0045C332h"
"	      0045c332    mov eax,[ebp-1Ch]"
"	      0045c335    mov ecx,this"
"	      0045c338    mov ecx,[ecx+60h]"
"	      0045c33b    mov [ecx+4],eax"
"	      0045c33e    jmp near ptr 0045C343h"
"	      0045c343    jmp near ptr 0045C348h"
);
// LINE 2003:
	asm( 
"	      0045c348    jmp near ptr 0045C34Dh"
"	      0045c34d    mov eax,this"
"	      0045c350    pop edi"
"	      0045c351    pop esi"
"	      0045c352    pop ebx"
"	      0045c353    leave"
"	      0045c354    ret 1Ch"
);
}

// FUNCTION: COPTER_D 0x0045c357
void BoneheadTextEditWindow::~BoneheadTextEditWindow() {
// LINE 2009:
	asm( 
"	      0045c357    push ebp"
"	      0045c358    mov ebp,esp"
"	      0045c35a    sub esp,4"
"	      0045c35d    push ebx"
"	      0045c35e    push esi"
"	      0045c35f    push edi"
"	      0045c360    mov this,ecx"
"	      0045c363    mov eax,this"
"	      0045c366    mov dword ptr [eax],5900F0h"
);
// LINE 2010:
	asm( 
"	      0045c36c    mov ecx,this"
"	      0045c36f    call 0045C689h"
);
// LINE 2011:
	asm( 
"	      0045c374    jmp near ptr 0045C379h"
"	      0045c379    jmp near ptr 0045C37Eh"
"	      0045c37e    jmp near ptr 0045C383h"
"	      0045c383    mov ecx,this"
"	      0045c386    add ecx,84h"
"	      0045c38c    call 0049FC4Eh"
"	      0045c391    mov ecx,this"
"	      0045c394    call 004A4045h"
"	      0045c399    pop edi"
"	      0045c39a    pop esi"
"	      0045c39b    pop ebx"
"	      0045c39c    leave"
"	      0045c39d    ret"
);
}

// FUNCTION: COPTER_D 0x0045c39e
int32_t BoneheadTextEditWindow::Initialize() {
// LINE 2017:
	asm( 
"	      0045c39e    push ebp"
"	      0045c39f    mov ebp,esp"
"	      0045c3a1    sub esp,10h"
"	      0045c3a4    push ebx"
"	      0045c3a5    push esi"
"	      0045c3a6    push edi"
"	      0045c3a7    mov this,ecx"
);
// LINE 2018:
	asm( 
"	      0045c3aa    mov ecx,this"
"	      0045c3ad    call 004A44D4h"
);
// LINE 2019:
	asm( 
"	      0045c3b2    mov eax,this"
"	      0045c3b5    mov eax,[eax]"
"	      0045c3b7    mov ecx,this"
"	      0045c3ba    call dword ptr [eax+0E8h]"
);
// LINE 2020:
	asm( 
"	      0045c3c0    jmp near ptr 0045C3C5h"
"	      0045c3c5    mov eax,this"
"	      0045c3c8    cmp dword ptr [eax+0ACh],0"
"	      0045c3cf    je near ptr 0045C3DAh"
"	      0045c3d5    jmp near ptr 0045C45Bh"
"	      0045c3da    mov eax,this"
"	      0045c3dd    cmp dword ptr [eax+0A8h],1"
"	      0045c3e4    jne near ptr 0045C403h"
"	      0045c3ea    call dword ptr ds:[6C3908h]"
"	      0045c3f0    mov ecx,this"
"	      0045c3f3    mov [ecx+0ACh],eax"
"	      0045c3f9    jmp near ptr 0045C456h"
"	      0045c3fe    jmp near ptr 0045C456h"
"	      0045c403    mov eax,this"
"	      0045c406    cmp dword ptr [eax+0A8h],0"
"	      0045c40d    jne near ptr 0045C439h"
"	      0045c413    lea eax,[ebp-0Ch]"
"	      0045c416    push eax"
"	      0045c417    call dword ptr ds:[6C365Ch]"
"	      0045c41d    mov eax,[ebp-0Ch]"
"	      0045c420    mov [ebp-4],eax"
"	      0045c423    mov eax,[ebp-4]"
"	      0045c426    mov ecx,this"
"	      0045c429    mov [ecx+0ACh],eax"
"	      0045c42f    jmp near ptr 0045C456h"
"	      0045c434    jmp near ptr 0045C456h"
"	      0045c439    call dword ptr ds:[6C3908h]"
"	      0045c43f    mov ecx,3E8h"
"	      0045c444    sub edx,edx"
"	      0045c446    div ecx"
"	      0045c448    mov ecx,this"
"	      0045c44b    mov [ecx+0ACh],eax"
"	      0045c451    jmp near ptr 0045C456h"
"	      0045c456    jmp near ptr 0045C45Bh"
);
// LINE 2021:
	asm( 
"	      0045c45b    mov eax,this"
"	      0045c45e    push eax"
"	      0045c45f    call 004A7470h"
"	      0045c464    add esp,4"
);
// LINE 2022:
	asm( 
"	      0045c467    mov eax,1"
"	      0045c46c    jmp near ptr 0045C471h"
);
// LINE 2023:
	asm( 
"	      0045c471    pop edi"
"	      0045c472    pop esi"
"	      0045c473    pop ebx"
"	      0045c474    leave"
"	      0045c475    ret"
);
}

// FUNCTION: COPTER_D 0x0045c476
int32_t BoneheadTextEditWindow::CreateImage() {
	char[260] szFullPath;

// LINE 2029:
	asm( 
"	      0045c476    push ebp"
"	      0045c477    mov ebp,esp"
"	      0045c479    sub esp,12Ch"
"	      0045c47f    push ebx"
"	      0045c480    push esi"
"	      0045c481    push edi"
"	      0045c482    mov this,ecx"
);
// LINE 2032:
	asm( 
"	      0045c488    mov eax,this"
"	      0045c48e    cmp dword ptr [eax+0A4h],0"
"	      0045c495    jne near ptr 0045C67Ah"
"	      0045c49b    jmp near ptr 0045C4A0h"
"	      0045c4a0    mov eax,this"
"	      0045c4a6    mov eax,[eax+60h]"
"	      0045c4a9    cmp dword ptr [eax+4],0"
"	      0045c4ad    je near ptr 0045C67Ah"
);
// LINE 2033:
	asm( 
"	      0045c4b3    mov eax,this"
"	      0045c4b9    cmp dword ptr [eax+5Ch],0"
"	      0045c4bd    je near ptr 0045C4EDh"
"	      0045c4c3    mov eax,this"
"	      0045c4c9    mov eax,[eax+5Ch]"
"	      0045c4cc    mov [ebp-10Ch],eax"
"	      0045c4d2    mov eax,[ebp-10Ch]"
"	      0045c4d8    mov [ebp-114h],eax"
"	      0045c4de    mov eax,[ebp-114h]"
"	      0045c4e4    push eax"
"	      0045c4e5    call 0056A740h"
"	      0045c4ea    add esp,4"
"	      0045c4ed    jmp near ptr 0045C4F2h"
"	      0045c4f2    mov eax,this"
"	      0045c4f8    mov eax,[eax+60h]"
"	      0045c4fb    mov eax,[eax+4]"
"	      0045c4fe    inc eax"
"	      0045c4ff    push eax"
"	      0045c500    call 0056A600h"
"	      0045c505    add esp,4"
"	      0045c508    mov ecx,this"
"	      0045c50e    mov [ecx+5Ch],eax"
"	      0045c511    jmp near ptr 0045C516h"
"	      0045c516    mov eax,this"
"	      0045c51c    mov eax,[eax+60h]"
"	      0045c51f    cmp dword ptr [eax+4],0"
"	      0045c523    je near ptr 0045C5B3h"
"	      0045c529    jmp near ptr 0045C52Eh"
"	      0045c52e    jmp near ptr 0045C533h"
"	      0045c533    mov eax,this"
"	      0045c539    mov eax,[eax+60h]"
"	      0045c53c    cmp dword ptr [eax+4],0"
"	      0045c540    je near ptr 0045C561h"
"	      0045c546    mov eax,this"
"	      0045c54c    mov eax,[eax+60h]"
"	      0045c54f    mov eax,[eax]"
"	      0045c551    mov [ebp-120h],eax"
"	      0045c557    jmp near ptr 0045C570h"
"	      0045c55c    jmp near ptr 0045C570h"
"	      0045c561    mov dword ptr [ebp-120h],0"
"	      0045c56b    jmp near ptr 0045C570h"
"	      0045c570    mov eax,this"
"	      0045c576    mov eax,[eax+60h]"
"	      0045c579    mov eax,[eax+4]"
"	      0045c57c    mov [ebp-124h],eax"
"	      0045c582    mov eax,this"
"	      0045c588    mov eax,[eax+5Ch]"
"	      0045c58b    mov [ebp-128h],eax"
"	      0045c591    mov eax,[ebp-124h]"
"	      0045c597    push eax"
"	      0045c598    mov eax,[ebp-120h]"
"	      0045c59e    push eax"
"	      0045c59f    mov eax,[ebp-128h]"
"	      0045c5a5    push eax"
"	      0045c5a6    call 0056A800h"
"	      0045c5ab    add esp,0Ch"
"	      0045c5ae    jmp near ptr 0045C5B3h"
"	      0045c5b3    jmp near ptr 0045C5B8h"
"	      0045c5b8    mov byte ptr [ebp-110h],0"
"	      0045c5bf    jmp near ptr 0045C5C4h"
"	      0045c5c4    lea eax,[ebp-110h]"
"	      0045c5ca    mov [ebp-118h],eax"
"	      0045c5d0    jmp near ptr 0045C5D5h"
"	      0045c5d5    mov eax,this"
"	      0045c5db    mov eax,[eax+60h]"
"	      0045c5de    mov eax,[eax+4]"
"	      0045c5e1    mov ecx,this"
"	      0045c5e7    add eax,[ecx+5Ch]"
"	      0045c5ea    mov [ebp-11Ch],eax"
"	      0045c5f0    mov eax,[ebp-118h]"
"	      0045c5f6    mov al,[eax]"
"	      0045c5f8    mov ecx,[ebp-11Ch]"
"	      0045c5fe    mov [ecx],al"
"	      0045c600    jmp near ptr 0045C605h"
"	      0045c605    jmp near ptr 0045C60Ah"
"	      0045c60a    lea eax,szFullPath[0]"
"	      0045c610    push eax"
"	      0045c611    mov eax,this"
"	      0045c617    mov eax,[eax+5Ch]"
"	      0045c61a    push eax"
"	      0045c61b    push 0"
"	      0045c61d    push 6"
"	      0045c61f    call 0049172Bh"
"	      0045c624    add esp,10h"
);
// LINE 2034:
	asm( 
"	      0045c627    push 134h"
"	      0045c62c    call 0056A600h"
"	      0045c631    add esp,4"
"	      0045c634    mov [ebp-108h],eax"
"	      0045c63a    cmp dword ptr [ebp-108h],0"
"	      0045c641    je near ptr 0045C66Ah"
"	      0045c647    lea eax,szFullPath[0]"
"	      0045c64d    push eax"
"	      0045c64e    mov ecx,[ebp-108h]"
"	      0045c654    call 0046E6DFh"
"	      0045c659    mov ecx,this"
"	      0045c65f    mov [ecx+0A4h],eax"
"	      0045c665    jmp near ptr 0045C67Ah"
"	      0045c66a    mov eax,this"
"	      0045c670    mov dword ptr [eax+0A4h],0"
);
// LINE 2036:
	asm( 
"	      0045c67a    mov eax,1"
"	      0045c67f    jmp near ptr 0045C684h"
);
// LINE 2037:
	asm( 
"	      0045c684    pop edi"
"	      0045c685    pop esi"
"	      0045c686    pop ebx"
"	      0045c687    leave"
"	      0045c688    ret"
);
}

// FUNCTION: COPTER_D 0x0045c689
void BoneheadTextEditWindow::DestroyImage() {
// LINE 2042:
	asm( 
"	      0045c689    push ebp"
"	      0045c68a    mov ebp,esp"
"	      0045c68c    sub esp,0Ch"
"	      0045c68f    push ebx"
"	      0045c690    push esi"
"	      0045c691    push edi"
"	      0045c692    mov this,ecx"
);
// LINE 2043:
	asm( 
"	      0045c695    mov eax,this"
"	      0045c698    cmp dword ptr [eax+0A4h],0"
"	      0045c69f    je near ptr 0045C6ECh"
);
// LINE 2044:
	asm( 
"	      0045c6a5    mov eax,this"
"	      0045c6a8    mov eax,[eax+0A4h]"
"	      0045c6ae    mov [ebp-8],eax"
"	      0045c6b1    mov eax,[ebp-8]"
"	      0045c6b4    mov [ebp-4],eax"
"	      0045c6b7    cmp dword ptr [ebp-4],0"
"	      0045c6bb    je near ptr 0045C6DFh"
"	      0045c6c1    mov ecx,[ebp-4]"
"	      0045c6c4    call 0046EC7Ah"
"	      0045c6c9    mov eax,[ebp-4]"
"	      0045c6cc    push eax"
"	      0045c6cd    call 0056A740h"
"	      0045c6d2    add esp,4"
"	      0045c6d5    jmp near ptr 0045C6DAh"
"	      0045c6da    jmp near ptr 0045C6DFh"
);
// LINE 2045:
	asm( 
"	      0045c6df    mov eax,this"
"	      0045c6e2    mov dword ptr [eax+0A4h],0"
);
// LINE 2047:
	asm( 
"	      0045c6ec    jmp near ptr 0045C6F1h"
"	      0045c6f1    pop edi"
"	      0045c6f2    pop esi"
"	      0045c6f3    pop ebx"
"	      0045c6f4    leave"
"	      0045c6f5    ret"
);
}

// FUNCTION: COPTER_D 0x0045c6f6
int32_t BoneheadTextEditWindow::DrawSelf() {
	char * chCaret;

// LINE 2053:
	asm( 
"	      0045c6f6    push ebp"
"	      0045c6f7    mov ebp,esp"
"	      0045c6f9    sub esp,1Ch"
"	      0045c6fc    push ebx"
"	      0045c6fd    push esi"
"	      0045c6fe    push edi"
"	      0045c6ff    mov this,ecx"
);
// LINE 2056:
	asm( 
"	      0045c702    mov eax,this"
"	      0045c705    cmp dword ptr [eax+0BCh],0"
"	      0045c70c    je near ptr 0045C859h"
);
// LINE 2062:
	asm( 
"	      0045c712    jmp near ptr 0045C717h"
"	      0045c717    jmp near ptr 0045C71Ch"
"	      0045c71c    mov eax,this"
"	      0045c71f    mov eax,[eax+0Ch]"
"	      0045c722    cmp dword ptr [eax+4],0"
"	      0045c726    je near ptr 0045C74Bh"
"	      0045c72c    mov eax,this"
"	      0045c72f    mov eax,[eax+0Ch]"
"	      0045c732    mov eax,[eax+4]"
"	      0045c735    dec eax"
"	      0045c736    mov ecx,this"
"	      0045c739    mov ecx,[ecx+0Ch]"
"	      0045c73c    add eax,[ecx]"
"	      0045c73e    mov chCaret,eax"
"	      0045c741    jmp near ptr 0045C76Dh"
"	      0045c746    jmp near ptr 0045C75Dh"
"	      0045c74b    mov eax,this"
"	      0045c74e    mov eax,[eax+0Ch]"
"	      0045c751    mov eax,[eax+4]"
"	      0045c754    dec eax"
"	      0045c755    mov chCaret,eax"
"	      0045c758    jmp near ptr 0045C76Dh"
"	      0045c75d    mov eax,this"
"	      0045c760    mov eax,[eax+0Ch]"
"	      0045c763    mov eax,[eax+4]"
"	      0045c766    dec eax"
"	      0045c767    add eax,[ebp-14h]"
"	      0045c76a    mov chCaret,eax"
);
// LINE 2063:
	asm( 
"	      0045c76d    mov eax,chCaret"
"	      0045c770    movsx eax,byte ptr [eax]"
"	      0045c773    cmp eax,20h"
"	      0045c776    jne near ptr 0045C787h"
);
// LINE 2064:
	asm( 
"	      0045c77c    mov eax,chCaret"
"	      0045c77f    mov byte ptr [eax],5Fh"
);
// LINE 2065:
	asm( 
"	      0045c782    jmp near ptr 0045C78Dh"
);
// LINE 2066:
	asm( 
"	      0045c787    mov eax,chCaret"
"	      0045c78a    mov byte ptr [eax],20h"
);
// LINE 2067:
	asm( 
"	      0045c78d    mov eax,this"
"	      0045c790    mov dword ptr [eax+0B0h],0"
"	      0045c79a    mov eax,this"
"	      0045c79d    mov dword ptr [eax+0ACh],0"
"	      0045c7a7    jmp near ptr 0045C7ACh"
"	      0045c7ac    jmp near ptr 0045C7B1h"
"	      0045c7b1    mov eax,this"
"	      0045c7b4    cmp dword ptr [eax+0ACh],0"
"	      0045c7bb    je near ptr 0045C7C6h"
"	      0045c7c1    jmp near ptr 0045C847h"
"	      0045c7c6    mov eax,this"
"	      0045c7c9    cmp dword ptr [eax+0A8h],1"
"	      0045c7d0    jne near ptr 0045C7EFh"
"	      0045c7d6    call dword ptr ds:[6C3908h]"
"	      0045c7dc    mov ecx,this"
"	      0045c7df    mov [ecx+0ACh],eax"
"	      0045c7e5    jmp near ptr 0045C842h"
"	      0045c7ea    jmp near ptr 0045C842h"
"	      0045c7ef    mov eax,this"
"	      0045c7f2    cmp dword ptr [eax+0A8h],0"
"	      0045c7f9    jne near ptr 0045C825h"
"	      0045c7ff    lea eax,[ebp-10h]"
"	      0045c802    push eax"
"	      0045c803    call dword ptr ds:[6C365Ch]"
"	      0045c809    mov eax,[ebp-10h]"
"	      0045c80c    mov [ebp-8],eax"
"	      0045c80f    mov eax,[ebp-8]"
"	      0045c812    mov ecx,this"
"	      0045c815    mov [ecx+0ACh],eax"
"	      0045c81b    jmp near ptr 0045C842h"
"	      0045c820    jmp near ptr 0045C842h"
"	      0045c825    call dword ptr ds:[6C3908h]"
"	      0045c82b    mov ecx,3E8h"
"	      0045c830    sub edx,edx"
"	      0045c832    div ecx"
"	      0045c834    mov ecx,this"
"	      0045c837    mov [ecx+0ACh],eax"
"	      0045c83d    jmp near ptr 0045C842h"
"	      0045c842    jmp near ptr 0045C847h"
"	      0045c847    jmp near ptr 0045C84Ch"
);
// LINE 2068:
	asm( 
"	      0045c84c    mov eax,this"
"	      0045c84f    mov dword ptr [eax+0BCh],0"
);
// LINE 2071:
	asm( 
"	      0045c859    mov eax,this"
"	      0045c85c    cmp dword ptr [eax+74h],0"
"	      0045c860    je near ptr 0045C8EEh"
);
// LINE 2072:
	asm( 
"	      0045c866    mov eax,this"
"	      0045c869    cmp dword ptr [eax+0A4h],0"
"	      0045c870    je near ptr 0045C8CFh"
);
// LINE 2074:
	asm( 
"	      0045c876    jmp near ptr 0045C87Bh"
"	      0045c87b    jmp near ptr 0045C880h"
"	      0045c880    mov eax,this"
"	      0045c883    mov eax,[eax+2Ch]"
"	      0045c886    mov ecx,this"
"	      0045c889    sub eax,[ecx+24h]"
"	      0045c88c    push eax"
"	      0045c88d    mov eax,this"
"	      0045c890    mov eax,[eax+28h]"
"	      0045c893    mov ecx,this"
"	      0045c896    sub eax,[ecx+20h]"
"	      0045c899    push eax"
"	      0045c89a    push 0"
"	      0045c89c    push 0"
"	      0045c89e    mov eax,this"
"	      0045c8a1    mov eax,[eax+24h]"
"	      0045c8a4    push eax"
"	      0045c8a5    mov eax,this"
"	      0045c8a8    mov eax,[eax+20h]"
"	      0045c8ab    push eax"
"	      0045c8ac    mov eax,this"
"	      0045c8af    mov eax,[eax+44h]"
"	      0045c8b2    push eax"
"	      0045c8b3    mov eax,this"
"	      0045c8b6    mov ecx,this"
"	      0045c8b9    mov ecx,[ecx+0A4h]"
"	      0045c8bf    mov edx,[ecx]"
"	      0045c8c1    mov ecx,[eax+0A4h]"
"	      0045c8c7    call dword ptr [edx+0Ch]"
);
// LINE 2076:
	asm( 
"	      0045c8ca    jmp near ptr 0045C8EEh"
);
// LINE 2077:
	asm( 
"	      0045c8cf    mov eax,this"
"	      0045c8d2    add eax,20h"
"	      0045c8d5    push eax"
"	      0045c8d6    mov eax,this"
"	      0045c8d9    mov eax,[eax+7Ch]"
"	      0045c8dc    push eax"
"	      0045c8dd    mov eax,this"
"	      0045c8e0    mov ecx,this"
"	      0045c8e3    mov ecx,[ecx+44h]"
"	      0045c8e6    mov edx,[ecx]"
"	      0045c8e8    mov ecx,[eax+44h]"
"	      0045c8eb    call dword ptr [edx+44h]"
);
// LINE 2082:
	asm( 
"	      0045c8ee    jmp near ptr 0045C8F3h"
"	      0045c8f3    jmp near ptr 0045C8F8h"
"	      0045c8f8    mov eax,this"
"	      0045c8fb    mov eax,[eax+0Ch]"
"	      0045c8fe    cmp dword ptr [eax+4],0"
"	      0045c902    je near ptr 0045C91Dh"
"	      0045c908    mov eax,this"
"	      0045c90b    mov eax,[eax+0Ch]"
"	      0045c90e    mov eax,[eax]"
"	      0045c910    mov [ebp-18h],eax"
"	      0045c913    jmp near ptr 0045C929h"
"	      0045c918    jmp near ptr 0045C929h"
"	      0045c91d    mov dword ptr [ebp-18h],0"
"	      0045c924    jmp near ptr 0045C929h"
"	      0045c929    mov eax,this"
"	      0045c92c    add eax,84h"
"	      0045c931    push eax"
"	      0045c932    mov eax,this"
"	      0045c935    add eax,20h"
"	      0045c938    push eax"
"	      0045c939    mov eax,this"
"	      0045c93c    mov eax,[eax+0A0h]"
"	      0045c942    push eax"
"	      0045c943    mov eax,this"
"	      0045c946    mov eax,[eax+0Ch]"
"	      0045c949    mov eax,[eax+4]"
"	      0045c94c    push eax"
"	      0045c94d    mov eax,[ebp-18h]"
"	      0045c950    push eax"
"	      0045c951    mov eax,this"
"	      0045c954    mov ecx,this"
"	      0045c957    mov ecx,[ecx+44h]"
"	      0045c95a    mov edx,[ecx]"
"	      0045c95c    mov ecx,[eax+44h]"
"	      0045c95f    call dword ptr [edx+48h]"
);
// LINE 2085:
	asm( 
"	      0045c962    mov eax,this"
"	      0045c965    cmp dword ptr [eax+6Ch],0"
"	      0045c969    je near ptr 0045C97Ch"
);
// LINE 2086:
	asm( 
"	      0045c96f    push 0"
"	      0045c971    mov eax,this"
"	      0045c974    mov eax,[eax]"
"	      0045c976    mov ecx,this"
"	      0045c979    call dword ptr [eax+2Ch]"
);
// LINE 2087:
	asm( 
"	      0045c97c    mov eax,1"
"	      0045c981    jmp near ptr 0045C986h"
);
// LINE 2088:
	asm( 
"	      0045c986    pop edi"
"	      0045c987    pop esi"
"	      0045c988    pop ebx"
"	      0045c989    leave"
"	      0045c98a    ret"
);
}

// FUNCTION: COPTER_D 0x0045c98b
long BoneheadTextEditWindow::DoCharacter(long lCharacter) {
	unsigned char * chCharacter;

// LINE 2095:
	asm( 
"	      0045c98b    push ebp"
"	      0045c98c    mov ebp,esp"
"	      0045c98e    sub esp,48h"
"	      0045c991    push ebx"
"	      0045c992    push esi"
"	      0045c993    push edi"
"	      0045c994    mov this,ecx"
);
// LINE 2098:
	asm( 
"	      0045c997    cmp lCharacter,20h"
"	      0045c99b    jge near ptr 0045C9A8h"
);
// LINE 2099:
	asm( 
"	      0045c9a1    xor eax,eax"
"	      0045c9a3    jmp near ptr 0045CCF6h"
);
// LINE 2101:
	asm( 
"	      0045c9a8    jmp near ptr 0045C9ADh"
"	      0045c9ad    mov eax,this"
"	      0045c9b0    mov eax,[eax+0Ch]"
"	      0045c9b3    mov ecx,this"
"	      0045c9b6    mov ecx,[ecx+0C0h]"
"	      0045c9bc    cmp [eax+4],ecx"
"	      0045c9bf    jb near ptr 0045C9CCh"
);
// LINE 2102:
	asm( 
"	      0045c9c5    xor eax,eax"
"	      0045c9c7    jmp near ptr 0045CCF6h"
);
// LINE 2105:
	asm( 
"	      0045c9cc    jmp near ptr 0045C9D1h"
"	      0045c9d1    jmp near ptr 0045C9D6h"
"	      0045c9d6    mov eax,this"
"	      0045c9d9    mov eax,[eax+0Ch]"
"	      0045c9dc    cmp dword ptr [eax+4],0"
"	      0045c9e0    je near ptr 0045C9FBh"
"	      0045c9e6    mov eax,this"
"	      0045c9e9    mov eax,[eax+0Ch]"
"	      0045c9ec    mov eax,[eax]"
"	      0045c9ee    mov [ebp-8],eax"
"	      0045c9f1    jmp near ptr 0045CA07h"
"	      0045c9f6    jmp near ptr 0045CA07h"
"	      0045c9fb    mov dword ptr [ebp-8],0"
"	      0045ca02    jmp near ptr 0045CA07h"
"	      0045ca07    mov eax,this"
"	      0045ca0a    mov eax,[eax+0Ch]"
"	      0045ca0d    mov eax,[eax+4]"
"	      0045ca10    mov ecx,[ebp-8]"
"	      0045ca13    mov al,[eax+ecx-1]"
"	      0045ca17    mov [ebp-44h],al"
"	      0045ca1a    jmp near ptr 0045CA1Fh"
"	      0045ca1f    mov eax,this"
"	      0045ca22    mov eax,[eax+0Ch]"
"	      0045ca25    cmp dword ptr [eax+4],0FFFFFFFEh"
"	      0045ca29    jb near ptr 0045CA61h"
"	      0045ca2f    push 5971E4h"
"	      0045ca34    mov ecx,638C00h"
"	      0045ca39    call 00569960h"
"	      0045ca3e    mov [ebp-20h],eax"
"	      0045ca41    mov eax,[ebp-20h]"
"	      0045ca44    push eax"
"	      0045ca45    call 004011B0h"
"	      0045ca4a    add esp,4"
"	      0045ca4d    jmp near ptr 0045CA52h"
"	      0045ca52    push 1"
"	      0045ca54    call 00569430h"
"	      0045ca59    add esp,4"
"	      0045ca5c    jmp near ptr 0045CA61h"
"	      0045ca61    jmp near ptr 0045CA66h"
"	      0045ca66    mov eax,this"
"	      0045ca69    mov eax,[eax+0Ch]"
"	      0045ca6c    cmp dword ptr [eax+0Ch],1"
"	      0045ca70    jne near ptr 0045CA98h"
"	      0045ca76    jmp near ptr 0045CA7Bh"
"	      0045ca7b    jmp near ptr 0045CA80h"
"	      0045ca80    mov eax,this"
"	      0045ca83    mov eax,[eax+0Ch]"
"	      0045ca86    mov ecx,this"
"	      0045ca89    mov ecx,[ecx+0Ch]"
"	      0045ca8c    mov ecx,[ecx+8]"
"	      0045ca8f    cmp [eax+4],ecx"
"	      0045ca92    jb near ptr 0045CC3Bh"
"	      0045ca98    push 10h"
"	      0045ca9a    call 0056A600h"
"	      0045ca9f    add esp,4"
"	      0045caa2    mov [ebp-14h],eax"
"	      0045caa5    cmp dword ptr [ebp-14h],0"
"	      0045caa9    je near ptr 0045CB9Ah"
"	      0045caaf    jmp near ptr 0045CAB4h"
"	      0045cab4    jmp near ptr 0045CAB9h"
"	      0045cab9    jmp near ptr 0045CABEh"
"	      0045cabe    mov eax,this"
"	      0045cac1    mov eax,[eax+0Ch]"
"	      0045cac4    cmp dword ptr [eax+4],0"
"	      0045cac8    je near ptr 0045CAE3h"
"	      0045cace    mov eax,this"
"	      0045cad1    mov eax,[eax+0Ch]"
"	      0045cad4    mov eax,[eax]"
"	      0045cad6    mov [ebp-1Ch],eax"
"	      0045cad9    jmp near ptr 0045CAEFh"
"	      0045cade    jmp near ptr 0045CAEFh"
"	      0045cae3    mov dword ptr [ebp-1Ch],0"
"	      0045caea    jmp near ptr 0045CAEFh"
"	      0045caef    mov eax,this"
"	      0045caf2    mov eax,[eax+0Ch]"
"	      0045caf5    mov eax,[eax+4]"
"	      0045caf8    inc eax"
"	      0045caf9    mov [ebp-3Ch],eax"
"	      0045cafc    mov eax,this"
"	      0045caff    mov eax,[eax+0Ch]"
"	      0045cb02    mov eax,[eax+4]"
"	      0045cb05    mov [ebp-40h],eax"
"	      0045cb08    mov eax,[ebp-3Ch]"
"	      0045cb0b    mov ecx,[ebp-14h]"
"	      0045cb0e    mov [ecx+8],eax"
"	      0045cb11    mov eax,[ebp-40h]"
"	      0045cb14    mov ecx,[ebp-14h]"
"	      0045cb17    mov [ecx+4],eax"
"	      0045cb1a    mov eax,[ebp-14h]"
"	      0045cb1d    cmp dword ptr [eax+8],0"
"	      0045cb21    je near ptr 0045CB77h"
"	      0045cb27    mov eax,[ebp-14h]"
"	      0045cb2a    mov eax,[eax+8]"
"	      0045cb2d    push eax"
"	      0045cb2e    call 0056A600h"
"	      0045cb33    add esp,4"
"	      0045cb36    mov ecx,[ebp-14h]"
"	      0045cb39    mov [ecx],eax"
"	      0045cb3b    mov eax,[ebp-14h]"
"	      0045cb3e    cmp dword ptr [eax+4],0"
"	      0045cb42    je near ptr 0045CB72h"
"	      0045cb48    mov eax,[ebp-14h]"
"	      0045cb4b    mov eax,[eax+4]"
"	      0045cb4e    mov [ebp-34h],eax"
"	      0045cb51    mov eax,[ebp-14h]"
"	      0045cb54    mov eax,[eax]"
"	      0045cb56    mov [ebp-38h],eax"
"	      0045cb59    mov eax,[ebp-34h]"
"	      0045cb5c    push eax"
"	      0045cb5d    mov eax,[ebp-1Ch]"
"	      0045cb60    push eax"
"	      0045cb61    mov eax,[ebp-38h]"
"	      0045cb64    push eax"
"	      0045cb65    call 0056A800h"
"	      0045cb6a    add esp,0Ch"
"	      0045cb6d    jmp near ptr 0045CB72h"
"	      0045cb72    jmp near ptr 0045CB80h"
"	      0045cb77    mov eax,[ebp-14h]"
"	      0045cb7a    mov dword ptr [eax],0"
"	      0045cb80    mov eax,[ebp-14h]"
"	      0045cb83    mov dword ptr [eax+0Ch],1"
"	      0045cb8a    jmp near ptr 0045CB8Fh"
"	      0045cb8f    mov eax,[ebp-14h]"
"	      0045cb92    mov [ebp-10h],eax"
"	      0045cb95    jmp near ptr 0045CBA1h"
"	      0045cb9a    mov dword ptr [ebp-10h],0"
"	      0045cba1    mov eax,this"
"	      0045cba4    mov eax,[eax+0Ch]"
"	      0045cba7    dec dword ptr [eax+0Ch]"
"	      0045cbaa    mov eax,this"
"	      0045cbad    mov eax,[eax+0Ch]"
"	      0045cbb0    cmp dword ptr [eax+0Ch],0"
"	      0045cbb4    jne near ptr 0045CC2Dh"
"	      0045cbba    mov eax,this"
"	      0045cbbd    mov eax,[eax+0Ch]"
"	      0045cbc0    mov [ebp-28h],eax"
"	      0045cbc3    mov eax,[ebp-28h]"
"	      0045cbc6    mov [ebp-24h],eax"
"	      0045cbc9    cmp dword ptr [ebp-24h],0"
"	      0045cbcd    je near ptr 0045CC2Dh"
"	      0045cbd3    mov eax,[ebp-24h]"
"	      0045cbd6    cmp dword ptr [eax+8],0"
"	      0045cbda    je near ptr 0045CC0Dh"
"	      0045cbe0    mov eax,[ebp-24h]"
"	      0045cbe3    mov eax,[eax]"
"	      0045cbe5    mov [ebp-2Ch],eax"
"	      0045cbe8    mov eax,[ebp-2Ch]"
"	      0045cbeb    mov [ebp-30h],eax"
"	      0045cbee    mov eax,[ebp-30h]"
"	      0045cbf1    push eax"
"	      0045cbf2    call 0056A740h"
"	      0045cbf7    add esp,4"
"	      0045cbfa    mov eax,[ebp-24h]"
"	      0045cbfd    mov dword ptr [eax+8],0"
"	      0045cc04    mov eax,[ebp-24h]"
"	      0045cc07    mov dword ptr [eax],0"
"	      0045cc0d    jmp near ptr 0045CC12h"
"	      0045cc12    jmp near ptr 0045CC17h"
"	      0045cc17    mov eax,[ebp-24h]"
"	      0045cc1a    push eax"
"	      0045cc1b    call 0056A740h"
"	      0045cc20    add esp,4"
"	      0045cc23    jmp near ptr 0045CC28h"
"	      0045cc28    jmp near ptr 0045CC2Dh"
"	      0045cc2d    jmp near ptr 0045CC32h"
"	      0045cc32    mov eax,[ebp-10h]"
"	      0045cc35    mov ecx,this"
"	      0045cc38    mov [ecx+0Ch],eax"
"	      0045cc3b    jmp near ptr 0045CC40h"
"	      0045cc40    jmp near ptr 0045CC45h"
"	      0045cc45    mov eax,this"
"	      0045cc48    mov eax,[eax+0Ch]"
"	      0045cc4b    mov eax,[eax+4]"
"	      0045cc4e    mov ecx,this"
"	      0045cc51    mov ecx,[ecx+0Ch]"
"	      0045cc54    add eax,[ecx]"
"	      0045cc56    mov [ebp-18h],eax"
"	      0045cc59    mov al,[ebp-44h]"
"	      0045cc5c    mov ecx,[ebp-18h]"
"	      0045cc5f    mov [ecx],al"
"	      0045cc61    jmp near ptr 0045CC66h"
"	      0045cc66    mov eax,this"
"	      0045cc69    mov eax,[eax+0Ch]"
"	      0045cc6c    inc dword ptr [eax+4]"
"	      0045cc6f    jmp near ptr 0045CC74h"
);
// LINE 2106:
	asm( 
"	      0045cc74    jmp near ptr 0045CC79h"
"	      0045cc79    jmp near ptr 0045CC7Eh"
"	      0045cc7e    mov eax,this"
"	      0045cc81    mov eax,[eax+0Ch]"
"	      0045cc84    cmp dword ptr [eax+4],0"
"	      0045cc88    je near ptr 0045CCAFh"
"	      0045cc8e    mov eax,this"
"	      0045cc91    mov eax,[eax+0Ch]"
"	      0045cc94    mov eax,[eax+4]"
"	      0045cc97    sub eax,2"
"	      0045cc9a    mov ecx,this"
"	      0045cc9d    mov ecx,[ecx+0Ch]"
"	      0045cca0    add eax,[ecx]"
"	      0045cca2    mov chCharacter,eax"
"	      0045cca5    jmp near ptr 0045CCD5h"
"	      0045ccaa    jmp near ptr 0045CCC3h"
"	      0045ccaf    mov eax,this"
"	      0045ccb2    mov eax,[eax+0Ch]"
"	      0045ccb5    mov eax,[eax+4]"
"	      0045ccb8    sub eax,2"
"	      0045ccbb    mov chCharacter,eax"
"	      0045ccbe    jmp near ptr 0045CCD5h"
"	      0045ccc3    mov eax,this"
"	      0045ccc6    mov eax,[eax+0Ch]"
"	      0045ccc9    mov eax,[eax+4]"
"	      0045cccc    sub eax,2"
"	      0045cccf    add eax,[ebp-0Ch]"
"	      0045ccd2    mov chCharacter,eax"
);
// LINE 2107:
	asm( 
"	      0045ccd5    mov al,[ebp+8]"
"	      0045ccd8    mov ecx,chCharacter"
"	      0045ccdb    mov [ecx],al"
);
// LINE 2108:
	asm( 
"	      0045ccdd    push 1"
"	      0045ccdf    push 1"
"	      0045cce1    mov eax,this"
"	      0045cce4    mov eax,[eax]"
"	      0045cce6    mov ecx,this"
"	      0045cce9    call dword ptr [eax+30h]"
);
// LINE 2109:
	asm( 
"	      0045ccec    mov eax,1"
"	      0045ccf1    jmp near ptr 0045CCF6h"
);
// LINE 2110:
	asm( 
"	      0045ccf6    pop edi"
"	      0045ccf7    pop esi"
"	      0045ccf8    pop ebx"
"	      0045ccf9    leave"
"	      0045ccfa    ret 4"
);
}

// FUNCTION: COPTER_D 0x0045ccfd
long BoneheadTextEditWindow::DoKeyDown(long lKey, char chModifiers) {
// LINE 2117:
	asm( 
"	      0045ccfd    push ebp"
"	      0045ccfe    mov ebp,esp"
"	      0045cd00    sub esp,4"
"	      0045cd03    push ebx"
"	      0045cd04    push esi"
"	      0045cd05    push edi"
"	      0045cd06    mov this,ecx"
);
// LINE 2118:
	asm( 
"	      0045cd09    cmp lKey,8"
"	      0045cd0d    je near ptr 0045CD1Dh"
"	      0045cd13    cmp lKey,2Eh"
"	      0045cd17    jne near ptr 0045CD30h"
);
// LINE 2119:
	asm( 
"	      0045cd1d    mov eax,this"
"	      0045cd20    mov eax,[eax]"
"	      0045cd22    mov ecx,this"
"	      0045cd25    call dword ptr [eax+0FCh]"
);
// LINE 2120:
	asm( 
"	      0045cd2b    jmp near ptr 0045CD48h"
"	      0045cd30    cmp lKey,0Dh"
"	      0045cd34    jne near ptr 0045CD48h"
);
// LINE 2121:
	asm( 
"	      0045cd3a    mov eax,this"
"	      0045cd3d    mov eax,[eax]"
"	      0045cd3f    mov ecx,this"
"	      0045cd42    call dword ptr [eax+100h]"
);
// LINE 2122:
	asm( 
"	      0045cd48    push 1"
"	      0045cd4a    push 1"
"	      0045cd4c    mov eax,this"
"	      0045cd4f    mov eax,[eax]"
"	      0045cd51    mov ecx,this"
"	      0045cd54    call dword ptr [eax+30h]"
);
// LINE 2123:
	asm( 
"	      0045cd57    mov eax,1"
"	      0045cd5c    jmp near ptr 0045CD61h"
);
// LINE 2124:
	asm( 
"	      0045cd61    pop edi"
"	      0045cd62    pop esi"
"	      0045cd63    pop ebx"
"	      0045cd64    leave"
"	      0045cd65    ret 8"
);
}

// FUNCTION: COPTER_D 0x0045cd68
long BoneheadTextEditWindow::DoCursorDown(long nCursorX, long nCursorY, unsigned long nButton) {
// LINE 2131:
	asm( 
"	      0045cd68    push ebp"
"	      0045cd69    mov ebp,esp"
"	      0045cd6b    sub esp,4"
"	      0045cd6e    push ebx"
"	      0045cd6f    push esi"
"	      0045cd70    push edi"
"	      0045cd71    mov this,ecx"
);
// LINE 2132:
	asm( 
"	      0045cd74    mov eax,this"
"	      0045cd77    push eax"
"	      0045cd78    call 004A7470h"
"	      0045cd7d    add esp,4"
"	      0045cd80    jmp near ptr 0045CD85h"
);
// LINE 2133:
	asm( 
"	      0045cd85    pop edi"
"	      0045cd86    pop esi"
"	      0045cd87    pop ebx"
"	      0045cd88    leave"
"	      0045cd89    ret 0Ch"
);
}

// FUNCTION: COPTER_D 0x0045cd8c
int32_t BoneheadTextEditWindow::DoesWindowNeedUpdating() {
// LINE 2140:
	asm( 
"	      0045cd8c    push ebp"
"	      0045cd8d    mov ebp,esp"
"	      0045cd8f    sub esp,20h"
"	      0045cd92    push ebx"
"	      0045cd93    push esi"
"	      0045cd94    push edi"
"	      0045cd95    mov this,ecx"
);
// LINE 2141:
	asm( 
"	      0045cd98    jmp near ptr 0045CD9Dh"
"	      0045cd9d    mov eax,this"
"	      0045cda0    cmp dword ptr [eax+48h],0"
"	      0045cda4    jne near ptr 0045CEF5h"
"	      0045cdaa    mov eax,this"
"	      0045cdad    mov eax,[eax+0B0h]"
"	      0045cdb3    mov [ebp-8],eax"
"	      0045cdb6    jmp near ptr 0045CDBBh"
"	      0045cdbb    mov eax,this"
"	      0045cdbe    cmp dword ptr [eax+0ACh],0"
"	      0045cdc5    je near ptr 0045CE4Ah"
"	      0045cdcb    mov eax,this"
"	      0045cdce    cmp dword ptr [eax+0A8h],1"
"	      0045cdd5    jne near ptr 0045CDEEh"
"	      0045cddb    call dword ptr ds:[6C3908h]"
"	      0045cde1    mov [ebp-18h],eax"
"	      0045cde4    jmp near ptr 0045CE35h"
"	      0045cde9    jmp near ptr 0045CE35h"
"	      0045cdee    mov eax,this"
"	      0045cdf1    cmp dword ptr [eax+0A8h],0"
"	      0045cdf8    jne near ptr 0045CE1Eh"
"	      0045cdfe    lea eax,[ebp-14h]"
"	      0045ce01    push eax"
"	      0045ce02    call dword ptr ds:[6C365Ch]"
"	      0045ce08    mov eax,[ebp-14h]"
"	      0045ce0b    mov [ebp-0Ch],eax"
"	      0045ce0e    mov eax,[ebp-0Ch]"
"	      0045ce11    mov [ebp-18h],eax"
"	      0045ce14    jmp near ptr 0045CE35h"
"	      0045ce19    jmp near ptr 0045CE35h"
"	      0045ce1e    call dword ptr ds:[6C3908h]"
"	      0045ce24    mov ecx,3E8h"
"	      0045ce29    sub edx,edx"
"	      0045ce2b    div ecx"
"	      0045ce2d    mov [ebp-18h],eax"
"	      0045ce30    jmp near ptr 0045CE35h"
"	      0045ce35    mov eax,[ebp-18h]"
"	      0045ce38    mov ecx,this"
"	      0045ce3b    sub eax,[ecx+0ACh]"
"	      0045ce41    mov [ebp-4],eax"
"	      0045ce44    mov eax,[ebp-4]"
"	      0045ce47    add [ebp-8],eax"
"	      0045ce4a    mov eax,this"
"	      0045ce4d    cmp dword ptr [eax+0A8h],0"
"	      0045ce54    jne near ptr 0045CE9Dh"
"	      0045ce5a    mov eax,this"
"	      0045ce5d    cmp dword ptr [eax+0B4h],0"
"	      0045ce64    je near ptr 0045CE9Dh"
"	      0045ce6a    mov eax,this"
"	      0045ce6d    mov eax,[eax+0B4h]"
"	      0045ce73    push eax"
"	      0045ce74    push 0F4240h"
"	      0045ce79    mov eax,[ebp-8]"
"	      0045ce7c    push eax"
"	      0045ce7d    call dword ptr ds:[6C372Ch]"
"	      0045ce83    mov [ebp-8],eax"
"	      0045ce86    mov eax,this"
"	      0045ce89    mov ecx,[ebp-8]"
"	      0045ce8c    cmp [eax+0B8h],ecx"
"	      0045ce92    jae near ptr 0045CED8h"
"	      0045ce98    jmp near ptr 0045CEC6h"
"	      0045ce9d    mov eax,this"
"	      0045cea0    mov ecx,[ebp-8]"
"	      0045cea3    cmp [eax+0B8h],ecx"
"	      0045cea9    jae near ptr 0045CED8h"
"	      0045ceaf    jmp near ptr 0045CEC6h"
"	      0045ceb4    mov eax,this"
"	      0045ceb7    mov ecx,[ebp-1Ch]"
"	      0045ceba    cmp [eax+0B8h],ecx"
"	      0045cec0    jae near ptr 0045CED8h"
"	      0045cec6    mov eax,this"
"	      0045cec9    mov dword ptr [eax+0BCh],1"
"	      0045ced3    jmp near ptr 0045CEE5h"
"	      0045ced8    mov eax,this"
"	      0045cedb    mov dword ptr [eax+0BCh],0"
"	      0045cee5    mov eax,this"
"	      0045cee8    cmp dword ptr [eax+0BCh],0"
"	      0045ceef    je near ptr 0045CEFFh"
"	      0045cef5    mov eax,1"
"	      0045cefa    jmp near ptr 0045CF01h"
"	      0045ceff    xor eax,eax"
"	      0045cf01    jmp near ptr 0045CF06h"
);
// LINE 2142:
	asm( 
"	      0045cf06    pop edi"
"	      0045cf07    pop esi"
"	      0045cf08    pop ebx"
"	      0045cf09    leave"
"	      0045cf0a    ret"
);
}

// FUNCTION: COPTER_D 0x0045cf0b
int32_t BoneheadTextEditWindow::SetCaretPeriod(unsigned long lMicrosecondsBetweenCaretChanges) {
// LINE 2149:
	asm( 
"	      0045cf0b    push ebp"
"	      0045cf0c    mov ebp,esp"
"	      0045cf0e    sub esp,4"
"	      0045cf11    push ebx"
"	      0045cf12    push esi"
"	      0045cf13    push edi"
"	      0045cf14    mov this,ecx"
);
// LINE 2150:
	asm( 
"	      0045cf17    mov eax,lMicrosecondsBetweenCaretChanges"
"	      0045cf1a    mov ecx,this"
"	      0045cf1d    mov [ecx+0B8h],eax"
);
// LINE 2151:
	asm( 
"	      0045cf23    mov eax,1"
"	      0045cf28    jmp near ptr 0045CF2Dh"
);
// LINE 2152:
	asm( 
"	      0045cf2d    pop edi"
"	      0045cf2e    pop esi"
"	      0045cf2f    pop ebx"
"	      0045cf30    leave"
"	      0045cf31    ret 4"
);
}

// FUNCTION: COPTER_D 0x0045cf34
void BoneheadTextEditWindow::SetCharacterCountLimit(unsigned long lNewCharacterCountLimit) {
// LINE 2159:
	asm( 
"	      0045cf34    push ebp"
"	      0045cf35    mov ebp,esp"
"	      0045cf37    sub esp,4"
"	      0045cf3a    push ebx"
"	      0045cf3b    push esi"
"	      0045cf3c    push edi"
"	      0045cf3d    mov this,ecx"
);
// LINE 2160:
	asm( 
"	      0045cf40    mov eax,lNewCharacterCountLimit"
"	      0045cf43    mov ecx,this"
"	      0045cf46    mov [ecx+0C0h],eax"
);
// LINE 2161:
	asm( 
"	      0045cf4c    jmp near ptr 0045CF51h"
"	      0045cf51    pop edi"
"	      0045cf52    pop esi"
"	      0045cf53    pop ebx"
"	      0045cf54    leave"
"	      0045cf55    ret 4"
);
}

// FUNCTION: COPTER_D 0x0045cf58
int32_t BoneheadTextEditWindow::ProcessBackspace() {
	unsigned char * chCharacter;

// LINE 2169:
	asm( 
"	      0045cf58    push ebp"
"	      0045cf59    mov ebp,esp"
"	      0045cf5b    sub esp,5Ch"
"	      0045cf5e    push ebx"
"	      0045cf5f    push esi"
"	      0045cf60    push edi"
"	      0045cf61    mov this,ecx"
);
// LINE 2172:
	asm( 
"	      0045cf64    jmp near ptr 0045CF69h"
"	      0045cf69    mov eax,this"
"	      0045cf6c    mov eax,[eax+0Ch]"
"	      0045cf6f    cmp dword ptr [eax+4],1"
"	      0045cf73    ja near ptr 0045CF80h"
);
// LINE 2173:
	asm( 
"	      0045cf79    xor eax,eax"
"	      0045cf7b    jmp near ptr 0045D3E9h"
);
// LINE 2175:
	asm( 
"	      0045cf80    jmp near ptr 0045CF85h"
"	      0045cf85    jmp near ptr 0045CF8Ah"
"	      0045cf8a    mov eax,this"
"	      0045cf8d    mov eax,[eax+0Ch]"
"	      0045cf90    cmp dword ptr [eax+4],0"
"	      0045cf94    je near ptr 0045CFBBh"
"	      0045cf9a    mov eax,this"
"	      0045cf9d    mov eax,[eax+0Ch]"
"	      0045cfa0    mov eax,[eax+4]"
"	      0045cfa3    sub eax,2"
"	      0045cfa6    mov ecx,this"
"	      0045cfa9    mov ecx,[ecx+0Ch]"
"	      0045cfac    add eax,[ecx]"
"	      0045cfae    mov chCharacter,eax"
"	      0045cfb1    jmp near ptr 0045CFE1h"
"	      0045cfb6    jmp near ptr 0045CFCFh"
"	      0045cfbb    mov eax,this"
"	      0045cfbe    mov eax,[eax+0Ch]"
"	      0045cfc1    mov eax,[eax+4]"
"	      0045cfc4    sub eax,2"
"	      0045cfc7    mov chCharacter,eax"
"	      0045cfca    jmp near ptr 0045CFE1h"
"	      0045cfcf    mov eax,this"
"	      0045cfd2    mov eax,[eax+0Ch]"
"	      0045cfd5    mov eax,[eax+4]"
"	      0045cfd8    sub eax,2"
"	      0045cfdb    add eax,[ebp-8]"
"	      0045cfde    mov chCharacter,eax"
);
// LINE 2176:
	asm( 
"	      0045cfe1    jmp near ptr 0045CFE6h"
"	      0045cfe6    jmp near ptr 0045CFEBh"
"	      0045cfeb    mov eax,this"
"	      0045cfee    mov eax,[eax+0Ch]"
"	      0045cff1    cmp dword ptr [eax+4],0"
"	      0045cff5    je near ptr 0045D01Fh"
"	      0045cffb    mov eax,this"
"	      0045cffe    mov eax,[eax+0Ch]"
"	      0045d001    mov eax,[eax+4]"
"	      0045d004    mov ecx,this"
"	      0045d007    mov ecx,[ecx+0Ch]"
"	      0045d00a    mov ecx,[ecx]"
"	      0045d00c    mov al,[eax+ecx-1]"
"	      0045d010    mov ecx,chCharacter"
"	      0045d013    mov [ecx],al"
"	      0045d015    jmp near ptr 0045D04Ah"
"	      0045d01a    jmp near ptr 0045D035h"
"	      0045d01f    mov eax,this"
"	      0045d022    mov eax,[eax+0Ch]"
"	      0045d025    mov eax,[eax+4]"
"	      0045d028    mov al,[eax-1]"
"	      0045d02b    mov ecx,chCharacter"
"	      0045d02e    mov [ecx],al"
"	      0045d030    jmp near ptr 0045D04Ah"
"	      0045d035    mov eax,this"
"	      0045d038    mov eax,[eax+0Ch]"
"	      0045d03b    mov eax,[eax+4]"
"	      0045d03e    mov ecx,[ebp-0Ch]"
"	      0045d041    mov al,[eax+ecx-1]"
"	      0045d045    mov ecx,chCharacter"
"	      0045d048    mov [ecx],al"
);
// LINE 2177:
	asm( 
"	      0045d04a    jmp near ptr 0045D04Fh"
"	      0045d04f    mov eax,this"
"	      0045d052    mov eax,[eax+0Ch]"
"	      0045d055    mov eax,[eax+4]"
"	      0045d058    dec eax"
"	      0045d059    mov [ebp-58h],eax"
"	      0045d05c    jmp near ptr 0045D061h"
"	      0045d061    mov eax,this"
"	      0045d064    mov eax,[eax+0Ch]"
"	      0045d067    mov ecx,[ebp-58h]"
"	      0045d06a    cmp [eax+4],ecx"
"	      0045d06d    jae near ptr 0045D0A5h"
"	      0045d073    push 59722Ch"
"	      0045d078    mov ecx,638C00h"
"	      0045d07d    call 00569960h"
"	      0045d082    mov [ebp-38h],eax"
"	      0045d085    mov eax,[ebp-38h]"
"	      0045d088    push eax"
"	      0045d089    call 004011B0h"
"	      0045d08e    add esp,4"
"	      0045d091    jmp near ptr 0045D096h"
"	      0045d096    push 1"
"	      0045d098    call 00569430h"
"	      0045d09d    add esp,4"
"	      0045d0a0    jmp near ptr 0045D0A5h"
"	      0045d0a5    jmp near ptr 0045D0AAh"
"	      0045d0aa    mov eax,this"
"	      0045d0ad    mov eax,[eax+0Ch]"
"	      0045d0b0    mov eax,[eax+4]"
"	      0045d0b3    sub eax,[ebp-58h]"
"	      0045d0b6    cmp eax,1"
"	      0045d0b9    jae near ptr 0045D0D8h"
"	      0045d0bf    jmp near ptr 0045D0C4h"
"	      0045d0c4    mov eax,this"
"	      0045d0c7    mov eax,[eax+0Ch]"
"	      0045d0ca    mov eax,[eax+4]"
"	      0045d0cd    sub eax,[ebp-58h]"
"	      0045d0d0    mov [ebp-10h],eax"
"	      0045d0d3    jmp near ptr 0045D0DFh"
"	      0045d0d8    mov dword ptr [ebp-10h],1"
"	      0045d0df    jmp near ptr 0045D0E4h"
"	      0045d0e4    mov eax,this"
"	      0045d0e7    mov eax,[eax+0Ch]"
"	      0045d0ea    cmp dword ptr [eax+0Ch],1"
"	      0045d0ee    jbe near ptr 0045D318h"
"	      0045d0f4    push 10h"
"	      0045d0f6    call 0056A600h"
"	      0045d0fb    add esp,4"
"	      0045d0fe    mov [ebp-18h],eax"
"	      0045d101    cmp dword ptr [ebp-18h],0"
"	      0045d105    je near ptr 0045D1E4h"
"	      0045d10b    jmp near ptr 0045D110h"
"	      0045d110    jmp near ptr 0045D115h"
"	      0045d115    mov eax,this"
"	      0045d118    mov eax,[eax+0Ch]"
"	      0045d11b    cmp dword ptr [eax+4],0"
"	      0045d11f    je near ptr 0045D13Ah"
"	      0045d125    mov eax,this"
"	      0045d128    mov eax,[eax+0Ch]"
"	      0045d12b    mov eax,[eax]"
"	      0045d12d    mov [ebp-34h],eax"
"	      0045d130    jmp near ptr 0045D146h"
"	      0045d135    jmp near ptr 0045D146h"
"	      0045d13a    mov dword ptr [ebp-34h],0"
"	      0045d141    jmp near ptr 0045D146h"
"	      0045d146    mov eax,this"
"	      0045d149    mov eax,[eax+0Ch]"
"	      0045d14c    mov eax,[eax+4]"
"	      0045d14f    mov [ebp-54h],eax"
"	      0045d152    mov eax,[ebp-54h]"
"	      0045d155    mov ecx,[ebp-18h]"
"	      0045d158    mov [ecx+8],eax"
"	      0045d15b    mov eax,[ebp-58h]"
"	      0045d15e    mov ecx,[ebp-18h]"
"	      0045d161    mov [ecx+4],eax"
"	      0045d164    mov eax,[ebp-18h]"
"	      0045d167    cmp dword ptr [eax+8],0"
"	      0045d16b    je near ptr 0045D1C1h"
"	      0045d171    mov eax,[ebp-18h]"
"	      0045d174    mov eax,[eax+8]"
"	      0045d177    push eax"
"	      0045d178    call 0056A600h"
"	      0045d17d    add esp,4"
"	      0045d180    mov ecx,[ebp-18h]"
"	      0045d183    mov [ecx],eax"
"	      0045d185    mov eax,[ebp-18h]"
"	      0045d188    cmp dword ptr [eax+4],0"
"	      0045d18c    je near ptr 0045D1BCh"
"	      0045d192    mov eax,[ebp-18h]"
"	      0045d195    mov eax,[eax+4]"
"	      0045d198    mov [ebp-4Ch],eax"
"	      0045d19b    mov eax,[ebp-18h]"
"	      0045d19e    mov eax,[eax]"
"	      0045d1a0    mov [ebp-50h],eax"
"	      0045d1a3    mov eax,[ebp-4Ch]"
"	      0045d1a6    push eax"
"	      0045d1a7    mov eax,[ebp-34h]"
"	      0045d1aa    push eax"
"	      0045d1ab    mov eax,[ebp-50h]"
"	      0045d1ae    push eax"
"	      0045d1af    call 0056A800h"
"	      0045d1b4    add esp,0Ch"
"	      0045d1b7    jmp near ptr 0045D1BCh"
"	      0045d1bc    jmp near ptr 0045D1CAh"
"	      0045d1c1    mov eax,[ebp-18h]"
"	      0045d1c4    mov dword ptr [eax],0"
"	      0045d1ca    mov eax,[ebp-18h]"
"	      0045d1cd    mov dword ptr [eax+0Ch],1"
"	      0045d1d4    jmp near ptr 0045D1D9h"
"	      0045d1d9    mov eax,[ebp-18h]"
"	      0045d1dc    mov [ebp-14h],eax"
"	      0045d1df    jmp near ptr 0045D1EBh"
"	      0045d1e4    mov dword ptr [ebp-14h],0"
"	      0045d1eb    jmp near ptr 0045D1F0h"
"	      0045d1f0    jmp near ptr 0045D1F5h"
"	      0045d1f5    mov eax,this"
"	      0045d1f8    mov eax,[eax+0Ch]"
"	      0045d1fb    cmp dword ptr [eax+4],0"
"	      0045d1ff    je near ptr 0045D21Ah"
"	      0045d205    mov eax,this"
"	      0045d208    mov eax,[eax+0Ch]"
"	      0045d20b    mov eax,[eax]"
"	      0045d20d    mov [ebp-28h],eax"
"	      0045d210    jmp near ptr 0045D226h"
"	      0045d215    jmp near ptr 0045D226h"
"	      0045d21a    mov dword ptr [ebp-28h],0"
"	      0045d221    jmp near ptr 0045D226h"
"	      0045d226    mov eax,this"
"	      0045d229    mov eax,[eax+0Ch]"
"	      0045d22c    mov eax,[eax+4]"
"	      0045d22f    sub eax,[ebp-10h]"
"	      0045d232    sub eax,[ebp-58h]"
"	      0045d235    mov [ebp-2Ch],eax"
"	      0045d238    mov eax,[ebp-14h]"
"	      0045d23b    mov eax,[eax]"
"	      0045d23d    add eax,[ebp-58h]"
"	      0045d240    mov [ebp-30h],eax"
"	      0045d243    mov eax,[ebp-2Ch]"
"	      0045d246    push eax"
"	      0045d247    mov eax,[ebp-10h]"
"	      0045d24a    add eax,[ebp-58h]"
"	      0045d24d    add eax,[ebp-28h]"
"	      0045d250    push eax"
"	      0045d251    mov eax,[ebp-30h]"
"	      0045d254    push eax"
"	      0045d255    call 0056A800h"
"	      0045d25a    add esp,0Ch"
"	      0045d25d    jmp near ptr 0045D262h"
"	      0045d262    jmp near ptr 0045D267h"
"	      0045d267    mov eax,this"
"	      0045d26a    mov eax,[eax+0Ch]"
"	      0045d26d    mov eax,[eax+4]"
"	      0045d270    sub eax,[ebp-10h]"
"	      0045d273    mov ecx,[ebp-14h]"
"	      0045d276    mov [ecx+4],eax"
"	      0045d279    mov eax,this"
"	      0045d27c    mov eax,[eax+0Ch]"
"	      0045d27f    dec dword ptr [eax+0Ch]"
"	      0045d282    mov eax,this"
"	      0045d285    mov eax,[eax+0Ch]"
"	      0045d288    cmp dword ptr [eax+0Ch],0"
"	      0045d28c    jne near ptr 0045D305h"
"	      0045d292    mov eax,this"
"	      0045d295    mov eax,[eax+0Ch]"
"	      0045d298    mov [ebp-40h],eax"
"	      0045d29b    mov eax,[ebp-40h]"
"	      0045d29e    mov [ebp-3Ch],eax"
"	      0045d2a1    cmp dword ptr [ebp-3Ch],0"
"	      0045d2a5    je near ptr 0045D305h"
"	      0045d2ab    mov eax,[ebp-3Ch]"
"	      0045d2ae    cmp dword ptr [eax+8],0"
"	      0045d2b2    je near ptr 0045D2E5h"
"	      0045d2b8    mov eax,[ebp-3Ch]"
"	      0045d2bb    mov eax,[eax]"
"	      0045d2bd    mov [ebp-44h],eax"
"	      0045d2c0    mov eax,[ebp-44h]"
"	      0045d2c3    mov [ebp-48h],eax"
"	      0045d2c6    mov eax,[ebp-48h]"
"	      0045d2c9    push eax"
"	      0045d2ca    call 0056A740h"
"	      0045d2cf    add esp,4"
"	      0045d2d2    mov eax,[ebp-3Ch]"
"	      0045d2d5    mov dword ptr [eax+8],0"
"	      0045d2dc    mov eax,[ebp-3Ch]"
"	      0045d2df    mov dword ptr [eax],0"
"	      0045d2e5    jmp near ptr 0045D2EAh"
"	      0045d2ea    jmp near ptr 0045D2EFh"
"	      0045d2ef    mov eax,[ebp-3Ch]"
"	      0045d2f2    push eax"
"	      0045d2f3    call 0056A740h"
"	      0045d2f8    add esp,4"
"	      0045d2fb    jmp near ptr 0045D300h"
"	      0045d300    jmp near ptr 0045D305h"
"	      0045d305    jmp near ptr 0045D30Ah"
"	      0045d30a    mov eax,[ebp-14h]"
"	      0045d30d    mov ecx,this"
"	      0045d310    mov [ecx+0Ch],eax"
"	      0045d313    jmp near ptr 0045D3DAh"
"	      0045d318    jmp near ptr 0045D31Dh"
"	      0045d31d    mov eax,this"
"	      0045d320    mov eax,[eax+0Ch]"
"	      0045d323    mov ecx,[ebp-10h]"
"	      0045d326    cmp [eax+4],ecx"
"	      0045d329    jne near ptr 0045D341h"
"	      0045d32f    mov eax,this"
"	      0045d332    mov eax,[eax+0Ch]"
"	      0045d335    mov dword ptr [eax+4],0"
"	      0045d33c    jmp near ptr 0045D3DAh"
"	      0045d341    cmp dword ptr [ebp-10h],0"
"	      0045d345    je near ptr 0045D3DAh"
"	      0045d34b    jmp near ptr 0045D350h"
"	      0045d350    jmp near ptr 0045D355h"
"	      0045d355    jmp near ptr 0045D35Ah"
"	      0045d35a    mov eax,this"
"	      0045d35d    mov eax,[eax+0Ch]"
"	      0045d360    cmp dword ptr [eax+4],0"
"	      0045d364    je near ptr 0045D37Fh"
"	      0045d36a    mov eax,this"
"	      0045d36d    mov eax,[eax+0Ch]"
"	      0045d370    mov eax,[eax]"
"	      0045d372    mov [ebp-1Ch],eax"
"	      0045d375    jmp near ptr 0045D38Bh"
"	      0045d37a    jmp near ptr 0045D38Bh"
"	      0045d37f    mov dword ptr [ebp-1Ch],0"
"	      0045d386    jmp near ptr 0045D38Bh"
"	      0045d38b    mov eax,this"
"	      0045d38e    mov eax,[eax+0Ch]"
"	      0045d391    mov eax,[eax+4]"
"	      0045d394    sub eax,[ebp-10h]"
"	      0045d397    sub eax,[ebp-58h]"
"	      0045d39a    mov [ebp-20h],eax"
"	      0045d39d    mov eax,this"
"	      0045d3a0    mov eax,[eax+0Ch]"
"	      0045d3a3    mov eax,[eax]"
"	      0045d3a5    add eax,[ebp-58h]"
"	      0045d3a8    mov [ebp-24h],eax"
"	      0045d3ab    mov eax,[ebp-20h]"
"	      0045d3ae    push eax"
"	      0045d3af    mov eax,[ebp-10h]"
"	      0045d3b2    add eax,[ebp-58h]"
"	      0045d3b5    add eax,[ebp-1Ch]"
"	      0045d3b8    push eax"
"	      0045d3b9    mov eax,[ebp-24h]"
"	      0045d3bc    push eax"
"	      0045d3bd    call 0056A800h"
"	      0045d3c2    add esp,0Ch"
"	      0045d3c5    jmp near ptr 0045D3CAh"
"	      0045d3ca    xor eax,eax"
"	      0045d3cc    sub eax,[ebp-10h]"
"	      0045d3cf    neg eax"
"	      0045d3d1    mov ecx,this"
"	      0045d3d4    mov ecx,[ecx+0Ch]"
"	      0045d3d7    sub [ecx+4],eax"
"	      0045d3da    jmp near ptr 0045D3DFh"
);
// LINE 2178:
	asm( 
"	      0045d3df    mov eax,1"
"	      0045d3e4    jmp near ptr 0045D3E9h"
);
// LINE 2179:
	asm( 
"	      0045d3e9    pop edi"
"	      0045d3ea    pop esi"
"	      0045d3eb    pop ebx"
"	      0045d3ec    leave"
"	      0045d3ed    ret"
);
}

// FUNCTION: COPTER_D 0x0045d3ee
int32_t BoneheadTextEditWindow::ProcessReturn() {
// LINE 2186:
	asm( 
"	      0045d3ee    push ebp"
"	      0045d3ef    mov ebp,esp"
"	      0045d3f1    sub esp,4"
"	      0045d3f4    push ebx"
"	      0045d3f5    push esi"
"	      0045d3f6    push edi"
"	      0045d3f7    mov this,ecx"
);
// LINE 2187:
	asm( 
"	      0045d3fa    push 0Ah"
"	      0045d3fc    mov eax,this"
"	      0045d3ff    mov eax,[eax]"
"	      0045d401    mov ecx,this"
"	      0045d404    call dword ptr [eax+80h]"
"	      0045d40a    jmp near ptr 0045D40Fh"
);
// LINE 2188:
	asm( 
"	      0045d40f    pop edi"
"	      0045d410    pop esi"
"	      0045d411    pop ebx"
"	      0045d412    leave"
"	      0045d413    ret"
);
}

// FUNCTION: COPTER_D 0x0045d414
void BoneheadTextEditWindow::GetEditText(class basic_string<char>& sText) {
// LINE 2195:
	asm( 
"	      0045d414    push ebp"
"	      0045d415    mov ebp,esp"
"	      0045d417    sub esp,60h"
"	      0045d41a    push ebx"
"	      0045d41b    push esi"
"	      0045d41c    push edi"
"	      0045d41d    mov this,ecx"
);
// LINE 2196:
	asm( 
"	      0045d420    mov eax,this"
"	      0045d423    add eax,8"
"	      0045d426    cmp eax,sText"
"	      0045d429    je near ptr 0045D5E2h"
"	      0045d42f    mov eax,sText"
"	      0045d432    mov eax,[eax+4]"
"	      0045d435    dec dword ptr [eax+0Ch]"
"	      0045d438    mov eax,sText"
"	      0045d43b    mov eax,[eax+4]"
"	      0045d43e    cmp dword ptr [eax+0Ch],0"
"	      0045d442    jne near ptr 0045D4BBh"
"	      0045d448    mov eax,sText"
"	      0045d44b    mov eax,[eax+4]"
"	      0045d44e    mov [ebp-0Ch],eax"
"	      0045d451    mov eax,[ebp-0Ch]"
"	      0045d454    mov [ebp-8],eax"
"	      0045d457    cmp dword ptr [ebp-8],0"
"	      0045d45b    je near ptr 0045D4BBh"
"	      0045d461    mov eax,[ebp-8]"
"	      0045d464    cmp dword ptr [eax+8],0"
"	      0045d468    je near ptr 0045D49Bh"
"	      0045d46e    mov eax,[ebp-8]"
"	      0045d471    mov eax,[eax]"
"	      0045d473    mov [ebp-10h],eax"
"	      0045d476    mov eax,[ebp-10h]"
"	      0045d479    mov [ebp-14h],eax"
"	      0045d47c    mov eax,[ebp-14h]"
"	      0045d47f    push eax"
"	      0045d480    call 0056A740h"
"	      0045d485    add esp,4"
"	      0045d488    mov eax,[ebp-8]"
"	      0045d48b    mov dword ptr [eax+8],0"
"	      0045d492    mov eax,[ebp-8]"
"	      0045d495    mov dword ptr [eax],0"
"	      0045d49b    jmp near ptr 0045D4A0h"
"	      0045d4a0    jmp near ptr 0045D4A5h"
"	      0045d4a5    mov eax,[ebp-8]"
"	      0045d4a8    push eax"
"	      0045d4a9    call 0056A740h"
"	      0045d4ae    add esp,4"
"	      0045d4b1    jmp near ptr 0045D4B6h"
"	      0045d4b6    jmp near ptr 0045D4BBh"
"	      0045d4bb    jmp near ptr 0045D4C0h"
"	      0045d4c0    jmp near ptr 0045D4C5h"
"	      0045d4c5    mov eax,this"
"	      0045d4c8    mov eax,[eax+0Ch]"
"	      0045d4cb    cmp dword ptr [eax+0Ch],0FFFFFFFFh"
"	      0045d4cf    je near ptr 0045D4EFh"
"	      0045d4d5    mov eax,this"
"	      0045d4d8    mov eax,[eax+0Ch]"
"	      0045d4db    mov ecx,sText"
"	      0045d4de    mov [ecx+4],eax"
"	      0045d4e1    mov eax,sText"
"	      0045d4e4    mov eax,[eax+4]"
"	      0045d4e7    inc dword ptr [eax+0Ch]"
"	      0045d4ea    jmp near ptr 0045D5E2h"
"	      0045d4ef    push 10h"
"	      0045d4f1    call 0056A600h"
"	      0045d4f6    add esp,4"
"	      0045d4f9    mov [ebp-4],eax"
"	      0045d4fc    cmp dword ptr [ebp-4],0"
"	      0045d500    je near ptr 0045D5D8h"
"	      0045d506    jmp near ptr 0045D50Bh"
"	      0045d50b    mov eax,this"
"	      0045d50e    mov eax,[eax+0Ch]"
"	      0045d511    mov eax,[eax+4]"
"	      0045d514    mov [ebp-24h],eax"
"	      0045d517    mov eax,[ebp-24h]"
"	      0045d51a    mov ecx,[ebp-4]"
"	      0045d51d    mov [ecx+4],eax"
"	      0045d520    mov eax,[ebp-4]"
"	      0045d523    mov eax,[eax+4]"
"	      0045d526    mov ecx,[ebp-4]"
"	      0045d529    mov [ecx+8],eax"
"	      0045d52c    mov eax,[ebp-4]"
"	      0045d52f    cmp dword ptr [eax+8],0"
"	      0045d533    je near ptr 0045D5B2h"
"	      0045d539    mov eax,[ebp-4]"
"	      0045d53c    mov eax,[eax+8]"
"	      0045d53f    push eax"
"	      0045d540    call 0056A600h"
"	      0045d545    add esp,4"
"	      0045d548    mov ecx,[ebp-4]"
"	      0045d54b    mov [ecx],eax"
"	      0045d54d    jmp near ptr 0045D552h"
"	      0045d552    mov eax,this"
"	      0045d555    mov eax,[eax+0Ch]"
"	      0045d558    cmp dword ptr [eax+4],0"
"	      0045d55c    je near ptr 0045D577h"
"	      0045d562    mov eax,this"
"	      0045d565    mov eax,[eax+0Ch]"
"	      0045d568    mov eax,[eax]"
"	      0045d56a    mov [ebp-18h],eax"
"	      0045d56d    jmp near ptr 0045D583h"
"	      0045d572    jmp near ptr 0045D583h"
"	      0045d577    mov dword ptr [ebp-18h],0"
"	      0045d57e    jmp near ptr 0045D583h"
"	      0045d583    mov eax,[ebp-4]"
"	      0045d586    mov eax,[eax+4]"
"	      0045d589    mov [ebp-1Ch],eax"
"	      0045d58c    mov eax,[ebp-4]"
"	      0045d58f    mov eax,[eax]"
"	      0045d591    mov [ebp-20h],eax"
"	      0045d594    mov eax,[ebp-1Ch]"
"	      0045d597    push eax"
"	      0045d598    mov eax,[ebp-18h]"
"	      0045d59b    push eax"
"	      0045d59c    mov eax,[ebp-20h]"
"	      0045d59f    push eax"
"	      0045d5a0    call 0056A800h"
"	      0045d5a5    add esp,0Ch"
"	      0045d5a8    jmp near ptr 0045D5ADh"
"	      0045d5ad    jmp near ptr 0045D5BBh"
"	      0045d5b2    mov eax,[ebp-4]"
"	      0045d5b5    mov dword ptr [eax],0"
"	      0045d5bb    mov eax,[ebp-4]"
"	      0045d5be    mov dword ptr [eax+0Ch],1"
"	      0045d5c5    jmp near ptr 0045D5CAh"
"	      0045d5ca    mov eax,[ebp-4]"
"	      0045d5cd    mov ecx,sText"
"	      0045d5d0    mov [ecx+4],eax"
"	      0045d5d3    jmp near ptr 0045D5E2h"
"	      0045d5d8    mov eax,sText"
"	      0045d5db    mov dword ptr [eax+4],0"
"	      0045d5e2    jmp near ptr 0045D5E7h"
);
// LINE 2197:
	asm( 
"	      0045d5e7    jmp near ptr 0045D5ECh"
"	      0045d5ec    mov eax,this"
"	      0045d5ef    mov eax,[eax+0Ch]"
"	      0045d5f2    mov eax,[eax+4]"
"	      0045d5f5    dec eax"
"	      0045d5f6    mov [ebp-5Ch],eax"
"	      0045d5f9    jmp near ptr 0045D5FEh"
"	      0045d5fe    mov eax,sText"
"	      0045d601    mov eax,[eax+4]"
"	      0045d604    mov ecx,[ebp-5Ch]"
"	      0045d607    cmp [eax+4],ecx"
"	      0045d60a    jae near ptr 0045D642h"
"	      0045d610    push 59722Ch"
"	      0045d615    mov ecx,638C00h"
"	      0045d61a    call 00569960h"
"	      0045d61f    mov [ebp-50h],eax"
"	      0045d622    mov eax,[ebp-50h]"
"	      0045d625    push eax"
"	      0045d626    call 004011B0h"
"	      0045d62b    add esp,4"
"	      0045d62e    jmp near ptr 0045D633h"
"	      0045d633    push 1"
"	      0045d635    call 00569430h"
"	      0045d63a    add esp,4"
"	      0045d63d    jmp near ptr 0045D642h"
"	      0045d642    jmp near ptr 0045D647h"
"	      0045d647    mov eax,sText"
"	      0045d64a    mov eax,[eax+4]"
"	      0045d64d    mov eax,[eax+4]"
"	      0045d650    sub eax,[ebp-5Ch]"
"	      0045d653    cmp eax,1"
"	      0045d656    jae near ptr 0045D675h"
"	      0045d65c    jmp near ptr 0045D661h"
"	      0045d661    mov eax,sText"
"	      0045d664    mov eax,[eax+4]"
"	      0045d667    mov eax,[eax+4]"
"	      0045d66a    sub eax,[ebp-5Ch]"
"	      0045d66d    mov [ebp-28h],eax"
"	      0045d670    jmp near ptr 0045D67Ch"
"	      0045d675    mov dword ptr [ebp-28h],1"
"	      0045d67c    jmp near ptr 0045D681h"
"	      0045d681    mov eax,sText"
"	      0045d684    mov eax,[eax+4]"
"	      0045d687    cmp dword ptr [eax+0Ch],1"
"	      0045d68b    jbe near ptr 0045D7EEh"
"	      0045d691    push 10h"
"	      0045d693    call 0056A600h"
"	      0045d698    add esp,4"
"	      0045d69b    mov [ebp-30h],eax"
"	      0045d69e    cmp dword ptr [ebp-30h],0"
"	      0045d6a2    je near ptr 0045D705h"
"	      0045d6a8    jmp near ptr 0045D6ADh"
"	      0045d6ad    jmp near ptr 0045D6B2h"
"	      0045d6b2    mov eax,sText"
"	      0045d6b5    mov eax,[eax+4]"
"	      0045d6b8    cmp dword ptr [eax+4],0"
"	      0045d6bc    je near ptr 0045D6D7h"
"	      0045d6c2    mov eax,sText"
"	      0045d6c5    mov eax,[eax+4]"
"	      0045d6c8    mov eax,[eax]"
"	      0045d6ca    mov [ebp-4Ch],eax"
"	      0045d6cd    jmp near ptr 0045D6E3h"
"	      0045d6d2    jmp near ptr 0045D6E3h"
"	      0045d6d7    mov dword ptr [ebp-4Ch],0"
"	      0045d6de    jmp near ptr 0045D6E3h"
"	      0045d6e3    mov eax,sText"
"	      0045d6e6    mov eax,[eax+4]"
"	      0045d6e9    mov eax,[eax+4]"
"	      0045d6ec    push eax"
"	      0045d6ed    mov eax,[ebp-5Ch]"
"	      0045d6f0    push eax"
"	      0045d6f1    mov eax,[ebp-4Ch]"
"	      0045d6f4    push eax"
"	      0045d6f5    mov ecx,[ebp-30h]"
"	      0045d6f8    call 0041E160h"
"	      0045d6fd    mov [ebp-2Ch],eax"
"	      0045d700    jmp near ptr 0045D70Ch"
"	      0045d705    mov dword ptr [ebp-2Ch],0"
"	      0045d70c    jmp near ptr 0045D711h"
"	      0045d711    jmp near ptr 0045D716h"
"	      0045d716    mov eax,sText"
"	      0045d719    mov eax,[eax+4]"
"	      0045d71c    cmp dword ptr [eax+4],0"
"	      0045d720    je near ptr 0045D73Bh"
"	      0045d726    mov eax,sText"
"	      0045d729    mov eax,[eax+4]"
"	      0045d72c    mov eax,[eax]"
"	      0045d72e    mov [ebp-40h],eax"
"	      0045d731    jmp near ptr 0045D747h"
"	      0045d736    jmp near ptr 0045D747h"
"	      0045d73b    mov dword ptr [ebp-40h],0"
"	      0045d742    jmp near ptr 0045D747h"
"	      0045d747    mov eax,sText"
"	      0045d74a    mov eax,[eax+4]"
"	      0045d74d    mov eax,[eax+4]"
"	      0045d750    sub eax,[ebp-28h]"
"	      0045d753    sub eax,[ebp-5Ch]"
"	      0045d756    mov [ebp-44h],eax"
"	      0045d759    mov eax,[ebp-2Ch]"
"	      0045d75c    mov eax,[eax]"
"	      0045d75e    add eax,[ebp-5Ch]"
"	      0045d761    mov [ebp-48h],eax"
"	      0045d764    mov eax,[ebp-44h]"
"	      0045d767    push eax"
"	      0045d768    mov eax,[ebp-28h]"
"	      0045d76b    add eax,[ebp-5Ch]"
"	      0045d76e    add eax,[ebp-40h]"
"	      0045d771    push eax"
"	      0045d772    mov eax,[ebp-48h]"
"	      0045d775    push eax"
"	      0045d776    call 0056A800h"
"	      0045d77b    add esp,0Ch"
"	      0045d77e    jmp near ptr 0045D783h"
"	      0045d783    jmp near ptr 0045D788h"
"	      0045d788    mov eax,sText"
"	      0045d78b    mov eax,[eax+4]"
"	      0045d78e    mov eax,[eax+4]"
"	      0045d791    sub eax,[ebp-28h]"
"	      0045d794    mov ecx,[ebp-2Ch]"
"	      0045d797    mov [ecx+4],eax"
"	      0045d79a    mov eax,sText"
"	      0045d79d    mov eax,[eax+4]"
"	      0045d7a0    dec dword ptr [eax+0Ch]"
"	      0045d7a3    mov eax,sText"
"	      0045d7a6    mov eax,[eax+4]"
"	      0045d7a9    cmp dword ptr [eax+0Ch],0"
"	      0045d7ad    jne near ptr 0045D7DBh"
"	      0045d7b3    mov eax,sText"
"	      0045d7b6    mov eax,[eax+4]"
"	      0045d7b9    mov [ebp-58h],eax"
"	      0045d7bc    mov eax,[ebp-58h]"
"	      0045d7bf    mov [ebp-54h],eax"
"	      0045d7c2    cmp dword ptr [ebp-54h],0"
"	      0045d7c6    je near ptr 0045D7DBh"
"	      0045d7cc    push 1"
"	      0045d7ce    mov ecx,[ebp-54h]"
"	      0045d7d1    call 0041DD70h"
"	      0045d7d6    jmp near ptr 0045D7DBh"
"	      0045d7db    jmp near ptr 0045D7E0h"
"	      0045d7e0    mov eax,[ebp-2Ch]"
"	      0045d7e3    mov ecx,sText"
"	      0045d7e6    mov [ecx+4],eax"
"	      0045d7e9    jmp near ptr 0045D8B0h"
"	      0045d7ee    jmp near ptr 0045D7F3h"
"	      0045d7f3    mov eax,sText"
"	      0045d7f6    mov eax,[eax+4]"
"	      0045d7f9    mov ecx,[ebp-28h]"
"	      0045d7fc    cmp [eax+4],ecx"
"	      0045d7ff    jne near ptr 0045D817h"
"	      0045d805    mov eax,sText"
"	      0045d808    mov eax,[eax+4]"
"	      0045d80b    mov dword ptr [eax+4],0"
"	      0045d812    jmp near ptr 0045D8B0h"
"	      0045d817    cmp dword ptr [ebp-28h],0"
"	      0045d81b    je near ptr 0045D8B0h"
"	      0045d821    jmp near ptr 0045D826h"
"	      0045d826    jmp near ptr 0045D82Bh"
"	      0045d82b    jmp near ptr 0045D830h"
"	      0045d830    mov eax,sText"
"	      0045d833    mov eax,[eax+4]"
"	      0045d836    cmp dword ptr [eax+4],0"
"	      0045d83a    je near ptr 0045D855h"
"	      0045d840    mov eax,sText"
"	      0045d843    mov eax,[eax+4]"
"	      0045d846    mov eax,[eax]"
"	      0045d848    mov [ebp-34h],eax"
"	      0045d84b    jmp near ptr 0045D861h"
"	      0045d850    jmp near ptr 0045D861h"
"	      0045d855    mov dword ptr [ebp-34h],0"
"	      0045d85c    jmp near ptr 0045D861h"
"	      0045d861    mov eax,sText"
"	      0045d864    mov eax,[eax+4]"
"	      0045d867    mov eax,[eax+4]"
"	      0045d86a    sub eax,[ebp-28h]"
"	      0045d86d    sub eax,[ebp-5Ch]"
"	      0045d870    mov [ebp-38h],eax"
"	      0045d873    mov eax,sText"
"	      0045d876    mov eax,[eax+4]"
"	      0045d879    mov eax,[eax]"
"	      0045d87b    add eax,[ebp-5Ch]"
"	      0045d87e    mov [ebp-3Ch],eax"
"	      0045d881    mov eax,[ebp-38h]"
"	      0045d884    push eax"
"	      0045d885    mov eax,[ebp-28h]"
"	      0045d888    add eax,[ebp-5Ch]"
"	      0045d88b    add eax,[ebp-34h]"
"	      0045d88e    push eax"
"	      0045d88f    mov eax,[ebp-3Ch]"
"	      0045d892    push eax"
"	      0045d893    call 0056A800h"
"	      0045d898    add esp,0Ch"
"	      0045d89b    jmp near ptr 0045D8A0h"
"	      0045d8a0    xor eax,eax"
"	      0045d8a2    sub eax,[ebp-28h]"
"	      0045d8a5    neg eax"
"	      0045d8a7    mov ecx,sText"
"	      0045d8aa    mov ecx,[ecx+4]"
"	      0045d8ad    sub [ecx+4],eax"
"	      0045d8b0    jmp near ptr 0045D8B5h"
);
// LINE 2198:
	asm( 
"	      0045d8b5    jmp near ptr 0045D8BAh"
"	      0045d8ba    pop edi"
"	      0045d8bb    pop esi"
"	      0045d8bc    pop ebx"
"	      0045d8bd    leave"
"	      0045d8be    ret 4"
);
}

// FUNCTION: COPTER_D 0x0045d8c1
void BoneheadTextEditWindow::GetEditText(char * szText, unsigned long lLength) {
// LINE 2204:
	asm( 
"	      0045d8c1    push ebp"
"	      0045d8c2    mov ebp,esp"
"	      0045d8c4    sub esp,8"
"	      0045d8c7    push ebx"
"	      0045d8c8    push esi"
"	      0045d8c9    push edi"
"	      0045d8ca    mov this,ecx"
);
// LINE 2205:
	asm( 
"	      0045d8cd    jmp near ptr 0045D8D2h"
"	      0045d8d2    mov eax,this"
"	      0045d8d5    mov eax,[eax+0Ch]"
"	      0045d8d8    mov ecx,lLength"
"	      0045d8db    cmp [eax+4],ecx"
"	      0045d8de    jae near ptr 0045D8F5h"
);
// LINE 2206:
	asm( 
"	      0045d8e4    jmp near ptr 0045D8E9h"
"	      0045d8e9    mov eax,this"
"	      0045d8ec    mov eax,[eax+0Ch]"
"	      0045d8ef    mov eax,[eax+4]"
"	      0045d8f2    mov lLength,eax"
);
// LINE 2207:
	asm( 
"	      0045d8f5    jmp near ptr 0045D8FAh"
"	      0045d8fa    mov eax,this"
"	      0045d8fd    mov eax,[eax+0Ch]"
"	      0045d900    cmp dword ptr [eax+4],0"
"	      0045d904    je near ptr 0045D91Fh"
"	      0045d90a    mov eax,this"
"	      0045d90d    mov eax,[eax+0Ch]"
"	      0045d910    mov eax,[eax]"
"	      0045d912    mov [ebp-4],eax"
"	      0045d915    jmp near ptr 0045D92Bh"
"	      0045d91a    jmp near ptr 0045D92Bh"
"	      0045d91f    mov dword ptr [ebp-4],0"
"	      0045d926    jmp near ptr 0045D92Bh"
"	      0045d92b    mov eax,lLength"
"	      0045d92e    push eax"
"	      0045d92f    mov eax,[ebp-4]"
"	      0045d932    push eax"
"	      0045d933    mov eax,szText"
"	      0045d936    push eax"
"	      0045d937    call 0056AD40h"
"	      0045d93c    add esp,0Ch"
);
// LINE 2208:
	asm( 
"	      0045d93f    mov eax,lLength"
"	      0045d942    mov ecx,szText"
"	      0045d945    mov byte ptr [eax+ecx],0"
);
// LINE 2209:
	asm( 
"	      0045d949    jmp near ptr 0045D94Eh"
"	      0045d94e    pop edi"
"	      0045d94f    pop esi"
"	      0045d950    pop ebx"
"	      0045d951    leave"
"	      0045d952    ret 8"
);
}

// FUNCTION: COPTER_D 0x0045d955
void MessageBoxWindowEdit::MessageBoxWindowEdit(class MPoint& ptNewPosition, unsigned long lNewType, unsigned long lNewMessageID, const class basic_string<char>& sNewInitialEditText, int32_t nNewID, class GraphicWindow* windowNewParent, class GraphicWindowOwner* myNewOwner, int32_t bAddToParentList, int32_t bNewSelfDeleting, char * szTextEditBackgroundImageFileName, char * szImageFileName, char * szButtonImageFileName, char * szAnimationImageFileName) {
// LINE 2244:
	asm( 
"	      0045d955    push ebp"
"	      0045d956    mov ebp,esp"
"	      0045d958    sub esp,18h"
"	      0045d95b    push ebx"
"	      0045d95c    push esi"
"	      0045d95d    push edi"
"	      0045d95e    mov this,ecx"
"	      0045d961    mov eax,szAnimationImageFileName"
"	      0045d964    push eax"
"	      0045d965    mov eax,szButtonImageFileName"
"	      0045d968    push eax"
"	      0045d969    mov eax,szImageFileName"
"	      0045d96c    push eax"
"	      0045d96d    mov eax,bNewSelfDeleting"
"	      0045d970    push eax"
"	      0045d971    mov eax,bAddToParentList"
"	      0045d974    push eax"
"	      0045d975    mov eax,myNewOwner"
"	      0045d978    push eax"
"	      0045d979    mov eax,windowNewParent"
"	      0045d97c    push eax"
"	      0045d97d    mov eax,nNewID"
"	      0045d980    push eax"
"	      0045d981    mov eax,lNewMessageID"
"	      0045d984    push eax"
"	      0045d985    mov eax,lNewType"
"	      0045d988    push eax"
"	      0045d989    mov eax,ptNewPosition"
"	      0045d98c    push eax"
"	      0045d98d    mov ecx,this"
"	      0045d990    call 004500CEh"
"	      0045d995    mov eax,this"
"	      0045d998    mov dword ptr [eax+0A4h],0"
"	      0045d9a2    mov eax,this"
"	      0045d9a5    mov dword ptr [eax],5901F8h"
);
// LINE 2246:
	asm( 
"	      0045d9ab    push 0C4h"
"	      0045d9b0    call 0056A600h"
"	      0045d9b5    add esp,4"
"	      0045d9b8    mov [ebp-4],eax"
"	      0045d9bb    cmp dword ptr [ebp-4],0"
"	      0045d9bf    je near ptr 0045DA19h"
"	      0045d9c5    jmp near ptr 0045D9CAh"
"	      0045d9ca    mov dword ptr [ebp-14h],64h"
"	      0045d9d1    mov dword ptr [ebp-10h],64h"
"	      0045d9d8    mov dword ptr [ebp-0Ch],172h"
"	      0045d9df    mov dword ptr [ebp-8],0C8h"
"	      0045d9e6    jmp near ptr 0045D9EBh"
"	      0045d9eb    mov eax,szTextEditBackgroundImageFileName"
"	      0045d9ee    push eax"
"	      0045d9ef    push 1"
"	      0045d9f1    mov eax,this"
"	      0045d9f4    push eax"
"	      0045d9f5    mov eax,this"
"	      0045d9f8    push eax"
"	      0045d9f9    mov eax,sNewInitialEditText"
"	      0045d9fc    push eax"
"	      0045d9fd    push 0"
"	      0045d9ff    lea eax,[ebp-14h]"
"	      0045da02    push eax"
"	      0045da03    mov ecx,[ebp-4]"
"	      0045da06    call 0045BE96h"
"	      0045da0b    mov ecx,this"
"	      0045da0e    mov [ecx+0A4h],eax"
"	      0045da14    jmp near ptr 0045DA26h"
"	      0045da19    mov eax,this"
"	      0045da1c    mov dword ptr [eax+0A4h],0"
);
// LINE 2247:
	asm( 
"	      0045da26    push 0"
"	      0045da28    push 0"
"	      0045da2a    push 12h"
"	      0045da2c    mov eax,this"
"	      0045da2f    mov ecx,this"
"	      0045da32    mov ecx,[ecx+0A4h]"
"	      0045da38    mov edx,[ecx]"
"	      0045da3a    mov ecx,[eax+0A4h]"
"	      0045da40    call dword ptr [edx+0CCh]"
);
// LINE 2248:
	asm( 
"	      0045da46    jmp near ptr 0045DA4Bh"
"	      0045da4b    mov eax,this"
"	      0045da4e    pop edi"
"	      0045da4f    pop esi"
"	      0045da50    pop ebx"
"	      0045da51    leave"
"	      0045da52    ret 34h"
);
}

// FUNCTION: COPTER_D 0x0045da55
void MessageBoxWindowEdit::MessageBoxWindowEdit(class MPoint& ptNewPosition, unsigned long lNewType, class basic_string<char>& sNewMessage, const class basic_string<char>& sNewInitialEditText, int32_t nNewID, class GraphicWindow* windowNewParent, class GraphicWindowOwner* myNewOwner, int32_t bAddToParentList, int32_t bNewSelfDeleting, char * szTextEditBackgroundImageFileName, char * szImageFileName, char * szButtonImageFileName, char * szAnimationImageFileName) {
// LINE 2273:
	asm( 
"	      0045da55    push ebp"
"	      0045da56    mov ebp,esp"
"	      0045da58    sub esp,18h"
"	      0045da5b    push ebx"
"	      0045da5c    push esi"
"	      0045da5d    push edi"
"	      0045da5e    mov this,ecx"
"	      0045da61    mov eax,szAnimationImageFileName"
"	      0045da64    push eax"
"	      0045da65    mov eax,szButtonImageFileName"
"	      0045da68    push eax"
"	      0045da69    mov eax,szImageFileName"
"	      0045da6c    push eax"
"	      0045da6d    mov eax,bNewSelfDeleting"
"	      0045da70    push eax"
"	      0045da71    mov eax,bAddToParentList"
"	      0045da74    push eax"
"	      0045da75    mov eax,myNewOwner"
"	      0045da78    push eax"
"	      0045da79    mov eax,windowNewParent"
"	      0045da7c    push eax"
"	      0045da7d    mov eax,nNewID"
"	      0045da80    push eax"
"	      0045da81    mov eax,sNewMessage"
"	      0045da84    push eax"
"	      0045da85    mov eax,lNewType"
"	      0045da88    push eax"
"	      0045da89    mov eax,ptNewPosition"
"	      0045da8c    push eax"
"	      0045da8d    mov ecx,this"
"	      0045da90    call 00450573h"
"	      0045da95    mov eax,this"
"	      0045da98    mov dword ptr [eax+0A4h],0"
"	      0045daa2    mov eax,this"
"	      0045daa5    mov dword ptr [eax],5901F8h"
);
// LINE 2275:
	asm( 
"	      0045daab    push 0C4h"
"	      0045dab0    call 0056A600h"
"	      0045dab5    add esp,4"
"	      0045dab8    mov [ebp-4],eax"
"	      0045dabb    cmp dword ptr [ebp-4],0"
"	      0045dabf    je near ptr 0045DB19h"
"	      0045dac5    jmp near ptr 0045DACAh"
"	      0045daca    mov dword ptr [ebp-14h],64h"
"	      0045dad1    mov dword ptr [ebp-10h],64h"
"	      0045dad8    mov dword ptr [ebp-0Ch],172h"
"	      0045dadf    mov dword ptr [ebp-8],0C8h"
"	      0045dae6    jmp near ptr 0045DAEBh"
"	      0045daeb    mov eax,szTextEditBackgroundImageFileName"
"	      0045daee    push eax"
"	      0045daef    push 1"
"	      0045daf1    mov eax,this"
"	      0045daf4    push eax"
"	      0045daf5    mov eax,this"
"	      0045daf8    push eax"
"	      0045daf9    mov eax,sNewInitialEditText"
"	      0045dafc    push eax"
"	      0045dafd    push 0"
"	      0045daff    lea eax,[ebp-14h]"
"	      0045db02    push eax"
"	      0045db03    mov ecx,[ebp-4]"
"	      0045db06    call 0045BE96h"
"	      0045db0b    mov ecx,this"
"	      0045db0e    mov [ecx+0A4h],eax"
"	      0045db14    jmp near ptr 0045DB26h"
"	      0045db19    mov eax,this"
"	      0045db1c    mov dword ptr [eax+0A4h],0"
);
// LINE 2276:
	asm( 
"	      0045db26    push 0"
"	      0045db28    push 0"
"	      0045db2a    push 12h"
"	      0045db2c    mov eax,this"
"	      0045db2f    mov ecx,this"
"	      0045db32    mov ecx,[ecx+0A4h]"
"	      0045db38    mov edx,[ecx]"
"	      0045db3a    mov ecx,[eax+0A4h]"
"	      0045db40    call dword ptr [edx+0CCh]"
);
// LINE 2277:
	asm( 
"	      0045db46    jmp near ptr 0045DB4Bh"
"	      0045db4b    mov eax,this"
"	      0045db4e    pop edi"
"	      0045db4f    pop esi"
"	      0045db50    pop ebx"
"	      0045db51    leave"
"	      0045db52    ret 34h"
);
}

// FUNCTION: COPTER_D 0x0045db55
int32_t MessageBoxWindowEdit::Initialize() {
// LINE 2284:
	asm( 
"	      0045db55    push ebp"
"	      0045db56    mov ebp,esp"
"	      0045db58    sub esp,4"
"	      0045db5b    push ebx"
"	      0045db5c    push esi"
"	      0045db5d    push edi"
"	      0045db5e    mov this,ecx"
);
// LINE 2285:
	asm( 
"	      0045db61    mov ecx,this"
"	      0045db64    call 00450B5Dh"
);
// LINE 2286:
	asm( 
"	      0045db69    mov eax,this"
"	      0045db6c    mov ecx,this"
"	      0045db6f    mov ecx,[ecx+0A4h]"
"	      0045db75    mov edx,[ecx]"
"	      0045db77    mov ecx,[eax+0A4h]"
"	      0045db7d    call dword ptr [edx+4]"
);
// LINE 2287:
	asm( 
"	      0045db80    push 80h"
"	      0045db85    mov eax,this"
"	      0045db88    mov ecx,this"
"	      0045db8b    mov ecx,[ecx+0A4h]"
"	      0045db91    mov edx,[ecx]"
"	      0045db93    mov ecx,[eax+0A4h]"
"	      0045db99    call dword ptr [edx+0F0h]"
);
// LINE 2288:
	asm( 
"	      0045db9f    mov eax,1"
"	      0045dba4    jmp near ptr 0045DBA9h"
);
// LINE 2289:
	asm( 
"	      0045dba9    pop edi"
"	      0045dbaa    pop esi"
"	      0045dbab    pop ebx"
"	      0045dbac    leave"
"	      0045dbad    ret"
);
}

// FUNCTION: COPTER_D 0x0045dbae
void ScrollingCreditWindow::ScrollingCreditWindow(int32_t nNewID, class GraphicWindow* windowNewParent, class GraphicWindowOwner* myNewOwner, int32_t bAddToParentList) {
// LINE 2318:
	asm( 
"	      0045dbae    push ebp"
"	      0045dbaf    mov ebp,esp"
"	      0045dbb1    sub esp,28h"
"	      0045dbb4    push ebx"
"	      0045dbb5    push esi"
"	      0045dbb6    push edi"
"	      0045dbb7    mov this,ecx"
"	      0045dbba    jmp near ptr 0045DBBFh"
"	      0045dbbf    jmp near ptr 0045DBC4h"
"	      0045dbc4    mov eax,windowNewParent"
"	      0045dbc7    mov eax,[eax+1Ch]"
"	      0045dbca    mov ecx,windowNewParent"
"	      0045dbcd    sub eax,[ecx+14h]"
"	      0045dbd0    mov [ebp-14h],eax"
"	      0045dbd3    mov eax,windowNewParent"
"	      0045dbd6    mov eax,[eax+18h]"
"	      0045dbd9    mov ecx,windowNewParent"
"	      0045dbdc    sub eax,[ecx+10h]"
"	      0045dbdf    mov [ebp-18h],eax"
"	      0045dbe2    jmp near ptr 0045DBE7h"
"	      0045dbe7    mov dword ptr [ebp-10h],0"
"	      0045dbee    mov dword ptr [ebp-0Ch],0"
"	      0045dbf5    mov eax,[ebp-18h]"
"	      0045dbf8    mov [ebp-8],eax"
"	      0045dbfb    mov eax,[ebp-14h]"
"	      0045dbfe    mov [ebp-4],eax"
"	      0045dc01    jmp near ptr 0045DC06h"
"	      0045dc06    mov eax,bAddToParentList"
"	      0045dc09    push eax"
"	      0045dc0a    mov eax,myNewOwner"
"	      0045dc0d    push eax"
"	      0045dc0e    mov eax,windowNewParent"
"	      0045dc11    push eax"
"	      0045dc12    mov eax,nNewID"
"	      0045dc15    push eax"
"	      0045dc16    lea eax,[ebp-10h]"
"	      0045dc19    push eax"
"	      0045dc1a    mov ecx,this"
"	      0045dc1d    call 004A33EEh"
"	      0045dc22    mov eax,this"
"	      0045dc25    mov dword ptr [eax+74h],0"
"	      0045dc2c    mov eax,this"
"	      0045dc2f    mov dword ptr [eax+78h],0"
"	      0045dc36    mov eax,this"
"	      0045dc39    mov dword ptr [eax+7Ch],0"
"	      0045dc40    jmp near ptr 0045DC45h"
"	      0045dc45    mov eax,this"
"	      0045dc48    mov dword ptr [eax+80h],0"
"	      0045dc52    mov eax,this"
"	      0045dc55    mov dword ptr [eax+84h],0"
"	      0045dc5f    jmp near ptr 0045DC64h"
"	      0045dc64    mov eax,this"
"	      0045dc67    mov dword ptr [eax+88h],28h"
"	      0045dc71    mov eax,this"
"	      0045dc74    mov dword ptr [eax+8Ch],28h"
"	      0045dc7e    mov eax,this"
"	      0045dc81    mov dword ptr [eax+90h],1F4h"
"	      0045dc8b    mov eax,this"
"	      0045dc8e    mov dword ptr [eax+94h],1CCh"
"	      0045dc98    jmp near ptr 0045DC9Dh"
"	      0045dc9d    mov ecx,this"
"	      0045dca0    add ecx,98h"
"	      0045dca6    call 0049F780h"
"	      0045dcab    mov eax,this"
"	      0045dcae    mov dword ptr [eax+0B4h],0"
"	      0045dcb8    mov eax,this"
"	      0045dcbb    mov dword ptr [eax+0B8h],0"
"	      0045dcc5    mov eax,this"
"	      0045dcc8    mov dword ptr [eax+0BCh],0"
"	      0045dcd2    mov eax,this"
"	      0045dcd5    mov dword ptr [eax+0C0h],0"
"	      0045dcdf    mov eax,this"
"	      0045dce2    cmp dword ptr [eax+0B4h],0"
"	      0045dce9    jne near ptr 0045DD10h"
"	      0045dcef    lea eax,[ebp-24h]"
"	      0045dcf2    push eax"
"	      0045dcf3    call dword ptr ds:[6C3668h]"
"	      0045dcf9    mov eax,[ebp-24h]"
"	      0045dcfc    mov [ebp-1Ch],eax"
"	      0045dcff    mov eax,[ebp-1Ch]"
"	      0045dd02    mov ecx,this"
"	      0045dd05    mov [ecx+0C0h],eax"
"	      0045dd0b    jmp near ptr 0045DD10h"
"	      0045dd10    jmp near ptr 0045DD15h"
"	      0045dd15    mov eax,this"
"	      0045dd18    mov dword ptr [eax+0C4h],2710h"
"	      0045dd22    mov eax,this"
"	      0045dd25    mov dword ptr [eax+0C8h],0"
"	      0045dd2f    mov eax,this"
"	      0045dd32    mov dword ptr [eax],5902D8h"
);
// LINE 2320:
	asm( 
"	      0045dd38    jmp near ptr 0045DD3Dh"
"	      0045dd3d    mov eax,this"
"	      0045dd40    pop edi"
"	      0045dd41    pop esi"
"	      0045dd42    pop ebx"
"	      0045dd43    leave"
"	      0045dd44    ret 10h"
);
}

// FUNCTION: COPTER_D 0x0045dd47
void ScrollingCreditWindow::~ScrollingCreditWindow() {
// LINE 2326:
	asm( 
"	      0045dd47    push ebp"
"	      0045dd48    mov ebp,esp"
"	      0045dd4a    sub esp,20h"
"	      0045dd4d    push ebx"
"	      0045dd4e    push esi"
"	      0045dd4f    push edi"
"	      0045dd50    mov this,ecx"
"	      0045dd53    mov eax,this"
"	      0045dd56    mov dword ptr [eax],5902D8h"
);
// LINE 2328:
	asm( 
"	      0045dd5c    jmp near ptr 0045DD61h"
"	      0045dd61    jmp near ptr 0045DD66h"
"	      0045dd66    mov ecx,this"
"	      0045dd69    add ecx,98h"
"	      0045dd6f    call 0049FC4Eh"
"	      0045dd74    mov eax,this"
"	      0045dd77    mov eax,[eax+78h]"
"	      0045dd7a    mov [ebp-18h],eax"
"	      0045dd7d    mov eax,this"
"	      0045dd80    mov eax,[eax+74h]"
"	      0045dd83    mov [ebp-1Ch],eax"
"	      0045dd86    mov eax,[ebp-18h]"
"	      0045dd89    cmp [ebp-1Ch],eax"
"	      0045dd8c    je near ptr 0045DE3Bh"
"	      0045dd92    mov eax,[ebp-1Ch]"
"	      0045dd95    mov eax,[eax+4]"
"	      0045dd98    dec dword ptr [eax+0Ch]"
"	      0045dd9b    mov eax,[ebp-1Ch]"
"	      0045dd9e    mov eax,[eax+4]"
"	      0045dda1    cmp dword ptr [eax+0Ch],0"
"	      0045dda5    jne near ptr 0045DDE7h"
"	      0045ddab    mov eax,[ebp-1Ch]"
"	      0045ddae    mov eax,[eax+4]"
"	      0045ddb1    mov [ebp-14h],eax"
"	      0045ddb4    mov eax,[ebp-14h]"
"	      0045ddb7    mov [ebp-10h],eax"
"	      0045ddba    cmp dword ptr [ebp-10h],0"
"	      0045ddbe    je near ptr 0045DDE7h"
"	      0045ddc4    mov ecx,[ebp-10h]"
"	      0045ddc7    call 0041F4B0h"
"	      0045ddcc    jmp near ptr 0045DDD1h"
"	      0045ddd1    mov eax,[ebp-10h]"
"	      0045ddd4    push eax"
"	      0045ddd5    call 0056A740h"
"	      0045ddda    add esp,4"
"	      0045dddd    jmp near ptr 0045DDE2h"
"	      0045dde2    jmp near ptr 0045DDE7h"
"	      0045dde7    jmp near ptr 0045DDECh"
"	      0045ddec    mov eax,[ebp-1Ch]"
"	      0045ddef    cmp dword ptr [eax],0"
"	      0045ddf2    je near ptr 0045DE12h"
"	      0045ddf8    mov eax,[ebp-1Ch]"
"	      0045ddfb    mov eax,[eax]"
"	      0045ddfd    mov [ebp-8],eax"
"	      0045de00    mov eax,[ebp-8]"
"	      0045de03    mov [ebp-0Ch],eax"
"	      0045de06    mov eax,[ebp-0Ch]"
"	      0045de09    push eax"
"	      0045de0a    call 0056A740h"
"	      0045de0f    add esp,4"
"	      0045de12    jmp near ptr 0045DE17h"
"	      0045de17    jmp near ptr 0045DE28h"
"	      0045de1c    mov eax,[ebp-1Ch]"
"	      0045de1f    push eax"
"	      0045de20    call 0056A740h"
"	      0045de25    add esp,4"
"	      0045de28    jmp near ptr 0045DE2Dh"
"	      0045de2d    jmp near ptr 0045DE32h"
"	      0045de32    add dword ptr [ebp-1Ch],8"
"	      0045de36    jmp near ptr 0045DD86h"
"	      0045de3b    jmp near ptr 0045DE40h"
"	      0045de40    mov eax,this"
"	      0045de43    mov eax,[eax+74h]"
"	      0045de46    mov [ebp-4],eax"
"	      0045de49    mov eax,[ebp-4]"
"	      0045de4c    push eax"
"	      0045de4d    call 0056A740h"
"	      0045de52    add esp,4"
"	      0045de55    jmp near ptr 0045DE5Ah"
"	      0045de5a    jmp near ptr 0045DE5Fh"
"	      0045de5f    jmp near ptr 0045DE64h"
"	      0045de64    mov ecx,this"
"	      0045de67    call 004A4045h"
"	      0045de6c    pop edi"
"	      0045de6d    pop esi"
"	      0045de6e    pop ebx"
"	      0045de6f    leave"
"	      0045de70    ret"
);
}

// FUNCTION: COPTER_D 0x0045de71
int32_t ScrollingCreditWindow::Initialize() {
// LINE 2334:
	asm( 
"	      0045de71    push ebp"
"	      0045de72    mov ebp,esp"
"	      0045de74    sub esp,10h"
"	      0045de77    push ebx"
"	      0045de78    push esi"
"	      0045de79    push edi"
"	      0045de7a    mov this,ecx"
);
// LINE 2335:
	asm( 
"	      0045de7d    mov ecx,this"
"	      0045de80    call 0045E0DCh"
);
// LINE 2336:
	asm( 
"	      0045de85    jmp near ptr 0045DE8Ah"
"	      0045de8a    mov eax,this"
"	      0045de8d    cmp dword ptr [eax+0B8h],0"
"	      0045de94    je near ptr 0045DE9Fh"
"	      0045de9a    jmp near ptr 0045DF20h"
"	      0045de9f    mov eax,this"
"	      0045dea2    cmp dword ptr [eax+0B4h],1"
"	      0045dea9    jne near ptr 0045DEC8h"
"	      0045deaf    call dword ptr ds:[6C3908h]"
"	      0045deb5    mov ecx,this"
"	      0045deb8    mov [ecx+0B8h],eax"
"	      0045debe    jmp near ptr 0045DF1Bh"
"	      0045dec3    jmp near ptr 0045DF1Bh"
"	      0045dec8    mov eax,this"
"	      0045decb    cmp dword ptr [eax+0B4h],0"
"	      0045ded2    jne near ptr 0045DEFEh"
"	      0045ded8    lea eax,[ebp-0Ch]"
"	      0045dedb    push eax"
"	      0045dedc    call dword ptr ds:[6C365Ch]"
"	      0045dee2    mov eax,[ebp-0Ch]"
"	      0045dee5    mov [ebp-4],eax"
"	      0045dee8    mov eax,[ebp-4]"
"	      0045deeb    mov ecx,this"
"	      0045deee    mov [ecx+0B8h],eax"
"	      0045def4    jmp near ptr 0045DF1Bh"
"	      0045def9    jmp near ptr 0045DF1Bh"
"	      0045defe    call dword ptr ds:[6C3908h]"
"	      0045df04    mov ecx,3E8h"
"	      0045df09    sub edx,edx"
"	      0045df0b    div ecx"
"	      0045df0d    mov ecx,this"
"	      0045df10    mov [ecx+0B8h],eax"
"	      0045df16    jmp near ptr 0045DF1Bh"
"	      0045df1b    jmp near ptr 0045DF20h"
);
// LINE 2337:
	asm( 
"	      0045df20    mov eax,1"
"	      0045df25    jmp near ptr 0045DF2Ah"
);
// LINE 2338:
	asm( 
"	      0045df2a    pop edi"
"	      0045df2b    pop esi"
"	      0045df2c    pop ebx"
"	      0045df2d    leave"
"	      0045df2e    ret"
);
}

// FUNCTION: COPTER_D 0x0045df2f
int32_t ScrollingCreditWindow::DrawSelf() {
// LINE 2343:
	asm( 
"	      0045df2f    push ebp"
"	      0045df30    mov ebp,esp"
"	      0045df32    sub esp,4"
"	      0045df35    push ebx"
"	      0045df36    push esi"
"	      0045df37    push edi"
"	      0045df38    mov this,ecx"
);
// LINE 2344:
	asm( 
"	      0045df3b    xor eax,eax"
"	      0045df3d    jmp near ptr 0045DF42h"
);
// LINE 2345:
	asm( 
"	      0045df42    pop edi"
"	      0045df43    pop esi"
"	      0045df44    pop ebx"
"	      0045df45    leave"
"	      0045df46    ret"
);
}

// FUNCTION: COPTER_D 0x0045df47
void ScrollingCreditWindow::RestartCreditDisplay() {
// LINE 2350:
	asm( 
"	      0045df47    push ebp"
"	      0045df48    mov ebp,esp"
"	      0045df4a    sub esp,4"
"	      0045df4d    push ebx"
"	      0045df4e    push esi"
"	      0045df4f    push edi"
"	      0045df50    mov this,ecx"
);
// LINE 2352:
	asm( 
"	      0045df53    jmp near ptr 0045DF58h"
"	      0045df58    pop edi"
"	      0045df59    pop esi"
"	      0045df5a    pop ebx"
"	      0045df5b    leave"
"	      0045df5c    ret"
);
}

// FUNCTION: COPTER_D 0x0045df5d
int32_t ScrollingCreditWindow::DoesWindowNeedUpdating() {
// LINE 2357:
	asm( 
"	      0045df5d    push ebp"
"	      0045df5e    mov ebp,esp"
"	      0045df60    sub esp,20h"
"	      0045df63    push ebx"
"	      0045df64    push esi"
"	      0045df65    push edi"
"	      0045df66    mov this,ecx"
);
// LINE 2358:
	asm( 
"	      0045df69    jmp near ptr 0045DF6Eh"
"	      0045df6e    mov eax,this"
"	      0045df71    cmp dword ptr [eax+48h],0"
"	      0045df75    jne near ptr 0045E0C6h"
"	      0045df7b    mov eax,this"
"	      0045df7e    mov eax,[eax+0BCh]"
"	      0045df84    mov [ebp-8],eax"
"	      0045df87    jmp near ptr 0045DF8Ch"
"	      0045df8c    mov eax,this"
"	      0045df8f    cmp dword ptr [eax+0B8h],0"
"	      0045df96    je near ptr 0045E01Bh"
"	      0045df9c    mov eax,this"
"	      0045df9f    cmp dword ptr [eax+0B4h],1"
"	      0045dfa6    jne near ptr 0045DFBFh"
"	      0045dfac    call dword ptr ds:[6C3908h]"
"	      0045dfb2    mov [ebp-18h],eax"
"	      0045dfb5    jmp near ptr 0045E006h"
"	      0045dfba    jmp near ptr 0045E006h"
"	      0045dfbf    mov eax,this"
"	      0045dfc2    cmp dword ptr [eax+0B4h],0"
"	      0045dfc9    jne near ptr 0045DFEFh"
"	      0045dfcf    lea eax,[ebp-14h]"
"	      0045dfd2    push eax"
"	      0045dfd3    call dword ptr ds:[6C365Ch]"
"	      0045dfd9    mov eax,[ebp-14h]"
"	      0045dfdc    mov [ebp-0Ch],eax"
"	      0045dfdf    mov eax,[ebp-0Ch]"
"	      0045dfe2    mov [ebp-18h],eax"
"	      0045dfe5    jmp near ptr 0045E006h"
"	      0045dfea    jmp near ptr 0045E006h"
"	      0045dfef    call dword ptr ds:[6C3908h]"
"	      0045dff5    mov ecx,3E8h"
"	      0045dffa    sub edx,edx"
"	      0045dffc    div ecx"
"	      0045dffe    mov [ebp-18h],eax"
"	      0045e001    jmp near ptr 0045E006h"
"	      0045e006    mov eax,[ebp-18h]"
"	      0045e009    mov ecx,this"
"	      0045e00c    sub eax,[ecx+0B8h]"
"	      0045e012    mov [ebp-4],eax"
"	      0045e015    mov eax,[ebp-4]"
"	      0045e018    add [ebp-8],eax"
"	      0045e01b    mov eax,this"
"	      0045e01e    cmp dword ptr [eax+0B4h],0"
"	      0045e025    jne near ptr 0045E06Eh"
"	      0045e02b    mov eax,this"
"	      0045e02e    cmp dword ptr [eax+0C0h],0"
"	      0045e035    je near ptr 0045E06Eh"
"	      0045e03b    mov eax,this"
"	      0045e03e    mov eax,[eax+0C0h]"
"	      0045e044    push eax"
"	      0045e045    push 0F4240h"
"	      0045e04a    mov eax,[ebp-8]"
"	      0045e04d    push eax"
"	      0045e04e    call dword ptr ds:[6C372Ch]"
"	      0045e054    mov [ebp-8],eax"
"	      0045e057    mov eax,this"
"	      0045e05a    mov ecx,[ebp-8]"
"	      0045e05d    cmp [eax+0C4h],ecx"
"	      0045e063    jae near ptr 0045E0A9h"
"	      0045e069    jmp near ptr 0045E097h"
"	      0045e06e    mov eax,this"
"	      0045e071    mov ecx,[ebp-8]"
"	      0045e074    cmp [eax+0C4h],ecx"
"	      0045e07a    jae near ptr 0045E0A9h"
"	      0045e080    jmp near ptr 0045E097h"
"	      0045e085    mov eax,this"
"	      0045e088    mov ecx,[ebp-1Ch]"
"	      0045e08b    cmp [eax+0C4h],ecx"
"	      0045e091    jae near ptr 0045E0A9h"
"	      0045e097    mov eax,this"
"	      0045e09a    mov dword ptr [eax+0C8h],1"
"	      0045e0a4    jmp near ptr 0045E0B6h"
"	      0045e0a9    mov eax,this"
"	      0045e0ac    mov dword ptr [eax+0C8h],0"
"	      0045e0b6    mov eax,this"
"	      0045e0b9    cmp dword ptr [eax+0C8h],0"
"	      0045e0c0    je near ptr 0045E0D0h"
"	      0045e0c6    mov eax,1"
"	      0045e0cb    jmp near ptr 0045E0D2h"
"	      0045e0d0    xor eax,eax"
"	      0045e0d2    jmp near ptr 0045E0D7h"
);
// LINE 2359:
	asm( 
"	      0045e0d7    pop edi"
"	      0045e0d8    pop esi"
"	      0045e0d9    pop ebx"
"	      0045e0da    leave"
"	      0045e0db    ret"
);
}

// FUNCTION: COPTER_D 0x0045e0dc
int32_t ScrollingCreditWindow::LoadCreditStringArray() {
// LINE 2364:
	asm( 
"	      0045e0dc    push ebp"
"	      0045e0dd    mov ebp,esp"
"	      0045e0df    sub esp,4"
"	      0045e0e2    push ebx"
"	      0045e0e3    push esi"
"	      0045e0e4    push edi"
"	      0045e0e5    mov this,ecx"
);
// LINE 2366:
	asm( 
"	      0045e0e8    xor eax,eax"
"	      0045e0ea    jmp near ptr 0045E0EFh"
);
// LINE 2367:
	asm( 
"	      0045e0ef    pop edi"
"	      0045e0f0    pop esi"
"	      0045e0f1    pop ebx"
"	      0045e0f2    leave"
"	      0045e0f3    ret"
);
}

// FUNCTION: COPTER_D 0x0045e0f4
int32_t ScrollingCreditWindow::Scroll() {
// LINE 2372:
	asm( 
"	      0045e0f4    push ebp"
"	      0045e0f5    mov ebp,esp"
"	      0045e0f7    sub esp,4"
"	      0045e0fa    push ebx"
"	      0045e0fb    push esi"
"	      0045e0fc    push edi"
"	      0045e0fd    mov this,ecx"
);
// LINE 2373:
	asm( 
"	      0045e100    xor eax,eax"
"	      0045e102    jmp near ptr 0045E107h"
);
// LINE 2374:
	asm( 
"	      0045e107    pop edi"
"	      0045e108    pop esi"
"	      0045e109    pop ebx"
"	      0045e10a    leave"
"	      0045e10b    ret"
);
}

// FUNCTION: COPTER_D 0x0045e10c
int32_t ScrollingCreditWindow::DoMessage(class GraphicWindow* gwSource, long lWindowID, long lMessage, void * __ptr32 pMessageData) {
// LINE 2380:
	asm( 
"	      0045e10c    push ebp"
"	      0045e10d    mov ebp,esp"
"	      0045e10f    sub esp,4"
"	      0045e112    push ebx"
"	      0045e113    push esi"
"	      0045e114    push edi"
"	      0045e115    mov this,ecx"
);
// LINE 2381:
	asm( 
"	      0045e118    xor eax,eax"
"	      0045e11a    jmp near ptr 0045E11Fh"
);
// LINE 2382:
	asm( 
"	      0045e11f    pop edi"
"	      0045e120    pop esi"
"	      0045e121    pop ebx"
"	      0045e122    leave"
"	      0045e123    ret 10h"
);
}

// FUNCTION: COPTER_D 0x0045e126
// $E72

// FUNCTION: COPTER_D 0x0045e13b
// $E71

// FUNCTION: COPTER_D 0x0045e165
// $E75

// FUNCTION: COPTER_D 0x0045e17a
// $E74

// FUNCTION: COPTER_D 0x0045e1a4
void CheckupWindow::CheckupWindow(class MRect& rectNewPosition, int32_t nNewID, class GraphicWindow* windowNewParent, class GraphicWindowOwner* myNewOwner, int32_t bAddToParentList) {
	int32_t i;

// LINE 2418:
	asm( 
"	      0045e1a4    push ebp"
"	      0045e1a5    mov ebp,esp"
"	      0045e1a7    sub esp,8"
"	      0045e1aa    push ebx"
"	      0045e1ab    push esi"
"	      0045e1ac    push edi"
"	      0045e1ad    mov this,ecx"
"	      0045e1b0    mov eax,ds:[606988h]"
"	      0045e1b5    push eax"
"	      0045e1b6    mov eax,bAddToParentList"
"	      0045e1b9    push eax"
"	      0045e1ba    mov eax,myNewOwner"
"	      0045e1bd    push eax"
"	      0045e1be    mov eax,windowNewParent"
"	      0045e1c1    push eax"
"	      0045e1c2    mov eax,nNewID"
"	      0045e1c5    push eax"
"	      0045e1c6    mov eax,rectNewPosition"
"	      0045e1c9    push eax"
"	      0045e1ca    mov eax,ds:[599188h]"
"	      0045e1cf    push eax"
"	      0045e1d0    mov ecx,this"
"	      0045e1d3    call 004A393Dh"
"	      0045e1d8    mov eax,this"
"	      0045e1db    mov dword ptr [eax],5903A0h"
);
// LINE 2421:
	asm( 
"	      0045e1e1    mov i,0"
"	      0045e1e8    jmp near ptr 0045E1F0h"
"	      0045e1ed    inc i"
"	      0045e1f0    cmp i,3"
"	      0045e1f4    jge near ptr 0045E20Dh"
);
// LINE 2422:
	asm( 
"	      0045e1fa    mov eax,i"
"	      0045e1fd    mov ecx,this"
"	      0045e200    mov dword ptr [ecx+eax*4+74h],0"
"	      0045e208    jmp near ptr 0045E1EDh"
);
// LINE 2423:
	asm( 
"	      0045e20d    mov i,0"
"	      0045e214    jmp near ptr 0045E21Ch"
"	      0045e219    inc i"
"	      0045e21c    cmp i,5"
"	      0045e220    jge near ptr 0045E23Ch"
);
// LINE 2424:
	asm( 
"	      0045e226    mov eax,i"
"	      0045e229    mov ecx,this"
"	      0045e22c    mov dword ptr [ecx+eax*4+80h],0"
"	      0045e237    jmp near ptr 0045E219h"
);
// LINE 2425:
	asm( 
"	      0045e23c    jmp near ptr 0045E241h"
"	      0045e241    mov eax,this"
"	      0045e244    pop edi"
"	      0045e245    pop esi"
"	      0045e246    pop ebx"
"	      0045e247    leave"
"	      0045e248    ret 14h"
);
}

// FUNCTION: COPTER_D 0x0045e24b
int32_t CheckupWindow::Initialize() {
	class ButtonWindow* tempButtonWindow;
	class TextWindow* tempTextWindow;
	class basic_string<char> sText;
	int32_t nFullStringID;

// LINE 2431:
	asm( 
"	      0045e24b    push ebp"
"	      0045e24c    mov ebp,esp"
"	      0045e24e    mov eax,2250h"
"	      0045e253    call 0056AC60h"
"	      0045e258    push ebx"
"	      0045e259    push esi"
"	      0045e25a    push edi"
"	      0045e25b    mov this,ecx"
);
// LINE 2434:
	asm( 
"	      0045e261    push 10h"
"	      0045e263    call 0056A600h"
"	      0045e268    add esp,4"
"	      0045e26b    mov [ebp-15Ch],eax"
"	      0045e271    cmp dword ptr [ebp-15Ch],0"
"	      0045e278    je near ptr 0045E2C9h"
"	      0045e27e    mov eax,[ebp-15Ch]"
"	      0045e284    mov dword ptr [eax+4],0"
"	      0045e28b    mov eax,[ebp-15Ch]"
"	      0045e291    mov eax,[eax+4]"
"	      0045e294    mov ecx,[ebp-15Ch]"
"	      0045e29a    mov [ecx+8],eax"
"	      0045e29d    mov eax,[ebp-15Ch]"
"	      0045e2a3    mov dword ptr [eax],0"
"	      0045e2a9    mov eax,[ebp-15Ch]"
"	      0045e2af    mov dword ptr [eax+0Ch],1"
"	      0045e2b6    jmp near ptr 0045E2BBh"
"	      0045e2bb    mov eax,[ebp-15Ch]"
"	      0045e2c1    mov sText.reference,eax"
"	      0045e2c4    jmp near ptr 0045E2D0h"
"	      0045e2c9    mov sText.reference,0"
"	      0045e2d0    mov sText.c_str_ptr,0"
"	      0045e2d7    jmp near ptr 0045E2DCh"
);
// LINE 2437:
	asm( 
"	      0045e2dc    mov ecx,this"
"	      0045e2e2    call 004A44D4h"
);
// LINE 2440:
	asm( 
"	      0045e2e7    push 0A4h"
"	      0045e2ec    call 0056A600h"
"	      0045e2f1    add esp,4"
"	      0045e2f4    mov [ebp-18h],eax"
"	      0045e2f7    cmp dword ptr [ebp-18h],0"
"	      0045e2fb    je near ptr 0045E352h"
"	      0045e301    jmp near ptr 0045E306h"
"	      0045e306    mov dword ptr [ebp-28h],70h"
"	      0045e30d    mov dword ptr [ebp-24h],24h"
"	      0045e314    mov dword ptr [ebp-20h],158h"
"	      0045e31b    mov dword ptr [ebp-1Ch],42h"
"	      0045e322    jmp near ptr 0045E327h"
"	      0045e327    push 1"
"	      0045e329    mov eax,this"
"	      0045e32f    push eax"
"	      0045e330    mov eax,this"
"	      0045e336    push eax"
"	      0045e337    push 244h"
"	      0045e33c    push 0"
"	      0045e33e    lea eax,[ebp-28h]"
"	      0045e341    push eax"
"	      0045e342    mov ecx,[ebp-18h]"
"	      0045e345    call 004ACCE6h"
"	      0045e34a    mov tempTextWindow,eax"
"	      0045e34d    jmp near ptr 0045E359h"
"	      0045e352    mov tempTextWindow,0"
);
// LINE 2441:
	asm( 
"	      0045e359    push 0"
"	      0045e35b    push 0"
"	      0045e35d    push 1Eh"
"	      0045e35f    mov eax,tempTextWindow"
"	      0045e362    mov eax,[eax]"
"	      0045e364    mov ecx,tempTextWindow"
"	      0045e367    call dword ptr [eax+0CCh]"
);
// LINE 2442:
	asm( 
"	      0045e36d    push 603AB4h"
"	      0045e372    mov eax,tempTextWindow"
"	      0045e375    mov eax,[eax]"
"	      0045e377    mov ecx,tempTextWindow"
"	      0045e37a    call dword ptr [eax+0D4h]"
);
// LINE 2443:
	asm( 
"	      0045e380    push 1"
"	      0045e382    mov eax,tempTextWindow"
"	      0045e385    mov eax,[eax]"
"	      0045e387    mov ecx,tempTextWindow"
"	      0045e38a    call dword ptr [eax+0D0h]"
);
// LINE 2445:
	asm( 
"	      0045e390    push 0A4h"
"	      0045e395    call 0056A600h"
"	      0045e39a    add esp,4"
"	      0045e39d    mov [ebp-2Ch],eax"
"	      0045e3a0    cmp dword ptr [ebp-2Ch],0"
"	      0045e3a4    je near ptr 0045E3FBh"
"	      0045e3aa    jmp near ptr 0045E3AFh"
"	      0045e3af    mov dword ptr [ebp-3Ch],48h"
"	      0045e3b6    mov dword ptr [ebp-38h],5Ah"
"	      0045e3bd    mov dword ptr [ebp-34h],94h"
"	      0045e3c4    mov dword ptr [ebp-30h],68h"
"	      0045e3cb    jmp near ptr 0045E3D0h"
"	      0045e3d0    push 1"
"	      0045e3d2    mov eax,this"
"	      0045e3d8    push eax"
"	      0045e3d9    mov eax,this"
"	      0045e3df    push eax"
"	      0045e3e0    push 245h"
"	      0045e3e5    push 0"
"	      0045e3e7    lea eax,[ebp-3Ch]"
"	      0045e3ea    push eax"
"	      0045e3eb    mov ecx,[ebp-2Ch]"
"	      0045e3ee    call 004ACCE6h"
"	      0045e3f3    mov tempTextWindow,eax"
"	      0045e3f6    jmp near ptr 0045E402h"
"	      0045e3fb    mov tempTextWindow,0"
);
// LINE 2446:
	asm( 
"	      0045e402    push 0"
"	      0045e404    push 0"
"	      0045e406    push 0Eh"
"	      0045e408    mov eax,tempTextWindow"
"	      0045e40b    mov eax,[eax]"
"	      0045e40d    mov ecx,tempTextWindow"
"	      0045e410    call dword ptr [eax+0CCh]"
);
// LINE 2447:
	asm( 
"	      0045e416    push 1"
"	      0045e418    mov eax,tempTextWindow"
"	      0045e41b    mov eax,[eax]"
"	      0045e41d    mov ecx,tempTextWindow"
"	      0045e420    call dword ptr [eax+0D0h]"
);
// LINE 2448:
	asm( 
"	      0045e426    push 603ABCh"
"	      0045e42b    mov eax,tempTextWindow"
"	      0045e42e    mov eax,[eax]"
"	      0045e430    mov ecx,tempTextWindow"
"	      0045e433    call dword ptr [eax+0D4h]"
);
// LINE 2450:
	asm( 
"	      0045e439    push 0A4h"
"	      0045e43e    call 0056A600h"
"	      0045e443    add esp,4"
"	      0045e446    mov [ebp-40h],eax"
"	      0045e449    cmp dword ptr [ebp-40h],0"
"	      0045e44d    je near ptr 0045E4A4h"
"	      0045e453    jmp near ptr 0045E458h"
"	      0045e458    mov dword ptr [ebp-50h],0ECh"
"	      0045e45f    mov dword ptr [ebp-4Ch],5Ah"
"	      0045e466    mov dword ptr [ebp-48h],148h"
"	      0045e46d    mov dword ptr [ebp-44h],68h"
"	      0045e474    jmp near ptr 0045E479h"
"	      0045e479    push 1"
"	      0045e47b    mov eax,this"
"	      0045e481    push eax"
"	      0045e482    mov eax,this"
"	      0045e488    push eax"
"	      0045e489    push 246h"
"	      0045e48e    push 0"
"	      0045e490    lea eax,[ebp-50h]"
"	      0045e493    push eax"
"	      0045e494    mov ecx,[ebp-40h]"
"	      0045e497    call 004ACCE6h"
"	      0045e49c    mov tempTextWindow,eax"
"	      0045e49f    jmp near ptr 0045E4ABh"
"	      0045e4a4    mov tempTextWindow,0"
);
// LINE 2451:
	asm( 
"	      0045e4ab    push 0"
"	      0045e4ad    push 0"
"	      0045e4af    push 0Eh"
"	      0045e4b1    mov eax,tempTextWindow"
"	      0045e4b4    mov eax,[eax]"
"	      0045e4b6    mov ecx,tempTextWindow"
"	      0045e4b9    call dword ptr [eax+0CCh]"
);
// LINE 2452:
	asm( 
"	      0045e4bf    push 1"
"	      0045e4c1    mov eax,tempTextWindow"
"	      0045e4c4    mov eax,[eax]"
"	      0045e4c6    mov ecx,tempTextWindow"
"	      0045e4c9    call dword ptr [eax+0D0h]"
);
// LINE 2453:
	asm( 
"	      0045e4cf    push 603ABCh"
"	      0045e4d4    mov eax,tempTextWindow"
"	      0045e4d7    mov eax,[eax]"
"	      0045e4d9    mov ecx,tempTextWindow"
"	      0045e4dc    call dword ptr [eax+0D4h]"
);
// LINE 2455:
	asm( 
"	      0045e4e2    push 0A4h"
"	      0045e4e7    call 0056A600h"
"	      0045e4ec    add esp,4"
"	      0045e4ef    mov [ebp-54h],eax"
"	      0045e4f2    cmp dword ptr [ebp-54h],0"
"	      0045e4f6    je near ptr 0045E54Dh"
"	      0045e4fc    jmp near ptr 0045E501h"
"	      0045e501    mov dword ptr [ebp-64h],3Eh"
"	      0045e508    mov dword ptr [ebp-60h],14Eh"
"	      0045e50f    mov dword ptr [ebp-5Ch],0A4h"
"	      0045e516    mov dword ptr [ebp-58h],162h"
"	      0045e51d    jmp near ptr 0045E522h"
"	      0045e522    push 1"
"	      0045e524    mov eax,this"
"	      0045e52a    push eax"
"	      0045e52b    mov eax,this"
"	      0045e531    push eax"
"	      0045e532    push 247h"
"	      0045e537    push 0"
"	      0045e539    lea eax,[ebp-64h]"
"	      0045e53c    push eax"
"	      0045e53d    mov ecx,[ebp-54h]"
"	      0045e540    call 004ACCE6h"
"	      0045e545    mov tempTextWindow,eax"
"	      0045e548    jmp near ptr 0045E554h"
"	      0045e54d    mov tempTextWindow,0"
);
// LINE 2456:
	asm( 
"	      0045e554    push 0"
"	      0045e556    push 0"
"	      0045e558    push 0Eh"
"	      0045e55a    mov eax,tempTextWindow"
"	      0045e55d    mov eax,[eax]"
"	      0045e55f    mov ecx,tempTextWindow"
"	      0045e562    call dword ptr [eax+0CCh]"
);
// LINE 2457:
	asm( 
"	      0045e568    push 1"
"	      0045e56a    mov eax,tempTextWindow"
"	      0045e56d    mov eax,[eax]"
"	      0045e56f    mov ecx,tempTextWindow"
"	      0045e572    call dword ptr [eax+0D0h]"
);
// LINE 2458:
	asm( 
"	      0045e578    push 603ABCh"
"	      0045e57d    mov eax,tempTextWindow"
"	      0045e580    mov eax,[eax]"
"	      0045e582    mov ecx,tempTextWindow"
"	      0045e585    call dword ptr [eax+0D4h]"
);
// LINE 2460:
	asm( 
"	      0045e58b    push 0A4h"
"	      0045e590    call 0056A600h"
"	      0045e595    add esp,4"
"	      0045e598    mov [ebp-68h],eax"
"	      0045e59b    cmp dword ptr [ebp-68h],0"
"	      0045e59f    je near ptr 0045E5F6h"
"	      0045e5a5    jmp near ptr 0045E5AAh"
"	      0045e5aa    mov dword ptr [ebp-78h],0A4h"
"	      0045e5b1    mov dword ptr [ebp-74h],14Eh"
"	      0045e5b8    mov dword ptr [ebp-70h],118h"
"	      0045e5bf    mov dword ptr [ebp-6Ch],162h"
"	      0045e5c6    jmp near ptr 0045E5CBh"
"	      0045e5cb    push 1"
"	      0045e5cd    mov eax,this"
"	      0045e5d3    push eax"
"	      0045e5d4    mov eax,this"
"	      0045e5da    push eax"
"	      0045e5db    push 248h"
"	      0045e5e0    push 0"
"	      0045e5e2    lea eax,[ebp-78h]"
"	      0045e5e5    push eax"
"	      0045e5e6    mov ecx,[ebp-68h]"
"	      0045e5e9    call 004ACCE6h"
"	      0045e5ee    mov tempTextWindow,eax"
"	      0045e5f1    jmp near ptr 0045E5FDh"
"	      0045e5f6    mov tempTextWindow,0"
);
// LINE 2461:
	asm( 
"	      0045e5fd    push 0"
"	      0045e5ff    push 0"
"	      0045e601    push 0Eh"
"	      0045e603    mov eax,tempTextWindow"
"	      0045e606    mov eax,[eax]"
"	      0045e608    mov ecx,tempTextWindow"
"	      0045e60b    call dword ptr [eax+0CCh]"
);
// LINE 2462:
	asm( 
"	      0045e611    push 1"
"	      0045e613    mov eax,tempTextWindow"
"	      0045e616    mov eax,[eax]"
"	      0045e618    mov ecx,tempTextWindow"
"	      0045e61b    call dword ptr [eax+0D0h]"
);
// LINE 2463:
	asm( 
"	      0045e621    push 603ABCh"
"	      0045e626    mov eax,tempTextWindow"
"	      0045e629    mov eax,[eax]"
"	      0045e62b    mov ecx,tempTextWindow"
"	      0045e62e    call dword ptr [eax+0D4h]"
);
// LINE 2465:
	asm( 
"	      0045e634    push 0A4h"
"	      0045e639    call 0056A600h"
"	      0045e63e    add esp,4"
"	      0045e641    mov [ebp-7Ch],eax"
"	      0045e644    cmp dword ptr [ebp-7Ch],0"
"	      0045e648    je near ptr 0045E6ABh"
"	      0045e64e    jmp near ptr 0045E653h"
"	      0045e653    mov dword ptr [ebp-8Ch],118h"
"	      0045e65d    mov dword ptr [ebp-88h],14Eh"
"	      0045e667    mov dword ptr [ebp-84h],18Eh"
"	      0045e671    mov dword ptr [ebp-80h],162h"
"	      0045e678    jmp near ptr 0045E67Dh"
"	      0045e67d    push 1"
"	      0045e67f    mov eax,this"
"	      0045e685    push eax"
"	      0045e686    mov eax,this"
"	      0045e68c    push eax"
"	      0045e68d    push 249h"
"	      0045e692    push 0"
"	      0045e694    lea eax,[ebp-8Ch]"
"	      0045e69a    push eax"
"	      0045e69b    mov ecx,[ebp-7Ch]"
"	      0045e69e    call 004ACCE6h"
"	      0045e6a3    mov tempTextWindow,eax"
"	      0045e6a6    jmp near ptr 0045E6B2h"
"	      0045e6ab    mov tempTextWindow,0"
);
// LINE 2466:
	asm( 
"	      0045e6b2    push 0"
"	      0045e6b4    push 0"
"	      0045e6b6    push 0Eh"
"	      0045e6b8    mov eax,tempTextWindow"
"	      0045e6bb    mov eax,[eax]"
"	      0045e6bd    mov ecx,tempTextWindow"
"	      0045e6c0    call dword ptr [eax+0CCh]"
);
// LINE 2467:
	asm( 
"	      0045e6c6    push 1"
"	      0045e6c8    mov eax,tempTextWindow"
"	      0045e6cb    mov eax,[eax]"
"	      0045e6cd    mov ecx,tempTextWindow"
"	      0045e6d0    call dword ptr [eax+0D0h]"
);
// LINE 2468:
	asm( 
"	      0045e6d6    push 603ABCh"
"	      0045e6db    mov eax,tempTextWindow"
"	      0045e6de    mov eax,[eax]"
"	      0045e6e0    mov ecx,tempTextWindow"
"	      0045e6e3    call dword ptr [eax+0D4h]"
);
// LINE 2471:
	asm( 
"	      0045e6e9    push 0A4h"
"	      0045e6ee    call 0056A600h"
"	      0045e6f3    add esp,4"
"	      0045e6f6    mov [ebp-90h],eax"
"	      0045e6fc    cmp dword ptr [ebp-90h],0"
"	      0045e703    je near ptr 0045E772h"
"	      0045e709    jmp near ptr 0045E70Eh"
"	      0045e70e    mov dword ptr [ebp-0A0h],0A4h"
"	      0045e718    mov dword ptr [ebp-9Ch],5Ah"
"	      0045e722    mov dword ptr [ebp-98h],0D8h"
"	      0045e72c    mov dword ptr [ebp-94h],66h"
"	      0045e736    jmp near ptr 0045E73Bh"
"	      0045e73b    push 1"
"	      0045e73d    mov eax,this"
"	      0045e743    push eax"
"	      0045e744    mov eax,this"
"	      0045e74a    push eax"
"	      0045e74b    push 0"
"	      0045e74d    push 0"
"	      0045e74f    lea eax,[ebp-0A0h]"
"	      0045e755    push eax"
"	      0045e756    mov ecx,[ebp-90h]"
"	      0045e75c    call 004ACCE6h"
"	      0045e761    mov ecx,this"
"	      0045e767    mov [ecx+80h],eax"
"	      0045e76d    jmp near ptr 0045E782h"
"	      0045e772    mov eax,this"
"	      0045e778    mov dword ptr [eax+80h],0"
);
// LINE 2472:
	asm( 
"	      0045e782    push 0"
"	      0045e784    push 0"
"	      0045e786    push 0Eh"
"	      0045e788    mov eax,this"
"	      0045e78e    mov ecx,this"
"	      0045e794    mov ecx,[ecx+80h]"
"	      0045e79a    mov edx,[ecx]"
"	      0045e79c    mov ecx,[eax+80h]"
"	      0045e7a2    call dword ptr [edx+0CCh]"
);
// LINE 2473:
	asm( 
"	      0045e7a8    push 603ABCh"
"	      0045e7ad    mov eax,this"
"	      0045e7b3    mov ecx,this"
"	      0045e7b9    mov ecx,[ecx+80h]"
"	      0045e7bf    mov edx,[ecx]"
"	      0045e7c1    mov ecx,[eax+80h]"
"	      0045e7c7    call dword ptr [edx+0D4h]"
);
// LINE 2475:
	asm( 
"	      0045e7cd    push 0A4h"
"	      0045e7d2    call 0056A600h"
"	      0045e7d7    add esp,4"
"	      0045e7da    mov [ebp-0A4h],eax"
"	      0045e7e0    cmp dword ptr [ebp-0A4h],0"
"	      0045e7e7    je near ptr 0045E856h"
"	      0045e7ed    jmp near ptr 0045E7F2h"
"	      0045e7f2    mov dword ptr [ebp-0B4h],156h"
"	      0045e7fc    mov dword ptr [ebp-0B0h],5Ah"
"	      0045e806    mov dword ptr [ebp-0ACh],186h"
"	      0045e810    mov dword ptr [ebp-0A8h],66h"
"	      0045e81a    jmp near ptr 0045E81Fh"
"	      0045e81f    push 1"
"	      0045e821    mov eax,this"
"	      0045e827    push eax"
"	      0045e828    mov eax,this"
"	      0045e82e    push eax"
"	      0045e82f    push 0"
"	      0045e831    push 0"
"	      0045e833    lea eax,[ebp-0B4h]"
"	      0045e839    push eax"
"	      0045e83a    mov ecx,[ebp-0A4h]"
"	      0045e840    call 004ACCE6h"
"	      0045e845    mov ecx,this"
"	      0045e84b    mov [ecx+84h],eax"
"	      0045e851    jmp near ptr 0045E866h"
"	      0045e856    mov eax,this"
"	      0045e85c    mov dword ptr [eax+84h],0"
);
// LINE 2476:
	asm( 
"	      0045e866    push 0"
"	      0045e868    push 0"
"	      0045e86a    push 0Eh"
"	      0045e86c    mov eax,this"
"	      0045e872    mov ecx,this"
"	      0045e878    mov ecx,[ecx+84h]"
"	      0045e87e    mov edx,[ecx]"
"	      0045e880    mov ecx,[eax+84h]"
"	      0045e886    call dword ptr [edx+0CCh]"
);
// LINE 2477:
	asm( 
"	      0045e88c    push 603ABCh"
"	      0045e891    mov eax,this"
"	      0045e897    mov ecx,this"
"	      0045e89d    mov ecx,[ecx+84h]"
"	      0045e8a3    mov edx,[ecx]"
"	      0045e8a5    mov ecx,[eax+84h]"
"	      0045e8ab    call dword ptr [edx+0D4h]"
);
// LINE 2479:
	asm( 
"	      0045e8b1    push 0A4h"
"	      0045e8b6    call 0056A600h"
"	      0045e8bb    add esp,4"
"	      0045e8be    mov [ebp-0B8h],eax"
"	      0045e8c4    cmp dword ptr [ebp-0B8h],0"
"	      0045e8cb    je near ptr 0045E93Ah"
"	      0045e8d1    jmp near ptr 0045E8D6h"
"	      0045e8d6    mov dword ptr [ebp-0C8h],48h"
"	      0045e8e0    mov dword ptr [ebp-0C4h],70h"
"	      0045e8ea    mov dword ptr [ebp-0C0h],98h"
"	      0045e8f4    mov dword ptr [ebp-0BCh],7Eh"
"	      0045e8fe    jmp near ptr 0045E903h"
"	      0045e903    push 1"
"	      0045e905    mov eax,this"
"	      0045e90b    push eax"
"	      0045e90c    mov eax,this"
"	      0045e912    push eax"
"	      0045e913    push 0"
"	      0045e915    push 0"
"	      0045e917    lea eax,[ebp-0C8h]"
"	      0045e91d    push eax"
"	      0045e91e    mov ecx,[ebp-0B8h]"
"	      0045e924    call 004ACCE6h"
"	      0045e929    mov ecx,this"
"	      0045e92f    mov [ecx+88h],eax"
"	      0045e935    jmp near ptr 0045E94Ah"
"	      0045e93a    mov eax,this"
"	      0045e940    mov dword ptr [eax+88h],0"
);
// LINE 2480:
	asm( 
"	      0045e94a    push 0"
"	      0045e94c    push 0"
"	      0045e94e    push 0Eh"
"	      0045e950    mov eax,this"
"	      0045e956    mov ecx,this"
"	      0045e95c    mov ecx,[ecx+88h]"
"	      0045e962    mov edx,[ecx]"
"	      0045e964    mov ecx,[eax+88h]"
"	      0045e96a    call dword ptr [edx+0CCh]"
);
// LINE 2481:
	asm( 
"	      0045e970    push 1"
"	      0045e972    mov eax,this"
"	      0045e978    mov ecx,this"
"	      0045e97e    mov ecx,[ecx+88h]"
"	      0045e984    mov edx,[ecx]"
"	      0045e986    mov ecx,[eax+88h]"
"	      0045e98c    call dword ptr [edx+0D0h]"
);
// LINE 2482:
	asm( 
"	      0045e992    push 603ABCh"
"	      0045e997    mov eax,this"
"	      0045e99d    mov ecx,this"
"	      0045e9a3    mov ecx,[ecx+88h]"
"	      0045e9a9    mov edx,[ecx]"
"	      0045e9ab    mov ecx,[eax+88h]"
"	      0045e9b1    call dword ptr [edx+0D4h]"
);
// LINE 2484:
	asm( 
"	      0045e9b7    push 0A4h"
"	      0045e9bc    call 0056A600h"
"	      0045e9c1    add esp,4"
"	      0045e9c4    mov [ebp-0CCh],eax"
"	      0045e9ca    cmp dword ptr [ebp-0CCh],0"
"	      0045e9d1    je near ptr 0045EA40h"
"	      0045e9d7    jmp near ptr 0045E9DCh"
"	      0045e9dc    mov dword ptr [ebp-0DCh],0BAh"
"	      0045e9e6    mov dword ptr [ebp-0D8h],70h"
"	      0045e9f0    mov dword ptr [ebp-0D4h],10Eh"
"	      0045e9fa    mov dword ptr [ebp-0D0h],7Eh"
"	      0045ea04    jmp near ptr 0045EA09h"
"	      0045ea09    push 1"
"	      0045ea0b    mov eax,this"
"	      0045ea11    push eax"
"	      0045ea12    mov eax,this"
"	      0045ea18    push eax"
"	      0045ea19    push 0"
"	      0045ea1b    push 0"
"	      0045ea1d    lea eax,[ebp-0DCh]"
"	      0045ea23    push eax"
"	      0045ea24    mov ecx,[ebp-0CCh]"
"	      0045ea2a    call 004ACCE6h"
"	      0045ea2f    mov ecx,this"
"	      0045ea35    mov [ecx+8Ch],eax"
"	      0045ea3b    jmp near ptr 0045EA50h"
"	      0045ea40    mov eax,this"
"	      0045ea46    mov dword ptr [eax+8Ch],0"
);
// LINE 2485:
	asm( 
"	      0045ea50    push 0"
"	      0045ea52    push 0"
"	      0045ea54    push 0Eh"
"	      0045ea56    mov eax,this"
"	      0045ea5c    mov ecx,this"
"	      0045ea62    mov ecx,[ecx+8Ch]"
"	      0045ea68    mov edx,[ecx]"
"	      0045ea6a    mov ecx,[eax+8Ch]"
"	      0045ea70    call dword ptr [edx+0CCh]"
);
// LINE 2486:
	asm( 
"	      0045ea76    push 1"
"	      0045ea78    mov eax,this"
"	      0045ea7e    mov ecx,this"
"	      0045ea84    mov ecx,[ecx+8Ch]"
"	      0045ea8a    mov edx,[ecx]"
"	      0045ea8c    mov ecx,[eax+8Ch]"
"	      0045ea92    call dword ptr [edx+0D0h]"
);
// LINE 2487:
	asm( 
"	      0045ea98    push 603ABCh"
"	      0045ea9d    mov eax,this"
"	      0045eaa3    mov ecx,this"
"	      0045eaa9    mov ecx,[ecx+8Ch]"
"	      0045eaaf    mov edx,[ecx]"
"	      0045eab1    mov ecx,[eax+8Ch]"
"	      0045eab7    call dword ptr [edx+0D4h]"
);
// LINE 2489:
	asm( 
"	      0045eabd    push 0A4h"
"	      0045eac2    call 0056A600h"
"	      0045eac7    add esp,4"
"	      0045eaca    mov [ebp-0E0h],eax"
"	      0045ead0    cmp dword ptr [ebp-0E0h],0"
"	      0045ead7    je near ptr 0045EB46h"
"	      0045eadd    jmp near ptr 0045EAE2h"
"	      0045eae2    mov dword ptr [ebp-0F0h],12Ah"
"	      0045eaec    mov dword ptr [ebp-0ECh],70h"
"	      0045eaf6    mov dword ptr [ebp-0E8h],17Eh"
"	      0045eb00    mov dword ptr [ebp-0E4h],7Eh"
"	      0045eb0a    jmp near ptr 0045EB0Fh"
"	      0045eb0f    push 1"
"	      0045eb11    mov eax,this"
"	      0045eb17    push eax"
"	      0045eb18    mov eax,this"
"	      0045eb1e    push eax"
"	      0045eb1f    push 0"
"	      0045eb21    push 0"
"	      0045eb23    lea eax,[ebp-0F0h]"
"	      0045eb29    push eax"
"	      0045eb2a    mov ecx,[ebp-0E0h]"
"	      0045eb30    call 004ACCE6h"
"	      0045eb35    mov ecx,this"
"	      0045eb3b    mov [ecx+90h],eax"
"	      0045eb41    jmp near ptr 0045EB56h"
"	      0045eb46    mov eax,this"
"	      0045eb4c    mov dword ptr [eax+90h],0"
);
// LINE 2490:
	asm( 
"	      0045eb56    push 0"
"	      0045eb58    push 0"
"	      0045eb5a    push 0Eh"
"	      0045eb5c    mov eax,this"
"	      0045eb62    mov ecx,this"
"	      0045eb68    mov ecx,[ecx+90h]"
"	      0045eb6e    mov edx,[ecx]"
"	      0045eb70    mov ecx,[eax+90h]"
"	      0045eb76    call dword ptr [edx+0CCh]"
);
// LINE 2491:
	asm( 
"	      0045eb7c    push 1"
"	      0045eb7e    mov eax,this"
"	      0045eb84    mov ecx,this"
"	      0045eb8a    mov ecx,[ecx+90h]"
"	      0045eb90    mov edx,[ecx]"
"	      0045eb92    mov ecx,[eax+90h]"
"	      0045eb98    call dword ptr [edx+0D0h]"
);
// LINE 2492:
	asm( 
"	      0045eb9e    push 603ABCh"
"	      0045eba3    mov eax,this"
"	      0045eba9    mov ecx,this"
"	      0045ebaf    mov ecx,[ecx+90h]"
"	      0045ebb5    mov edx,[ecx]"
"	      0045ebb7    mov ecx,[eax+90h]"
"	      0045ebbd    call dword ptr [edx+0D4h]"
);
// LINE 2497:
	asm( 
"	      0045ebc3    push 0B4h"
"	      0045ebc8    call 0056A600h"
"	      0045ebcd    add esp,4"
"	      0045ebd0    mov [ebp-0F4h],eax"
"	      0045ebd6    cmp dword ptr [ebp-0F4h],0"
"	      0045ebdd    je near ptr 0045EC53h"
"	      0045ebe3    jmp near ptr 0045EBE8h"
"	      0045ebe8    mov dword ptr [ebp-104h],62h"
"	      0045ebf2    mov dword ptr [ebp-100h],84h"
"	      0045ebfc    mov dword ptr [ebp-0FCh],7Ch"
"	      0045ec06    mov dword ptr [ebp-0F8h],14Eh"
"	      0045ec10    jmp near ptr 0045EC15h"
"	      0045ec15    push 8"
"	      0045ec17    mov eax,ds:[59918Ch]"
"	      0045ec1c    push eax"
"	      0045ec1d    push 0"
"	      0045ec1f    push 1"
"	      0045ec21    mov eax,this"
"	      0045ec27    push eax"
"	      0045ec28    mov eax,this"
"	      0045ec2e    push eax"
"	      0045ec2f    push 1"
"	      0045ec31    push 3"
"	      0045ec33    lea eax,[ebp-104h]"
"	      0045ec39    push eax"
"	      0045ec3a    mov ecx,[ebp-0F4h]"
"	      0045ec40    call 004B1256h"
"	      0045ec45    mov ecx,this"
"	      0045ec4b    mov [ecx+74h],eax"
"	      0045ec4e    jmp near ptr 0045EC60h"
"	      0045ec53    mov eax,this"
"	      0045ec59    mov dword ptr [eax+74h],0"
);
// LINE 2498:
	asm( 
"	      0045ec60    mov eax,this"
"	      0045ec66    mov ecx,this"
"	      0045ec6c    mov ecx,[ecx+74h]"
"	      0045ec6f    mov edx,[ecx]"
"	      0045ec71    mov ecx,[eax+74h]"
"	      0045ec74    call dword ptr [edx+4]"
);
// LINE 2499:
	asm( 
"	      0045ec77    push 0"
"	      0045ec79    mov eax,this"
"	      0045ec7f    mov ecx,[eax+74h]"
"	      0045ec82    call 004B2834h"
);
// LINE 2500:
	asm( 
"	      0045ec87    push 64h"
"	      0045ec89    mov eax,this"
"	      0045ec8f    mov ecx,[eax+74h]"
"	      0045ec92    call 004B2872h"
);
// LINE 2504:
	asm( 
"	      0045ec97    push 0B4h"
"	      0045ec9c    call 0056A600h"
"	      0045eca1    add esp,4"
"	      0045eca4    mov [ebp-108h],eax"
"	      0045ecaa    cmp dword ptr [ebp-108h],0"
"	      0045ecb1    je near ptr 0045ED27h"
"	      0045ecb7    jmp near ptr 0045ECBCh"
"	      0045ecbc    mov dword ptr [ebp-118h],0D6h"
"	      0045ecc6    mov dword ptr [ebp-114h],84h"
"	      0045ecd0    mov dword ptr [ebp-110h],0F0h"
"	      0045ecda    mov dword ptr [ebp-10Ch],14Eh"
"	      0045ece4    jmp near ptr 0045ECE9h"
"	      0045ece9    push 8"
"	      0045eceb    mov eax,ds:[59918Ch]"
"	      0045ecf0    push eax"
"	      0045ecf1    push 0"
"	      0045ecf3    push 1"
"	      0045ecf5    mov eax,this"
"	      0045ecfb    push eax"
"	      0045ecfc    mov eax,this"
"	      0045ed02    push eax"
"	      0045ed03    push 1"
"	      0045ed05    push 4"
"	      0045ed07    lea eax,[ebp-118h]"
"	      0045ed0d    push eax"
"	      0045ed0e    mov ecx,[ebp-108h]"
"	      0045ed14    call 004B1256h"
"	      0045ed19    mov ecx,this"
"	      0045ed1f    mov [ecx+78h],eax"
"	      0045ed22    jmp near ptr 0045ED34h"
"	      0045ed27    mov eax,this"
"	      0045ed2d    mov dword ptr [eax+78h],0"
);
// LINE 2505:
	asm( 
"	      0045ed34    mov eax,this"
"	      0045ed3a    mov ecx,this"
"	      0045ed40    mov ecx,[ecx+78h]"
"	      0045ed43    mov edx,[ecx]"
"	      0045ed45    mov ecx,[eax+78h]"
"	      0045ed48    call dword ptr [edx+4]"
);
// LINE 2506:
	asm( 
"	      0045ed4b    push 0"
"	      0045ed4d    mov eax,this"
"	      0045ed53    mov ecx,[eax+78h]"
"	      0045ed56    call 004B2834h"
);
// LINE 2507:
	asm( 
"	      0045ed5b    push 64h"
"	      0045ed5d    mov eax,this"
"	      0045ed63    mov ecx,[eax+78h]"
"	      0045ed66    call 004B2872h"
);
// LINE 2511:
	asm( 
"	      0045ed6b    push 0B4h"
"	      0045ed70    call 0056A600h"
"	      0045ed75    add esp,4"
"	      0045ed78    mov [ebp-11Ch],eax"
"	      0045ed7e    cmp dword ptr [ebp-11Ch],0"
"	      0045ed85    je near ptr 0045EDFBh"
"	      0045ed8b    jmp near ptr 0045ED90h"
"	      0045ed90    mov dword ptr [ebp-12Ch],14Ah"
"	      0045ed9a    mov dword ptr [ebp-128h],84h"
"	      0045eda4    mov dword ptr [ebp-124h],164h"
"	      0045edae    mov dword ptr [ebp-120h],14Eh"
"	      0045edb8    jmp near ptr 0045EDBDh"
"	      0045edbd    push 8"
"	      0045edbf    mov eax,ds:[59918Ch]"
"	      0045edc4    push eax"
"	      0045edc5    push 0"
"	      0045edc7    push 1"
"	      0045edc9    mov eax,this"
"	      0045edcf    push eax"
"	      0045edd0    mov eax,this"
"	      0045edd6    push eax"
"	      0045edd7    push 1"
"	      0045edd9    push 5"
"	      0045eddb    lea eax,[ebp-12Ch]"
"	      0045ede1    push eax"
"	      0045ede2    mov ecx,[ebp-11Ch]"
"	      0045ede8    call 004B1256h"
"	      0045eded    mov ecx,this"
"	      0045edf3    mov [ecx+7Ch],eax"
"	      0045edf6    jmp near ptr 0045EE08h"
"	      0045edfb    mov eax,this"
"	      0045ee01    mov dword ptr [eax+7Ch],0"
);
// LINE 2512:
	asm( 
"	      0045ee08    mov eax,this"
"	      0045ee0e    mov ecx,this"
"	      0045ee14    mov ecx,[ecx+7Ch]"
"	      0045ee17    mov edx,[ecx]"
"	      0045ee19    mov ecx,[eax+7Ch]"
"	      0045ee1c    call dword ptr [edx+4]"
);
// LINE 2513:
	asm( 
"	      0045ee1f    push 0"
"	      0045ee21    mov eax,this"
"	      0045ee27    mov ecx,[eax+7Ch]"
"	      0045ee2a    call 004B2834h"
);
// LINE 2514:
	asm( 
"	      0045ee2f    push 64h"
"	      0045ee31    mov eax,this"
"	      0045ee37    mov ecx,[eax+7Ch]"
"	      0045ee3a    call 004B2872h"
);
// LINE 2518:
	asm( 
"	      0045ee3f    push 94h"
"	      0045ee44    call 0056A600h"
"	      0045ee49    add esp,4"
"	      0045ee4c    mov [ebp-130h],eax"
"	      0045ee52    cmp dword ptr [ebp-130h],0"
"	      0045ee59    je near ptr 0045EEBFh"
"	      0045ee5f    jmp near ptr 0045EE64h"
"	      0045ee64    mov dword ptr [ebp-140h],0C6h"
"	      0045ee6e    mov dword ptr [ebp-13Ch],186h"
"	      0045ee78    mov dword ptr [ebp-138h],0C7h"
"	      0045ee82    mov dword ptr [ebp-134h],187h"
"	      0045ee8c    jmp near ptr 0045EE91h"
"	      0045ee91    push 1"
"	      0045ee93    mov eax,this"
"	      0045ee99    push eax"
"	      0045ee9a    push 0"
"	      0045ee9c    mov eax,this"
"	      0045eea2    push eax"
"	      0045eea3    push 1"
"	      0045eea5    lea eax,[ebp-140h]"
"	      0045eeab    push eax"
"	      0045eeac    mov ecx,[ebp-130h]"
"	      0045eeb2    call 00471847h"
"	      0045eeb7    mov tempButtonWindow,eax"
"	      0045eeba    jmp near ptr 0045EEC6h"
"	      0045eebf    mov tempButtonWindow,0"
);
// LINE 2519:
	asm( 
"	      0045eec6    push 0"
"	      0045eec8    push 24Ah"
"	      0045eecd    call 0042B15Fh"
"	      0045eed2    add esp,8"
"	      0045eed5    mov nFullStringID,eax"
);
// LINE 2520:
	asm( 
"	      0045eed8    push 0FFFh"
"	      0045eedd    lea eax,[ebp-1174h]"
"	      0045eee3    push eax"
"	      0045eee4    mov eax,nFullStringID"
"	      0045eee7    push eax"
"	      0045eee8    mov eax,ds:[5C28C8h]"
"	      0045eeed    push eax"
"	      0045eeee    call dword ptr ds:[6C38B4h]"
"	      0045eef4    mov [ebp-1178h],eax"
"	      0045eefa    cmp dword ptr [ebp-1178h],0"
"	      0045ef01    jne near ptr 0045F2C8h"
"	      0045ef07    push 0FFFh"
"	      0045ef0c    lea eax,[ebp-1174h]"
"	      0045ef12    push eax"
"	      0045ef13    mov ecx,3E8h"
"	      0045ef18    mov eax,nFullStringID"
"	      0045ef1b    sub edx,edx"
"	      0045ef1d    div ecx"
"	      0045ef1f    push edx"
"	      0045ef20    mov eax,ds:[5C28C8h]"
"	      0045ef25    push eax"
"	      0045ef26    call dword ptr ds:[6C38B4h]"
"	      0045ef2c    mov [ebp-1178h],eax"
"	      0045ef32    jmp near ptr 0045EF37h"
"	      0045ef37    lea eax,[ebp-1174h]"
"	      0045ef3d    push eax"
"	      0045ef3e    call 0056ABE0h"
"	      0045ef43    add esp,4"
"	      0045ef46    mov [ebp-1194h],eax"
"	      0045ef4c    cmp dword ptr [ebp-1194h],0FFFFFFFFh"
"	      0045ef53    jne near ptr 0045EF91h"
"	      0045ef59    push 5971E4h"
"	      0045ef5e    mov ecx,638C00h"
"	      0045ef63    call 00569960h"
"	      0045ef68    mov [ebp-1188h],eax"
"	      0045ef6e    mov eax,[ebp-1188h]"
"	      0045ef74    push eax"
"	      0045ef75    call 004011B0h"
"	      0045ef7a    add esp,4"
"	      0045ef7d    jmp near ptr 0045EF82h"
"	      0045ef82    push 1"
"	      0045ef84    call 00569430h"
"	      0045ef89    add esp,4"
"	      0045ef8c    jmp near ptr 0045EF91h"
"	      0045ef91    jmp near ptr 0045EF96h"
"	      0045ef96    mov eax,sText.reference"
"	      0045ef99    cmp dword ptr [eax+0Ch],1"
"	      0045ef9d    ja near ptr 0045EFC7h"
"	      0045efa3    cmp dword ptr [ebp-1194h],0"
"	      0045efaa    je near ptr 0045F083h"
"	      0045efb0    jmp near ptr 0045EFB5h"
"	      0045efb5    mov eax,sText.reference"
"	      0045efb8    mov ecx,[ebp-1194h]"
"	      0045efbe    cmp [eax+8],ecx"
"	      0045efc1    jae near ptr 0045F083h"
"	      0045efc7    push 10h"
"	      0045efc9    call 0056A600h"
"	      0045efce    add esp,4"
"	      0045efd1    mov [ebp-1180h],eax"
"	      0045efd7    cmp dword ptr [ebp-1180h],0"
"	      0045efde    je near ptr 0045F008h"
"	      0045efe4    mov eax,[ebp-1194h]"
"	      0045efea    push eax"
"	      0045efeb    lea eax,[ebp-1174h]"
"	      0045eff1    push eax"
"	      0045eff2    mov ecx,[ebp-1180h]"
"	      0045eff8    call 0041E090h"
"	      0045effd    mov [ebp-117Ch],eax"
"	      0045f003    jmp near ptr 0045F012h"
"	      0045f008    mov dword ptr [ebp-117Ch],0"
"	      0045f012    mov eax,sText.reference"
"	      0045f015    dec dword ptr [eax+0Ch]"
"	      0045f018    mov eax,sText.reference"
"	      0045f01b    cmp dword ptr [eax+0Ch],0"
"	      0045f01f    jne near ptr 0045F070h"
"	      0045f025    mov eax,sText.reference"
"	      0045f028    mov [ebp-1190h],eax"
"	      0045f02e    mov eax,[ebp-1190h]"
"	      0045f034    mov [ebp-118Ch],eax"
"	      0045f03a    cmp dword ptr [ebp-118Ch],0"
"	      0045f041    je near ptr 0045F070h"
"	      0045f047    mov ecx,[ebp-118Ch]"
"	      0045f04d    call 0041F4B0h"
"	      0045f052    jmp near ptr 0045F057h"
"	      0045f057    mov eax,[ebp-118Ch]"
"	      0045f05d    push eax"
"	      0045f05e    call 0056A740h"
"	      0045f063    add esp,4"
"	      0045f066    jmp near ptr 0045F06Bh"
"	      0045f06b    jmp near ptr 0045F070h"
"	      0045f070    jmp near ptr 0045F075h"
"	      0045f075    mov eax,[ebp-117Ch]"
"	      0045f07b    mov sText.reference,eax"
"	      0045f07e    jmp near ptr 0045F0C2h"
"	      0045f083    cmp dword ptr [ebp-1194h],0"
"	      0045f08a    je near ptr 0045F0C2h"
"	      0045f090    jmp near ptr 0045F095h"
"	      0045f095    mov eax,sText.reference"
"	      0045f098    mov eax,[eax]"
"	      0045f09a    mov [ebp-1184h],eax"
"	      0045f0a0    mov eax,[ebp-1194h]"
"	      0045f0a6    push eax"
"	      0045f0a7    lea eax,[ebp-1174h]"
"	      0045f0ad    push eax"
"	      0045f0ae    mov eax,[ebp-1184h]"
"	      0045f0b4    push eax"
"	      0045f0b5    call 0056A800h"
"	      0045f0ba    add esp,0Ch"
"	      0045f0bd    jmp near ptr 0045F0C2h"
"	      0045f0c2    mov eax,[ebp-1194h]"
"	      0045f0c8    mov ecx,sText.reference"
"	      0045f0cb    mov [ecx+4],eax"
"	      0045f0ce    jmp near ptr 0045F0D3h"
"	      0045f0d3    jmp near ptr 0045F0D8h"
"	      0045f0d8    jmp near ptr 0045F0DDh"
"	      0045f0dd    push 597200h"
"	      0045f0e2    call 0056ABE0h"
"	      0045f0e7    add esp,4"
"	      0045f0ea    mov [ebp-11B4h],eax"
"	      0045f0f0    jmp near ptr 0045F0F5h"
"	      0045f0f5    mov eax,sText.reference"
"	      0045f0f8    mov ecx,0FFFFFFFFh"
"	      0045f0fd    sub ecx,[ebp-11B4h]"
"	      0045f103    cmp [eax+4],ecx"
"	      0045f106    jb near ptr 0045F144h"
"	      0045f10c    push 5971E4h"
"	      0045f111    mov ecx,638C00h"
"	      0045f116    call 00569960h"
"	      0045f11b    mov [ebp-11A8h],eax"
"	      0045f121    mov eax,[ebp-11A8h]"
"	      0045f127    push eax"
"	      0045f128    call 004011B0h"
"	      0045f12d    add esp,4"
"	      0045f130    jmp near ptr 0045F135h"
"	      0045f135    push 1"
"	      0045f137    call 00569430h"
"	      0045f13c    add esp,4"
"	      0045f13f    jmp near ptr 0045F144h"
"	      0045f144    jmp near ptr 0045F149h"
"	      0045f149    mov eax,sText.reference"
"	      0045f14c    cmp dword ptr [eax+0Ch],1"
"	      0045f150    ja near ptr 0045F178h"
"	      0045f156    jmp near ptr 0045F15Bh"
"	      0045f15b    jmp near ptr 0045F160h"
"	      0045f160    mov eax,sText.reference"
"	      0045f163    mov eax,[eax+8]"
"	      0045f166    mov ecx,sText.reference"
"	      0045f169    sub eax,[ecx+4]"
"	      0045f16c    cmp eax,[ebp-11B4h]"
"	      0045f172    jae near ptr 0045F265h"
"	      0045f178    push 10h"
"	      0045f17a    call 0056A600h"
"	      0045f17f    add esp,4"
"	      0045f182    mov [ebp-119Ch],eax"
"	      0045f188    cmp dword ptr [ebp-119Ch],0"
"	      0045f18f    je near ptr 0045F206h"
"	      0045f195    jmp near ptr 0045F19Ah"
"	      0045f19a    jmp near ptr 0045F19Fh"
"	      0045f19f    jmp near ptr 0045F1A4h"
"	      0045f1a4    mov eax,sText.reference"
"	      0045f1a7    cmp dword ptr [eax+4],0"
"	      0045f1ab    je near ptr 0045F1C6h"
"	      0045f1b1    mov eax,sText.reference"
"	      0045f1b4    mov eax,[eax]"
"	      0045f1b6    mov [ebp-11A4h],eax"
"	      0045f1bc    jmp near ptr 0045F1D5h"
"	      0045f1c1    jmp near ptr 0045F1D5h"
"	      0045f1c6    mov dword ptr [ebp-11A4h],0"
"	      0045f1d0    jmp near ptr 0045F1D5h"
"	      0045f1d5    mov eax,sText.reference"
"	      0045f1d8    mov eax,[eax+4]"
"	      0045f1db    add eax,[ebp-11B4h]"
"	      0045f1e1    push eax"
"	      0045f1e2    mov eax,sText.reference"
"	      0045f1e5    mov eax,[eax+4]"
"	      0045f1e8    push eax"
"	      0045f1e9    mov eax,[ebp-11A4h]"
"	      0045f1ef    push eax"
"	      0045f1f0    mov ecx,[ebp-119Ch]"
"	      0045f1f6    call 0041E160h"
"	      0045f1fb    mov [ebp-1198h],eax"
"	      0045f201    jmp near ptr 0045F210h"
"	      0045f206    mov dword ptr [ebp-1198h],0"
"	      0045f210    mov eax,sText.reference"
"	      0045f213    dec dword ptr [eax+0Ch]"
"	      0045f216    mov eax,sText.reference"
"	      0045f219    cmp dword ptr [eax+0Ch],0"
"	      0045f21d    jne near ptr 0045F257h"
"	      0045f223    mov eax,sText.reference"
"	      0045f226    mov [ebp-11B0h],eax"
"	      0045f22c    mov eax,[ebp-11B0h]"
"	      0045f232    mov [ebp-11ACh],eax"
"	      0045f238    cmp dword ptr [ebp-11ACh],0"
"	      0045f23f    je near ptr 0045F257h"
"	      0045f245    push 1"
"	      0045f247    mov ecx,[ebp-11ACh]"
"	      0045f24d    call 0041DD70h"
"	      0045f252    jmp near ptr 0045F257h"
"	      0045f257    jmp near ptr 0045F25Ch"
"	      0045f25c    mov eax,[ebp-1198h]"
"	      0045f262    mov sText.reference,eax"
"	      0045f265    cmp dword ptr [ebp-11B4h],0"
"	      0045f26c    je near ptr 0045F2ADh"
"	      0045f272    jmp near ptr 0045F277h"
"	      0045f277    jmp near ptr 0045F27Ch"
"	      0045f27c    mov eax,sText.reference"
"	      0045f27f    mov eax,[eax+4]"
"	      0045f282    mov ecx,sText.reference"
"	      0045f285    add eax,[ecx]"
"	      0045f287    mov [ebp-11A0h],eax"
"	      0045f28d    mov eax,[ebp-11B4h]"
"	      0045f293    push eax"
"	      0045f294    push 597200h"
"	      0045f299    mov eax,[ebp-11A0h]"
"	      0045f29f    push eax"
"	      0045f2a0    call 0056A800h"
"	      0045f2a5    add esp,0Ch"
"	      0045f2a8    jmp near ptr 0045F2ADh"
"	      0045f2ad    mov eax,[ebp-11B4h]"
"	      0045f2b3    mov ecx,sText.reference"
"	      0045f2b6    add [ecx+4],eax"
"	      0045f2b9    jmp near ptr 0045F2BEh"
"	      0045f2be    jmp near ptr 0045F2C3h"
"	      0045f2c3    jmp near ptr 0045F59Eh"
"	      0045f2c8    jmp near ptr 0045F2CDh"
"	      0045f2cd    lea eax,[ebp-1174h]"
"	      0045f2d3    push eax"
"	      0045f2d4    call 0056ABE0h"
"	      0045f2d9    add esp,4"
"	      0045f2dc    mov [ebp-11E4h],eax"
"	      0045f2e2    cmp dword ptr [ebp-11E4h],0FFFFFFFFh"
"	      0045f2e9    jne near ptr 0045F327h"
"	      0045f2ef    push 5971E4h"
"	      0045f2f4    mov ecx,638C00h"
"	      0045f2f9    call 00569960h"
"	      0045f2fe    mov [ebp-11C4h],eax"
"	      0045f304    mov eax,[ebp-11C4h]"
"	      0045f30a    push eax"
"	      0045f30b    call 004011B0h"
"	      0045f310    add esp,4"
"	      0045f313    jmp near ptr 0045F318h"
"	      0045f318    push 1"
"	      0045f31a    call 00569430h"
"	      0045f31f    add esp,4"
"	      0045f322    jmp near ptr 0045F327h"
"	      0045f327    jmp near ptr 0045F32Ch"
"	      0045f32c    mov eax,sText.reference"
"	      0045f32f    cmp dword ptr [eax+0Ch],1"
"	      0045f333    ja near ptr 0045F35Dh"
"	      0045f339    cmp dword ptr [ebp-11E4h],0"
"	      0045f340    je near ptr 0045F544h"
"	      0045f346    jmp near ptr 0045F34Bh"
"	      0045f34b    mov eax,sText.reference"
"	      0045f34e    mov ecx,[ebp-11E4h]"
"	      0045f354    cmp [eax+8],ecx"
"	      0045f357    jae near ptr 0045F544h"
"	      0045f35d    push 10h"
"	      0045f35f    call 0056A600h"
"	      0045f364    add esp,4"
"	      0045f367    mov [ebp-11BCh],eax"
"	      0045f36d    cmp dword ptr [ebp-11BCh],0"
"	      0045f374    je near ptr 0045F47Dh"
"	      0045f37a    cmp dword ptr [ebp-11E4h],0FFFFFFFFh"
"	      0045f381    jne near ptr 0045F3BFh"
"	      0045f387    push 5971E4h"
"	      0045f38c    mov ecx,638C00h"
"	      0045f391    call 00569960h"
"	      0045f396    mov [ebp-11E0h],eax"
"	      0045f39c    mov eax,[ebp-11E0h]"
"	      0045f3a2    push eax"
"	      0045f3a3    call 004011B0h"
"	      0045f3a8    add esp,4"
"	      0045f3ab    jmp near ptr 0045F3B0h"
"	      0045f3b0    push 1"
"	      0045f3b2    call 00569430h"
"	      0045f3b7    add esp,4"
"	      0045f3ba    jmp near ptr 0045F3BFh"
"	      0045f3bf    mov eax,[ebp-11E4h]"
"	      0045f3c5    mov ecx,[ebp-11BCh]"
"	      0045f3cb    mov [ecx+4],eax"
"	      0045f3ce    mov eax,[ebp-11BCh]"
"	      0045f3d4    mov eax,[eax+4]"
"	      0045f3d7    mov ecx,[ebp-11BCh]"
"	      0045f3dd    mov [ecx+8],eax"
"	      0045f3e0    mov eax,[ebp-11BCh]"
"	      0045f3e6    cmp dword ptr [eax+8],0"
"	      0045f3ea    je near ptr 0045F44Eh"
"	      0045f3f0    mov eax,[ebp-11BCh]"
"	      0045f3f6    mov eax,[eax+8]"
"	      0045f3f9    push eax"
"	      0045f3fa    call 0056A600h"
"	      0045f3ff    add esp,4"
"	      0045f402    mov ecx,[ebp-11BCh]"
"	      0045f408    mov [ecx],eax"
"	      0045f40a    mov eax,[ebp-11BCh]"
"	      0045f410    mov eax,[eax+4]"
"	      0045f413    mov [ebp-11D8h],eax"
"	      0045f419    mov eax,[ebp-11BCh]"
"	      0045f41f    mov eax,[eax]"
"	      0045f421    mov [ebp-11DCh],eax"
"	      0045f427    mov eax,[ebp-11D8h]"
"	      0045f42d    push eax"
"	      0045f42e    lea eax,[ebp-1174h]"
"	      0045f434    push eax"
"	      0045f435    mov eax,[ebp-11DCh]"
"	      0045f43b    push eax"
"	      0045f43c    call 0056A800h"
"	      0045f441    add esp,0Ch"
"	      0045f444    jmp near ptr 0045F449h"
"	      0045f449    jmp near ptr 0045F45Ah"
"	      0045f44e    mov eax,[ebp-11BCh]"
"	      0045f454    mov dword ptr [eax],0"
"	      0045f45a    mov eax,[ebp-11BCh]"
"	      0045f460    mov dword ptr [eax+0Ch],1"
"	      0045f467    jmp near ptr 0045F46Ch"
"	      0045f46c    mov eax,[ebp-11BCh]"
"	      0045f472    mov [ebp-11B8h],eax"
"	      0045f478    jmp near ptr 0045F487h"
"	      0045f47d    mov dword ptr [ebp-11B8h],0"
"	      0045f487    mov eax,sText.reference"
"	      0045f48a    dec dword ptr [eax+0Ch]"
"	      0045f48d    mov eax,sText.reference"
"	      0045f490    cmp dword ptr [eax+0Ch],0"
"	      0045f494    jne near ptr 0045F531h"
"	      0045f49a    mov eax,sText.reference"
"	      0045f49d    mov [ebp-11CCh],eax"
"	      0045f4a3    mov eax,[ebp-11CCh]"
"	      0045f4a9    mov [ebp-11C8h],eax"
"	      0045f4af    cmp dword ptr [ebp-11C8h],0"
"	      0045f4b6    je near ptr 0045F531h"
"	      0045f4bc    mov eax,[ebp-11C8h]"
"	      0045f4c2    cmp dword ptr [eax+8],0"
"	      0045f4c6    je near ptr 0045F50Eh"
"	      0045f4cc    mov eax,[ebp-11C8h]"
"	      0045f4d2    mov eax,[eax]"
"	      0045f4d4    mov [ebp-11D0h],eax"
"	      0045f4da    mov eax,[ebp-11D0h]"
"	      0045f4e0    mov [ebp-11D4h],eax"
"	      0045f4e6    mov eax,[ebp-11D4h]"
"	      0045f4ec    push eax"
"	      0045f4ed    call 0056A740h"
"	      0045f4f2    add esp,4"
"	      0045f4f5    mov eax,[ebp-11C8h]"
"	      0045f4fb    mov dword ptr [eax+8],0"
"	      0045f502    mov eax,[ebp-11C8h]"
"	      0045f508    mov dword ptr [eax],0"
"	      0045f50e    jmp near ptr 0045F513h"
"	      0045f513    jmp near ptr 0045F518h"
"	      0045f518    mov eax,[ebp-11C8h]"
"	      0045f51e    push eax"
"	      0045f51f    call 0056A740h"
"	      0045f524    add esp,4"
"	      0045f527    jmp near ptr 0045F52Ch"
"	      0045f52c    jmp near ptr 0045F531h"
"	      0045f531    jmp near ptr 0045F536h"
"	      0045f536    mov eax,[ebp-11B8h]"
"	      0045f53c    mov sText.reference,eax"
"	      0045f53f    jmp near ptr 0045F583h"
"	      0045f544    cmp dword ptr [ebp-11E4h],0"
"	      0045f54b    je near ptr 0045F583h"
"	      0045f551    jmp near ptr 0045F556h"
"	      0045f556    mov eax,sText.reference"
"	      0045f559    mov eax,[eax]"
"	      0045f55b    mov [ebp-11C0h],eax"
"	      0045f561    mov eax,[ebp-11E4h]"
"	      0045f567    push eax"
"	      0045f568    lea eax,[ebp-1174h]"
"	      0045f56e    push eax"
"	      0045f56f    mov eax,[ebp-11C0h]"
"	      0045f575    push eax"
"	      0045f576    call 0056A800h"
"	      0045f57b    add esp,0Ch"
"	      0045f57e    jmp near ptr 0045F583h"
"	      0045f583    mov eax,[ebp-11E4h]"
"	      0045f589    mov ecx,sText.reference"
"	      0045f58c    mov [ecx+4],eax"
"	      0045f58f    jmp near ptr 0045F594h"
"	      0045f594    jmp near ptr 0045F599h"
"	      0045f599    jmp near ptr 0045F59Eh"
);
// LINE 2521:
	asm( 
"	      0045f59e    lea eax,sText.c_str_ptr"
"	      0045f5a1    push eax"
"	      0045f5a2    mov eax,tempButtonWindow"
"	      0045f5a5    mov eax,[eax]"
"	      0045f5a7    mov ecx,tempButtonWindow"
"	      0045f5aa    call dword ptr [eax+48h]"
);
// LINE 2522:
	asm( 
"	      0045f5ad    push 603AB4h"
"	      0045f5b2    push 603ABCh"
"	      0045f5b7    mov eax,tempButtonWindow"
"	      0045f5ba    mov eax,[eax]"
"	      0045f5bc    mov ecx,tempButtonWindow"
"	      0045f5bf    call dword ptr [eax+0D8h]"
);
// LINE 2523:
	asm( 
"	      0045f5c5    mov eax,tempButtonWindow"
"	      0045f5c8    mov eax,[eax]"
"	      0045f5ca    mov ecx,tempButtonWindow"
"	      0045f5cd    call dword ptr [eax+4]"
);
// LINE 2526:
	asm( 
"	      0045f5d0    push 94h"
"	      0045f5d5    call 0056A600h"
"	      0045f5da    add esp,4"
"	      0045f5dd    mov [ebp-144h],eax"
"	      0045f5e3    cmp dword ptr [ebp-144h],0"
"	      0045f5ea    je near ptr 0045F650h"
"	      0045f5f0    jmp near ptr 0045F5F5h"
"	      0045f5f5    mov dword ptr [ebp-154h],12Ch"
"	      0045f5ff    mov dword ptr [ebp-150h],186h"
"	      0045f609    mov dword ptr [ebp-14Ch],12Dh"
"	      0045f613    mov dword ptr [ebp-148h],187h"
"	      0045f61d    jmp near ptr 0045F622h"
"	      0045f622    push 1"
"	      0045f624    mov eax,this"
"	      0045f62a    push eax"
"	      0045f62b    push 0"
"	      0045f62d    mov eax,this"
"	      0045f633    push eax"
"	      0045f634    push 2"
"	      0045f636    lea eax,[ebp-154h]"
"	      0045f63c    push eax"
"	      0045f63d    mov ecx,[ebp-144h]"
"	      0045f643    call 00471847h"
"	      0045f648    mov tempButtonWindow,eax"
"	      0045f64b    jmp near ptr 0045F657h"
"	      0045f650    mov tempButtonWindow,0"
);
// LINE 2527:
	asm( 
"	      0045f657    push 0"
"	      0045f659    push 24Bh"
"	      0045f65e    call 0042B15Fh"
"	      0045f663    add esp,8"
"	      0045f666    mov nFullStringID,eax"
);
// LINE 2528:
	asm( 
"	      0045f669    push 0FFFh"
"	      0045f66e    lea eax,[ebp-21E4h]"
"	      0045f674    push eax"
"	      0045f675    mov eax,nFullStringID"
"	      0045f678    push eax"
"	      0045f679    mov eax,ds:[5C28C8h]"
"	      0045f67e    push eax"
"	      0045f67f    call dword ptr ds:[6C38B4h]"
"	      0045f685    mov [ebp-21E8h],eax"
"	      0045f68b    cmp dword ptr [ebp-21E8h],0"
"	      0045f692    jne near ptr 0045FA42h"
"	      0045f698    push 0FFFh"
"	      0045f69d    lea eax,[ebp-21E4h]"
"	      0045f6a3    push eax"
"	      0045f6a4    mov ecx,3E8h"
"	      0045f6a9    mov eax,nFullStringID"
"	      0045f6ac    sub edx,edx"
"	      0045f6ae    div ecx"
"	      0045f6b0    push edx"
"	      0045f6b1    mov eax,ds:[5C28C8h]"
"	      0045f6b6    push eax"
"	      0045f6b7    call dword ptr ds:[6C38B4h]"
"	      0045f6bd    mov [ebp-21E8h],eax"
"	      0045f6c3    jmp near ptr 0045F6C8h"
"	      0045f6c8    lea eax,[ebp-21E4h]"
"	      0045f6ce    push eax"
"	      0045f6cf    call 0056ABE0h"
"	      0045f6d4    add esp,4"
"	      0045f6d7    mov [ebp-2204h],eax"
"	      0045f6dd    cmp dword ptr [ebp-2204h],0FFFFFFFFh"
"	      0045f6e4    jne near ptr 0045F722h"
"	      0045f6ea    push 5971E4h"
"	      0045f6ef    mov ecx,638C00h"
"	      0045f6f4    call 00569960h"
"	      0045f6f9    mov [ebp-21F8h],eax"
"	      0045f6ff    mov eax,[ebp-21F8h]"
"	      0045f705    push eax"
"	      0045f706    call 004011B0h"
"	      0045f70b    add esp,4"
"	      0045f70e    jmp near ptr 0045F713h"
"	      0045f713    push 1"
"	      0045f715    call 00569430h"
"	      0045f71a    add esp,4"
"	      0045f71d    jmp near ptr 0045F722h"
"	      0045f722    jmp near ptr 0045F727h"
"	      0045f727    mov eax,sText.reference"
"	      0045f72a    cmp dword ptr [eax+0Ch],1"
"	      0045f72e    ja near ptr 0045F758h"
"	      0045f734    cmp dword ptr [ebp-2204h],0"
"	      0045f73b    je near ptr 0045F7FDh"
"	      0045f741    jmp near ptr 0045F746h"
"	      0045f746    mov eax,sText.reference"
"	      0045f749    mov ecx,[ebp-2204h]"
"	      0045f74f    cmp [eax+8],ecx"
"	      0045f752    jae near ptr 0045F7FDh"
"	      0045f758    push 10h"
"	      0045f75a    call 0056A600h"
"	      0045f75f    add esp,4"
"	      0045f762    mov [ebp-21F0h],eax"
"	      0045f768    cmp dword ptr [ebp-21F0h],0"
"	      0045f76f    je near ptr 0045F799h"
"	      0045f775    mov eax,[ebp-2204h]"
"	      0045f77b    push eax"
"	      0045f77c    lea eax,[ebp-21E4h]"
"	      0045f782    push eax"
"	      0045f783    mov ecx,[ebp-21F0h]"
"	      0045f789    call 0041E090h"
"	      0045f78e    mov [ebp-21ECh],eax"
"	      0045f794    jmp near ptr 0045F7A3h"
"	      0045f799    mov dword ptr [ebp-21ECh],0"
"	      0045f7a3    mov eax,sText.reference"
"	      0045f7a6    dec dword ptr [eax+0Ch]"
"	      0045f7a9    mov eax,sText.reference"
"	      0045f7ac    cmp dword ptr [eax+0Ch],0"
"	      0045f7b0    jne near ptr 0045F7EAh"
"	      0045f7b6    mov eax,sText.reference"
"	      0045f7b9    mov [ebp-2200h],eax"
"	      0045f7bf    mov eax,[ebp-2200h]"
"	      0045f7c5    mov [ebp-21FCh],eax"
"	      0045f7cb    cmp dword ptr [ebp-21FCh],0"
"	      0045f7d2    je near ptr 0045F7EAh"
"	      0045f7d8    push 1"
"	      0045f7da    mov ecx,[ebp-21FCh]"
"	      0045f7e0    call 0041DD70h"
"	      0045f7e5    jmp near ptr 0045F7EAh"
"	      0045f7ea    jmp near ptr 0045F7EFh"
"	      0045f7ef    mov eax,[ebp-21ECh]"
"	      0045f7f5    mov sText.reference,eax"
"	      0045f7f8    jmp near ptr 0045F83Ch"
"	      0045f7fd    cmp dword ptr [ebp-2204h],0"
"	      0045f804    je near ptr 0045F83Ch"
"	      0045f80a    jmp near ptr 0045F80Fh"
"	      0045f80f    mov eax,sText.reference"
"	      0045f812    mov eax,[eax]"
"	      0045f814    mov [ebp-21F4h],eax"
"	      0045f81a    mov eax,[ebp-2204h]"
"	      0045f820    push eax"
"	      0045f821    lea eax,[ebp-21E4h]"
"	      0045f827    push eax"
"	      0045f828    mov eax,[ebp-21F4h]"
"	      0045f82e    push eax"
"	      0045f82f    call 0056A800h"
"	      0045f834    add esp,0Ch"
"	      0045f837    jmp near ptr 0045F83Ch"
"	      0045f83c    mov eax,[ebp-2204h]"
"	      0045f842    mov ecx,sText.reference"
"	      0045f845    mov [ecx+4],eax"
"	      0045f848    jmp near ptr 0045F84Dh"
"	      0045f84d    jmp near ptr 0045F852h"
"	      0045f852    jmp near ptr 0045F857h"
"	      0045f857    push 597200h"
"	      0045f85c    call 0056ABE0h"
"	      0045f861    add esp,4"
"	      0045f864    mov [ebp-2224h],eax"
"	      0045f86a    jmp near ptr 0045F86Fh"
"	      0045f86f    mov eax,sText.reference"
"	      0045f872    mov ecx,0FFFFFFFFh"
"	      0045f877    sub ecx,[ebp-2224h]"
"	      0045f87d    cmp [eax+4],ecx"
"	      0045f880    jb near ptr 0045F8BEh"
"	      0045f886    push 5971E4h"
"	      0045f88b    mov ecx,638C00h"
"	      0045f890    call 00569960h"
"	      0045f895    mov [ebp-2218h],eax"
"	      0045f89b    mov eax,[ebp-2218h]"
"	      0045f8a1    push eax"
"	      0045f8a2    call 004011B0h"
"	      0045f8a7    add esp,4"
"	      0045f8aa    jmp near ptr 0045F8AFh"
"	      0045f8af    push 1"
"	      0045f8b1    call 00569430h"
"	      0045f8b6    add esp,4"
"	      0045f8b9    jmp near ptr 0045F8BEh"
"	      0045f8be    jmp near ptr 0045F8C3h"
"	      0045f8c3    mov eax,sText.reference"
"	      0045f8c6    cmp dword ptr [eax+0Ch],1"
"	      0045f8ca    ja near ptr 0045F8F2h"
"	      0045f8d0    jmp near ptr 0045F8D5h"
"	      0045f8d5    jmp near ptr 0045F8DAh"
"	      0045f8da    mov eax,sText.reference"
"	      0045f8dd    mov eax,[eax+8]"
"	      0045f8e0    mov ecx,sText.reference"
"	      0045f8e3    sub eax,[ecx+4]"
"	      0045f8e6    cmp eax,[ebp-2224h]"
"	      0045f8ec    jae near ptr 0045F9DFh"
"	      0045f8f2    push 10h"
"	      0045f8f4    call 0056A600h"
"	      0045f8f9    add esp,4"
"	      0045f8fc    mov [ebp-220Ch],eax"
"	      0045f902    cmp dword ptr [ebp-220Ch],0"
"	      0045f909    je near ptr 0045F980h"
"	      0045f90f    jmp near ptr 0045F914h"
"	      0045f914    jmp near ptr 0045F919h"
"	      0045f919    jmp near ptr 0045F91Eh"
"	      0045f91e    mov eax,sText.reference"
"	      0045f921    cmp dword ptr [eax+4],0"
"	      0045f925    je near ptr 0045F940h"
"	      0045f92b    mov eax,sText.reference"
"	      0045f92e    mov eax,[eax]"
"	      0045f930    mov [ebp-2214h],eax"
"	      0045f936    jmp near ptr 0045F94Fh"
"	      0045f93b    jmp near ptr 0045F94Fh"
"	      0045f940    mov dword ptr [ebp-2214h],0"
"	      0045f94a    jmp near ptr 0045F94Fh"
"	      0045f94f    mov eax,sText.reference"
"	      0045f952    mov eax,[eax+4]"
"	      0045f955    add eax,[ebp-2224h]"
"	      0045f95b    push eax"
"	      0045f95c    mov eax,sText.reference"
"	      0045f95f    mov eax,[eax+4]"
"	      0045f962    push eax"
"	      0045f963    mov eax,[ebp-2214h]"
"	      0045f969    push eax"
"	      0045f96a    mov ecx,[ebp-220Ch]"
"	      0045f970    call 0041E160h"
"	      0045f975    mov [ebp-2208h],eax"
"	      0045f97b    jmp near ptr 0045F98Ah"
"	      0045f980    mov dword ptr [ebp-2208h],0"
"	      0045f98a    mov eax,sText.reference"
"	      0045f98d    dec dword ptr [eax+0Ch]"
"	      0045f990    mov eax,sText.reference"
"	      0045f993    cmp dword ptr [eax+0Ch],0"
"	      0045f997    jne near ptr 0045F9D1h"
"	      0045f99d    mov eax,sText.reference"
"	      0045f9a0    mov [ebp-2220h],eax"
"	      0045f9a6    mov eax,[ebp-2220h]"
"	      0045f9ac    mov [ebp-221Ch],eax"
"	      0045f9b2    cmp dword ptr [ebp-221Ch],0"
"	      0045f9b9    je near ptr 0045F9D1h"
"	      0045f9bf    push 1"
"	      0045f9c1    mov ecx,[ebp-221Ch]"
"	      0045f9c7    call 0041DD70h"
"	      0045f9cc    jmp near ptr 0045F9D1h"
"	      0045f9d1    jmp near ptr 0045F9D6h"
"	      0045f9d6    mov eax,[ebp-2208h]"
"	      0045f9dc    mov sText.reference,eax"
"	      0045f9df    cmp dword ptr [ebp-2224h],0"
"	      0045f9e6    je near ptr 0045FA27h"
"	      0045f9ec    jmp near ptr 0045F9F1h"
"	      0045f9f1    jmp near ptr 0045F9F6h"
"	      0045f9f6    mov eax,sText.reference"
"	      0045f9f9    mov eax,[eax+4]"
"	      0045f9fc    mov ecx,sText.reference"
"	      0045f9ff    add eax,[ecx]"
"	      0045fa01    mov [ebp-2210h],eax"
"	      0045fa07    mov eax,[ebp-2224h]"
"	      0045fa0d    push eax"
"	      0045fa0e    push 597200h"
"	      0045fa13    mov eax,[ebp-2210h]"
"	      0045fa19    push eax"
"	      0045fa1a    call 0056A800h"
"	      0045fa1f    add esp,0Ch"
"	      0045fa22    jmp near ptr 0045FA27h"
"	      0045fa27    mov eax,[ebp-2224h]"
"	      0045fa2d    mov ecx,sText.reference"
"	      0045fa30    add [ecx+4],eax"
"	      0045fa33    jmp near ptr 0045FA38h"
"	      0045fa38    jmp near ptr 0045FA3Dh"
"	      0045fa3d    jmp near ptr 0045FCCCh"
"	      0045fa42    jmp near ptr 0045FA47h"
"	      0045fa47    lea eax,[ebp-21E4h]"
"	      0045fa4d    push eax"
"	      0045fa4e    call 0056ABE0h"
"	      0045fa53    add esp,4"
"	      0045fa56    mov [ebp-224Ch],eax"
"	      0045fa5c    cmp dword ptr [ebp-224Ch],0FFFFFFFFh"
"	      0045fa63    jne near ptr 0045FAA1h"
"	      0045fa69    push 5971E4h"
"	      0045fa6e    mov ecx,638C00h"
"	      0045fa73    call 00569960h"
"	      0045fa78    mov [ebp-2234h],eax"
"	      0045fa7e    mov eax,[ebp-2234h]"
"	      0045fa84    push eax"
"	      0045fa85    call 004011B0h"
"	      0045fa8a    add esp,4"
"	      0045fa8d    jmp near ptr 0045FA92h"
"	      0045fa92    push 1"
"	      0045fa94    call 00569430h"
"	      0045fa99    add esp,4"
"	      0045fa9c    jmp near ptr 0045FAA1h"
"	      0045faa1    jmp near ptr 0045FAA6h"
"	      0045faa6    mov eax,sText.reference"
"	      0045faa9    cmp dword ptr [eax+0Ch],1"
"	      0045faad    ja near ptr 0045FAD7h"
"	      0045fab3    cmp dword ptr [ebp-224Ch],0"
"	      0045faba    je near ptr 0045FC72h"
"	      0045fac0    jmp near ptr 0045FAC5h"
"	      0045fac5    mov eax,sText.reference"
"	      0045fac8    mov ecx,[ebp-224Ch]"
"	      0045face    cmp [eax+8],ecx"
"	      0045fad1    jae near ptr 0045FC72h"
"	      0045fad7    push 10h"
"	      0045fad9    call 0056A600h"
"	      0045fade    add esp,4"
"	      0045fae1    mov [ebp-222Ch],eax"
"	      0045fae7    cmp dword ptr [ebp-222Ch],0"
"	      0045faee    je near ptr 0045FBF7h"
"	      0045faf4    cmp dword ptr [ebp-224Ch],0FFFFFFFFh"
"	      0045fafb    jne near ptr 0045FB39h"
"	      0045fb01    push 5971E4h"
"	      0045fb06    mov ecx,638C00h"
"	      0045fb0b    call 00569960h"
"	      0045fb10    mov [ebp-2248h],eax"
"	      0045fb16    mov eax,[ebp-2248h]"
"	      0045fb1c    push eax"
"	      0045fb1d    call 004011B0h"
"	      0045fb22    add esp,4"
"	      0045fb25    jmp near ptr 0045FB2Ah"
"	      0045fb2a    push 1"
"	      0045fb2c    call 00569430h"
"	      0045fb31    add esp,4"
"	      0045fb34    jmp near ptr 0045FB39h"
"	      0045fb39    mov eax,[ebp-224Ch]"
"	      0045fb3f    mov ecx,[ebp-222Ch]"
"	      0045fb45    mov [ecx+4],eax"
"	      0045fb48    mov eax,[ebp-222Ch]"
"	      0045fb4e    mov eax,[eax+4]"
"	      0045fb51    mov ecx,[ebp-222Ch]"
"	      0045fb57    mov [ecx+8],eax"
"	      0045fb5a    mov eax,[ebp-222Ch]"
"	      0045fb60    cmp dword ptr [eax+8],0"
"	      0045fb64    je near ptr 0045FBC8h"
"	      0045fb6a    mov eax,[ebp-222Ch]"
"	      0045fb70    mov eax,[eax+8]"
"	      0045fb73    push eax"
"	      0045fb74    call 0056A600h"
"	      0045fb79    add esp,4"
"	      0045fb7c    mov ecx,[ebp-222Ch]"
"	      0045fb82    mov [ecx],eax"
"	      0045fb84    mov eax,[ebp-222Ch]"
"	      0045fb8a    mov eax,[eax+4]"
"	      0045fb8d    mov [ebp-2240h],eax"
"	      0045fb93    mov eax,[ebp-222Ch]"
"	      0045fb99    mov eax,[eax]"
"	      0045fb9b    mov [ebp-2244h],eax"
"	      0045fba1    mov eax,[ebp-2240h]"
"	      0045fba7    push eax"
"	      0045fba8    lea eax,[ebp-21E4h]"
"	      0045fbae    push eax"
"	      0045fbaf    mov eax,[ebp-2244h]"
"	      0045fbb5    push eax"
"	      0045fbb6    call 0056A800h"
"	      0045fbbb    add esp,0Ch"
"	      0045fbbe    jmp near ptr 0045FBC3h"
"	      0045fbc3    jmp near ptr 0045FBD4h"
"	      0045fbc8    mov eax,[ebp-222Ch]"
"	      0045fbce    mov dword ptr [eax],0"
"	      0045fbd4    mov eax,[ebp-222Ch]"
"	      0045fbda    mov dword ptr [eax+0Ch],1"
"	      0045fbe1    jmp near ptr 0045FBE6h"
"	      0045fbe6    mov eax,[ebp-222Ch]"
"	      0045fbec    mov [ebp-2228h],eax"
"	      0045fbf2    jmp near ptr 0045FC01h"
"	      0045fbf7    mov dword ptr [ebp-2228h],0"
"	      0045fc01    mov eax,sText.reference"
"	      0045fc04    dec dword ptr [eax+0Ch]"
"	      0045fc07    mov eax,sText.reference"
"	      0045fc0a    cmp dword ptr [eax+0Ch],0"
"	      0045fc0e    jne near ptr 0045FC5Fh"
"	      0045fc14    mov eax,sText.reference"
"	      0045fc17    mov [ebp-223Ch],eax"
"	      0045fc1d    mov eax,[ebp-223Ch]"
"	      0045fc23    mov [ebp-2238h],eax"
"	      0045fc29    cmp dword ptr [ebp-2238h],0"
"	      0045fc30    je near ptr 0045FC5Fh"
"	      0045fc36    mov ecx,[ebp-2238h]"
"	      0045fc3c    call 0041F4B0h"
"	      0045fc41    jmp near ptr 0045FC46h"
"	      0045fc46    mov eax,[ebp-2238h]"
"	      0045fc4c    push eax"
"	      0045fc4d    call 0056A740h"
"	      0045fc52    add esp,4"
"	      0045fc55    jmp near ptr 0045FC5Ah"
"	      0045fc5a    jmp near ptr 0045FC5Fh"
"	      0045fc5f    jmp near ptr 0045FC64h"
"	      0045fc64    mov eax,[ebp-2228h]"
"	      0045fc6a    mov sText.reference,eax"
"	      0045fc6d    jmp near ptr 0045FCB1h"
"	      0045fc72    cmp dword ptr [ebp-224Ch],0"
"	      0045fc79    je near ptr 0045FCB1h"
"	      0045fc7f    jmp near ptr 0045FC84h"
"	      0045fc84    mov eax,sText.reference"
"	      0045fc87    mov eax,[eax]"
"	      0045fc89    mov [ebp-2230h],eax"
"	      0045fc8f    mov eax,[ebp-224Ch]"
"	      0045fc95    push eax"
"	      0045fc96    lea eax,[ebp-21E4h]"
"	      0045fc9c    push eax"
"	      0045fc9d    mov eax,[ebp-2230h]"
"	      0045fca3    push eax"
"	      0045fca4    call 0056A800h"
"	      0045fca9    add esp,0Ch"
"	      0045fcac    jmp near ptr 0045FCB1h"
"	      0045fcb1    mov eax,[ebp-224Ch]"
"	      0045fcb7    mov ecx,sText.reference"
"	      0045fcba    mov [ecx+4],eax"
"	      0045fcbd    jmp near ptr 0045FCC2h"
"	      0045fcc2    jmp near ptr 0045FCC7h"
"	      0045fcc7    jmp near ptr 0045FCCCh"
);
// LINE 2529:
	asm( 
"	      0045fccc    lea eax,sText.c_str_ptr"
"	      0045fccf    push eax"
"	      0045fcd0    mov eax,tempButtonWindow"
"	      0045fcd3    mov eax,[eax]"
"	      0045fcd5    mov ecx,tempButtonWindow"
"	      0045fcd8    call dword ptr [eax+48h]"
);
// LINE 2530:
	asm( 
"	      0045fcdb    push 603AB4h"
"	      0045fce0    push 603ABCh"
"	      0045fce5    mov eax,tempButtonWindow"
"	      0045fce8    mov eax,[eax]"
"	      0045fcea    mov ecx,tempButtonWindow"
"	      0045fced    call dword ptr [eax+0D8h]"
);
// LINE 2531:
	asm( 
"	      0045fcf3    mov eax,tempButtonWindow"
"	      0045fcf6    mov eax,[eax]"
"	      0045fcf8    mov ecx,tempButtonWindow"
"	      0045fcfb    call dword ptr [eax+4]"
);
// LINE 2533:
	asm( 
"	      0045fcfe    mov ecx,this"
"	      0045fd04    call 0045FEC2h"
);
// LINE 2535:
	asm( 
"	      0045fd09    mov eax,this"
"	      0045fd0f    push eax"
"	      0045fd10    call 004A7075h"
"	      0045fd15    add esp,4"
);
// LINE 2536:
	asm( 
"	      0045fd18    mov eax,this"
"	      0045fd1e    push eax"
"	      0045fd1f    call 004A7470h"
"	      0045fd24    add esp,4"
);
// LINE 2538:
	asm( 
"	      0045fd27    mov dword ptr [ebp-158h],1"
"	      0045fd31    mov eax,sText.reference"
"	      0045fd34    dec dword ptr [eax+0Ch]"
"	      0045fd37    mov eax,sText.reference"
"	      0045fd3a    cmp dword ptr [eax+0Ch],0"
"	      0045fd3e    jne near ptr 0045FDDBh"
"	      0045fd44    mov eax,sText.reference"
"	      0045fd47    mov [ebp-16Ch],eax"
"	      0045fd4d    mov eax,[ebp-16Ch]"
"	      0045fd53    mov [ebp-168h],eax"
"	      0045fd59    cmp dword ptr [ebp-168h],0"
"	      0045fd60    je near ptr 0045FDDBh"
"	      0045fd66    mov eax,[ebp-168h]"
"	      0045fd6c    cmp dword ptr [eax+8],0"
"	      0045fd70    je near ptr 0045FDB8h"
"	      0045fd76    mov eax,[ebp-168h]"
"	      0045fd7c    mov eax,[eax]"
"	      0045fd7e    mov [ebp-170h],eax"
"	      0045fd84    mov eax,[ebp-170h]"
"	      0045fd8a    mov [ebp-174h],eax"
"	      0045fd90    mov eax,[ebp-174h]"
"	      0045fd96    push eax"
"	      0045fd97    call 0056A740h"
"	      0045fd9c    add esp,4"
"	      0045fd9f    mov eax,[ebp-168h]"
"	      0045fda5    mov dword ptr [eax+8],0"
"	      0045fdac    mov eax,[ebp-168h]"
"	      0045fdb2    mov dword ptr [eax],0"
"	      0045fdb8    jmp near ptr 0045FDBDh"
"	      0045fdbd    jmp near ptr 0045FDC2h"
"	      0045fdc2    mov eax,[ebp-168h]"
"	      0045fdc8    push eax"
"	      0045fdc9    call 0056A740h"
"	      0045fdce    add esp,4"
"	      0045fdd1    jmp near ptr 0045FDD6h"
"	      0045fdd6    jmp near ptr 0045FDDBh"
"	      0045fddb    jmp near ptr 0045FDE0h"
"	      0045fde0    cmp sText.c_str_ptr,0"
"	      0045fde4    je near ptr 0045FE0Eh"
"	      0045fdea    mov eax,sText.c_str_ptr"
"	      0045fded    mov [ebp-160h],eax"
"	      0045fdf3    mov eax,[ebp-160h]"
"	      0045fdf9    mov [ebp-164h],eax"
"	      0045fdff    mov eax,[ebp-164h]"
"	      0045fe05    push eax"
"	      0045fe06    call 0056A740h"
"	      0045fe0b    add esp,4"
"	      0045fe0e    jmp near ptr 0045FE13h"
"	      0045fe13    mov eax,[ebp-158h]"
"	      0045fe19    jmp near ptr 0045FE1Eh"
);
// LINE 2539:
	asm( 
"	      0045fe1e    pop edi"
"	      0045fe1f    pop esi"
"	      0045fe20    pop ebx"
"	      0045fe21    leave"
"	      0045fe22    ret"
);
}

// FUNCTION: COPTER_D 0x0045fe23
void CheckupWindow::SetCurrentSettings(long * lNewSettings) {
// LINE 2550:
	asm( 
"	      0045fe23    push ebp"
"	      0045fe24    mov ebp,esp"
"	      0045fe26    sub esp,4"
"	      0045fe29    push ebx"
"	      0045fe2a    push esi"
"	      0045fe2b    push edi"
"	      0045fe2c    mov this,ecx"
);
// LINE 2551:
	asm( 
"	      0045fe2f    mov eax,lNewSettings"
"	      0045fe32    mov eax,[eax]"
"	      0045fe34    push eax"
"	      0045fe35    mov eax,this"
"	      0045fe38    mov ecx,[eax+74h]"
"	      0045fe3b    call 004B273Ah"
);
// LINE 2552:
	asm( 
"	      0045fe40    mov eax,lNewSettings"
"	      0045fe43    mov eax,[eax+4]"
"	      0045fe46    push eax"
"	      0045fe47    mov eax,this"
"	      0045fe4a    mov ecx,[eax+78h]"
"	      0045fe4d    call 004B273Ah"
);
// LINE 2553:
	asm( 
"	      0045fe52    mov eax,lNewSettings"
"	      0045fe55    mov eax,[eax+8]"
"	      0045fe58    push eax"
"	      0045fe59    mov eax,this"
"	      0045fe5c    mov ecx,[eax+7Ch]"
"	      0045fe5f    call 004B273Ah"
);
// LINE 2554:
	asm( 
"	      0045fe64    mov ecx,this"
"	      0045fe67    call 00460077h"
);
// LINE 2555:
	asm( 
"	      0045fe6c    jmp near ptr 0045FE71h"
"	      0045fe71    pop edi"
"	      0045fe72    pop esi"
"	      0045fe73    pop ebx"
"	      0045fe74    leave"
"	      0045fe75    ret 4"
);
}

// FUNCTION: COPTER_D 0x0045fe78
void CheckupWindow::GetCurrentSettings(long * lCurrentSettings) {
// LINE 2562:
	asm( 
"	      0045fe78    push ebp"
"	      0045fe79    mov ebp,esp"
"	      0045fe7b    sub esp,4"
"	      0045fe7e    push ebx"
"	      0045fe7f    push esi"
"	      0045fe80    push edi"
"	      0045fe81    mov this,ecx"
);
// LINE 2563:
	asm( 
"	      0045fe84    mov eax,this"
"	      0045fe87    mov ecx,[eax+74h]"
"	      0045fe8a    call 004B271Bh"
"	      0045fe8f    mov ecx,lCurrentSettings"
"	      0045fe92    mov [ecx],eax"
);
// LINE 2564:
	asm( 
"	      0045fe94    mov eax,this"
"	      0045fe97    mov ecx,[eax+78h]"
"	      0045fe9a    call 004B271Bh"
"	      0045fe9f    mov ecx,lCurrentSettings"
"	      0045fea2    mov [ecx+4],eax"
);
// LINE 2565:
	asm( 
"	      0045fea5    mov eax,this"
"	      0045fea8    mov ecx,[eax+7Ch]"
"	      0045feab    call 004B271Bh"
"	      0045feb0    mov ecx,lCurrentSettings"
"	      0045feb3    mov [ecx+8],eax"
);
// LINE 2566:
	asm( 
"	      0045feb6    jmp near ptr 0045FEBBh"
"	      0045febb    pop edi"
"	      0045febc    pop esi"
"	      0045febd    pop ebx"
"	      0045febe    leave"
"	      0045febf    ret 4"
);
}

// FUNCTION: COPTER_D 0x0045fec2
void CheckupWindow::SetAllControlValuesToDefaults() {
	long lValue;

// LINE 2573:
	asm( 
"	      0045fec2    push ebp"
"	      0045fec3    mov ebp,esp"
"	      0045fec5    sub esp,8"
"	      0045fec8    push ebx"
"	      0045fec9    push esi"
"	      0045feca    push edi"
"	      0045fecb    mov this,ecx"
);
// LINE 2576:
	asm( 
"	      0045fece    mov eax,ds:[5B4968h]"
"	      0045fed3    push eax"
"	      0045fed4    call 004F741Dh"
"	      0045fed9    add esp,4"
"	      0045fedc    mov lValue,eax"
);
// LINE 2577:
	asm( 
"	      0045fedf    cmp lValue,0"
"	      0045fee3    jge near ptr 0045FEF0h"
);
// LINE 2578:
	asm( 
"	      0045fee9    mov lValue,0"
);
// LINE 2579:
	asm( 
"	      0045fef0    mov eax,lValue"
"	      0045fef3    push eax"
"	      0045fef4    mov eax,this"
"	      0045fef7    mov ecx,[eax+74h]"
"	      0045fefa    call 004B2872h"
);
// LINE 2580:
	asm( 
"	      0045feff    mov eax,lValue"
"	      0045ff02    push eax"
"	      0045ff03    mov eax,this"
"	      0045ff06    mov ecx,[eax+74h]"
"	      0045ff09    call 004B273Ah"
);
// LINE 2582:
	asm( 
"	      0045ff0e    mov eax,ds:[5B4968h]"
"	      0045ff13    push eax"
"	      0045ff14    call 004F74EBh"
"	      0045ff19    add esp,4"
"	      0045ff1c    mov lValue,eax"
);
// LINE 2583:
	asm( 
"	      0045ff1f    cmp lValue,0"
"	      0045ff23    jge near ptr 0045FF30h"
);
// LINE 2584:
	asm( 
"	      0045ff29    mov lValue,0"
);
// LINE 2585:
	asm( 
"	      0045ff30    mov eax,lValue"
"	      0045ff33    push eax"
"	      0045ff34    mov eax,this"
"	      0045ff37    mov ecx,[eax+78h]"
"	      0045ff3a    call 004B2872h"
);
// LINE 2586:
	asm( 
"	      0045ff3f    mov eax,lValue"
"	      0045ff42    push eax"
"	      0045ff43    mov eax,this"
"	      0045ff46    mov ecx,[eax+78h]"
"	      0045ff49    call 004B273Ah"
);
// LINE 2588:
	asm( 
"	      0045ff4e    call 00428F4Ah"
"	      0045ff53    test byte ptr [eax+48h],8"
"	      0045ff57    je near ptr 0045FF8Dh"
);
// LINE 2589:
	asm( 
"	      0045ff5d    push 3"
"	      0045ff5f    call 004F83A8h"
"	      0045ff64    add esp,4"
"	      0045ff67    mov lValue,eax"
);
// LINE 2590:
	asm( 
"	      0045ff6a    mov eax,lValue"
"	      0045ff6d    push eax"
"	      0045ff6e    mov eax,this"
"	      0045ff71    mov ecx,[eax+7Ch]"
"	      0045ff74    call 004B2872h"
);
// LINE 2591:
	asm( 
"	      0045ff79    mov eax,lValue"
"	      0045ff7c    push eax"
"	      0045ff7d    mov eax,this"
"	      0045ff80    mov ecx,[eax+7Ch]"
"	      0045ff83    call 004B273Ah"
);
// LINE 2593:
	asm( 
"	      0045ff88    jmp near ptr 0045FFA7h"
);
// LINE 2594:
	asm( 
"	      0045ff8d    push 0"
"	      0045ff8f    mov eax,this"
"	      0045ff92    mov ecx,[eax+7Ch]"
"	      0045ff95    call 004B2872h"
);
// LINE 2595:
	asm( 
"	      0045ff9a    push 0"
"	      0045ff9c    mov eax,this"
"	      0045ff9f    mov ecx,[eax+7Ch]"
"	      0045ffa2    call 004B273Ah"
);
// LINE 2597:
	asm( 
"	      0045ffa7    mov ecx,this"
"	      0045ffaa    call 00460077h"
);
// LINE 2598:
	asm( 
"	      0045ffaf    jmp near ptr 0045FFB4h"
"	      0045ffb4    pop edi"
"	      0045ffb5    pop esi"
"	      0045ffb6    pop ebx"
"	      0045ffb7    leave"
"	      0045ffb8    ret"
);
}

// FUNCTION: COPTER_D 0x0045ffb9
int32_t CheckupWindow::ShouldWeDisplayCheckupWindow() {
// LINE 2604:
	asm( 
"	      0045ffb9    push ebp"
"	      0045ffba    mov ebp,esp"
"	      0045ffbc    push ebx"
"	      0045ffbd    push esi"
"	      0045ffbe    push edi"
);
// LINE 2608:
	asm( 
"	      0045ffbf    mov eax,ds:[5B4968h]"
"	      0045ffc4    push eax"
"	      0045ffc5    call 004F75B5h"
"	      0045ffca    add esp,4"
"	      0045ffcd    mov ecx,ds:[5B4968h]"
"	      0045ffd3    cmp eax,[ecx+0D0h]"
"	      0045ffd9    jne near ptr 0046001Dh"
"	      0045ffdf    mov eax,ds:[5B4968h]"
"	      0045ffe4    push eax"
"	      0045ffe5    call 004F75FEh"
"	      0045ffea    add esp,4"
"	      0045ffed    mov ecx,ds:[5B4968h]"
"	      0045fff3    cmp eax,[ecx+320h]"
"	      0045fff9    jne near ptr 0046001Dh"
"	      0045ffff    call 00428F4Ah"
"	      00460004    test byte ptr [eax+48h],8"
"	      00460008    je near ptr 00460027h"
"	      0046000e    call 00428F4Ah"
"	      00460013    cmp dword ptr [eax+54h],0Ah"
"	      00460017    jge near ptr 00460027h"
);
// LINE 2610:
	asm( 
"	      0046001d    mov eax,1"
"	      00460022    jmp near ptr 0046002Eh"
);
// LINE 2612:
	asm( 
"	      00460027    xor eax,eax"
"	      00460029    jmp near ptr 0046002Eh"
);
// LINE 2613:
	asm( 
"	      0046002e    pop edi"
"	      0046002f    pop esi"
"	      00460030    pop ebx"
"	      00460031    leave"
"	      00460032    ret"
);
}

// FUNCTION: COPTER_D 0x00460033
int32_t CheckupWindow::CanUserAffordCurrentSliderValues() {
	long[3] lSliderValues;

// LINE 2620:
	asm( 
"	      00460033    push ebp"
"	      00460034    mov ebp,esp"
"	      00460036    sub esp,10h"
"	      00460039    push ebx"
"	      0046003a    push esi"
"	      0046003b    push edi"
"	      0046003c    mov this,ecx"
);
// LINE 2623:
	asm( 
"	      0046003f    lea eax,lSliderValues[0]"
"	      00460042    push eax"
"	      00460043    mov ecx,this"
"	      00460046    call 0045FE78h"
);
// LINE 2624:
	asm( 
"	      0046004b    mov ebx,lSliderValues[1]"
"	      0046004e    add ebx,lSliderValues[2]"
"	      00460051    add ebx,lSliderValues[0]"
"	      00460054    call 00428FB5h"
"	      00460059    cmp ebx,eax"
"	      0046005b    jg near ptr 0046006Bh"
"	      00460061    mov eax,1"
"	      00460066    jmp near ptr 0046006Dh"
"	      0046006b    xor eax,eax"
"	      0046006d    jmp near ptr 00460072h"
);
// LINE 2625:
	asm( 
"	      00460072    pop edi"
"	      00460073    pop esi"
"	      00460074    pop ebx"
"	      00460075    leave"
"	      00460076    ret"
);
}

// FUNCTION: COPTER_D 0x00460077
void CheckupWindow::SetTextControlsBasedOnCurrentSliderValues() {
	char[32] szCurrentText;
	long lCurrentValue;
	class MRect rectWindowTemp;
	long[3] lSliderValues;

// LINE 2632:
	asm( 
"	      00460077    push ebp"
"	      00460078    mov ebp,esp"
"	      0046007a    sub esp,0ECh"
"	      00460080    push ebx"
"	      00460081    push esi"
"	      00460082    push edi"
"	      00460083    mov this,ecx"
);
// LINE 2636:
	asm( 
"	      00460089    jmp near ptr 0046008Eh"
"	      0046008e    jmp near ptr 00460093h"
);
// LINE 2638:
	asm( 
"	      00460093    lea eax,lSliderValues[0]"
"	      00460096    push eax"
"	      00460097    mov ecx,this"
"	      0046009d    call 0045FE78h"
"	      004600a2    mov eax,this"
"	      004600a8    mov eax,[eax+80h]"
"	      004600ae    mov [ebp-6Ch],eax"
);
// LINE 2640:
	asm( 
"	      004600b1    mov eax,[ebp-6Ch]"
"	      004600b4    add eax,10h"
"	      004600b7    lea ecx,rectWindowTemp.left"
"	      004600ba    mov edx,[eax]"
"	      004600bc    mov [ecx],edx"
"	      004600be    mov edx,[eax+4]"
"	      004600c1    mov [ecx+4],edx"
"	      004600c4    mov edx,[eax+8]"
"	      004600c7    mov [ecx+8],edx"
"	      004600ca    mov eax,[eax+0Ch]"
"	      004600cd    mov [ecx+0Ch],eax"
"	      004600d0    jmp near ptr 004600D5h"
);
// LINE 2641:
	asm( 
"	      004600d5    lea eax,rectWindowTemp.left"
"	      004600d8    push eax"
"	      004600d9    push 3Bh"
"	      004600db    mov eax,this"
"	      004600e1    mov ecx,this"
"	      004600e7    mov ecx,[ecx+40h]"
"	      004600ea    mov edx,[ecx]"
"	      004600ec    mov ecx,[eax+40h]"
"	      004600ef    call dword ptr [edx+44h]"
);
// LINE 2642:
	asm( 
"	      004600f2    call 00428FB5h"
"	      004600f7    push eax"
"	      004600f8    push 599270h"
"	      004600fd    lea eax,szCurrentText[0]"
"	      00460100    push eax"
"	      00460101    call 0056CD30h"
"	      00460106    add esp,0Ch"
);
// LINE 2643:
	asm( 
"	      00460109    push 10h"
"	      0046010b    call 0056A600h"
"	      00460110    add esp,4"
"	      00460113    mov [ebp-0D0h],eax"
"	      00460119    cmp dword ptr [ebp-0D0h],0"
"	      00460120    je near ptr 0046013Dh"
"	      00460126    lea eax,szCurrentText[0]"
"	      00460129    push eax"
"	      0046012a    mov ecx,[ebp-0D0h]"
"	      00460130    call 0041DFE0h"
"	      00460135    mov [ebp-44h],eax"
"	      00460138    jmp near ptr 00460144h"
"	      0046013d    mov dword ptr [ebp-44h],0"
"	      00460144    mov dword ptr [ebp-48h],0"
"	      0046014b    jmp near ptr 00460150h"
"	      00460150    lea eax,[ebp-48h]"
"	      00460153    push eax"
"	      00460154    mov eax,this"
"	      0046015a    mov ecx,this"
"	      00460160    mov ecx,[ecx+80h]"
"	      00460166    mov edx,[ecx]"
"	      00460168    mov ecx,[eax+80h]"
"	      0046016e    call dword ptr [edx+0C4h]"
"	      00460174    mov eax,[ebp-44h]"
"	      00460177    dec dword ptr [eax+0Ch]"
"	      0046017a    mov eax,[ebp-44h]"
"	      0046017d    cmp dword ptr [eax+0Ch],0"
"	      00460181    jne near ptr 004601BBh"
"	      00460187    mov eax,[ebp-44h]"
"	      0046018a    mov [ebp-8Ch],eax"
"	      00460190    mov eax,[ebp-8Ch]"
"	      00460196    mov [ebp-88h],eax"
"	      0046019c    cmp dword ptr [ebp-88h],0"
"	      004601a3    je near ptr 004601BBh"
"	      004601a9    push 1"
"	      004601ab    mov ecx,[ebp-88h]"
"	      004601b1    call 0041DD70h"
"	      004601b6    jmp near ptr 004601BBh"
"	      004601bb    jmp near ptr 004601C0h"
"	      004601c0    cmp dword ptr [ebp-48h],0"
"	      004601c4    je near ptr 004601E8h"
"	      004601ca    mov eax,[ebp-48h]"
"	      004601cd    mov [ebp-80h],eax"
"	      004601d0    mov eax,[ebp-80h]"
"	      004601d3    mov [ebp-84h],eax"
"	      004601d9    mov eax,[ebp-84h]"
"	      004601df    push eax"
"	      004601e0    call 0056A740h"
"	      004601e5    add esp,4"
"	      004601e8    jmp near ptr 004601EDh"
"	      004601ed    mov eax,this"
"	      004601f3    mov eax,[eax+84h]"
"	      004601f9    mov [ebp-70h],eax"
);
// LINE 2645:
	asm( 
"	      004601fc    mov eax,[ebp-70h]"
"	      004601ff    add eax,10h"
"	      00460202    lea ecx,rectWindowTemp.left"
"	      00460205    mov edx,[eax]"
"	      00460207    mov [ecx],edx"
"	      00460209    mov edx,[eax+4]"
"	      0046020c    mov [ecx+4],edx"
"	      0046020f    mov edx,[eax+8]"
"	      00460212    mov [ecx+8],edx"
"	      00460215    mov eax,[eax+0Ch]"
"	      00460218    mov [ecx+0Ch],eax"
"	      0046021b    jmp near ptr 00460220h"
);
// LINE 2646:
	asm( 
"	      00460220    lea eax,rectWindowTemp.left"
"	      00460223    push eax"
"	      00460224    push 3Bh"
"	      00460226    mov eax,this"
"	      0046022c    mov ecx,this"
"	      00460232    mov ecx,[ecx+40h]"
"	      00460235    mov edx,[ecx]"
"	      00460237    mov ecx,[eax+40h]"
"	      0046023a    call dword ptr [edx+44h]"
);
// LINE 2647:
	asm( 
"	      0046023d    mov eax,lSliderValues[1]"
"	      00460240    add eax,lSliderValues[2]"
"	      00460243    add eax,lSliderValues[0]"
"	      00460246    mov lCurrentValue,eax"
);
// LINE 2648:
	asm( 
"	      00460249    mov eax,lCurrentValue"
"	      0046024c    push eax"
"	      0046024d    push 599274h"
"	      00460252    lea eax,szCurrentText[0]"
"	      00460255    push eax"
"	      00460256    call 0056CD30h"
"	      0046025b    add esp,0Ch"
);
// LINE 2649:
	asm( 
"	      0046025e    push 10h"
"	      00460260    call 0056A600h"
"	      00460265    add esp,4"
"	      00460268    mov [ebp-0D4h],eax"
"	      0046026e    cmp dword ptr [ebp-0D4h],0"
"	      00460275    je near ptr 00460292h"
"	      0046027b    lea eax,szCurrentText[0]"
"	      0046027e    push eax"
"	      0046027f    mov ecx,[ebp-0D4h]"
"	      00460285    call 0041DFE0h"
"	      0046028a    mov [ebp-4Ch],eax"
"	      0046028d    jmp near ptr 00460299h"
"	      00460292    mov dword ptr [ebp-4Ch],0"
"	      00460299    mov dword ptr [ebp-50h],0"
"	      004602a0    jmp near ptr 004602A5h"
"	      004602a5    lea eax,[ebp-50h]"
"	      004602a8    push eax"
"	      004602a9    mov eax,this"
"	      004602af    mov ecx,this"
"	      004602b5    mov ecx,[ecx+84h]"
"	      004602bb    mov edx,[ecx]"
"	      004602bd    mov ecx,[eax+84h]"
"	      004602c3    call dword ptr [edx+0C4h]"
"	      004602c9    mov eax,[ebp-4Ch]"
"	      004602cc    dec dword ptr [eax+0Ch]"
"	      004602cf    mov eax,[ebp-4Ch]"
"	      004602d2    cmp dword ptr [eax+0Ch],0"
"	      004602d6    jne near ptr 00460310h"
"	      004602dc    mov eax,[ebp-4Ch]"
"	      004602df    mov [ebp-9Ch],eax"
"	      004602e5    mov eax,[ebp-9Ch]"
"	      004602eb    mov [ebp-98h],eax"
"	      004602f1    cmp dword ptr [ebp-98h],0"
"	      004602f8    je near ptr 00460310h"
"	      004602fe    push 1"
"	      00460300    mov ecx,[ebp-98h]"
"	      00460306    call 0041DD70h"
"	      0046030b    jmp near ptr 00460310h"
"	      00460310    jmp near ptr 00460315h"
"	      00460315    cmp dword ptr [ebp-50h],0"
"	      00460319    je near ptr 00460343h"
"	      0046031f    mov eax,[ebp-50h]"
"	      00460322    mov [ebp-90h],eax"
"	      00460328    mov eax,[ebp-90h]"
"	      0046032e    mov [ebp-94h],eax"
"	      00460334    mov eax,[ebp-94h]"
"	      0046033a    push eax"
"	      0046033b    call 0056A740h"
"	      00460340    add esp,4"
"	      00460343    jmp near ptr 00460348h"
);
// LINE 2650:
	asm( 
"	      00460348    call 00428FB5h"
"	      0046034d    cmp eax,lCurrentValue"
"	      00460350    jge near ptr 00460380h"
);
// LINE 2651:
	asm( 
"	      00460356    push 603AB4h"
"	      0046035b    mov eax,this"
"	      00460361    mov ecx,this"
"	      00460367    mov ecx,[ecx+84h]"
"	      0046036d    mov edx,[ecx]"
"	      0046036f    mov ecx,[eax+84h]"
"	      00460375    call dword ptr [edx+0D4h]"
);
// LINE 2652:
	asm( 
"	      0046037b    jmp near ptr 004603A5h"
);
// LINE 2653:
	asm( 
"	      00460380    push 603ABCh"
"	      00460385    mov eax,this"
"	      0046038b    mov ecx,this"
"	      00460391    mov ecx,[ecx+84h]"
"	      00460397    mov edx,[ecx]"
"	      00460399    mov ecx,[eax+84h]"
"	      0046039f    call dword ptr [edx+0D4h]"
"	      004603a5    mov eax,this"
"	      004603ab    mov eax,[eax+88h]"
"	      004603b1    mov [ebp-74h],eax"
);
// LINE 2655:
	asm( 
"	      004603b4    mov eax,[ebp-74h]"
"	      004603b7    add eax,10h"
"	      004603ba    lea ecx,rectWindowTemp.left"
"	      004603bd    mov edx,[eax]"
"	      004603bf    mov [ecx],edx"
"	      004603c1    mov edx,[eax+4]"
"	      004603c4    mov [ecx+4],edx"
"	      004603c7    mov edx,[eax+8]"
"	      004603ca    mov [ecx+8],edx"
"	      004603cd    mov eax,[eax+0Ch]"
"	      004603d0    mov [ecx+0Ch],eax"
"	      004603d3    jmp near ptr 004603D8h"
);
// LINE 2656:
	asm( 
"	      004603d8    lea eax,rectWindowTemp.left"
"	      004603db    push eax"
"	      004603dc    push 3Bh"
"	      004603de    mov eax,this"
"	      004603e4    mov ecx,this"
"	      004603ea    mov ecx,[ecx+40h]"
"	      004603ed    mov edx,[ecx]"
"	      004603ef    mov ecx,[eax+40h]"
"	      004603f2    call dword ptr [edx+44h]"
);
// LINE 2657:
	asm( 
"	      004603f5    mov eax,lSliderValues[0]"
"	      004603f8    push eax"
"	      004603f9    push 599278h"
"	      004603fe    lea eax,szCurrentText[0]"
"	      00460401    push eax"
"	      00460402    call 0056CD30h"
"	      00460407    add esp,0Ch"
);
// LINE 2658:
	asm( 
"	      0046040a    push 10h"
"	      0046040c    call 0056A600h"
"	      00460411    add esp,4"
"	      00460414    mov [ebp-0D8h],eax"
"	      0046041a    cmp dword ptr [ebp-0D8h],0"
"	      00460421    je near ptr 004604EAh"
"	      00460427    lea eax,szCurrentText[0]"
"	      0046042a    push eax"
"	      0046042b    call 0056ABE0h"
"	      00460430    add esp,4"
"	      00460433    mov ecx,[ebp-0D8h]"
"	      00460439    mov [ecx+4],eax"
"	      0046043c    jmp near ptr 00460441h"
"	      00460441    mov eax,[ebp-0D8h]"
"	      00460447    mov eax,[eax+4]"
"	      0046044a    mov ecx,[ebp-0D8h]"
"	      00460450    mov [ecx+8],eax"
"	      00460453    mov eax,[ebp-0D8h]"
"	      00460459    cmp dword ptr [eax+8],0"
"	      0046045d    je near ptr 004604BEh"
"	      00460463    mov eax,[ebp-0D8h]"
"	      00460469    mov eax,[eax+8]"
"	      0046046c    push eax"
"	      0046046d    call 0056A600h"
"	      00460472    add esp,4"
"	      00460475    mov ecx,[ebp-0D8h]"
"	      0046047b    mov [ecx],eax"
"	      0046047d    mov eax,[ebp-0D8h]"
"	      00460483    mov eax,[eax+4]"
"	      00460486    mov [ebp-0DCh],eax"
"	      0046048c    mov eax,[ebp-0D8h]"
"	      00460492    mov eax,[eax]"
"	      00460494    mov [ebp-0E0h],eax"
"	      0046049a    mov eax,[ebp-0DCh]"
"	      004604a0    push eax"
"	      004604a1    lea eax,szCurrentText[0]"
"	      004604a4    push eax"
"	      004604a5    mov eax,[ebp-0E0h]"
"	      004604ab    push eax"
"	      004604ac    call 0056A800h"
"	      004604b1    add esp,0Ch"
"	      004604b4    jmp near ptr 004604B9h"
"	      004604b9    jmp near ptr 004604CAh"
"	      004604be    mov eax,[ebp-0D8h]"
"	      004604c4    mov dword ptr [eax],0"
"	      004604ca    mov eax,[ebp-0D8h]"
"	      004604d0    mov dword ptr [eax+0Ch],1"
"	      004604d7    jmp near ptr 004604DCh"
"	      004604dc    mov eax,[ebp-0D8h]"
"	      004604e2    mov [ebp-54h],eax"
"	      004604e5    jmp near ptr 004604F1h"
"	      004604ea    mov dword ptr [ebp-54h],0"
"	      004604f1    mov dword ptr [ebp-58h],0"
"	      004604f8    jmp near ptr 004604FDh"
"	      004604fd    lea eax,[ebp-58h]"
"	      00460500    push eax"
"	      00460501    mov eax,this"
"	      00460507    mov ecx,this"
"	      0046050d    mov ecx,[ecx+88h]"
"	      00460513    mov edx,[ecx]"
"	      00460515    mov ecx,[eax+88h]"
"	      0046051b    call dword ptr [edx+0C4h]"
"	      00460521    mov eax,[ebp-54h]"
"	      00460524    dec dword ptr [eax+0Ch]"
"	      00460527    mov eax,[ebp-54h]"
"	      0046052a    cmp dword ptr [eax+0Ch],0"
"	      0046052e    jne near ptr 00460568h"
"	      00460534    mov eax,[ebp-54h]"
"	      00460537    mov [ebp-0ACh],eax"
"	      0046053d    mov eax,[ebp-0ACh]"
"	      00460543    mov [ebp-0A8h],eax"
"	      00460549    cmp dword ptr [ebp-0A8h],0"
"	      00460550    je near ptr 00460568h"
"	      00460556    push 1"
"	      00460558    mov ecx,[ebp-0A8h]"
"	      0046055e    call 0041DD70h"
"	      00460563    jmp near ptr 00460568h"
"	      00460568    jmp near ptr 0046056Dh"
"	      0046056d    cmp dword ptr [ebp-58h],0"
"	      00460571    je near ptr 0046059Bh"
"	      00460577    mov eax,[ebp-58h]"
"	      0046057a    mov [ebp-0A0h],eax"
"	      00460580    mov eax,[ebp-0A0h]"
"	      00460586    mov [ebp-0A4h],eax"
"	      0046058c    mov eax,[ebp-0A4h]"
"	      00460592    push eax"
"	      00460593    call 0056A740h"
"	      00460598    add esp,4"
"	      0046059b    jmp near ptr 004605A0h"
"	      004605a0    mov eax,this"
"	      004605a6    mov eax,[eax+8Ch]"
"	      004605ac    mov [ebp-78h],eax"
);
// LINE 2660:
	asm( 
"	      004605af    mov eax,[ebp-78h]"
"	      004605b2    add eax,10h"
"	      004605b5    lea ecx,rectWindowTemp.left"
"	      004605b8    mov edx,[eax]"
"	      004605ba    mov [ecx],edx"
"	      004605bc    mov edx,[eax+4]"
"	      004605bf    mov [ecx+4],edx"
"	      004605c2    mov edx,[eax+8]"
"	      004605c5    mov [ecx+8],edx"
"	      004605c8    mov eax,[eax+0Ch]"
"	      004605cb    mov [ecx+0Ch],eax"
"	      004605ce    jmp near ptr 004605D3h"
);
// LINE 2661:
	asm( 
"	      004605d3    lea eax,rectWindowTemp.left"
"	      004605d6    push eax"
"	      004605d7    push 3Bh"
"	      004605d9    mov eax,this"
"	      004605df    mov ecx,this"
"	      004605e5    mov ecx,[ecx+40h]"
"	      004605e8    mov edx,[ecx]"
"	      004605ea    mov ecx,[eax+40h]"
"	      004605ed    call dword ptr [edx+44h]"
);
// LINE 2662:
	asm( 
"	      004605f0    mov eax,lSliderValues[1]"
"	      004605f3    push eax"
"	      004605f4    push 59927Ch"
"	      004605f9    lea eax,szCurrentText[0]"
"	      004605fc    push eax"
"	      004605fd    call 0056CD30h"
"	      00460602    add esp,0Ch"
);
// LINE 2663:
	asm( 
"	      00460605    push 10h"
"	      00460607    call 0056A600h"
"	      0046060c    add esp,4"
"	      0046060f    mov [ebp-0E4h],eax"
"	      00460615    cmp dword ptr [ebp-0E4h],0"
"	      0046061c    je near ptr 00460639h"
"	      00460622    lea eax,szCurrentText[0]"
"	      00460625    push eax"
"	      00460626    mov ecx,[ebp-0E4h]"
"	      0046062c    call 0041DFE0h"
"	      00460631    mov [ebp-5Ch],eax"
"	      00460634    jmp near ptr 00460640h"
"	      00460639    mov dword ptr [ebp-5Ch],0"
"	      00460640    mov dword ptr [ebp-60h],0"
"	      00460647    jmp near ptr 0046064Ch"
"	      0046064c    lea eax,[ebp-60h]"
"	      0046064f    push eax"
"	      00460650    mov eax,this"
"	      00460656    mov ecx,this"
"	      0046065c    mov ecx,[ecx+8Ch]"
"	      00460662    mov edx,[ecx]"
"	      00460664    mov ecx,[eax+8Ch]"
"	      0046066a    call dword ptr [edx+0C4h]"
"	      00460670    mov eax,[ebp-5Ch]"
"	      00460673    dec dword ptr [eax+0Ch]"
"	      00460676    mov eax,[ebp-5Ch]"
"	      00460679    cmp dword ptr [eax+0Ch],0"
"	      0046067d    jne near ptr 004606B7h"
"	      00460683    mov eax,[ebp-5Ch]"
"	      00460686    mov [ebp-0BCh],eax"
"	      0046068c    mov eax,[ebp-0BCh]"
"	      00460692    mov [ebp-0B8h],eax"
"	      00460698    cmp dword ptr [ebp-0B8h],0"
"	      0046069f    je near ptr 004606B7h"
"	      004606a5    push 1"
"	      004606a7    mov ecx,[ebp-0B8h]"
"	      004606ad    call 0041DD70h"
"	      004606b2    jmp near ptr 004606B7h"
"	      004606b7    jmp near ptr 004606BCh"
"	      004606bc    cmp dword ptr [ebp-60h],0"
"	      004606c0    je near ptr 004606EAh"
"	      004606c6    mov eax,[ebp-60h]"
"	      004606c9    mov [ebp-0B0h],eax"
"	      004606cf    mov eax,[ebp-0B0h]"
"	      004606d5    mov [ebp-0B4h],eax"
"	      004606db    mov eax,[ebp-0B4h]"
"	      004606e1    push eax"
"	      004606e2    call 0056A740h"
"	      004606e7    add esp,4"
"	      004606ea    jmp near ptr 004606EFh"
"	      004606ef    mov eax,this"
"	      004606f5    mov eax,[eax+90h]"
"	      004606fb    mov [ebp-7Ch],eax"
);
// LINE 2665:
	asm( 
"	      004606fe    mov eax,[ebp-7Ch]"
"	      00460701    add eax,10h"
"	      00460704    lea ecx,rectWindowTemp.left"
"	      00460707    mov edx,[eax]"
"	      00460709    mov [ecx],edx"
"	      0046070b    mov edx,[eax+4]"
"	      0046070e    mov [ecx+4],edx"
"	      00460711    mov edx,[eax+8]"
"	      00460714    mov [ecx+8],edx"
"	      00460717    mov eax,[eax+0Ch]"
"	      0046071a    mov [ecx+0Ch],eax"
"	      0046071d    jmp near ptr 00460722h"
);
// LINE 2666:
	asm( 
"	      00460722    lea eax,rectWindowTemp.left"
"	      00460725    push eax"
"	      00460726    push 3Bh"
"	      00460728    mov eax,this"
"	      0046072e    mov ecx,this"
"	      00460734    mov ecx,[ecx+40h]"
"	      00460737    mov edx,[ecx]"
"	      00460739    mov ecx,[eax+40h]"
"	      0046073c    call dword ptr [edx+44h]"
);
// LINE 2667:
	asm( 
"	      0046073f    mov eax,lSliderValues[2]"
"	      00460742    push eax"
"	      00460743    push 599280h"
"	      00460748    lea eax,szCurrentText[0]"
"	      0046074b    push eax"
"	      0046074c    call 0056CD30h"
"	      00460751    add esp,0Ch"
);
// LINE 2668:
	asm( 
"	      00460754    push 10h"
"	      00460756    call 0056A600h"
"	      0046075b    add esp,4"
"	      0046075e    mov [ebp-0E8h],eax"
"	      00460764    cmp dword ptr [ebp-0E8h],0"
"	      0046076b    je near ptr 00460788h"
"	      00460771    lea eax,szCurrentText[0]"
"	      00460774    push eax"
"	      00460775    mov ecx,[ebp-0E8h]"
"	      0046077b    call 0041DFE0h"
"	      00460780    mov [ebp-64h],eax"
"	      00460783    jmp near ptr 0046078Fh"
"	      00460788    mov dword ptr [ebp-64h],0"
"	      0046078f    mov dword ptr [ebp-68h],0"
"	      00460796    jmp near ptr 0046079Bh"
"	      0046079b    lea eax,[ebp-68h]"
"	      0046079e    push eax"
"	      0046079f    mov eax,this"
"	      004607a5    mov ecx,this"
"	      004607ab    mov ecx,[ecx+90h]"
"	      004607b1    mov edx,[ecx]"
"	      004607b3    mov ecx,[eax+90h]"
"	      004607b9    call dword ptr [edx+0C4h]"
"	      004607bf    mov eax,[ebp-64h]"
"	      004607c2    dec dword ptr [eax+0Ch]"
"	      004607c5    mov eax,[ebp-64h]"
"	      004607c8    cmp dword ptr [eax+0Ch],0"
"	      004607cc    jne near ptr 00460806h"
"	      004607d2    mov eax,[ebp-64h]"
"	      004607d5    mov [ebp-0CCh],eax"
"	      004607db    mov eax,[ebp-0CCh]"
"	      004607e1    mov [ebp-0C8h],eax"
"	      004607e7    cmp dword ptr [ebp-0C8h],0"
"	      004607ee    je near ptr 00460806h"
"	      004607f4    push 1"
"	      004607f6    mov ecx,[ebp-0C8h]"
"	      004607fc    call 0041DD70h"
"	      00460801    jmp near ptr 00460806h"
"	      00460806    jmp near ptr 0046080Bh"
"	      0046080b    cmp dword ptr [ebp-68h],0"
"	      0046080f    je near ptr 00460839h"
"	      00460815    mov eax,[ebp-68h]"
"	      00460818    mov [ebp-0C0h],eax"
"	      0046081e    mov eax,[ebp-0C0h]"
"	      00460824    mov [ebp-0C4h],eax"
"	      0046082a    mov eax,[ebp-0C4h]"
"	      00460830    push eax"
"	      00460831    call 0056A740h"
"	      00460836    add esp,4"
"	      00460839    jmp near ptr 0046083Eh"
);
// LINE 2669:
	asm( 
"	      0046083e    jmp near ptr 00460843h"
"	      00460843    pop edi"
"	      00460844    pop esi"
"	      00460845    pop ebx"
"	      00460846    leave"
"	      00460847    ret"
);
}

// FUNCTION: COPTER_D 0x00460848
int32_t CheckupWindow::DoMessage(class GraphicWindow* gwSource, long lWindowID, long lMessage, void * __ptr32 pMessageData) {
// LINE 2679:
	asm( 
"	      00460848    push ebp"
"	      00460849    mov ebp,esp"
"	      0046084b    sub esp,8"
"	      0046084e    push ebx"
"	      0046084f    push esi"
"	      00460850    push edi"
"	      00460851    mov this,ecx"
);
// LINE 2680:
	asm( 
"	      00460854    mov eax,lWindowID"
"	      00460857    mov [ebp-8],eax"
"	      0046085a    jmp near ptr 004608EBh"
);
// LINE 2684:
	asm( 
"	      0046085f    cmp lMessage,10001h"
"	      00460866    jne near ptr 00460874h"
);
// LINE 2685:
	asm( 
"	      0046086c    mov ecx,this"
"	      0046086f    call 00460077h"
);
// LINE 2686:
	asm( 
"	      00460874    mov eax,1"
"	      00460879    jmp near ptr 0046091Dh"
);
// LINE 2689:
	asm( 
"	      0046087e    mov ecx,this"
"	      00460881    call 00460033h"
"	      00460886    test eax,eax"
"	      00460888    je near ptr 004608B0h"
);
// LINE 2690:
	asm( 
"	      0046088e    push 0"
"	      00460890    push 3E9h"
"	      00460895    mov eax,this"
"	      00460898    mov eax,[eax+4]"
"	      0046089b    push eax"
"	      0046089c    mov eax,this"
"	      0046089f    push eax"
"	      004608a0    mov eax,this"
"	      004608a3    mov ecx,this"
"	      004608a6    mov ecx,[ecx+38h]"
"	      004608a9    mov edx,[ecx]"
"	      004608ab    mov ecx,[eax+38h]"
"	      004608ae    call dword ptr [edx]"
);
// LINE 2692:
	asm( 
"	      004608b0    mov eax,1"
"	      004608b5    jmp near ptr 0046091Dh"
);
// LINE 2695:
	asm( 
"	      004608ba    push 0"
"	      004608bc    push 3EAh"
"	      004608c1    mov eax,this"
"	      004608c4    mov eax,[eax+4]"
"	      004608c7    push eax"
"	      004608c8    mov eax,this"
"	      004608cb    push eax"
"	      004608cc    mov eax,this"
"	      004608cf    mov ecx,this"
"	      004608d2    mov ecx,[ecx+38h]"
"	      004608d5    mov edx,[ecx]"
"	      004608d7    mov ecx,[eax+38h]"
"	      004608da    call dword ptr [edx]"
);
// LINE 2696:
	asm( 
"	      004608dc    mov eax,1"
"	      004608e1    jmp near ptr 0046091Dh"
);
// LINE 2697:
	asm( 
"	      004608e6    jmp near ptr 00460916h"
"	      004608eb    dec dword ptr [ebp-8]"
"	      004608ee    cmp dword ptr [ebp-8],4"
"	      004608f2    ja near ptr 00460916h"
"	      004608f8    mov eax,[ebp-8]"
"	      004608fb    jmp dword ptr [eax*4+460902h]"
"	      00460902    jle short 0046090Ch"
"	      00460904    inc esi"
"	      00460905    add [edx+5F004608h],bh"
"	      0046090b    or [esi],al"
"	      0046090e    pop edi"
"	      0046090f    or [esi],al"
"	      00460912    pop edi"
"	      00460913    or [esi],al"
);
// LINE 2699:
	asm( 
"	      00460916    xor eax,eax"
"	      00460918    jmp near ptr 0046091Dh"
);
// LINE 2700:
	asm( 
"	      0046091d    pop edi"
"	      0046091e    pop esi"
"	      0046091f    pop ebx"
"	      00460920    leave"
"	      00460921    ret 10h"
);
}

// FUNCTION: COPTER_D 0x00460924
long CheckupWindow::DoKeyDown(long lKey, char chModifiers) {
// LINE 2708:
	asm( 
"	      00460924    push ebp"
"	      00460925    mov ebp,esp"
"	      00460927    sub esp,4"
"	      0046092a    push ebx"
"	      0046092b    push esi"
"	      0046092c    push edi"
"	      0046092d    mov this,ecx"
);
// LINE 2709:
	asm( 
"	      00460930    cmp lKey,1Bh"
"	      00460934    jne near ptr 00460969h"
);
// LINE 2710:
	asm( 
"	      0046093a    mov eax,this"
"	      0046093d    cmp dword ptr [eax+38h],0"
"	      00460941    je near ptr 00460969h"
);
// LINE 2711:
	asm( 
"	      00460947    push 0"
"	      00460949    push 3EAh"
"	      0046094e    mov eax,this"
"	      00460951    mov eax,[eax+4]"
"	      00460954    push eax"
"	      00460955    mov eax,this"
"	      00460958    push eax"
"	      00460959    mov eax,this"
"	      0046095c    mov ecx,this"
"	      0046095f    mov ecx,[ecx+38h]"
"	      00460962    mov edx,[ecx]"
"	      00460964    mov ecx,[eax+38h]"
"	      00460967    call dword ptr [edx]"
);
// LINE 2713:
	asm( 
"	      00460969    mov eax,1"
"	      0046096e    jmp near ptr 00460973h"
);
// LINE 2714:
	asm( 
"	      00460973    pop edi"
"	      00460974    pop esi"
"	      00460975    pop ebx"
"	      00460976    leave"
"	      00460977    ret 8"
);
}



// Contribution: 1:0005f980-0005fc15 Module: 45, 16 byte alignment, code, (comdat), execute, read, 
// FUNCTION: COPTER_D 0x00460980
// MessageBoxWindow::`scalar deleting destructor'



// Contribution: 1:0005fc20-0005fc5d Module: 45, 16 byte alignment, code, (comdat), execute, read, 
// FUNCTION: COPTER_D 0x00460c20
// AnimationWindow::`scalar deleting destructor'



// Contribution: 1:0005fc60-0005fc98 Module: 45, 16 byte alignment, code, (comdat), execute, read, 
// FUNCTION: COPTER_D 0x00460c60
// RenderSettingsWindow::`scalar deleting destructor'



// Contribution: 1:0005fca0-0005fcdd Module: 45, 16 byte alignment, code, (comdat), execute, read, 
// FUNCTION: COPTER_D 0x00460ca0
// SoundSettingsWindow::`scalar deleting destructor'



// Contribution: 1:0005fce0-0005fd1d Module: 45, 16 byte alignment, code, (comdat), execute, read, 
// FUNCTION: COPTER_D 0x00460ce0
// CitySettingsWindow::`scalar deleting destructor'



// Contribution: 1:0005fd20-0005fd58 Module: 45, 16 byte alignment, code, (comdat), execute, read, 
// FUNCTION: COPTER_D 0x00460d20
// PopupMenuExtra::`scalar deleting destructor'



// Contribution: 1:0005fd60-0005fd98 Module: 45, 16 byte alignment, code, (comdat), execute, read, 
// FUNCTION: COPTER_D 0x00460d60
// TooltipWindow::`scalar deleting destructor'



// Contribution: 1:0005fda0-0005fdd8 Module: 45, 16 byte alignment, code, (comdat), execute, read, 
// FUNCTION: COPTER_D 0x00460da0
// BoneheadTextEditWindow::`scalar deleting destructor'



// Contribution: 1:0005fde0-0005fe15 Module: 45, 16 byte alignment, code, (comdat), execute, read, 


// Contribution: 1:0005fe20-0005fe59 Module: 45, 16 byte alignment, code, (comdat), execute, read, 


// Contribution: 1:0005fe60-000600fa Module: 45, 16 byte alignment, code, (comdat), execute, read, 
// FUNCTION: COPTER_D 0x00460e60
// MessageBoxWindowEdit::`scalar deleting destructor'



// Contribution: 1:00060100-00060138 Module: 45, 16 byte alignment, code, (comdat), execute, read, 
// FUNCTION: COPTER_D 0x00461100
// ScrollingCreditWindow::`scalar deleting destructor'



// Contribution: 1:00060140-0006017d Module: 45, 16 byte alignment, code, (comdat), execute, read, 
// FUNCTION: COPTER_D 0x00461140
// CheckupWindow::`scalar deleting destructor'



// Contribution: 2:00000a80-00000b53 Module: 45, 8 byte alignment, initialized_data, (comdat), read, 
// GLOBAL: COPTER_D 0x0058fa80
// ??_7MessageBoxWindow@@6B@


// Contribution: 2:00000b58-00000c1b Module: 45, 8 byte alignment, initialized_data, (comdat), read, 
// GLOBAL: COPTER_D 0x0058fb58
// ??_7AnimationWindow@@6B@


// Contribution: 2:00000c20-00000ce3 Module: 45, 8 byte alignment, initialized_data, (comdat), read, 
// GLOBAL: COPTER_D 0x0058fc20
// ??_7RenderSettingsWindow@@6B@


// Contribution: 2:00000ce8-00000dab Module: 45, 8 byte alignment, initialized_data, (comdat), read, 
// GLOBAL: COPTER_D 0x0058fce8
// ??_7SoundSettingsWindow@@6B@


// Contribution: 2:00000db0-00000dcf Module: 45, 8 byte alignment, initialized_data, read, 


// Contribution: 2:00000dd0-00000e93 Module: 45, 8 byte alignment, initialized_data, (comdat), read, 
// GLOBAL: COPTER_D 0x0058fdd0
// ??_7CitySettingsWindow@@6B@


// Contribution: 2:00000e98-00000ff7 Module: 45, 8 byte alignment, initialized_data, (comdat), read, 
// GLOBAL: COPTER_D 0x0058fe98
// ??_7PopupMenuExtra@@6B@


// Contribution: 2:00000ff8-000010eb Module: 45, 8 byte alignment, initialized_data, (comdat), read, 
// GLOBAL: COPTER_D 0x0058fff8
// ??_7TooltipWindow@@6B@


// Contribution: 2:000010f0-000011f3 Module: 45, 8 byte alignment, initialized_data, (comdat), read, 
// GLOBAL: COPTER_D 0x005900f0
// ??_7BoneheadTextEditWindow@@6B@


// Contribution: 2:000011f8-000012d3 Module: 45, 8 byte alignment, initialized_data, (comdat), read, 
// GLOBAL: COPTER_D 0x005901f8
// ??_7MessageBoxWindowEdit@@6B@


// Contribution: 2:000012d8-0000139b Module: 45, 8 byte alignment, initialized_data, (comdat), read, 
// GLOBAL: COPTER_D 0x005902d8
// ??_7ScrollingCreditWindow@@6B@


// Contribution: 2:000013a0-00001463 Module: 45, 8 byte alignment, initialized_data, (comdat), read, 
// GLOBAL: COPTER_D 0x005903a0
// ??_7CheckupWindow@@6B@


// Contribution: 3:00000044-00000053 Module: 45, 4 byte alignment, initialized_data, read, write, 
// LOCAL: COPTER_D 0x00597044
// $S67
// LOCAL: COPTER_D 0x00597048
// $S70
// LOCAL: COPTER_D 0x0059704c
// $S73
// LOCAL: COPTER_D 0x00597050
// $S76


// Contribution: 3:0000213c-00002283 Module: 45, 4 byte alignment, initialized_data, read, write, 
// GLOBAL: COPTER_D 0x0059913c
// SZ_MESSAGE_BOX_IMAGE_FILE_NAME
// GLOBAL: COPTER_D 0x00599140
// SZ_RENDER_WINDOW_IMAGE_FILE_NAME
// GLOBAL: COPTER_D 0x00599144
// SZ_SKY_FILE_NAME_BASE
// GLOBAL: COPTER_D 0x00599148
// SZ_GROUND_FILE_NAME_BASE
// GLOBAL: COPTER_D 0x0059914c
// SZ_BUILDING_FILE_NAME_BASE
// GLOBAL: COPTER_D 0x00599150
// SZ_LO_RES
// GLOBAL: COPTER_D 0x00599154
// SZ_HI_RES
// GLOBAL: COPTER_D 0x00599158
// SZ_TEXTURE
// GLOBAL: COPTER_D 0x0059915c
// SZ_NO_TEXTURE
// GLOBAL: COPTER_D 0x00599160
// SZ_SKY_COOL
// GLOBAL: COPTER_D 0x00599164
// SZ_SKY_GRAY
// GLOBAL: COPTER_D 0x00599168
// SZ_RENDER_WINDOW_SCROLL_BAR_IMAGE_FILE_NAME
// GLOBAL: COPTER_D 0x0059916c
// SZ_SOUND_WINDOW_IMAGE_FILE_NAME
// GLOBAL: COPTER_D 0x00599170
// SZ_SOUND_WINDOW_STATION_IMAGE_FILE_NAME
// GLOBAL: COPTER_D 0x00599174
// SZ_SOUND_WINDOW_STATION_THUMB_FILE_NAME
// GLOBAL: COPTER_D 0x00599178
// SZ_CITY_SETTINGS_WINDOW_IMAGE_FILE_NAME
// GLOBAL: COPTER_D 0x0059917c
// SZ_CITY_SETTINGS_SLIDER_IMAGE_FILE_NAME
// GLOBAL: COPTER_D 0x00599180
// SZ_POPUP_EXTRA_BACKGROUND_IMAGE_FILE_NAME
// GLOBAL: COPTER_D 0x00599184
// SZ_TOOLTIP_BACKGROUND_IMAGE_FILE_NAME
// GLOBAL: COPTER_D 0x00599188
// SZ_CHECKUP_WINDOW_IMAGE_FILE_NAME
// GLOBAL: COPTER_D 0x0059918c
// SZ_CHECKUP_SLIDER_IMAGE_FILE_NAME


// Contribution: 3:0006cab0-0006cabf Module: 45, 4 byte alignment, uninitialized_data, read, write, 
// LOCAL: COPTER_D 0x00603ab0
// colorTextGamePaletteNormal
// LOCAL: COPTER_D 0x00603ab4
// colorTextCheckupHighlighted
// LOCAL: COPTER_D 0x00603ab8
// colorTextGamePaletteHighlighted
// LOCAL: COPTER_D 0x00603abc
// colorTextCheckupNormal
