// Module: Hangar.obj
// Source: C:\Copter\source\sparkal\Hangar.cpp
// autogenerated by simcopter_tool from PDB file



// Contribution: 1:00070f70-00073776 Module: 36, 16 byte alignment, code, execute, read, 
// FUNCTION: COPTER_D 0x00471f70
void HangarWindow::HangarWindow(int32_t, class GraphicWindow*, class GraphicWindowOwner*, int32_t) {
// LINE 53:
	asm( 
"	      00471f70    push ebp"
"	      00471f71    mov ebp,esp"
"	      00471f73    sub esp,78h"
"	      00471f76    push ebx"
"	      00471f77    push esi"
"	      00471f78    push edi"
"	      00471f79    mov [ebp-78h],ecx"
"	      00471f7c    jmp near ptr 00471F81h"
"	      00471f81    jmp near ptr 00471F86h"
"	      00471f86    mov eax,[ebp+0Ch]"
"	      00471f89    mov eax,[eax+1Ch]"
"	      00471f8c    mov ecx,[ebp+0Ch]"
"	      00471f8f    sub eax,[ecx+14h]"
"	      00471f92    mov [ebp-14h],eax"
"	      00471f95    mov eax,[ebp+0Ch]"
"	      00471f98    mov eax,[eax+18h]"
"	      00471f9b    mov ecx,[ebp+0Ch]"
"	      00471f9e    sub eax,[ecx+10h]"
"	      00471fa1    mov [ebp-18h],eax"
"	      00471fa4    jmp near ptr 00471FA9h"
"	      00471fa9    mov dword ptr [ebp-10h],0"
"	      00471fb0    mov dword ptr [ebp-0Ch],0"
"	      00471fb7    mov eax,[ebp-18h]"
"	      00471fba    mov [ebp-8],eax"
"	      00471fbd    mov eax,[ebp-14h]"
"	      00471fc0    mov [ebp-4],eax"
"	      00471fc3    jmp near ptr 00471FC8h"
"	      00471fc8    mov eax,[ebp+14h]"
"	      00471fcb    push eax"
"	      00471fcc    mov eax,[ebp+10h]"
"	      00471fcf    push eax"
"	      00471fd0    mov eax,[ebp+0Ch]"
"	      00471fd3    push eax"
"	      00471fd4    mov eax,[ebp+8]"
"	      00471fd7    push eax"
"	      00471fd8    lea eax,[ebp-10h]"
"	      00471fdb    push eax"
"	      00471fdc    mov ecx,[ebp-78h]"
"	      00471fdf    call 004A33EEh"
"	      00471fe4    mov eax,[ebp-78h]"
"	      00471fe7    mov dword ptr [eax+74h],0"
"	      00471fee    mov ecx,[ebp-78h]"
"	      00471ff1    add ecx,78h"
"	      00471ff4    call 0042EF87h"
"	      00471ff9    mov eax,[ebp-78h]"
"	      00471ffc    mov dword ptr [eax+0F2h],1"
"	      00472006    mov eax,[ebp-78h]"
"	      00472009    mov dword ptr [eax+0F6h],1"
"	      00472013    mov eax,[ebp-78h]"
"	      00472016    mov dword ptr [eax+0FAh],1"
"	      00472020    mov eax,[ebp-78h]"
"	      00472023    mov dword ptr [eax+0FEh],0"
"	      0047202d    mov eax,[ebp-78h]"
"	      00472030    mov dword ptr [eax+102h],0"
"	      0047203a    mov eax,[ebp-78h]"
"	      0047203d    mov dword ptr [eax+106h],1"
"	      00472047    mov eax,[ebp-78h]"
"	      0047204a    mov dword ptr [eax+10Ah],0"
"	      00472054    mov eax,[ebp-78h]"
"	      00472057    mov dword ptr [eax+10Eh],0"
"	      00472061    mov eax,[ebp-78h]"
"	      00472064    mov dword ptr [eax+112h],0"
"	      0047206e    mov eax,[ebp-78h]"
"	      00472071    cmp dword ptr [eax+106h],0"
"	      00472078    jne near ptr 0047209Fh"
"	      0047207e    lea eax,[ebp-24h]"
"	      00472081    push eax"
"	      00472082    call dword ptr ds:[6C3668h]"
"	      00472088    mov eax,[ebp-24h]"
"	      0047208b    mov [ebp-1Ch],eax"
"	      0047208e    mov eax,[ebp-1Ch]"
"	      00472091    mov ecx,[ebp-78h]"
"	      00472094    mov [ecx+112h],eax"
"	      0047209a    jmp near ptr 0047209Fh"
"	      0047209f    jmp near ptr 004720A4h"
"	      004720a4    mov eax,[ebp-78h]"
"	      004720a7    mov dword ptr [eax+11Ah],0"
"	      004720b1    inc dword ptr ds:[5971CCh]"
"	      004720b7    mov eax,ds:[5971D8h]"
"	      004720bc    mov [ebp-28h],eax"
"	      004720bf    cmp dword ptr ds:[5971D8h],0"
"	      004720c6    je near ptr 004720E3h"
"	      004720cc    mov eax,ds:[5971D8h]"
"	      004720d1    mov eax,[eax]"
"	      004720d3    mov ds:[5971D8h],eax"
"	      004720d8    mov eax,[ebp-28h]"
"	      004720db    mov [ebp-74h],eax"
"	      004720de    jmp near ptr 004722C8h"
"	      004720e3    mov eax,ds:[5971D4h]"
"	      004720e8    cmp ds:[5971D0h],eax"
"	      004720ee    jne near ptr 004722B3h"
"	      004720f4    push 0"
"	      004720f6    call 0056A620h"
"	      004720fb    add esp,4"
"	      004720fe    push 8"
"	      00472100    call 0056A600h"
"	      00472105    add esp,4"
"	      00472108    mov [ebp-60h],eax"
"	      0047210b    cmp dword ptr [ebp-60h],0"
"	      0047210f    jne near ptr 00472142h"
"	      00472115    push 5971ACh"
"	      0047211a    mov ecx,638BA0h"
"	      0047211f    call 00569960h"
"	      00472124    mov [ebp-64h],eax"
"	      00472127    mov eax,[ebp-64h]"
"	      0047212a    push eax"
"	      0047212b    call 004011B0h"
"	      00472130    add esp,4"
"	      00472133    jmp near ptr 00472138h"
"	      00472138    push 1"
"	      0047213a    call 00569430h"
"	      0047213f    add esp,4"
"	      00472142    jmp near ptr 00472147h"
"	      00472147    jmp near ptr 0047214Ch"
"	      0047214c    mov eax,[ebp-60h]"
"	      0047214f    mov [ebp-34h],eax"
"	      00472152    mov dword ptr [ebp-38h],92h"
"	      00472159    lea eax,[ebp-38h]"
"	      0047215c    mov [ebp-40h],eax"
"	      0047215f    mov dword ptr [ebp-3Ch],1"
"	      00472166    lea eax,[ebp-3Ch]"
"	      00472169    mov [ebp-44h],eax"
"	      0047216c    mov eax,[ebp-44h]"
"	      0047216f    mov ecx,[ebp-40h]"
"	      00472172    mov ecx,[ecx]"
"	      00472174    cmp [eax],ecx"
"	      00472176    jb near ptr 00472187h"
"	      0047217c    mov eax,[ebp-44h]"
"	      0047217f    mov [ebp-48h],eax"
"	      00472182    jmp near ptr 0047218Dh"
"	      00472187    mov eax,[ebp-40h]"
"	      0047218a    mov [ebp-48h],eax"
"	      0047218d    jmp near ptr 00472192h"
"	      00472192    jmp near ptr 00472197h"
"	      00472197    jmp near ptr 0047219Ch"
"	      0047219c    mov eax,[ebp-48h]"
"	      0047219f    mov eax,[eax]"
"	      004721a1    mov [ebp-70h],eax"
"	      004721a4    push 0"
"	      004721a6    call 0056A620h"
"	      004721ab    add esp,4"
"	      004721ae    mov eax,[ebp-70h]"
"	      004721b1    mov ecx,eax"
"	      004721b3    shl eax,3"
"	      004721b6    sub eax,ecx"
"	      004721b8    shl eax,2"
"	      004721bb    push eax"
"	      004721bc    call 0056A600h"
"	      004721c1    add esp,4"
"	      004721c4    mov [ebp-68h],eax"
"	      004721c7    cmp dword ptr [ebp-68h],0"
"	      004721cb    jne near ptr 004721FEh"
"	      004721d1    push 5971ACh"
"	      004721d6    mov ecx,638BA0h"
"	      004721db    call 00569960h"
"	      004721e0    mov [ebp-6Ch],eax"
"	      004721e3    mov eax,[ebp-6Ch]"
"	      004721e6    push eax"
"	      004721e7    call 004011B0h"
"	      004721ec    add esp,4"
"	      004721ef    jmp near ptr 004721F4h"
"	      004721f4    push 1"
"	      004721f6    call 00569430h"
"	      004721fb    add esp,4"
"	      004721fe    jmp near ptr 00472203h"
"	      00472203    jmp near ptr 00472208h"
"	      00472208    mov eax,[ebp-68h]"
"	      0047220b    mov ecx,[ebp-34h]"
"	      0047220e    mov [ecx+4],eax"
"	      00472211    mov eax,ds:[5971DCh]"
"	      00472216    mov ecx,[ebp-34h]"
"	      00472219    mov [ecx],eax"
"	      0047221b    mov eax,[ebp-34h]"
"	      0047221e    mov ds:[5971DCh],eax"
"	      00472223    mov eax,ds:[5971DCh]"
"	      00472228    mov eax,[eax+4]"
"	      0047222b    mov ds:[5971D4h],eax"
"	      00472230    mov dword ptr [ebp-4Ch],92h"
"	      00472237    lea eax,[ebp-4Ch]"
"	      0047223a    mov [ebp-54h],eax"
"	      0047223d    mov dword ptr [ebp-50h],1"
"	      00472244    lea eax,[ebp-50h]"
"	      00472247    mov [ebp-58h],eax"
"	      0047224a    mov eax,[ebp-58h]"
"	      0047224d    mov ecx,[ebp-54h]"
"	      00472250    mov ecx,[ecx]"
"	      00472252    cmp [eax],ecx"
"	      00472254    jb near ptr 00472265h"
"	      0047225a    mov eax,[ebp-58h]"
"	      0047225d    mov [ebp-5Ch],eax"
"	      00472260    jmp near ptr 0047226Bh"
"	      00472265    mov eax,[ebp-54h]"
"	      00472268    mov [ebp-5Ch],eax"
"	      0047226b    jmp near ptr 00472270h"
"	      00472270    jmp near ptr 00472275h"
"	      00472275    jmp near ptr 0047227Ah"
"	      0047227a    mov eax,[ebp-5Ch]"
"	      0047227d    mov eax,[eax]"
"	      0047227f    mov ecx,eax"
"	      00472281    shl eax,3"
"	      00472284    sub eax,ecx"
"	      00472286    shl eax,2"
"	      00472289    add eax,ds:[5971D4h]"
"	      0047228f    mov ds:[5971D0h],eax"
"	      00472294    jmp near ptr 00472299h"
"	      00472299    mov eax,ds:[5971D4h]"
"	      0047229e    mov [ebp-2Ch],eax"
"	      004722a1    add dword ptr ds:[5971D4h],1Ch"
"	      004722a8    mov eax,[ebp-2Ch]"
"	      004722ab    mov [ebp-74h],eax"
"	      004722ae    jmp near ptr 004722C8h"
"	      004722b3    mov eax,ds:[5971D4h]"
"	      004722b8    mov [ebp-30h],eax"
"	      004722bb    add dword ptr ds:[5971D4h],1Ch"
"	      004722c2    mov eax,[ebp-30h]"
"	      004722c5    mov [ebp-74h],eax"
"	      004722c8    jmp near ptr 004722CDh"
"	      004722cd    mov eax,[ebp-74h]"
"	      004722d0    mov ecx,[ebp-78h]"
"	      004722d3    mov [ecx+116h],eax"
"	      004722d9    mov eax,[ebp-78h]"
"	      004722dc    mov eax,[eax+116h]"
"	      004722e2    mov ecx,[ebp-78h]"
"	      004722e5    mov ecx,[ecx+116h]"
"	      004722eb    mov [ecx],eax"
"	      004722ed    mov eax,[ebp-78h]"
"	      004722f0    mov eax,[eax+116h]"
"	      004722f6    mov ecx,[ebp-78h]"
"	      004722f9    mov ecx,[ecx+116h]"
"	      004722ff    mov [ecx+4],eax"
"	      00472302    jmp near ptr 00472307h"
"	      00472307    mov eax,[ebp-78h]"
"	      0047230a    mov dword ptr [eax+11Eh],0"
"	      00472314    jmp near ptr 00472319h"
"	      00472319    mov eax,[ebp-78h]"
"	      0047231c    mov dword ptr [eax+122h],0FFFFFFFFh"
"	      00472326    mov eax,[ebp-78h]"
"	      00472329    mov dword ptr [eax+126h],0FFFFFFFFh"
"	      00472333    jmp near ptr 00472338h"
"	      00472338    mov eax,[ebp-78h]"
"	      0047233b    mov dword ptr [eax+12Ah],0"
"	      00472345    mov eax,[ebp-78h]"
"	      00472348    mov dword ptr [eax],590C20h"
);
// LINE 54:
	asm( 
"	      0047234e    cmp dword ptr ds:[598E90h],0"
"	      00472355    jne near ptr 0047236Dh"
"	      0047235b    mov eax,[ebp-78h]"
"	      0047235e    mov dword ptr [eax+0F2h],1"
"	      00472368    jmp near ptr 0047237Ah"
"	      0047236d    mov eax,[ebp-78h]"
"	      00472370    mov dword ptr [eax+0F2h],0"
);
// LINE 55:
	asm( 
"	      0047237a    mov ecx,[ebp-78h]"
"	      0047237d    call 0047474Eh"
);
// LINE 56:
	asm( 
"	      00472382    push 1"
"	      00472384    mov ecx,[ebp-78h]"
"	      00472387    call 004730A3h"
);
// LINE 57:
	asm( 
"	      0047238c    mov ecx,[ebp-78h]"
"	      0047238f    call 004A6BCDh"
);
// LINE 58:
	asm( 
"	      00472394    mov eax,[ebp-78h]"
"	      00472397    push eax"
"	      00472398    call 004A7470h"
"	      0047239d    add esp,4"
);
// LINE 59:
	asm( 
"	      004723a0    jmp near ptr 004723A5h"
"	      004723a5    mov eax,[ebp-78h]"
"	      004723a8    pop edi"
"	      004723a9    pop esi"
"	      004723aa    pop ebx"
"	      004723ab    leave"
"	      004723ac    ret 10h"
);
}

// FUNCTION: COPTER_D 0x004723af
void HangarWindow::~HangarWindow() {
// LINE 65:
	asm( 
"	      004723af    push ebp"
"	      004723b0    mov ebp,esp"
"	      004723b2    sub esp,48h"
"	      004723b5    push ebx"
"	      004723b6    push esi"
"	      004723b7    push edi"
"	      004723b8    mov [ebp-48h],ecx"
"	      004723bb    mov eax,[ebp-48h]"
"	      004723be    mov dword ptr [eax],590C20h"
);
// LINE 66:
	asm( 
"	      004723c4    mov ecx,[ebp-48h]"
"	      004723c7    call 00473229h"
);
// LINE 67:
	asm( 
"	      004723cc    jmp near ptr 004723D1h"
"	      004723d1    mov eax,[ebp-48h]"
"	      004723d4    mov eax,[eax+116h]"
"	      004723da    mov [ebp-10h],eax"
"	      004723dd    mov eax,[ebp-10h]"
"	      004723e0    mov [ebp-4],eax"
"	      004723e3    jmp near ptr 004723E8h"
"	      004723e8    jmp near ptr 004723EDh"
"	      004723ed    mov eax,[ebp-48h]"
"	      004723f0    mov eax,[eax+116h]"
"	      004723f6    mov eax,[eax]"
"	      004723f8    mov [ebp-14h],eax"
"	      004723fb    mov eax,[ebp-14h]"
"	      004723fe    mov [ebp-8],eax"
"	      00472401    jmp near ptr 00472406h"
"	      00472406    jmp near ptr 0047240Bh"
"	      0047240b    mov eax,[ebp-4]"
"	      0047240e    mov [ebp-38h],eax"
"	      00472411    mov eax,[ebp-8]"
"	      00472414    mov [ebp-3Ch],eax"
"	      00472417    mov eax,[ebp-38h]"
"	      0047241a    cmp [ebp-3Ch],eax"
"	      0047241d    jne near ptr 0047242Dh"
"	      00472423    jmp near ptr 00472441h"
"	      00472428    jmp near ptr 0047242Dh"
"	      0047242d    jmp near ptr 0047243Ch"
"	      00472432    cmp dword ptr [ebp-20h],0"
"	      00472436    jne near ptr 00472441h"
"	      0047243c    jmp near ptr 00472446h"
"	      00472441    jmp near ptr 0047253Dh"
"	      00472446    jmp near ptr 00472455h"
"	      0047244b    cmp dword ptr [ebp-24h],0"
"	      0047244f    je near ptr 0047253Dh"
"	      00472455    mov eax,[ebp-3Ch]"
"	      00472458    mov [ebp-1Ch],eax"
"	      0047245b    mov eax,[ebp-3Ch]"
"	      0047245e    mov eax,[eax]"
"	      00472460    mov [ebp-3Ch],eax"
"	      00472463    jmp near ptr 00472468h"
"	      00472468    mov eax,[ebp-1Ch]"
"	      0047246b    mov [ebp-18h],eax"
"	      0047246e    jmp near ptr 00472473h"
"	      00472473    mov eax,[ebp-18h]"
"	      00472476    mov [ebp-34h],eax"
"	      00472479    mov eax,[ebp-34h]"
"	      0047247c    mov eax,[eax]"
"	      0047247e    mov ecx,[ebp-34h]"
"	      00472481    mov ecx,[ecx+4]"
"	      00472484    mov [ecx],eax"
"	      00472486    mov eax,[ebp-34h]"
"	      00472489    mov eax,[eax+4]"
"	      0047248c    mov ecx,[ebp-34h]"
"	      0047248f    mov ecx,[ecx]"
"	      00472491    mov [ecx+4],eax"
"	      00472494    jmp near ptr 00472499h"
"	      00472499    jmp near ptr 0047249Eh"
"	      0047249e    mov eax,[ebp-34h]"
"	      004724a1    mov eax,[eax+14h]"
"	      004724a4    mov [ebp-2Ch],eax"
"	      004724a7    mov eax,[ebp-34h]"
"	      004724aa    mov eax,[eax+10h]"
"	      004724ad    mov [ebp-30h],eax"
"	      004724b0    mov eax,[ebp-2Ch]"
"	      004724b3    cmp [ebp-30h],eax"
"	      004724b6    je near ptr 004724D1h"
"	      004724bc    mov eax,[ebp-30h]"
"	      004724bf    push eax"
"	      004724c0    call 004747E0h"
"	      004724c5    add esp,4"
"	      004724c8    add dword ptr [ebp-30h],8"
"	      004724cc    jmp near ptr 004724B0h"
"	      004724d1    jmp near ptr 004724D6h"
"	      004724d6    mov eax,[ebp-34h]"
"	      004724d9    mov eax,[eax+10h]"
"	      004724dc    mov [ebp-28h],eax"
"	      004724df    mov eax,[ebp-28h]"
"	      004724e2    push eax"
"	      004724e3    call 004747C0h"
"	      004724e8    add esp,4"
"	      004724eb    jmp near ptr 004724F0h"
"	      004724f0    jmp near ptr 004724F5h"
"	      004724f5    jmp near ptr 00472509h"
"	      004724fa    mov eax,[ebp-34h]"
"	      004724fd    add eax,8"
"	      00472500    push eax"
"	      00472501    call 0056A740h"
"	      00472506    add esp,4"
"	      00472509    jmp near ptr 0047250Eh"
"	      0047250e    jmp near ptr 00472513h"
"	      00472513    mov eax,ds:[5971D8h]"
"	      00472518    mov ecx,[ebp-34h]"
"	      0047251b    mov [ecx],eax"
"	      0047251d    mov eax,[ebp-34h]"
"	      00472520    mov ds:[5971D8h],eax"
"	      00472525    jmp near ptr 0047252Ah"
"	      0047252a    mov eax,[ebp-48h]"
"	      0047252d    dec dword ptr [eax+11Ah]"
"	      00472533    jmp near ptr 00472538h"
"	      00472538    jmp near ptr 00472417h"
"	      0047253d    jmp near ptr 00472542h"
"	      00472542    mov eax,[ebp-48h]"
"	      00472545    mov eax,[eax+116h]"
"	      0047254b    mov [ebp-0Ch],eax"
"	      0047254e    mov eax,ds:[5971D8h]"
"	      00472553    mov ecx,[ebp-0Ch]"
"	      00472556    mov [ecx],eax"
"	      00472558    mov eax,[ebp-0Ch]"
"	      0047255b    mov ds:[5971D8h],eax"
"	      00472560    jmp near ptr 00472565h"
"	      00472565    dec dword ptr ds:[5971CCh]"
"	      0047256b    jne near ptr 004725EFh"
"	      00472571    cmp dword ptr ds:[5971DCh],0"
"	      00472578    je near ptr 004725CCh"
"	      0047257e    mov eax,ds:[5971DCh]"
"	      00472583    mov [ebp-40h],eax"
"	      00472586    mov eax,ds:[5971DCh]"
"	      0047258b    mov eax,[eax]"
"	      0047258d    mov ds:[5971DCh],eax"
"	      00472592    mov eax,[ebp-40h]"
"	      00472595    mov eax,[eax+4]"
"	      00472598    mov [ebp-44h],eax"
"	      0047259b    mov eax,[ebp-44h]"
"	      0047259e    push eax"
"	      0047259f    call 0056A740h"
"	      004725a4    add esp,4"
"	      004725a7    jmp near ptr 004725ACh"
"	      004725ac    jmp near ptr 004725B1h"
"	      004725b1    mov eax,[ebp-40h]"
"	      004725b4    push eax"
"	      004725b5    call 0056A740h"
"	      004725ba    add esp,4"
"	      004725bd    jmp near ptr 004725C2h"
"	      004725c2    jmp near ptr 004725C7h"
"	      004725c7    jmp near ptr 00472571h"
"	      004725cc    mov dword ptr ds:[5971D8h],0"
"	      004725d6    mov dword ptr ds:[5971D4h],0"
"	      004725e0    mov dword ptr ds:[5971D0h],0"
"	      004725ea    jmp near ptr 004725EFh"
"	      004725ef    jmp near ptr 004725F4h"
"	      004725f4    jmp near ptr 004725F9h"
"	      004725f9    mov ecx,[ebp-48h]"
"	      004725fc    add ecx,78h"
"	      004725ff    call 0042F2E9h"
"	      00472604    mov ecx,[ebp-48h]"
"	      00472607    call 004A4045h"
"	      0047260c    pop edi"
"	      0047260d    pop esi"
"	      0047260e    pop ebx"
"	      0047260f    leave"
"	      00472610    ret"
);
}

// FUNCTION: COPTER_D 0x00472611
int32_t HangarWindow::Initialize() {
// LINE 73:
	asm( 
"	      00472611    push ebp"
"	      00472612    mov ebp,esp"
"	      00472614    mov eax,40BCh"
"	      00472619    call 0056AC60h"
"	      0047261e    push ebx"
"	      0047261f    push esi"
"	      00472620    push edi"
"	      00472621    mov [ebp-40BCh],ecx"
);
// LINE 76:
	asm( 
"	      00472627    push 10h"
"	      00472629    call 0056A600h"
"	      0047262e    add esp,4"
"	      00472631    mov [ebp-84h],eax"
"	      00472637    cmp dword ptr [ebp-84h],0"
"	      0047263e    je near ptr 0047268Fh"
"	      00472644    mov eax,[ebp-84h]"
"	      0047264a    mov dword ptr [eax+4],0"
"	      00472651    mov eax,[ebp-84h]"
"	      00472657    mov eax,[eax+4]"
"	      0047265a    mov ecx,[ebp-84h]"
"	      00472660    mov [ecx+8],eax"
"	      00472663    mov eax,[ebp-84h]"
"	      00472669    mov dword ptr [eax],0"
"	      0047266f    mov eax,[ebp-84h]"
"	      00472675    mov dword ptr [eax+0Ch],1"
"	      0047267c    jmp near ptr 00472681h"
"	      00472681    mov eax,[ebp-84h]"
"	      00472687    mov [ebp-8],eax"
"	      0047268a    jmp near ptr 00472696h"
"	      0047268f    mov dword ptr [ebp-8],0"
"	      00472696    mov dword ptr [ebp-0Ch],0"
"	      0047269d    jmp near ptr 004726A2h"
);
// LINE 78:
	asm( 
"	      004726a2    jmp near ptr 004726A7h"
"	      004726a7    mov eax,[ebp-40BCh]"
"	      004726ad    cmp dword ptr [eax+0F2h],0"
"	      004726b4    je near ptr 004726C7h"
"	      004726ba    mov eax,ds:[5997D0h]"
"	      004726bf    mov [ebp-10h],eax"
"	      004726c2    jmp near ptr 004726CFh"
"	      004726c7    mov eax,ds:[5997D4h]"
"	      004726cc    mov [ebp-10h],eax"
);
// LINE 80:
	asm( 
"	      004726cf    mov ecx,[ebp-40BCh]"
"	      004726d5    call 004A44D4h"
);
// LINE 81:
	asm( 
"	      004726da    push 0A4h"
"	      004726df    call 0056A600h"
"	      004726e4    add esp,4"
"	      004726e7    mov [ebp-18h],eax"
"	      004726ea    cmp dword ptr [ebp-18h],0"
"	      004726ee    je near ptr 00472748h"
"	      004726f4    jmp near ptr 004726F9h"
"	      004726f9    mov dword ptr [ebp-28h],0"
"	      00472700    mov dword ptr [ebp-24h],0"
"	      00472707    mov dword ptr [ebp-20h],0Ah"
"	      0047270e    mov dword ptr [ebp-1Ch],0Ah"
"	      00472715    jmp near ptr 0047271Ah"
"	      0047271a    push 1"
"	      0047271c    mov eax,[ebp-40BCh]"
"	      00472722    push eax"
"	      00472723    mov eax,[ebp-40BCh]"
"	      00472729    push eax"
"	      0047272a    push 0"
"	      0047272c    push 0"
"	      0047272e    lea eax,[ebp-28h]"
"	      00472731    push eax"
"	      00472732    mov ecx,[ebp-18h]"
"	      00472735    call 004ACCE6h"
"	      0047273a    mov ecx,[ebp-40BCh]"
"	      00472740    mov [ecx+74h],eax"
"	      00472743    jmp near ptr 00472755h"
"	      00472748    mov eax,[ebp-40BCh]"
"	      0047274e    mov dword ptr [eax+74h],0"
);
// LINE 82:
	asm( 
"	      00472755    push 0"
"	      00472757    push 0"
"	      00472759    push 10h"
"	      0047275b    mov eax,[ebp-40BCh]"
"	      00472761    mov ecx,[ebp-40BCh]"
"	      00472767    mov ecx,[ecx+74h]"
"	      0047276a    mov edx,[ecx]"
"	      0047276c    mov ecx,[eax+74h]"
"	      0047276f    call dword ptr [edx+0CCh]"
);
// LINE 83:
	asm( 
"	      00472775    push 1"
"	      00472777    mov eax,[ebp-40BCh]"
"	      0047277d    mov ecx,[ebp-40BCh]"
"	      00472783    mov ecx,[ecx+74h]"
"	      00472786    mov edx,[ecx]"
"	      00472788    mov ecx,[eax+74h]"
"	      0047278b    call dword ptr [edx+28h]"
);
// LINE 84:
	asm( 
"	      0047278e    push 1"
"	      00472790    mov eax,[ebp-40BCh]"
"	      00472796    mov ecx,[ebp-40BCh]"
"	      0047279c    mov ecx,[ecx+74h]"
"	      0047279f    mov edx,[ecx]"
"	      004727a1    mov ecx,[eax+74h]"
"	      004727a4    call dword ptr [edx+0D8h]"
"	      004727aa    mov eax,[ebp-40BCh]"
"	      004727b0    mov eax,[eax+74h]"
"	      004727b3    mov [ebp-80h],eax"
);
// LINE 85:
	asm( 
"	      004727b6    mov eax,[ebp-80h]"
"	      004727b9    mov dword ptr [eax+54h],0"
"	      004727c0    jmp near ptr 004727C5h"
);
// LINE 86:
	asm( 
"	      004727c5    mov eax,[ebp-40BCh]"
"	      004727cb    mov dword ptr [eax+12Ah],152h"
);
// LINE 88:
	asm( 
"	      004727d5    push 94h"
"	      004727da    call 0056A600h"
"	      004727df    add esp,4"
"	      004727e2    mov [ebp-2Ch],eax"
"	      004727e5    cmp dword ptr [ebp-2Ch],0"
"	      004727e9    je near ptr 0047283Fh"
"	      004727ef    jmp near ptr 004727F4h"
"	      004727f4    mov dword ptr [ebp-3Ch],16h"
"	      004727fb    mov dword ptr [ebp-38h],1AAh"
"	      00472802    mov dword ptr [ebp-34h],17h"
"	      00472809    mov dword ptr [ebp-30h],1ABh"
"	      00472810    jmp near ptr 00472815h"
"	      00472815    push 1"
"	      00472817    mov eax,[ebp-40BCh]"
"	      0047281d    push eax"
"	      0047281e    mov eax,[ebp-10h]"
"	      00472821    push eax"
"	      00472822    mov eax,[ebp-40BCh]"
"	      00472828    push eax"
"	      00472829    push 0"
"	      0047282b    lea eax,[ebp-3Ch]"
"	      0047282e    push eax"
"	      0047282f    mov ecx,[ebp-2Ch]"
"	      00472832    call 00471847h"
"	      00472837    mov [ebp-14h],eax"
"	      0047283a    jmp near ptr 00472846h"
"	      0047283f    mov dword ptr [ebp-14h],0"
);
// LINE 89:
	asm( 
"	      00472846    push 0"
"	      00472848    push 7Dh"
"	      0047284a    call 0042B15Fh"
"	      0047284f    add esp,8"
"	      00472852    mov [ebp-4],eax"
);
// LINE 90:
	asm( 
"	      00472855    push 0FFFh"
"	      0047285a    lea eax,[ebp-1094h]"
"	      00472860    push eax"
"	      00472861    mov eax,[ebp-4]"
"	      00472864    push eax"
"	      00472865    mov eax,ds:[5C28C8h]"
"	      0047286a    push eax"
"	      0047286b    call dword ptr ds:[6C38B4h]"
"	      00472871    mov [ebp-1098h],eax"
"	      00472877    cmp dword ptr [ebp-1098h],0"
"	      0047287e    jne near ptr 00472902h"
"	      00472884    push 0FFFh"
"	      00472889    lea eax,[ebp-1094h]"
"	      0047288f    push eax"
"	      00472890    mov ecx,3E8h"
"	      00472895    mov eax,[ebp-4]"
"	      00472898    sub edx,edx"
"	      0047289a    div ecx"
"	      0047289c    push edx"
"	      0047289d    mov eax,ds:[5C28C8h]"
"	      004728a2    push eax"
"	      004728a3    call dword ptr ds:[6C38B4h]"
"	      004728a9    mov [ebp-1098h],eax"
"	      004728af    jmp near ptr 004728B4h"
"	      004728b4    lea eax,[ebp-1094h]"
"	      004728ba    push eax"
"	      004728bb    call 0056ABE0h"
"	      004728c0    add esp,4"
"	      004728c3    push eax"
"	      004728c4    lea eax,[ebp-1094h]"
"	      004728ca    push eax"
"	      004728cb    lea ecx,[ebp-0Ch]"
"	      004728ce    call 0040FEE0h"
"	      004728d3    jmp near ptr 004728D8h"
"	      004728d8    jmp near ptr 004728DDh"
"	      004728dd    push 597200h"
"	      004728e2    call 0056ABE0h"
"	      004728e7    add esp,4"
"	      004728ea    push eax"
"	      004728eb    push 597200h"
"	      004728f0    lea ecx,[ebp-0Ch]"
"	      004728f3    call 00410130h"
"	      004728f8    jmp near ptr 004728FDh"
"	      004728fd    jmp near ptr 00472930h"
"	      00472902    jmp near ptr 00472907h"
"	      00472907    lea eax,[ebp-1094h]"
"	      0047290d    push eax"
"	      0047290e    call 0056ABE0h"
"	      00472913    add esp,4"
"	      00472916    push eax"
"	      00472917    lea eax,[ebp-1094h]"
"	      0047291d    push eax"
"	      0047291e    lea ecx,[ebp-0Ch]"
"	      00472921    call 0040FEE0h"
"	      00472926    jmp near ptr 0047292Bh"
"	      0047292b    jmp near ptr 00472930h"
);
// LINE 91:
	asm( 
"	      00472930    lea eax,[ebp-0Ch]"
"	      00472933    push eax"
"	      00472934    mov eax,[ebp-14h]"
"	      00472937    mov eax,[eax]"
"	      00472939    mov ecx,[ebp-14h]"
"	      0047293c    call dword ptr [eax+48h]"
);
// LINE 92:
	asm( 
"	      0047293f    mov eax,[ebp-14h]"
"	      00472942    mov eax,[eax]"
"	      00472944    mov ecx,[ebp-14h]"
"	      00472947    call dword ptr [eax+4]"
);
// LINE 94:
	asm( 
"	      0047294a    push 94h"
"	      0047294f    call 0056A600h"
"	      00472954    add esp,4"
"	      00472957    mov [ebp-40h],eax"
"	      0047295a    cmp dword ptr [ebp-40h],0"
"	      0047295e    je near ptr 004729B4h"
"	      00472964    jmp near ptr 00472969h"
"	      00472969    mov dword ptr [ebp-50h],0AEh"
"	      00472970    mov dword ptr [ebp-4Ch],1AAh"
"	      00472977    mov dword ptr [ebp-48h],0AFh"
"	      0047297e    mov dword ptr [ebp-44h],1ABh"
"	      00472985    jmp near ptr 0047298Ah"
"	      0047298a    push 1"
"	      0047298c    mov eax,[ebp-40BCh]"
"	      00472992    push eax"
"	      00472993    mov eax,[ebp-10h]"
"	      00472996    push eax"
"	      00472997    mov eax,[ebp-40BCh]"
"	      0047299d    push eax"
"	      0047299e    push 1"
"	      004729a0    lea eax,[ebp-50h]"
"	      004729a3    push eax"
"	      004729a4    mov ecx,[ebp-40h]"
"	      004729a7    call 00471847h"
"	      004729ac    mov [ebp-14h],eax"
"	      004729af    jmp near ptr 004729BBh"
"	      004729b4    mov dword ptr [ebp-14h],0"
);
// LINE 95:
	asm( 
"	      004729bb    push 0"
"	      004729bd    push 7Eh"
"	      004729bf    call 0042B15Fh"
"	      004729c4    add esp,8"
"	      004729c7    mov [ebp-4],eax"
);
// LINE 96:
	asm( 
"	      004729ca    push 0FFFh"
"	      004729cf    lea eax,[ebp-2098h]"
"	      004729d5    push eax"
"	      004729d6    mov eax,[ebp-4]"
"	      004729d9    push eax"
"	      004729da    mov eax,ds:[5C28C8h]"
"	      004729df    push eax"
"	      004729e0    call dword ptr ds:[6C38B4h]"
"	      004729e6    mov [ebp-209Ch],eax"
"	      004729ec    cmp dword ptr [ebp-209Ch],0"
"	      004729f3    jne near ptr 00472A77h"
"	      004729f9    push 0FFFh"
"	      004729fe    lea eax,[ebp-2098h]"
"	      00472a04    push eax"
"	      00472a05    mov ecx,3E8h"
"	      00472a0a    mov eax,[ebp-4]"
"	      00472a0d    sub edx,edx"
"	      00472a0f    div ecx"
"	      00472a11    push edx"
"	      00472a12    mov eax,ds:[5C28C8h]"
"	      00472a17    push eax"
"	      00472a18    call dword ptr ds:[6C38B4h]"
"	      00472a1e    mov [ebp-209Ch],eax"
"	      00472a24    jmp near ptr 00472A29h"
"	      00472a29    lea eax,[ebp-2098h]"
"	      00472a2f    push eax"
"	      00472a30    call 0056ABE0h"
"	      00472a35    add esp,4"
"	      00472a38    push eax"
"	      00472a39    lea eax,[ebp-2098h]"
"	      00472a3f    push eax"
"	      00472a40    lea ecx,[ebp-0Ch]"
"	      00472a43    call 0040FEE0h"
"	      00472a48    jmp near ptr 00472A4Dh"
"	      00472a4d    jmp near ptr 00472A52h"
"	      00472a52    push 597200h"
"	      00472a57    call 0056ABE0h"
"	      00472a5c    add esp,4"
"	      00472a5f    push eax"
"	      00472a60    push 597200h"
"	      00472a65    lea ecx,[ebp-0Ch]"
"	      00472a68    call 00410130h"
"	      00472a6d    jmp near ptr 00472A72h"
"	      00472a72    jmp near ptr 00472BC7h"
"	      00472a77    jmp near ptr 00472A7Ch"
"	      00472a7c    lea eax,[ebp-2098h]"
"	      00472a82    push eax"
"	      00472a83    call 0056ABE0h"
"	      00472a88    add esp,4"
"	      00472a8b    mov [ebp-20B0h],eax"
"	      00472a91    cmp dword ptr [ebp-20B0h],0FFFFFFFFh"
"	      00472a98    jne near ptr 00472AD6h"
"	      00472a9e    push 5971E4h"
"	      00472aa3    mov ecx,638C00h"
"	      00472aa8    call 00569960h"
"	      00472aad    mov [ebp-20ACh],eax"
"	      00472ab3    mov eax,[ebp-20ACh]"
"	      00472ab9    push eax"
"	      00472aba    call 004011B0h"
"	      00472abf    add esp,4"
"	      00472ac2    jmp near ptr 00472AC7h"
"	      00472ac7    push 1"
"	      00472ac9    call 00569430h"
"	      00472ace    add esp,4"
"	      00472ad1    jmp near ptr 00472AD6h"
"	      00472ad6    jmp near ptr 00472ADBh"
"	      00472adb    mov eax,[ebp-8]"
"	      00472ade    cmp dword ptr [eax+0Ch],1"
"	      00472ae2    ja near ptr 00472B0Ch"
"	      00472ae8    cmp dword ptr [ebp-20B0h],0"
"	      00472aef    je near ptr 00472B6Dh"
"	      00472af5    jmp near ptr 00472AFAh"
"	      00472afa    mov eax,[ebp-8]"
"	      00472afd    mov ecx,[ebp-20B0h]"
"	      00472b03    cmp [eax+8],ecx"
"	      00472b06    jae near ptr 00472B6Dh"
"	      00472b0c    push 10h"
"	      00472b0e    call 0056A600h"
"	      00472b13    add esp,4"
"	      00472b16    mov [ebp-20A4h],eax"
"	      00472b1c    cmp dword ptr [ebp-20A4h],0"
"	      00472b23    je near ptr 00472B4Dh"
"	      00472b29    mov eax,[ebp-20B0h]"
"	      00472b2f    push eax"
"	      00472b30    lea eax,[ebp-2098h]"
"	      00472b36    push eax"
"	      00472b37    mov ecx,[ebp-20A4h]"
"	      00472b3d    call 0041E090h"
"	      00472b42    mov [ebp-20A0h],eax"
"	      00472b48    jmp near ptr 00472B57h"
"	      00472b4d    mov dword ptr [ebp-20A0h],0"
"	      00472b57    lea ecx,[ebp-0Ch]"
"	      00472b5a    call 00412080h"
"	      00472b5f    mov eax,[ebp-20A0h]"
"	      00472b65    mov [ebp-8],eax"
"	      00472b68    jmp near ptr 00472BACh"
"	      00472b6d    cmp dword ptr [ebp-20B0h],0"
"	      00472b74    je near ptr 00472BACh"
"	      00472b7a    jmp near ptr 00472B7Fh"
"	      00472b7f    mov eax,[ebp-8]"
"	      00472b82    mov eax,[eax]"
"	      00472b84    mov [ebp-20A8h],eax"
"	      00472b8a    mov eax,[ebp-20B0h]"
"	      00472b90    push eax"
"	      00472b91    lea eax,[ebp-2098h]"
"	      00472b97    push eax"
"	      00472b98    mov eax,[ebp-20A8h]"
"	      00472b9e    push eax"
"	      00472b9f    call 0056A800h"
"	      00472ba4    add esp,0Ch"
"	      00472ba7    jmp near ptr 00472BACh"
"	      00472bac    mov eax,[ebp-20B0h]"
"	      00472bb2    mov ecx,[ebp-8]"
"	      00472bb5    mov [ecx+4],eax"
"	      00472bb8    jmp near ptr 00472BBDh"
"	      00472bbd    jmp near ptr 00472BC2h"
"	      00472bc2    jmp near ptr 00472BC7h"
);
// LINE 97:
	asm( 
"	      00472bc7    lea eax,[ebp-0Ch]"
"	      00472bca    push eax"
"	      00472bcb    mov eax,[ebp-14h]"
"	      00472bce    mov eax,[eax]"
"	      00472bd0    mov ecx,[ebp-14h]"
"	      00472bd3    call dword ptr [eax+48h]"
);
// LINE 98:
	asm( 
"	      00472bd6    mov eax,[ebp-14h]"
"	      00472bd9    mov eax,[eax]"
"	      00472bdb    mov ecx,[ebp-14h]"
"	      00472bde    call dword ptr [eax+4]"
);
// LINE 100:
	asm( 
"	      00472be1    push 94h"
"	      00472be6    call 0056A600h"
"	      00472beb    add esp,4"
"	      00472bee    mov [ebp-54h],eax"
"	      00472bf1    cmp dword ptr [ebp-54h],0"
"	      00472bf5    je near ptr 00472C4Bh"
"	      00472bfb    jmp near ptr 00472C00h"
"	      00472c00    mov dword ptr [ebp-64h],146h"
"	      00472c07    mov dword ptr [ebp-60h],1AAh"
"	      00472c0e    mov dword ptr [ebp-5Ch],147h"
"	      00472c15    mov dword ptr [ebp-58h],1ABh"
"	      00472c1c    jmp near ptr 00472C21h"
"	      00472c21    push 1"
"	      00472c23    mov eax,[ebp-40BCh]"
"	      00472c29    push eax"
"	      00472c2a    mov eax,[ebp-10h]"
"	      00472c2d    push eax"
"	      00472c2e    mov eax,[ebp-40BCh]"
"	      00472c34    push eax"
"	      00472c35    push 2"
"	      00472c37    lea eax,[ebp-64h]"
"	      00472c3a    push eax"
"	      00472c3b    mov ecx,[ebp-54h]"
"	      00472c3e    call 00471847h"
"	      00472c43    mov [ebp-14h],eax"
"	      00472c46    jmp near ptr 00472C52h"
"	      00472c4b    mov dword ptr [ebp-14h],0"
);
// LINE 101:
	asm( 
"	      00472c52    push 0"
"	      00472c54    push 7Fh"
"	      00472c56    call 0042B15Fh"
"	      00472c5b    add esp,8"
"	      00472c5e    mov [ebp-4],eax"
);
// LINE 102:
	asm( 
"	      00472c61    push 0FFFh"
"	      00472c66    lea eax,[ebp-30B0h]"
"	      00472c6c    push eax"
"	      00472c6d    mov eax,[ebp-4]"
"	      00472c70    push eax"
"	      00472c71    mov eax,ds:[5C28C8h]"
"	      00472c76    push eax"
"	      00472c77    call dword ptr ds:[6C38B4h]"
"	      00472c7d    mov [ebp-30B4h],eax"
"	      00472c83    cmp dword ptr [ebp-30B4h],0"
"	      00472c8a    jne near ptr 00472D0Eh"
"	      00472c90    push 0FFFh"
"	      00472c95    lea eax,[ebp-30B0h]"
"	      00472c9b    push eax"
"	      00472c9c    mov ecx,3E8h"
"	      00472ca1    mov eax,[ebp-4]"
"	      00472ca4    sub edx,edx"
"	      00472ca6    div ecx"
"	      00472ca8    push edx"
"	      00472ca9    mov eax,ds:[5C28C8h]"
"	      00472cae    push eax"
"	      00472caf    call dword ptr ds:[6C38B4h]"
"	      00472cb5    mov [ebp-30B4h],eax"
"	      00472cbb    jmp near ptr 00472CC0h"
"	      00472cc0    lea eax,[ebp-30B0h]"
"	      00472cc6    push eax"
"	      00472cc7    call 0056ABE0h"
"	      00472ccc    add esp,4"
"	      00472ccf    push eax"
"	      00472cd0    lea eax,[ebp-30B0h]"
"	      00472cd6    push eax"
"	      00472cd7    lea ecx,[ebp-0Ch]"
"	      00472cda    call 0040FEE0h"
"	      00472cdf    jmp near ptr 00472CE4h"
"	      00472ce4    jmp near ptr 00472CE9h"
"	      00472ce9    push 597200h"
"	      00472cee    call 0056ABE0h"
"	      00472cf3    add esp,4"
"	      00472cf6    push eax"
"	      00472cf7    push 597200h"
"	      00472cfc    lea ecx,[ebp-0Ch]"
"	      00472cff    call 00410130h"
"	      00472d04    jmp near ptr 00472D09h"
"	      00472d09    jmp near ptr 00472D3Ch"
"	      00472d0e    jmp near ptr 00472D13h"
"	      00472d13    lea eax,[ebp-30B0h]"
"	      00472d19    push eax"
"	      00472d1a    call 0056ABE0h"
"	      00472d1f    add esp,4"
"	      00472d22    push eax"
"	      00472d23    lea eax,[ebp-30B0h]"
"	      00472d29    push eax"
"	      00472d2a    lea ecx,[ebp-0Ch]"
"	      00472d2d    call 0040FEE0h"
"	      00472d32    jmp near ptr 00472D37h"
"	      00472d37    jmp near ptr 00472D3Ch"
);
// LINE 103:
	asm( 
"	      00472d3c    lea eax,[ebp-0Ch]"
"	      00472d3f    push eax"
"	      00472d40    mov eax,[ebp-14h]"
"	      00472d43    mov eax,[eax]"
"	      00472d45    mov ecx,[ebp-14h]"
"	      00472d48    call dword ptr [eax+48h]"
);
// LINE 104:
	asm( 
"	      00472d4b    mov eax,[ebp-14h]"
"	      00472d4e    mov eax,[eax]"
"	      00472d50    mov ecx,[ebp-14h]"
"	      00472d53    call dword ptr [eax+4]"
);
// LINE 106:
	asm( 
"	      00472d56    push 94h"
"	      00472d5b    call 0056A600h"
"	      00472d60    add esp,4"
"	      00472d63    mov [ebp-68h],eax"
"	      00472d66    cmp dword ptr [ebp-68h],0"
"	      00472d6a    je near ptr 00472DC0h"
"	      00472d70    jmp near ptr 00472D75h"
"	      00472d75    mov dword ptr [ebp-78h],1DEh"
"	      00472d7c    mov dword ptr [ebp-74h],1AAh"
"	      00472d83    mov dword ptr [ebp-70h],1DFh"
"	      00472d8a    mov dword ptr [ebp-6Ch],1ABh"
"	      00472d91    jmp near ptr 00472D96h"
"	      00472d96    push 1"
"	      00472d98    mov eax,[ebp-40BCh]"
"	      00472d9e    push eax"
"	      00472d9f    mov eax,[ebp-10h]"
"	      00472da2    push eax"
"	      00472da3    mov eax,[ebp-40BCh]"
"	      00472da9    push eax"
"	      00472daa    push 3"
"	      00472dac    lea eax,[ebp-78h]"
"	      00472daf    push eax"
"	      00472db0    mov ecx,[ebp-68h]"
"	      00472db3    call 00471847h"
"	      00472db8    mov [ebp-14h],eax"
"	      00472dbb    jmp near ptr 00472DC7h"
"	      00472dc0    mov dword ptr [ebp-14h],0"
);
// LINE 107:
	asm( 
"	      00472dc7    push 0"
"	      00472dc9    push 80h"
"	      00472dce    call 0042B15Fh"
"	      00472dd3    add esp,8"
"	      00472dd6    mov [ebp-4],eax"
);
// LINE 108:
	asm( 
"	      00472dd9    push 0FFFh"
"	      00472dde    lea eax,[ebp-40B4h]"
"	      00472de4    push eax"
"	      00472de5    mov eax,[ebp-4]"
"	      00472de8    push eax"
"	      00472de9    mov eax,ds:[5C28C8h]"
"	      00472dee    push eax"
"	      00472def    call dword ptr ds:[6C38B4h]"
"	      00472df5    mov [ebp-40B8h],eax"
"	      00472dfb    cmp dword ptr [ebp-40B8h],0"
"	      00472e02    jne near ptr 00472E86h"
"	      00472e08    push 0FFFh"
"	      00472e0d    lea eax,[ebp-40B4h]"
"	      00472e13    push eax"
"	      00472e14    mov ecx,3E8h"
"	      00472e19    mov eax,[ebp-4]"
"	      00472e1c    sub edx,edx"
"	      00472e1e    div ecx"
"	      00472e20    push edx"
"	      00472e21    mov eax,ds:[5C28C8h]"
"	      00472e26    push eax"
"	      00472e27    call dword ptr ds:[6C38B4h]"
"	      00472e2d    mov [ebp-40B8h],eax"
"	      00472e33    jmp near ptr 00472E38h"
"	      00472e38    lea eax,[ebp-40B4h]"
"	      00472e3e    push eax"
"	      00472e3f    call 0056ABE0h"
"	      00472e44    add esp,4"
"	      00472e47    push eax"
"	      00472e48    lea eax,[ebp-40B4h]"
"	      00472e4e    push eax"
"	      00472e4f    lea ecx,[ebp-0Ch]"
"	      00472e52    call 0040FEE0h"
"	      00472e57    jmp near ptr 00472E5Ch"
"	      00472e5c    jmp near ptr 00472E61h"
"	      00472e61    push 597200h"
"	      00472e66    call 0056ABE0h"
"	      00472e6b    add esp,4"
"	      00472e6e    push eax"
"	      00472e6f    push 597200h"
"	      00472e74    lea ecx,[ebp-0Ch]"
"	      00472e77    call 00410130h"
"	      00472e7c    jmp near ptr 00472E81h"
"	      00472e81    jmp near ptr 00472EB4h"
"	      00472e86    jmp near ptr 00472E8Bh"
"	      00472e8b    lea eax,[ebp-40B4h]"
"	      00472e91    push eax"
"	      00472e92    call 0056ABE0h"
"	      00472e97    add esp,4"
"	      00472e9a    push eax"
"	      00472e9b    lea eax,[ebp-40B4h]"
"	      00472ea1    push eax"
"	      00472ea2    lea ecx,[ebp-0Ch]"
"	      00472ea5    call 0040FEE0h"
"	      00472eaa    jmp near ptr 00472EAFh"
"	      00472eaf    jmp near ptr 00472EB4h"
);
// LINE 109:
	asm( 
"	      00472eb4    lea eax,[ebp-0Ch]"
"	      00472eb7    push eax"
"	      00472eb8    mov eax,[ebp-14h]"
"	      00472ebb    mov eax,[eax]"
"	      00472ebd    mov ecx,[ebp-14h]"
"	      00472ec0    call dword ptr [eax+48h]"
);
// LINE 110:
	asm( 
"	      00472ec3    mov eax,[ebp-14h]"
"	      00472ec6    mov eax,[eax]"
"	      00472ec8    mov ecx,[ebp-14h]"
"	      00472ecb    call dword ptr [eax+4]"
);
// LINE 112:
	asm( 
"	      00472ece    mov dword ptr [ebp-7Ch],1"
"	      00472ed5    mov eax,[ebp-8]"
"	      00472ed8    dec dword ptr [eax+0Ch]"
"	      00472edb    mov eax,[ebp-8]"
"	      00472ede    cmp dword ptr [eax+0Ch],0"
"	      00472ee2    jne near ptr 00472F1Ch"
"	      00472ee8    mov eax,[ebp-8]"
"	      00472eeb    mov [ebp-94h],eax"
"	      00472ef1    mov eax,[ebp-94h]"
"	      00472ef7    mov [ebp-90h],eax"
"	      00472efd    cmp dword ptr [ebp-90h],0"
"	      00472f04    je near ptr 00472F1Ch"
"	      00472f0a    push 1"
"	      00472f0c    mov ecx,[ebp-90h]"
"	      00472f12    call 0041DD70h"
"	      00472f17    jmp near ptr 00472F1Ch"
"	      00472f1c    jmp near ptr 00472F21h"
"	      00472f21    cmp dword ptr [ebp-0Ch],0"
"	      00472f25    je near ptr 00472F4Fh"
"	      00472f2b    mov eax,[ebp-0Ch]"
"	      00472f2e    mov [ebp-88h],eax"
"	      00472f34    mov eax,[ebp-88h]"
"	      00472f3a    mov [ebp-8Ch],eax"
"	      00472f40    mov eax,[ebp-8Ch]"
"	      00472f46    push eax"
"	      00472f47    call 0056A740h"
"	      00472f4c    add esp,4"
"	      00472f4f    jmp near ptr 00472F54h"
"	      00472f54    mov eax,[ebp-7Ch]"
"	      00472f57    jmp near ptr 00472F5Ch"
);
// LINE 113:
	asm( 
"	      00472f5c    pop edi"
"	      00472f5d    pop esi"
"	      00472f5e    pop ebx"
"	      00472f5f    leave"
"	      00472f60    ret"
);
}

// FUNCTION: COPTER_D 0x00472f61
int32_t HangarWindow::ReadPalette(struct SparkalColor*) {
// LINE 121:
	asm( 
"	      00472f61    push ebp"
"	      00472f62    mov ebp,esp"
"	      00472f64    sub esp,24h"
"	      00472f67    push ebx"
"	      00472f68    push esi"
"	      00472f69    push edi"
"	      00472f6a    mov [ebp-24h],ecx"
);
// LINE 122:
	asm( 
"	      00472f6d    mov eax,[ebp-24h]"
"	      00472f70    cmp dword ptr [eax+64h],0"
"	      00472f74    je near ptr 00472F95h"
"	      00472f7a    mov eax,[ebp-24h]"
"	      00472f7d    mov eax,[eax+64h]"
"	      00472f80    mov [ebp-4],eax"
"	      00472f83    mov eax,[ebp-4]"
"	      00472f86    mov [ebp-0Ch],eax"
"	      00472f89    mov eax,[ebp-0Ch]"
"	      00472f8c    push eax"
"	      00472f8d    call 0056A740h"
"	      00472f92    add esp,4"
"	      00472f95    jmp near ptr 00472F9Ah"
"	      00472f9a    mov eax,[ebp-24h]"
"	      00472f9d    mov eax,[eax+68h]"
"	      00472fa0    mov eax,[eax+4]"
"	      00472fa3    inc eax"
"	      00472fa4    push eax"
"	      00472fa5    call 0056A600h"
"	      00472faa    add esp,4"
"	      00472fad    mov ecx,[ebp-24h]"
"	      00472fb0    mov [ecx+64h],eax"
"	      00472fb3    jmp near ptr 00472FB8h"
"	      00472fb8    mov eax,[ebp-24h]"
"	      00472fbb    mov eax,[eax+68h]"
"	      00472fbe    cmp dword ptr [eax+4],0"
"	      00472fc2    je near ptr 00473031h"
"	      00472fc8    jmp near ptr 00472FCDh"
"	      00472fcd    jmp near ptr 00472FD2h"
"	      00472fd2    mov eax,[ebp-24h]"
"	      00472fd5    mov eax,[eax+68h]"
"	      00472fd8    cmp dword ptr [eax+4],0"
"	      00472fdc    je near ptr 00472FF7h"
"	      00472fe2    mov eax,[ebp-24h]"
"	      00472fe5    mov eax,[eax+68h]"
"	      00472fe8    mov eax,[eax]"
"	      00472fea    mov [ebp-18h],eax"
"	      00472fed    jmp near ptr 00473003h"
"	      00472ff2    jmp near ptr 00473003h"
"	      00472ff7    mov dword ptr [ebp-18h],0"
"	      00472ffe    jmp near ptr 00473003h"
"	      00473003    mov eax,[ebp-24h]"
"	      00473006    mov eax,[eax+68h]"
"	      00473009    mov eax,[eax+4]"
"	      0047300c    mov [ebp-1Ch],eax"
"	      0047300f    mov eax,[ebp-24h]"
"	      00473012    mov eax,[eax+64h]"
"	      00473015    mov [ebp-20h],eax"
"	      00473018    mov eax,[ebp-1Ch]"
"	      0047301b    push eax"
"	      0047301c    mov eax,[ebp-18h]"
"	      0047301f    push eax"
"	      00473020    mov eax,[ebp-20h]"
"	      00473023    push eax"
"	      00473024    call 0056A800h"
"	      00473029    add esp,0Ch"
"	      0047302c    jmp near ptr 00473031h"
"	      00473031    jmp near ptr 00473036h"
"	      00473036    mov byte ptr [ebp-8],0"
"	      0047303a    jmp near ptr 0047303Fh"
"	      0047303f    lea eax,[ebp-8]"
"	      00473042    mov [ebp-10h],eax"
"	      00473045    jmp near ptr 0047304Ah"
"	      0047304a    mov eax,[ebp-24h]"
"	      0047304d    mov eax,[eax+68h]"
"	      00473050    mov eax,[eax+4]"
"	      00473053    mov ecx,[ebp-24h]"
"	      00473056    add eax,[ecx+64h]"
"	      00473059    mov [ebp-14h],eax"
"	      0047305c    mov eax,[ebp-10h]"
"	      0047305f    mov al,[eax]"
"	      00473061    mov ecx,[ebp-14h]"
"	      00473064    mov [ecx],al"
"	      00473066    jmp near ptr 0047306Bh"
"	      0047306b    jmp near ptr 00473070h"
"	      00473070    mov eax,[ebp+8]"
"	      00473073    push eax"
"	      00473074    mov eax,[ebp-24h]"
"	      00473077    mov eax,[eax+64h]"
"	      0047307a    push eax"
"	      0047307b    call 004704DBh"
"	      00473080    add esp,8"
"	      00473083    test eax,eax"
"	      00473085    jne near ptr 00473095h"
"	      0047308b    mov eax,1"
"	      00473090    jmp near ptr 00473097h"
"	      00473095    xor eax,eax"
"	      00473097    jmp near ptr 0047309Ch"
);
// LINE 123:
	asm( 
"	      0047309c    pop edi"
"	      0047309d    pop esi"
"	      0047309e    pop ebx"
"	      0047309f    leave"
"	      004730a0    ret 4"
);
}

// FUNCTION: COPTER_D 0x004730a3
int32_t HangarWindow::CreateImage(int32_t) {
// LINE 129:
	asm( 
"	      004730a3    push ebp"
"	      004730a4    mov ebp,esp"
"	      004730a6    sub esp,28h"
"	      004730a9    push ebx"
"	      004730aa    push esi"
"	      004730ab    push edi"
"	      004730ac    mov [ebp-28h],ecx"
);
// LINE 133:
	asm( 
"	      004730af    mov eax,[ebp-28h]"
"	      004730b2    cmp dword ptr [eax+11Eh],0"
"	      004730b9    jne near ptr 00473214h"
);
// LINE 134:
	asm( 
"	      004730bf    mov eax,[ebp-28h]"
"	      004730c2    mov eax,[eax]"
"	      004730c4    mov ecx,[ebp-28h]"
"	      004730c7    call dword ptr [eax+0B4h]"
);
// LINE 135:
	asm( 
"	      004730cd    push 134h"
"	      004730d2    call 0056A600h"
"	      004730d7    add esp,4"
"	      004730da    mov [ebp-4],eax"
"	      004730dd    cmp dword ptr [ebp-4],0"
"	      004730e1    je near ptr 00473207h"
"	      004730e7    mov eax,[ebp-28h]"
"	      004730ea    cmp dword ptr [eax+64h],0"
"	      004730ee    je near ptr 0047310Fh"
"	      004730f4    mov eax,[ebp-28h]"
"	      004730f7    mov eax,[eax+64h]"
"	      004730fa    mov [ebp-8],eax"
"	      004730fd    mov eax,[ebp-8]"
"	      00473100    mov [ebp-10h],eax"
"	      00473103    mov eax,[ebp-10h]"
"	      00473106    push eax"
"	      00473107    call 0056A740h"
"	      0047310c    add esp,4"
"	      0047310f    jmp near ptr 00473114h"
"	      00473114    mov eax,[ebp-28h]"
"	      00473117    mov eax,[eax+68h]"
"	      0047311a    mov eax,[eax+4]"
"	      0047311d    inc eax"
"	      0047311e    push eax"
"	      0047311f    call 0056A600h"
"	      00473124    add esp,4"
"	      00473127    mov ecx,[ebp-28h]"
"	      0047312a    mov [ecx+64h],eax"
"	      0047312d    jmp near ptr 00473132h"
"	      00473132    mov eax,[ebp-28h]"
"	      00473135    mov eax,[eax+68h]"
"	      00473138    cmp dword ptr [eax+4],0"
"	      0047313c    je near ptr 004731ABh"
"	      00473142    jmp near ptr 00473147h"
"	      00473147    jmp near ptr 0047314Ch"
"	      0047314c    mov eax,[ebp-28h]"
"	      0047314f    mov eax,[eax+68h]"
"	      00473152    cmp dword ptr [eax+4],0"
"	      00473156    je near ptr 00473171h"
"	      0047315c    mov eax,[ebp-28h]"
"	      0047315f    mov eax,[eax+68h]"
"	      00473162    mov eax,[eax]"
"	      00473164    mov [ebp-1Ch],eax"
"	      00473167    jmp near ptr 0047317Dh"
"	      0047316c    jmp near ptr 0047317Dh"
"	      00473171    mov dword ptr [ebp-1Ch],0"
"	      00473178    jmp near ptr 0047317Dh"
"	      0047317d    mov eax,[ebp-28h]"
"	      00473180    mov eax,[eax+68h]"
"	      00473183    mov eax,[eax+4]"
"	      00473186    mov [ebp-20h],eax"
"	      00473189    mov eax,[ebp-28h]"
"	      0047318c    mov eax,[eax+64h]"
"	      0047318f    mov [ebp-24h],eax"
"	      00473192    mov eax,[ebp-20h]"
"	      00473195    push eax"
"	      00473196    mov eax,[ebp-1Ch]"
"	      00473199    push eax"
"	      0047319a    mov eax,[ebp-24h]"
"	      0047319d    push eax"
"	      0047319e    call 0056A800h"
"	      004731a3    add esp,0Ch"
"	      004731a6    jmp near ptr 004731ABh"
"	      004731ab    jmp near ptr 004731B0h"
"	      004731b0    mov byte ptr [ebp-0Ch],0"
"	      004731b4    jmp near ptr 004731B9h"
"	      004731b9    lea eax,[ebp-0Ch]"
"	      004731bc    mov [ebp-14h],eax"
"	      004731bf    jmp near ptr 004731C4h"
"	      004731c4    mov eax,[ebp-28h]"
"	      004731c7    mov eax,[eax+68h]"
"	      004731ca    mov eax,[eax+4]"
"	      004731cd    mov ecx,[ebp-28h]"
"	      004731d0    add eax,[ecx+64h]"
"	      004731d3    mov [ebp-18h],eax"
"	      004731d6    mov eax,[ebp-14h]"
"	      004731d9    mov al,[eax]"
"	      004731db    mov ecx,[ebp-18h]"
"	      004731de    mov [ecx],al"
"	      004731e0    jmp near ptr 004731E5h"
"	      004731e5    jmp near ptr 004731EAh"
"	      004731ea    mov eax,[ebp-28h]"
"	      004731ed    mov eax,[eax+64h]"
"	      004731f0    push eax"
"	      004731f1    mov ecx,[ebp-4]"
"	      004731f4    call 0046E6DFh"
"	      004731f9    mov ecx,[ebp-28h]"
"	      004731fc    mov [ecx+11Eh],eax"
"	      00473202    jmp near ptr 00473214h"
"	      00473207    mov eax,[ebp-28h]"
"	      0047320a    mov dword ptr [eax+11Eh],0"
);
// LINE 137:
	asm( 
"	      00473214    mov eax,[ebp-28h]"
"	      00473217    mov eax,[eax+11Eh]"
"	      0047321d    jmp near ptr 00473222h"
);
// LINE 138:
	asm( 
"	      00473222    pop edi"
"	      00473223    pop esi"
"	      00473224    pop ebx"
"	      00473225    leave"
"	      00473226    ret 4"
);
}

// FUNCTION: COPTER_D 0x00473229
void HangarWindow::DestroyImage() {
// LINE 143:
	asm( 
"	      00473229    push ebp"
"	      0047322a    mov ebp,esp"
"	      0047322c    sub esp,0Ch"
"	      0047322f    push ebx"
"	      00473230    push esi"
"	      00473231    push edi"
"	      00473232    mov [ebp-0Ch],ecx"
);
// LINE 144:
	asm( 
"	      00473235    mov eax,[ebp-0Ch]"
"	      00473238    cmp dword ptr [eax+11Eh],0"
"	      0047323f    je near ptr 0047328Ch"
);
// LINE 145:
	asm( 
"	      00473245    mov eax,[ebp-0Ch]"
"	      00473248    mov eax,[eax+11Eh]"
"	      0047324e    mov [ebp-8],eax"
"	      00473251    mov eax,[ebp-8]"
"	      00473254    mov [ebp-4],eax"
"	      00473257    cmp dword ptr [ebp-4],0"
"	      0047325b    je near ptr 0047327Fh"
"	      00473261    mov ecx,[ebp-4]"
"	      00473264    call 0046EC7Ah"
"	      00473269    mov eax,[ebp-4]"
"	      0047326c    push eax"
"	      0047326d    call 0056A740h"
"	      00473272    add esp,4"
"	      00473275    jmp near ptr 0047327Ah"
"	      0047327a    jmp near ptr 0047327Fh"
);
// LINE 146:
	asm( 
"	      0047327f    mov eax,[ebp-0Ch]"
"	      00473282    mov dword ptr [eax+11Eh],0"
);
// LINE 148:
	asm( 
"	      0047328c    jmp near ptr 00473291h"
"	      00473291    pop edi"
"	      00473292    pop esi"
"	      00473293    pop ebx"
"	      00473294    leave"
"	      00473295    ret"
);
}

// FUNCTION: COPTER_D 0x00473296
int32_t HangarWindow::ComposeSelf() {
// LINE 153:
	asm( 
"	      00473296    push ebp"
"	      00473297    mov ebp,esp"
"	      00473299    sub esp,28h"
"	      0047329c    push ebx"
"	      0047329d    push esi"
"	      0047329e    push edi"
"	      0047329f    mov [ebp-28h],ecx"
);
// LINE 156:
	asm( 
"	      004732a2    mov eax,[ebp-28h]"
"	      004732a5    cmp dword ptr [eax+44h],0"
"	      004732a9    je near ptr 004732BCh"
"	      004732af    mov eax,[ebp-28h]"
"	      004732b2    cmp dword ptr [eax+54h],0"
"	      004732b6    jne near ptr 004732C3h"
);
// LINE 157:
	asm( 
"	      004732bc    xor eax,eax"
"	      004732be    jmp near ptr 004734E8h"
);
// LINE 159:
	asm( 
"	      004732c3    mov eax,[ebp-28h]"
"	      004732c6    cmp dword ptr [eax+102h],0"
"	      004732cd    je near ptr 004732E5h"
);
// LINE 160:
	asm( 
"	      004732d3    mov eax,[ebp-28h]"
"	      004732d6    mov eax,[eax+102h]"
"	      004732dc    push eax"
"	      004732dd    mov ecx,[ebp-28h]"
"	      004732e0    call 00473C6Ch"
);
// LINE 161:
	asm( 
"	      004732e5    mov eax,[ebp-28h]"
"	      004732e8    mov eax,[eax+10Eh]"
"	      004732ee    mov [ebp-10h],eax"
"	      004732f1    jmp near ptr 004732F6h"
"	      004732f6    mov eax,[ebp-28h]"
"	      004732f9    cmp dword ptr [eax+10Ah],0"
"	      00473300    je near ptr 00473385h"
"	      00473306    mov eax,[ebp-28h]"
"	      00473309    cmp dword ptr [eax+106h],1"
"	      00473310    jne near ptr 00473329h"
"	      00473316    call dword ptr ds:[6C3908h]"
"	      0047331c    mov [ebp-20h],eax"
"	      0047331f    jmp near ptr 00473370h"
"	      00473324    jmp near ptr 00473370h"
"	      00473329    mov eax,[ebp-28h]"
"	      0047332c    cmp dword ptr [eax+106h],0"
"	      00473333    jne near ptr 00473359h"
"	      00473339    lea eax,[ebp-1Ch]"
"	      0047333c    push eax"
"	      0047333d    call dword ptr ds:[6C365Ch]"
"	      00473343    mov eax,[ebp-1Ch]"
"	      00473346    mov [ebp-14h],eax"
"	      00473349    mov eax,[ebp-14h]"
"	      0047334c    mov [ebp-20h],eax"
"	      0047334f    jmp near ptr 00473370h"
"	      00473354    jmp near ptr 00473370h"
"	      00473359    call dword ptr ds:[6C3908h]"
"	      0047335f    mov ecx,3E8h"
"	      00473364    sub edx,edx"
"	      00473366    div ecx"
"	      00473368    mov [ebp-20h],eax"
"	      0047336b    jmp near ptr 00473370h"
"	      00473370    mov eax,[ebp-20h]"
"	      00473373    mov ecx,[ebp-28h]"
"	      00473376    sub eax,[ecx+10Ah]"
"	      0047337c    mov [ebp-0Ch],eax"
"	      0047337f    mov eax,[ebp-0Ch]"
"	      00473382    add [ebp-10h],eax"
"	      00473385    mov eax,[ebp-28h]"
"	      00473388    cmp dword ptr [eax+106h],0"
"	      0047338f    jne near ptr 004733CCh"
"	      00473395    mov eax,[ebp-28h]"
"	      00473398    cmp dword ptr [eax+112h],0"
"	      0047339f    je near ptr 004733CCh"
"	      004733a5    mov eax,[ebp-28h]"
"	      004733a8    mov eax,[eax+112h]"
"	      004733ae    push eax"
"	      004733af    push 0F4240h"
"	      004733b4    mov eax,[ebp-10h]"
"	      004733b7    push eax"
"	      004733b8    call dword ptr ds:[6C372Ch]"
"	      004733be    mov [ebp-10h],eax"
"	      004733c1    mov eax,[ebp-10h]"
"	      004733c4    mov [ebp-8],eax"
"	      004733c7    jmp near ptr 004733D7h"
"	      004733cc    mov eax,[ebp-10h]"
"	      004733cf    mov [ebp-8],eax"
"	      004733d2    jmp near ptr 004733D7h"
"	      004733d7    cmp dword ptr [ebp-8],3E8h"
"	      004733de    jb near ptr 004733E9h"
"	      004733e4    jmp near ptr 004733EEh"
"	      004733e9    jmp near ptr 0047344Ch"
"	      004733ee    jmp near ptr 004733FDh"
"	      004733f3    cmp dword ptr [ebp-24h],0"
"	      004733f7    je near ptr 0047344Ch"
"	      004733fd    mov eax,[ebp-28h]"
"	      00473400    cmp dword ptr [eax+0FEh],0"
"	      00473407    jne near ptr 0047344Ch"
);
// LINE 162:
	asm( 
"	      0047340d    mov eax,[ebp-28h]"
"	      00473410    add eax,122h"
"	      00473415    push eax"
"	      00473416    lea eax,[ebp-4]"
"	      00473419    push eax"
"	      0047341a    mov ecx,[ebp-28h]"
"	      0047341d    call 00473B5Ch"
"	      00473422    test eax,eax"
"	      00473424    je near ptr 0047343Fh"
);
// LINE 163:
	asm( 
"	      0047342a    mov eax,[ebp-28h]"
"	      0047342d    add eax,122h"
"	      00473432    push eax"
"	      00473433    mov eax,[ebp-4]"
"	      00473436    push eax"
"	      00473437    mov ecx,[ebp-28h]"
"	      0047343a    call 00473F53h"
);
// LINE 164:
	asm( 
"	      0047343f    mov eax,[ebp-28h]"
"	      00473442    mov dword ptr [eax+0FEh],1"
);
// LINE 167:
	asm( 
"	      0047344c    jmp near ptr 00473451h"
"	      00473451    mov eax,[ebp-28h]"
"	      00473454    cmp dword ptr [eax+48h],0"
"	      00473458    je near ptr 004734DEh"
);
// LINE 168:
	asm( 
"	      0047345e    push 0"
"	      00473460    mov eax,[ebp-28h]"
"	      00473463    mov eax,[eax]"
"	      00473465    mov ecx,[ebp-28h]"
"	      00473468    call dword ptr [eax+50h]"
);
// LINE 170:
	asm( 
"	      0047346b    jmp near ptr 00473470h"
"	      00473470    jmp near ptr 00473475h"
"	      00473475    mov eax,[ebp-28h]"
"	      00473478    mov eax,[eax+11Eh]"
"	      0047347e    mov eax,[eax+0Ch]"
"	      00473481    push eax"
"	      00473482    mov eax,[ebp-28h]"
"	      00473485    mov eax,[eax+18h]"
"	      00473488    mov ecx,[ebp-28h]"
"	      0047348b    sub eax,[ecx+10h]"
"	      0047348e    mov ecx,[ebp-28h]"
"	      00473491    add eax,[ecx+12Ah]"
"	      00473497    push eax"
"	      00473498    push 0"
"	      0047349a    mov eax,[ebp-28h]"
"	      0047349d    mov eax,[eax+12Ah]"
"	      004734a3    push eax"
"	      004734a4    mov eax,[ebp-28h]"
"	      004734a7    mov eax,[eax+24h]"
"	      004734aa    push eax"
"	      004734ab    mov eax,[ebp-28h]"
"	      004734ae    mov eax,[eax+20h]"
"	      004734b1    push eax"
"	      004734b2    mov eax,[ebp-28h]"
"	      004734b5    mov eax,[eax+44h]"
"	      004734b8    push eax"
"	      004734b9    mov eax,[ebp-28h]"
"	      004734bc    mov ecx,[ebp-28h]"
"	      004734bf    mov ecx,[ecx+11Eh]"
"	      004734c5    mov edx,[ecx]"
"	      004734c7    mov ecx,[eax+11Eh]"
"	      004734cd    call dword ptr [edx+0Ch]"
);
// LINE 171:
	asm( 
"	      004734d0    mov eax,[ebp-28h]"
"	      004734d3    mov eax,[eax]"
"	      004734d5    mov ecx,[ebp-28h]"
"	      004734d8    call dword ptr [eax+0B8h]"
);
// LINE 176:
	asm( 
"	      004734de    mov eax,1"
"	      004734e3    jmp near ptr 004734E8h"
);
// LINE 177:
	asm( 
"	      004734e8    pop edi"
"	      004734e9    pop esi"
"	      004734ea    pop ebx"
"	      004734eb    leave"
"	      004734ec    ret"
);
}

// FUNCTION: COPTER_D 0x004734ed
int32_t HangarWindow::DoMessage(class GraphicWindow*, long, long, void * __ptr32) {
// LINE 183:
	asm( 
"	      004734ed    push ebp"
"	      004734ee    mov ebp,esp"
"	      004734f0    sub esp,8"
"	      004734f3    push ebx"
"	      004734f4    push esi"
"	      004734f5    push edi"
"	      004734f6    mov [ebp-8],ecx"
);
// LINE 186:
	asm( 
"	      004734f9    cmp dword ptr [ebp+0Ch],0"
"	      004734fd    jne near ptr 00473530h"
);
// LINE 187:
	asm( 
"	      00473503    mov dword ptr [ebp-4],0"
);
// LINE 188:
	asm( 
"	      0047350a    lea eax,[ebp-4]"
"	      0047350d    push eax"
"	      0047350e    push 1"
"	      00473510    mov eax,[ebp-8]"
"	      00473513    mov eax,[eax+4]"
"	      00473516    push eax"
"	      00473517    mov eax,[ebp-8]"
"	      0047351a    push eax"
"	      0047351b    mov eax,[ebp-8]"
"	      0047351e    mov ecx,[ebp-8]"
"	      00473521    mov ecx,[ecx+38h]"
"	      00473524    mov edx,[ecx]"
"	      00473526    mov ecx,[eax+38h]"
"	      00473529    call dword ptr [edx]"
);
// LINE 190:
	asm( 
"	      0047352b    jmp near ptr 004735D0h"
"	      00473530    cmp dword ptr [ebp+0Ch],1"
"	      00473534    jne near ptr 00473567h"
);
// LINE 191:
	asm( 
"	      0047353a    mov dword ptr [ebp-4],1"
);
// LINE 192:
	asm( 
"	      00473541    lea eax,[ebp-4]"
"	      00473544    push eax"
"	      00473545    push 1"
"	      00473547    mov eax,[ebp-8]"
"	      0047354a    mov eax,[eax+4]"
"	      0047354d    push eax"
"	      0047354e    mov eax,[ebp-8]"
"	      00473551    push eax"
"	      00473552    mov eax,[ebp-8]"
"	      00473555    mov ecx,[ebp-8]"
"	      00473558    mov ecx,[ecx+38h]"
"	      0047355b    mov edx,[ecx]"
"	      0047355d    mov ecx,[eax+38h]"
"	      00473560    call dword ptr [edx]"
);
// LINE 194:
	asm( 
"	      00473562    jmp near ptr 004735D0h"
"	      00473567    cmp dword ptr [ebp+0Ch],2"
"	      0047356b    jne near ptr 0047359Eh"
);
// LINE 195:
	asm( 
"	      00473571    mov dword ptr [ebp-4],2"
);
// LINE 196:
	asm( 
"	      00473578    lea eax,[ebp-4]"
"	      0047357b    push eax"
"	      0047357c    push 1"
"	      0047357e    mov eax,[ebp-8]"
"	      00473581    mov eax,[eax+4]"
"	      00473584    push eax"
"	      00473585    mov eax,[ebp-8]"
"	      00473588    push eax"
"	      00473589    mov eax,[ebp-8]"
"	      0047358c    mov ecx,[ebp-8]"
"	      0047358f    mov ecx,[ecx+38h]"
"	      00473592    mov edx,[ecx]"
"	      00473594    mov ecx,[eax+38h]"
"	      00473597    call dword ptr [edx]"
);
// LINE 198:
	asm( 
"	      00473599    jmp near ptr 004735D0h"
"	      0047359e    cmp dword ptr [ebp+0Ch],3"
"	      004735a2    jne near ptr 004735D0h"
);
// LINE 199:
	asm( 
"	      004735a8    mov dword ptr [ebp-4],63h"
);
// LINE 200:
	asm( 
"	      004735af    lea eax,[ebp-4]"
"	      004735b2    push eax"
"	      004735b3    push 1"
"	      004735b5    mov eax,[ebp-8]"
"	      004735b8    mov eax,[eax+4]"
"	      004735bb    push eax"
"	      004735bc    mov eax,[ebp-8]"
"	      004735bf    push eax"
"	      004735c0    mov eax,[ebp-8]"
"	      004735c3    mov ecx,[ebp-8]"
"	      004735c6    mov ecx,[ecx+38h]"
"	      004735c9    mov edx,[ecx]"
"	      004735cb    mov ecx,[eax+38h]"
"	      004735ce    call dword ptr [edx]"
);
// LINE 202:
	asm( 
"	      004735d0    mov eax,1"
"	      004735d5    jmp near ptr 004735DAh"
);
// LINE 203:
	asm( 
"	      004735da    pop edi"
"	      004735db    pop esi"
"	      004735dc    pop ebx"
"	      004735dd    leave"
"	      004735de    ret 10h"
);
}

// FUNCTION: COPTER_D 0x004735e1
long HangarWindow::DoKeyDown(long, char) {
// LINE 210:
	asm( 
"	      004735e1    push ebp"
"	      004735e2    mov ebp,esp"
"	      004735e4    sub esp,4"
"	      004735e7    push ebx"
"	      004735e8    push esi"
"	      004735e9    push edi"
"	      004735ea    mov [ebp-4],ecx"
);
// LINE 216:
	asm( 
"	      004735ed    cmp dword ptr [ebp+8],25h"
"	      004735f1    jne near ptr 00473610h"
);
// LINE 217:
	asm( 
"	      004735f7    push 0FFFFFFE8h"
"	      004735f9    mov ecx,[ebp-4]"
"	      004735fc    call 00473C6Ch"
);
// LINE 218:
	asm( 
"	      00473601    mov eax,1"
"	      00473606    jmp near ptr 00473635h"
);
// LINE 220:
	asm( 
"	      0047360b    jmp near ptr 0047362Eh"
"	      00473610    cmp dword ptr [ebp+8],27h"
"	      00473614    jne near ptr 0047362Eh"
);
// LINE 221:
	asm( 
"	      0047361a    push 18h"
"	      0047361c    mov ecx,[ebp-4]"
"	      0047361f    call 00473C6Ch"
);
// LINE 222:
	asm( 
"	      00473624    mov eax,1"
"	      00473629    jmp near ptr 00473635h"
);
// LINE 224:
	asm( 
"	      0047362e    xor eax,eax"
"	      00473630    jmp near ptr 00473635h"
);
// LINE 225:
	asm( 
"	      00473635    pop edi"
"	      00473636    pop esi"
"	      00473637    pop ebx"
"	      00473638    leave"
"	      00473639    ret 8"
);
}

// FUNCTION: COPTER_D 0x0047363c
long HangarWindow::DoCursorDown(long, long, unsigned long) {
// LINE 232:
	asm( 
"	      0047363c    push ebp"
"	      0047363d    mov ebp,esp"
"	      0047363f    sub esp,10h"
"	      00473642    push ebx"
"	      00473643    push esi"
"	      00473644    push edi"
"	      00473645    mov [ebp-10h],ecx"
);
// LINE 236:
	asm( 
"	      00473648    jmp near ptr 0047364Dh"
"	      0047364d    mov eax,[ebp+8]"
"	      00473650    mov [ebp-0Ch],eax"
"	      00473653    mov eax,[ebp+0Ch]"
"	      00473656    mov [ebp-8],eax"
"	      00473659    jmp near ptr 0047365Eh"
"	      0047365e    lea eax,[ebp-0Ch]"
"	      00473661    push eax"
"	      00473662    lea eax,[ebp-4]"
"	      00473665    push eax"
"	      00473666    mov ecx,[ebp-10h]"
"	      00473669    call 00473B5Ch"
"	      0047366e    test eax,eax"
"	      00473670    je near ptr 00473697h"
);
// LINE 239:
	asm( 
"	      00473676    lea eax,[ebp-4]"
"	      00473679    push eax"
"	      0047367a    push 1"
"	      0047367c    mov eax,[ebp-10h]"
"	      0047367f    mov eax,[eax+4]"
"	      00473682    push eax"
"	      00473683    mov eax,[ebp-10h]"
"	      00473686    push eax"
"	      00473687    mov eax,[ebp-10h]"
"	      0047368a    mov ecx,[ebp-10h]"
"	      0047368d    mov ecx,[ecx+38h]"
"	      00473690    mov edx,[ecx]"
"	      00473692    mov ecx,[eax+38h]"
"	      00473695    call dword ptr [edx]"
);
// LINE 241:
	asm( 
"	      00473697    mov eax,1"
"	      0047369c    jmp near ptr 004736A1h"
);
// LINE 242:
	asm( 
"	      004736a1    pop edi"
"	      004736a2    pop esi"
"	      004736a3    pop ebx"
"	      004736a4    leave"
"	      004736a5    ret 0Ch"
);
}

// FUNCTION: COPTER_D 0x004736a8
long HangarWindow::DoCursorUp(long, long, unsigned long) {
// LINE 249:
	asm( 
"	      004736a8    push ebp"
"	      004736a9    mov ebp,esp"
"	      004736ab    sub esp,4"
"	      004736ae    push ebx"
"	      004736af    push esi"
"	      004736b0    push edi"
"	      004736b1    mov [ebp-4],ecx"
);
// LINE 251:
	asm( 
"	      004736b4    mov eax,1"
"	      004736b9    jmp near ptr 004736BEh"
);
// LINE 252:
	asm( 
"	      004736be    pop edi"
"	      004736bf    pop esi"
"	      004736c0    pop ebx"
"	      004736c1    leave"
"	      004736c2    ret 0Ch"
);
}

// FUNCTION: COPTER_D 0x004736c5
long HangarWindow::DoCursorMove(long, long) {
// LINE 259:
	asm( 
"	      004736c5    push ebp"
"	      004736c6    mov ebp,esp"
"	      004736c8    sub esp,10h"
"	      004736cb    push ebx"
"	      004736cc    push esi"
"	      004736cd    push edi"
"	      004736ce    mov [ebp-10h],ecx"
);
// LINE 262:
	asm( 
"	      004736d1    cmp dword ptr [ebp+8],8"
"	      004736d5    jge near ptr 004736EDh"
);
// LINE 263:
	asm( 
"	      004736db    mov eax,[ebp-10h]"
"	      004736de    mov dword ptr [eax+102h],0FFFFFFE8h"
);
// LINE 264:
	asm( 
"	      004736e8    jmp near ptr 00473729h"
"	      004736ed    jmp near ptr 004736F2h"
"	      004736f2    mov eax,[ebp-10h]"
"	      004736f5    mov eax,[eax+18h]"
"	      004736f8    mov ecx,[ebp-10h]"
"	      004736fb    sub eax,[ecx+10h]"
"	      004736fe    sub eax,8"
"	      00473701    cmp eax,[ebp+8]"
"	      00473704    jge near ptr 0047371Ch"
);
// LINE 265:
	asm( 
"	      0047370a    mov eax,[ebp-10h]"
"	      0047370d    mov dword ptr [eax+102h],18h"
);
// LINE 266:
	asm( 
"	      00473717    jmp near ptr 00473729h"
);
// LINE 267:
	asm( 
"	      0047371c    mov eax,[ebp-10h]"
"	      0047371f    mov dword ptr [eax+102h],0"
);
// LINE 268:
	asm( 
"	      00473729    mov eax,[ebp-10h]"
"	      0047372c    mov dword ptr [eax+0FEh],0"
"	      00473736    mov eax,[ebp-10h]"
"	      00473739    mov dword ptr [eax+10Eh],0"
"	      00473743    mov eax,[ebp-10h]"
"	      00473746    mov dword ptr [eax+10Ah],0"
"	      00473750    jmp near ptr 00473755h"
"	      00473755    jmp near ptr 0047375Ah"
"	      0047375a    mov eax,[ebp-10h]"
"	      0047375d    cmp dword ptr [eax+10Ah],0"
"	      00473764    je near ptr 0047376Fh"
"	      0047376a    jmp near ptr 004737F0h"
"	      0047376f    mov eax,[ebp-10h]"
"	      00473772    cmp dword ptr [eax+106h],1"
"	      00473779    jne near ptr 00473798h"
"	      0047377f    call dword ptr ds:[6C3908h]"
"	      00473785    mov ecx,[ebp-10h]"
"	      00473788    mov [ecx+10Ah],eax"
"	      0047378e    jmp near ptr 004737EBh"
"	      00473793    jmp near ptr 004737EBh"
"	      00473798    mov eax,[ebp-10h]"
"	      0047379b    cmp dword ptr [eax+106h],0"
"	      004737a2    jne near ptr 004737CEh"
"	      004737a8    lea eax,[ebp-0Ch]"
"	      004737ab    push eax"
"	      004737ac    call dword ptr ds:[6C365Ch]"
"	      004737b2    mov eax,[ebp-0Ch]"
"	      004737b5    mov [ebp-4],eax"
"	      004737b8    mov eax,[ebp-4]"
"	      004737bb    mov ecx,[ebp-10h]"
"	      004737be    mov [ecx+10Ah],eax"
"	      004737c4    jmp near ptr 004737EBh"
"	      004737c9    jmp near ptr 004737EBh"
"	      004737ce    call dword ptr ds:[6C3908h]"
"	      004737d4    mov ecx,3E8h"
"	      004737d9    sub edx,edx"
"	      004737db    div ecx"
"	      004737dd    mov ecx,[ebp-10h]"
"	      004737e0    mov [ecx+10Ah],eax"
"	      004737e6    jmp near ptr 004737EBh"
"	      004737eb    jmp near ptr 004737F0h"
"	      004737f0    jmp near ptr 004737F5h"
);
// LINE 269:
	asm( 
"	      004737f5    mov ecx,[ebp-10h]"
"	      004737f8    call 00474577h"
);
// LINE 270:
	asm( 
"	      004737fd    mov eax,[ebp+8]"
"	      00473800    mov ecx,[ebp-10h]"
"	      00473803    mov [ecx+122h],eax"
);
// LINE 271:
	asm( 
"	      00473809    mov eax,[ebp+0Ch]"
"	      0047380c    mov ecx,[ebp-10h]"
"	      0047380f    mov [ecx+126h],eax"
);
// LINE 272:
	asm( 
"	      00473815    mov eax,1"
"	      0047381a    jmp near ptr 0047381Fh"
);
// LINE 273:
	asm( 
"	      0047381f    pop edi"
"	      00473820    pop esi"
"	      00473821    pop ebx"
"	      00473822    leave"
"	      00473823    ret 8"
);
}

// FUNCTION: COPTER_D 0x00473826
void HangarWindow::GetImagePath() {
// LINE 279:
	asm( 
"	      00473826    push ebp"
"	      00473827    mov ebp,esp"
"	      00473829    sub esp,44h"
"	      0047382c    push ebx"
"	      0047382d    push esi"
"	      0047382e    push edi"
"	      0047382f    mov [ebp-44h],ecx"
);
// LINE 280:
	asm( 
"	      00473832    mov eax,[ebp-44h]"
"	      00473835    cmp dword ptr [eax+0F2h],0"
"	      0047383c    je near ptr 004739BCh"
);
// LINE 281:
	asm( 
"	      00473842    mov eax,ds:[5997C8h]"
"	      00473847    mov [ebp-20h],eax"
"	      0047384a    jmp near ptr 0047384Fh"
"	      0047384f    mov eax,[ebp-20h]"
"	      00473852    push eax"
"	      00473853    call 0056ABE0h"
"	      00473858    add esp,4"
"	      0047385b    mov [ebp-1Ch],eax"
"	      0047385e    cmp dword ptr [ebp-1Ch],0FFFFFFFFh"
"	      00473862    jne near ptr 0047389Ah"
"	      00473868    push 5971E4h"
"	      0047386d    mov ecx,638C00h"
"	      00473872    call 00569960h"
"	      00473877    mov [ebp-10h],eax"
"	      0047387a    mov eax,[ebp-10h]"
"	      0047387d    push eax"
"	      0047387e    call 004011B0h"
"	      00473883    add esp,4"
"	      00473886    jmp near ptr 0047388Bh"
"	      0047388b    push 1"
"	      0047388d    call 00569430h"
"	      00473892    add esp,4"
"	      00473895    jmp near ptr 0047389Ah"
"	      0047389a    jmp near ptr 0047389Fh"
"	      0047389f    mov eax,[ebp-44h]"
"	      004738a2    mov eax,[eax+60h]"
"	      004738a5    cmp dword ptr [eax+0Ch],1"
"	      004738a9    ja near ptr 004738D0h"
"	      004738af    cmp dword ptr [ebp-1Ch],0"
"	      004738b3    je near ptr 0047396Eh"
"	      004738b9    jmp near ptr 004738BEh"
"	      004738be    mov eax,[ebp-44h]"
"	      004738c1    mov eax,[eax+60h]"
"	      004738c4    mov ecx,[ebp-1Ch]"
"	      004738c7    cmp [eax+8],ecx"
"	      004738ca    jae near ptr 0047396Eh"
"	      004738d0    push 10h"
"	      004738d2    call 0056A600h"
"	      004738d7    add esp,4"
"	      004738da    mov [ebp-8],eax"
"	      004738dd    cmp dword ptr [ebp-8],0"
"	      004738e1    je near ptr 004738FFh"
"	      004738e7    mov eax,[ebp-1Ch]"
"	      004738ea    push eax"
"	      004738eb    mov eax,[ebp-20h]"
"	      004738ee    push eax"
"	      004738ef    mov ecx,[ebp-8]"
"	      004738f2    call 0041E090h"
"	      004738f7    mov [ebp-4],eax"
"	      004738fa    jmp near ptr 00473906h"
"	      004738ff    mov dword ptr [ebp-4],0"
"	      00473906    mov eax,[ebp-44h]"
"	      00473909    mov eax,[eax+60h]"
"	      0047390c    dec dword ptr [eax+0Ch]"
"	      0047390f    mov eax,[ebp-44h]"
"	      00473912    mov eax,[eax+60h]"
"	      00473915    cmp dword ptr [eax+0Ch],0"
"	      00473919    jne near ptr 0047395Bh"
"	      0047391f    mov eax,[ebp-44h]"
"	      00473922    mov eax,[eax+60h]"
"	      00473925    mov [ebp-18h],eax"
"	      00473928    mov eax,[ebp-18h]"
"	      0047392b    mov [ebp-14h],eax"
"	      0047392e    cmp dword ptr [ebp-14h],0"
"	      00473932    je near ptr 0047395Bh"
"	      00473938    mov ecx,[ebp-14h]"
"	      0047393b    call 0041F4B0h"
"	      00473940    jmp near ptr 00473945h"
"	      00473945    mov eax,[ebp-14h]"
"	      00473948    push eax"
"	      00473949    call 0056A740h"
"	      0047394e    add esp,4"
"	      00473951    jmp near ptr 00473956h"
"	      00473956    jmp near ptr 0047395Bh"
"	      0047395b    jmp near ptr 00473960h"
"	      00473960    mov eax,[ebp-4]"
"	      00473963    mov ecx,[ebp-44h]"
"	      00473966    mov [ecx+60h],eax"
"	      00473969    jmp near ptr 004739A1h"
"	      0047396e    cmp dword ptr [ebp-1Ch],0"
"	      00473972    je near ptr 004739A1h"
"	      00473978    jmp near ptr 0047397Dh"
"	      0047397d    mov eax,[ebp-44h]"
"	      00473980    mov eax,[eax+60h]"
"	      00473983    mov eax,[eax]"
"	      00473985    mov [ebp-0Ch],eax"
"	      00473988    mov eax,[ebp-1Ch]"
"	      0047398b    push eax"
"	      0047398c    mov eax,[ebp-20h]"
"	      0047398f    push eax"
"	      00473990    mov eax,[ebp-0Ch]"
"	      00473993    push eax"
"	      00473994    call 0056A800h"
"	      00473999    add esp,0Ch"
"	      0047399c    jmp near ptr 004739A1h"
"	      004739a1    mov eax,[ebp-1Ch]"
"	      004739a4    mov ecx,[ebp-44h]"
"	      004739a7    mov ecx,[ecx+60h]"
"	      004739aa    mov [ecx+4],eax"
"	      004739ad    jmp near ptr 004739B2h"
"	      004739b2    jmp near ptr 004739B7h"
);
// LINE 282:
	asm( 
"	      004739b7    jmp near ptr 00473B31h"
);
// LINE 283:
	asm( 
"	      004739bc    mov eax,ds:[5997CCh]"
"	      004739c1    mov [ebp-40h],eax"
"	      004739c4    jmp near ptr 004739C9h"
"	      004739c9    mov eax,[ebp-40h]"
"	      004739cc    push eax"
"	      004739cd    call 0056ABE0h"
"	      004739d2    add esp,4"
"	      004739d5    mov [ebp-3Ch],eax"
"	      004739d8    cmp dword ptr [ebp-3Ch],0FFFFFFFFh"
"	      004739dc    jne near ptr 00473A14h"
"	      004739e2    push 5971E4h"
"	      004739e7    mov ecx,638C00h"
"	      004739ec    call 00569960h"
"	      004739f1    mov [ebp-30h],eax"
"	      004739f4    mov eax,[ebp-30h]"
"	      004739f7    push eax"
"	      004739f8    call 004011B0h"
"	      004739fd    add esp,4"
"	      00473a00    jmp near ptr 00473A05h"
"	      00473a05    push 1"
"	      00473a07    call 00569430h"
"	      00473a0c    add esp,4"
"	      00473a0f    jmp near ptr 00473A14h"
"	      00473a14    jmp near ptr 00473A19h"
"	      00473a19    mov eax,[ebp-44h]"
"	      00473a1c    mov eax,[eax+60h]"
"	      00473a1f    cmp dword ptr [eax+0Ch],1"
"	      00473a23    ja near ptr 00473A4Ah"
"	      00473a29    cmp dword ptr [ebp-3Ch],0"
"	      00473a2d    je near ptr 00473AE8h"
"	      00473a33    jmp near ptr 00473A38h"
"	      00473a38    mov eax,[ebp-44h]"
"	      00473a3b    mov eax,[eax+60h]"
"	      00473a3e    mov ecx,[ebp-3Ch]"
"	      00473a41    cmp [eax+8],ecx"
"	      00473a44    jae near ptr 00473AE8h"
"	      00473a4a    push 10h"
"	      00473a4c    call 0056A600h"
"	      00473a51    add esp,4"
"	      00473a54    mov [ebp-28h],eax"
"	      00473a57    cmp dword ptr [ebp-28h],0"
"	      00473a5b    je near ptr 00473A79h"
"	      00473a61    mov eax,[ebp-3Ch]"
"	      00473a64    push eax"
"	      00473a65    mov eax,[ebp-40h]"
"	      00473a68    push eax"
"	      00473a69    mov ecx,[ebp-28h]"
"	      00473a6c    call 0041E090h"
"	      00473a71    mov [ebp-24h],eax"
"	      00473a74    jmp near ptr 00473A80h"
"	      00473a79    mov dword ptr [ebp-24h],0"
"	      00473a80    mov eax,[ebp-44h]"
"	      00473a83    mov eax,[eax+60h]"
"	      00473a86    dec dword ptr [eax+0Ch]"
"	      00473a89    mov eax,[ebp-44h]"
"	      00473a8c    mov eax,[eax+60h]"
"	      00473a8f    cmp dword ptr [eax+0Ch],0"
"	      00473a93    jne near ptr 00473AD5h"
"	      00473a99    mov eax,[ebp-44h]"
"	      00473a9c    mov eax,[eax+60h]"
"	      00473a9f    mov [ebp-38h],eax"
"	      00473aa2    mov eax,[ebp-38h]"
"	      00473aa5    mov [ebp-34h],eax"
"	      00473aa8    cmp dword ptr [ebp-34h],0"
"	      00473aac    je near ptr 00473AD5h"
"	      00473ab2    mov ecx,[ebp-34h]"
"	      00473ab5    call 0041F4B0h"
"	      00473aba    jmp near ptr 00473ABFh"
"	      00473abf    mov eax,[ebp-34h]"
"	      00473ac2    push eax"
"	      00473ac3    call 0056A740h"
"	      00473ac8    add esp,4"
"	      00473acb    jmp near ptr 00473AD0h"
"	      00473ad0    jmp near ptr 00473AD5h"
"	      00473ad5    jmp near ptr 00473ADAh"
"	      00473ada    mov eax,[ebp-24h]"
"	      00473add    mov ecx,[ebp-44h]"
"	      00473ae0    mov [ecx+60h],eax"
"	      00473ae3    jmp near ptr 00473B1Bh"
"	      00473ae8    cmp dword ptr [ebp-3Ch],0"
"	      00473aec    je near ptr 00473B1Bh"
"	      00473af2    jmp near ptr 00473AF7h"
"	      00473af7    mov eax,[ebp-44h]"
"	      00473afa    mov eax,[eax+60h]"
"	      00473afd    mov eax,[eax]"
"	      00473aff    mov [ebp-2Ch],eax"
"	      00473b02    mov eax,[ebp-3Ch]"
"	      00473b05    push eax"
"	      00473b06    mov eax,[ebp-40h]"
"	      00473b09    push eax"
"	      00473b0a    mov eax,[ebp-2Ch]"
"	      00473b0d    push eax"
"	      00473b0e    call 0056A800h"
"	      00473b13    add esp,0Ch"
"	      00473b16    jmp near ptr 00473B1Bh"
"	      00473b1b    mov eax,[ebp-3Ch]"
"	      00473b1e    mov ecx,[ebp-44h]"
"	      00473b21    mov ecx,[ecx+60h]"
"	      00473b24    mov [ecx+4],eax"
"	      00473b27    jmp near ptr 00473B2Ch"
"	      00473b2c    jmp near ptr 00473B31h"
);
// LINE 284:
	asm( 
"	      00473b31    mov eax,[ebp-44h]"
"	      00473b34    add eax,64h"
"	      00473b37    push eax"
"	      00473b38    mov eax,[ebp-44h]"
"	      00473b3b    add eax,5Ch"
"	      00473b3e    push eax"
"	      00473b3f    push 0"
"	      00473b41    push 6"
"	      00473b43    mov ecx,604C00h"
"	      00473b48    call 00494F82h"
"	      00473b4d    jmp near ptr 00473B52h"
);
// LINE 285:
	asm( 
"	      00473b52    jmp near ptr 00473B57h"
"	      00473b57    pop edi"
"	      00473b58    pop esi"
"	      00473b59    pop ebx"
"	      00473b5a    leave"
"	      00473b5b    ret"
);
}

// FUNCTION: COPTER_D 0x00473b5c
int32_t HangarWindow::GetHotspotFromPosition(long&, class MPoint&) {
// LINE 292:
	asm( 
"	      00473b5c    push ebp"
"	      00473b5d    mov ebp,esp"
"	      00473b5f    sub esp,28h"
"	      00473b62    push ebx"
"	      00473b63    push esi"
"	      00473b64    push edi"
"	      00473b65    mov [ebp-28h],ecx"
);
// LINE 293:
	asm( 
"	      00473b68    mov dword ptr [ebp-4],0"
);
// LINE 294:
	asm( 
"	      00473b6f    mov eax,[ebp-28h]"
"	      00473b72    mov eax,[eax+116h]"
"	      00473b78    mov eax,[eax]"
"	      00473b7a    mov [ebp-20h],eax"
"	      00473b7d    mov eax,[ebp-20h]"
"	      00473b80    mov [ebp-8],eax"
"	      00473b83    jmp near ptr 00473B88h"
"	      00473b88    jmp near ptr 00473B8Dh"
);
// LINE 296:
	asm( 
"	      00473b8d    mov eax,[ebp-28h]"
"	      00473b90    mov eax,[eax+116h]"
"	      00473b96    mov [ebp-14h],eax"
"	      00473b99    mov eax,[ebp-14h]"
"	      00473b9c    mov [ebp-0Ch],eax"
"	      00473b9f    jmp near ptr 00473BA4h"
"	      00473ba4    jmp near ptr 00473BA9h"
"	      00473ba9    mov eax,[ebp-0Ch]"
"	      00473bac    cmp [ebp-8],eax"
"	      00473baf    jne near ptr 00473BBFh"
"	      00473bb5    jmp near ptr 00473BD3h"
"	      00473bba    jmp near ptr 00473BBFh"
"	      00473bbf    jmp near ptr 00473BCEh"
"	      00473bc4    cmp dword ptr [ebp-18h],0"
"	      00473bc8    jne near ptr 00473BD3h"
"	      00473bce    jmp near ptr 00473BD8h"
"	      00473bd3    jmp near ptr 00473C55h"
"	      00473bd8    jmp near ptr 00473BE7h"
"	      00473bdd    cmp dword ptr [ebp-1Ch],0"
"	      00473be1    je near ptr 00473C55h"
);
// LINE 297:
	asm( 
"	      00473be7    jmp near ptr 00473BECh"
"	      00473bec    mov eax,[ebp+0Ch]"
"	      00473bef    mov eax,[eax+4]"
"	      00473bf2    push eax"
"	      00473bf3    mov eax,[ebp-28h]"
"	      00473bf6    mov eax,[eax+12Ah]"
"	      00473bfc    mov ecx,[ebp+0Ch]"
"	      00473bff    add eax,[ecx]"
"	      00473c01    push eax"
"	      00473c02    mov ecx,[ebp-8]"
"	      00473c05    add ecx,8"
"	      00473c08    call 004BAD05h"
"	      00473c0d    test eax,eax"
"	      00473c0f    je near ptr 00473C2Fh"
);
// LINE 298:
	asm( 
"	      00473c15    jmp near ptr 00473C1Ah"
"	      00473c1a    mov eax,[ebp-8]"
"	      00473c1d    mov eax,[eax+8]"
"	      00473c20    mov ecx,[ebp+8]"
"	      00473c23    mov [ecx],eax"
);
// LINE 299:
	asm( 
"	      00473c25    mov eax,1"
"	      00473c2a    jmp near ptr 00473C65h"
);
// LINE 301:
	asm( 
"	      00473c2f    mov eax,[ebp-8]"
"	      00473c32    mov [ebp-24h],eax"
"	      00473c35    mov eax,[ebp-8]"
"	      00473c38    mov eax,[eax]"
"	      00473c3a    mov [ebp-8],eax"
"	      00473c3d    jmp near ptr 00473C42h"
"	      00473c42    mov eax,[ebp-24h]"
"	      00473c45    mov [ebp-10h],eax"
"	      00473c48    jmp near ptr 00473C4Dh"
);
// LINE 302:
	asm( 
"	      00473c4d    inc dword ptr [ebp-4]"
);
// LINE 303:
	asm( 
"	      00473c50    jmp near ptr 00473B8Dh"
);
// LINE 304:
	asm( 
"	      00473c55    mov eax,[ebp+8]"
"	      00473c58    mov dword ptr [eax],0"
);
// LINE 305:
	asm( 
"	      00473c5e    xor eax,eax"
"	      00473c60    jmp near ptr 00473C65h"
);
// LINE 306:
	asm( 
"	      00473c65    pop edi"
"	      00473c66    pop esi"
"	      00473c67    pop ebx"
"	      00473c68    leave"
"	      00473c69    ret 8"
);
}

// FUNCTION: COPTER_D 0x00473c6c
void HangarWindow::ScrollHangarView(long) {
// LINE 313:
	asm( 
"	      00473c6c    push ebp"
"	      00473c6d    mov ebp,esp"
"	      00473c6f    sub esp,18h"
"	      00473c72    push ebx"
"	      00473c73    push esi"
"	      00473c74    push edi"
"	      00473c75    mov [ebp-18h],ecx"
);
// LINE 314:
	asm( 
"	      00473c78    jmp near ptr 00473C7Dh"
"	      00473c7d    mov eax,[ebp-18h]"
"	      00473c80    mov eax,[eax+18h]"
"	      00473c83    mov ecx,[ebp-18h]"
"	      00473c86    sub eax,[ecx+10h]"
"	      00473c89    mov [ebp-4],eax"
);
// LINE 315:
	asm( 
"	      00473c8c    mov eax,[ebp-18h]"
"	      00473c8f    mov eax,[eax+11Eh]"
"	      00473c95    mov eax,[eax+8]"
"	      00473c98    mov [ebp-8],eax"
"	      00473c9b    jmp near ptr 00473CA0h"
);
// LINE 317:
	asm( 
"	      00473ca0    mov eax,[ebp+8]"
"	      00473ca3    mov ecx,[ebp-18h]"
"	      00473ca6    add [ecx+12Ah],eax"
);
// LINE 318:
	asm( 
"	      00473cac    mov eax,[ebp-18h]"
"	      00473caf    cmp dword ptr [eax+12Ah],0"
"	      00473cb6    jge near ptr 00473CCEh"
);
// LINE 319:
	asm( 
"	      00473cbc    mov eax,[ebp-18h]"
"	      00473cbf    mov dword ptr [eax+12Ah],0"
);
// LINE 320:
	asm( 
"	      00473cc9    jmp near ptr 00473CF2h"
"	      00473cce    mov eax,[ebp-8]"
"	      00473cd1    sub eax,[ebp-4]"
"	      00473cd4    mov ecx,[ebp-18h]"
"	      00473cd7    cmp eax,[ecx+12Ah]"
"	      00473cdd    jge near ptr 00473CF2h"
);
// LINE 321:
	asm( 
"	      00473ce3    mov eax,[ebp-8]"
"	      00473ce6    sub eax,[ebp-4]"
"	      00473ce9    mov ecx,[ebp-18h]"
"	      00473cec    mov [ecx+12Ah],eax"
);
// LINE 322:
	asm( 
"	      00473cf2    push 1"
"	      00473cf4    push 1"
"	      00473cf6    mov eax,[ebp-18h]"
"	      00473cf9    mov eax,[eax]"
"	      00473cfb    mov ecx,[ebp-18h]"
"	      00473cfe    call dword ptr [eax+30h]"
);
// LINE 323:
	asm( 
"	      00473d01    mov eax,[ebp-18h]"
"	      00473d04    mov dword ptr [eax+0FEh],0"
"	      00473d0e    mov eax,[ebp-18h]"
"	      00473d11    mov dword ptr [eax+10Eh],0"
"	      00473d1b    mov eax,[ebp-18h]"
"	      00473d1e    mov dword ptr [eax+10Ah],0"
"	      00473d28    jmp near ptr 00473D2Dh"
"	      00473d2d    jmp near ptr 00473D32h"
"	      00473d32    mov eax,[ebp-18h]"
"	      00473d35    cmp dword ptr [eax+10Ah],0"
"	      00473d3c    je near ptr 00473D47h"
"	      00473d42    jmp near ptr 00473DC8h"
"	      00473d47    mov eax,[ebp-18h]"
"	      00473d4a    cmp dword ptr [eax+106h],1"
"	      00473d51    jne near ptr 00473D70h"
"	      00473d57    call dword ptr ds:[6C3908h]"
"	      00473d5d    mov ecx,[ebp-18h]"
"	      00473d60    mov [ecx+10Ah],eax"
"	      00473d66    jmp near ptr 00473DC3h"
"	      00473d6b    jmp near ptr 00473DC3h"
"	      00473d70    mov eax,[ebp-18h]"
"	      00473d73    cmp dword ptr [eax+106h],0"
"	      00473d7a    jne near ptr 00473DA6h"
"	      00473d80    lea eax,[ebp-14h]"
"	      00473d83    push eax"
"	      00473d84    call dword ptr ds:[6C365Ch]"
"	      00473d8a    mov eax,[ebp-14h]"
"	      00473d8d    mov [ebp-0Ch],eax"
"	      00473d90    mov eax,[ebp-0Ch]"
"	      00473d93    mov ecx,[ebp-18h]"
"	      00473d96    mov [ecx+10Ah],eax"
"	      00473d9c    jmp near ptr 00473DC3h"
"	      00473da1    jmp near ptr 00473DC3h"
"	      00473da6    call dword ptr ds:[6C3908h]"
"	      00473dac    mov ecx,3E8h"
"	      00473db1    sub edx,edx"
"	      00473db3    div ecx"
"	      00473db5    mov ecx,[ebp-18h]"
"	      00473db8    mov [ecx+10Ah],eax"
"	      00473dbe    jmp near ptr 00473DC3h"
"	      00473dc3    jmp near ptr 00473DC8h"
"	      00473dc8    jmp near ptr 00473DCDh"
);
// LINE 324:
	asm( 
"	      00473dcd    mov ecx,[ebp-18h]"
"	      00473dd0    call 00474577h"
);
// LINE 325:
	asm( 
"	      00473dd5    jmp near ptr 00473DDAh"
"	      00473dda    pop edi"
"	      00473ddb    pop esi"
"	      00473ddc    pop ebx"
"	      00473ddd    leave"
"	      00473dde    ret 4"
);
}

// FUNCTION: COPTER_D 0x00473de1
int32_t HangarWindow::IsHangarRectVisibleInWindow(class MRect&) {
// LINE 364:
	asm( 
"	      00473de1    push ebp"
"	      00473de2    mov ebp,esp"
"	      00473de4    sub esp,30h"
"	      00473de7    push ebx"
"	      00473de8    push esi"
"	      00473de9    push edi"
"	      00473dea    mov [ebp-30h],ecx"
);
// LINE 367:
	asm( 
"	      00473ded    mov eax,[ebp+8]"
"	      00473df0    lea ecx,[ebp-20h]"
"	      00473df3    mov edx,[eax]"
"	      00473df5    mov [ecx],edx"
"	      00473df7    mov edx,[eax+4]"
"	      00473dfa    mov [ecx+4],edx"
"	      00473dfd    mov edx,[eax+8]"
"	      00473e00    mov [ecx+8],edx"
"	      00473e03    mov eax,[eax+0Ch]"
"	      00473e06    mov [ecx+0Ch],eax"
);
// LINE 368:
	asm( 
"	      00473e09    mov eax,[ebp-30h]"
"	      00473e0c    add eax,10h"
"	      00473e0f    lea ecx,[ebp-10h]"
"	      00473e12    mov edx,[eax]"
"	      00473e14    mov [ecx],edx"
"	      00473e16    mov edx,[eax+4]"
"	      00473e19    mov [ecx+4],edx"
"	      00473e1c    mov edx,[eax+8]"
"	      00473e1f    mov [ecx+8],edx"
"	      00473e22    mov eax,[eax+0Ch]"
"	      00473e25    mov [ecx+0Ch],eax"
);
// LINE 369:
	asm( 
"	      00473e28    xor eax,eax"
"	      00473e2a    mov ecx,[ebp-30h]"
"	      00473e2d    sub eax,[ecx+12Ah]"
"	      00473e33    neg eax"
"	      00473e35    sub [ebp-20h],eax"
);
// LINE 370:
	asm( 
"	      00473e38    xor eax,eax"
"	      00473e3a    mov ecx,[ebp-30h]"
"	      00473e3d    sub eax,[ecx+12Ah]"
"	      00473e43    neg eax"
"	      00473e45    sub [ebp-18h],eax"
);
// LINE 371:
	asm( 
"	      00473e48    xor eax,eax"
"	      00473e4a    sub eax,[ebp-10h]"
"	      00473e4d    mov [ebp-2Ch],eax"
"	      00473e50    xor eax,eax"
"	      00473e52    sub eax,[ebp-0Ch]"
"	      00473e55    mov [ebp-28h],eax"
"	      00473e58    mov eax,[ebp-2Ch]"
"	      00473e5b    add [ebp-10h],eax"
"	      00473e5e    mov eax,[ebp-2Ch]"
"	      00473e61    add [ebp-8],eax"
"	      00473e64    mov eax,[ebp-28h]"
"	      00473e67    add [ebp-0Ch],eax"
"	      00473e6a    mov eax,[ebp-28h]"
"	      00473e6d    add [ebp-4],eax"
"	      00473e70    jmp near ptr 00473E75h"
);
// LINE 373:
	asm( 
"	      00473e75    mov eax,[ebp-10h]"
"	      00473e78    cmp [ebp-18h],eax"
"	      00473e7b    jl near ptr 00473EAFh"
"	      00473e81    mov eax,[ebp-8]"
"	      00473e84    cmp [ebp-20h],eax"
"	      00473e87    jg near ptr 00473EAFh"
"	      00473e8d    mov eax,[ebp-0Ch]"
"	      00473e90    cmp [ebp-14h],eax"
"	      00473e93    jl near ptr 00473EAFh"
"	      00473e99    mov eax,[ebp-4]"
"	      00473e9c    cmp [ebp-1Ch],eax"
"	      00473e9f    jl near ptr 00473EAFh"
"	      00473ea5    mov eax,1"
"	      00473eaa    jmp near ptr 00473EB1h"
"	      00473eaf    xor eax,eax"
"	      00473eb1    jmp near ptr 00473EB9h"
"	      00473eb6    mov eax,[ebp-24h]"
"	      00473eb9    jmp near ptr 00473EBEh"
);
// LINE 374:
	asm( 
"	      00473ebe    pop edi"
"	      00473ebf    pop esi"
"	      00473ec0    pop ebx"
"	      00473ec1    leave"
"	      00473ec2    ret 4"
);
}

// FUNCTION: COPTER_D 0x00473ec5
void HangarWindow::ClipRectToWindow(class MRect&) {
// LINE 383:
	asm( 
"	      00473ec5    push ebp"
"	      00473ec6    mov ebp,esp"
"	      00473ec8    sub esp,4"
"	      00473ecb    push ebx"
"	      00473ecc    push esi"
"	      00473ecd    push edi"
"	      00473ece    mov [ebp-4],ecx"
);
// LINE 384:
	asm( 
"	      00473ed1    mov eax,[ebp-4]"
"	      00473ed4    mov ecx,[ebp+8]"
"	      00473ed7    mov ecx,[ecx]"
"	      00473ed9    cmp [eax+10h],ecx"
"	      00473edc    jle near ptr 00473EEDh"
);
// LINE 385:
	asm( 
"	      00473ee2    mov eax,[ebp-4]"
"	      00473ee5    mov eax,[eax+10h]"
"	      00473ee8    mov ecx,[ebp+8]"
"	      00473eeb    mov [ecx],eax"
);
// LINE 386:
	asm( 
"	      00473eed    mov eax,[ebp-4]"
"	      00473ef0    mov ecx,[ebp+8]"
"	      00473ef3    mov ecx,[ecx+4]"
"	      00473ef6    cmp [eax+14h],ecx"
"	      00473ef9    jle near ptr 00473F0Bh"
);
// LINE 387:
	asm( 
"	      00473eff    mov eax,[ebp-4]"
"	      00473f02    mov eax,[eax+14h]"
"	      00473f05    mov ecx,[ebp+8]"
"	      00473f08    mov [ecx+4],eax"
);
// LINE 388:
	asm( 
"	      00473f0b    mov eax,[ebp-4]"
"	      00473f0e    mov ecx,[ebp+8]"
"	      00473f11    mov ecx,[ecx+8]"
"	      00473f14    cmp [eax+18h],ecx"
"	      00473f17    jge near ptr 00473F29h"
);
// LINE 389:
	asm( 
"	      00473f1d    mov eax,[ebp-4]"
"	      00473f20    mov eax,[eax+18h]"
"	      00473f23    mov ecx,[ebp+8]"
"	      00473f26    mov [ecx+8],eax"
);
// LINE 390:
	asm( 
"	      00473f29    mov eax,[ebp-4]"
"	      00473f2c    mov ecx,[ebp+8]"
"	      00473f2f    mov ecx,[ecx+0Ch]"
"	      00473f32    cmp [eax+1Ch],ecx"
"	      00473f35    jge near ptr 00473F47h"
);
// LINE 391:
	asm( 
"	      00473f3b    mov eax,[ebp-4]"
"	      00473f3e    mov eax,[eax+1Ch]"
"	      00473f41    mov ecx,[ebp+8]"
"	      00473f44    add [ecx+0Ch],eax"
);
// LINE 392:
	asm( 
"	      00473f47    jmp near ptr 00473F4Ch"
"	      00473f4c    pop edi"
"	      00473f4d    pop esi"
"	      00473f4e    pop ebx"
"	      00473f4f    leave"
"	      00473f50    ret 4"
);
}

// FUNCTION: COPTER_D 0x00473f53
void HangarWindow::DisplayHelp(int32_t, class MPoint&) {
// LINE 438:
	asm( 
"	      00473f53    push ebp"
"	      00473f54    mov ebp,esp"
"	      00473f56    mov eax,1094h"
"	      00473f5b    call 0056AC60h"
"	      00473f60    push ebx"
"	      00473f61    push esi"
"	      00473f62    push edi"
"	      00473f63    mov [ebp-1094h],ecx"
);
// LINE 440:
	asm( 
"	      00473f69    push 10h"
"	      00473f6b    call 0056A600h"
"	      00473f70    add esp,4"
"	      00473f73    mov [ebp-6Ch],eax"
"	      00473f76    cmp dword ptr [ebp-6Ch],0"
"	      00473f7a    je near ptr 00473FB9h"
"	      00473f80    mov eax,[ebp-6Ch]"
"	      00473f83    mov dword ptr [eax+4],0"
"	      00473f8a    mov eax,[ebp-6Ch]"
"	      00473f8d    mov eax,[eax+4]"
"	      00473f90    mov ecx,[ebp-6Ch]"
"	      00473f93    mov [ecx+8],eax"
"	      00473f96    mov eax,[ebp-6Ch]"
"	      00473f99    mov dword ptr [eax],0"
"	      00473f9f    mov eax,[ebp-6Ch]"
"	      00473fa2    mov dword ptr [eax+0Ch],1"
"	      00473fa9    jmp near ptr 00473FAEh"
"	      00473fae    mov eax,[ebp-6Ch]"
"	      00473fb1    mov [ebp-8],eax"
"	      00473fb4    jmp near ptr 00473FC0h"
"	      00473fb9    mov dword ptr [ebp-8],0"
"	      00473fc0    mov dword ptr [ebp-0Ch],0"
"	      00473fc7    jmp near ptr 00473FCCh"
);
// LINE 441:
	asm( 
"	      00473fcc    jmp near ptr 00473FD1h"
"	      00473fd1    jmp near ptr 00473FD6h"
);
// LINE 443:
	asm( 
"	      00473fd6    cmp dword ptr [ebp+8],19h"
"	      00473fda    jle near ptr 0047405Dh"
);
// LINE 444:
	asm( 
"	      00473fe0    mov eax,[ebp-8]"
"	      00473fe3    dec dword ptr [eax+0Ch]"
"	      00473fe6    mov eax,[ebp-8]"
"	      00473fe9    cmp dword ptr [eax+0Ch],0"
"	      00473fed    jne near ptr 0047402Ch"
"	      00473ff3    mov eax,[ebp-8]"
"	      00473ff6    mov [ebp-7Ch],eax"
"	      00473ff9    mov eax,[ebp-7Ch]"
"	      00473ffc    mov [ebp-78h],eax"
"	      00473fff    cmp dword ptr [ebp-78h],0"
"	      00474003    je near ptr 0047402Ch"
"	      00474009    mov ecx,[ebp-78h]"
"	      0047400c    call 0041F4B0h"
"	      00474011    jmp near ptr 00474016h"
"	      00474016    mov eax,[ebp-78h]"
"	      00474019    push eax"
"	      0047401a    call 0056A740h"
"	      0047401f    add esp,4"
"	      00474022    jmp near ptr 00474027h"
"	      00474027    jmp near ptr 0047402Ch"
"	      0047402c    jmp near ptr 00474031h"
"	      00474031    cmp dword ptr [ebp-0Ch],0"
"	      00474035    je near ptr 00474053h"
"	      0047403b    mov eax,[ebp-0Ch]"
"	      0047403e    mov [ebp-70h],eax"
"	      00474041    mov eax,[ebp-70h]"
"	      00474044    mov [ebp-74h],eax"
"	      00474047    mov eax,[ebp-74h]"
"	      0047404a    push eax"
"	      0047404b    call 0056A740h"
"	      00474050    add esp,4"
"	      00474053    jmp near ptr 00474058h"
"	      00474058    jmp near ptr 00474570h"
);
// LINE 446:
	asm( 
"	      0047405d    mov eax,[ebp-1094h]"
"	      00474063    cmp dword ptr [eax+0F6h],0"
"	      0047406a    je near ptr 0047425Ch"
);
// LINE 447:
	asm( 
"	      00474070    push 0"
"	      00474072    mov eax,[ebp+8]"
"	      00474075    add eax,64h"
"	      00474078    push eax"
"	      00474079    call 0042B15Fh"
"	      0047407e    add esp,8"
"	      00474081    mov [ebp-4],eax"
);
// LINE 448:
	asm( 
"	      00474084    push 0FFFh"
"	      00474089    lea eax,[ebp-108Ch]"
"	      0047408f    push eax"
"	      00474090    mov eax,[ebp-4]"
"	      00474093    push eax"
"	      00474094    mov eax,ds:[5C28C8h]"
"	      00474099    push eax"
"	      0047409a    call dword ptr ds:[6C38B4h]"
"	      004740a0    mov [ebp-1090h],eax"
"	      004740a6    cmp dword ptr [ebp-1090h],0"
"	      004740ad    jne near ptr 00474131h"
"	      004740b3    push 0FFFh"
"	      004740b8    lea eax,[ebp-108Ch]"
"	      004740be    push eax"
"	      004740bf    mov ecx,3E8h"
"	      004740c4    mov eax,[ebp-4]"
"	      004740c7    sub edx,edx"
"	      004740c9    div ecx"
"	      004740cb    push edx"
"	      004740cc    mov eax,ds:[5C28C8h]"
"	      004740d1    push eax"
"	      004740d2    call dword ptr ds:[6C38B4h]"
"	      004740d8    mov [ebp-1090h],eax"
"	      004740de    jmp near ptr 004740E3h"
"	      004740e3    lea eax,[ebp-108Ch]"
"	      004740e9    push eax"
"	      004740ea    call 0056ABE0h"
"	      004740ef    add esp,4"
"	      004740f2    push eax"
"	      004740f3    lea eax,[ebp-108Ch]"
"	      004740f9    push eax"
"	      004740fa    lea ecx,[ebp-0Ch]"
"	      004740fd    call 0040FEE0h"
"	      00474102    jmp near ptr 00474107h"
"	      00474107    jmp near ptr 0047410Ch"
"	      0047410c    push 597200h"
"	      00474111    call 0056ABE0h"
"	      00474116    add esp,4"
"	      00474119    push eax"
"	      0047411a    push 597200h"
"	      0047411f    lea ecx,[ebp-0Ch]"
"	      00474122    call 00410130h"
"	      00474127    jmp near ptr 0047412Ch"
"	      0047412c    jmp near ptr 0047415Fh"
"	      00474131    jmp near ptr 00474136h"
"	      00474136    lea eax,[ebp-108Ch]"
"	      0047413c    push eax"
"	      0047413d    call 0056ABE0h"
"	      00474142    add esp,4"
"	      00474145    push eax"
"	      00474146    lea eax,[ebp-108Ch]"
"	      0047414c    push eax"
"	      0047414d    lea ecx,[ebp-0Ch]"
"	      00474150    call 0040FEE0h"
"	      00474155    jmp near ptr 0047415Ah"
"	      0047415a    jmp near ptr 0047415Fh"
);
// LINE 449:
	asm( 
"	      0047415f    lea eax,[ebp-0Ch]"
"	      00474162    push eax"
"	      00474163    mov eax,[ebp-1094h]"
"	      00474169    mov ecx,[ebp-1094h]"
"	      0047416f    mov ecx,[ecx+74h]"
"	      00474172    mov edx,[ecx]"
"	      00474174    mov ecx,[eax+74h]"
"	      00474177    call dword ptr [edx+0C4h]"
);
// LINE 450:
	asm( 
"	      0047417d    mov eax,[ebp-1094h]"
"	      00474183    mov ecx,[ebp-1094h]"
"	      00474189    mov ecx,[ecx+74h]"
"	      0047418c    mov edx,[ecx]"
"	      0047418e    mov ecx,[eax+74h]"
"	      00474191    call dword ptr [edx+0E0h]"
);
// LINE 451:
	asm( 
"	      00474197    mov eax,[ebp+0Ch]"
"	      0047419a    mov eax,[eax+4]"
"	      0047419d    push eax"
"	      0047419e    mov eax,[ebp+0Ch]"
"	      004741a1    mov eax,[eax]"
"	      004741a3    push eax"
"	      004741a4    mov eax,[ebp-1094h]"
"	      004741aa    mov ecx,[ebp-1094h]"
"	      004741b0    mov ecx,[ecx+74h]"
"	      004741b3    mov edx,[ecx]"
"	      004741b5    mov ecx,[eax+74h]"
"	      004741b8    call dword ptr [edx+34h]"
);
// LINE 454:
	asm( 
"	      004741bb    mov eax,[ebp-1094h]"
"	      004741c1    mov eax,[eax+74h]"
"	      004741c4    add eax,10h"
"	      004741c7    lea ecx,[ebp-1Ch]"
"	      004741ca    mov edx,[eax]"
"	      004741cc    mov [ecx],edx"
"	      004741ce    mov edx,[eax+4]"
"	      004741d1    mov [ecx+4],edx"
"	      004741d4    mov edx,[eax+8]"
"	      004741d7    mov [ecx+8],edx"
"	      004741da    mov eax,[eax+0Ch]"
"	      004741dd    mov [ecx+0Ch],eax"
);
// LINE 455:
	asm( 
"	      004741e0    lea eax,[ebp-1Ch]"
"	      004741e3    push eax"
"	      004741e4    mov ecx,[ebp-1094h]"
"	      004741ea    call 004A4F5Ch"
);
// LINE 458:
	asm( 
"	      004741ef    jmp near ptr 004741F4h"
"	      004741f4    mov eax,[ebp-1094h]"
"	      004741fa    mov eax,[eax+1Ch]"
"	      004741fd    mov ecx,[ebp-1094h]"
"	      00474203    sub eax,[ecx+14h]"
"	      00474206    cdq"
"	      00474207    sub eax,edx"
"	      00474209    sar eax,1"
"	      0047420c    cmp eax,[ebp-18h]"
"	      0047420f    jle near ptr 0047421Eh"
);
// LINE 459:
	asm( 
"	      00474215    add dword ptr [ebp-18h],22h"
);
// LINE 460:
	asm( 
"	      00474219    jmp near ptr 00474222h"
);
// LINE 461:
	asm( 
"	      0047421e    sub dword ptr [ebp-18h],22h"
);
// LINE 462:
	asm( 
"	      00474222    mov eax,[ebp-18h]"
"	      00474225    push eax"
"	      00474226    mov eax,[ebp-1Ch]"
"	      00474229    push eax"
"	      0047422a    mov eax,[ebp-1094h]"
"	      00474230    mov ecx,[ebp-1094h]"
"	      00474236    mov ecx,[ecx+74h]"
"	      00474239    mov edx,[ecx]"
"	      0047423b    mov ecx,[eax+74h]"
"	      0047423e    call dword ptr [edx+34h]"
"	      00474241    mov eax,[ebp-1094h]"
"	      00474247    mov eax,[eax+74h]"
"	      0047424a    mov [ebp-68h],eax"
);
// LINE 465:
	asm( 
"	      0047424d    mov eax,[ebp-68h]"
"	      00474250    mov dword ptr [eax+54h],1"
"	      00474257    jmp near ptr 0047425Ch"
);
// LINE 467:
	asm( 
"	      0047425c    mov eax,[ebp-1094h]"
"	      00474262    cmp dword ptr [eax+0FAh],0"
"	      00474269    je near ptr 00474507h"
);
// LINE 468:
	asm( 
"	      0047426f    lea eax,[ebp-0Ch]"
"	      00474272    push eax"
"	      00474273    mov eax,[ebp+8]"
"	      00474276    push eax"
"	      00474277    mov ecx,[ebp-1094h]"
"	      0047427d    call 004745A5h"
);
// LINE 469:
	asm( 
"	      00474282    mov ecx,[ebp-1094h]"
"	      00474288    mov eax,[ebp-1094h]"
"	      0047428e    mov eax,[eax+78h]"
"	      00474291    add ecx,78h"
"	      00474294    call dword ptr [eax+3Ch]"
);
// LINE 470:
	asm( 
"	      00474297    cmp dword ptr [ebp-0Ch],0"
"	      0047429b    je near ptr 004742B9h"
"	      004742a1    mov eax,[ebp-0Ch]"
"	      004742a4    mov [ebp-48h],eax"
"	      004742a7    mov eax,[ebp-48h]"
"	      004742aa    mov [ebp-50h],eax"
"	      004742ad    mov eax,[ebp-50h]"
"	      004742b0    push eax"
"	      004742b1    call 0056A740h"
"	      004742b6    add esp,4"
"	      004742b9    jmp near ptr 004742BEh"
"	      004742be    mov eax,[ebp-8]"
"	      004742c1    mov eax,[eax+4]"
"	      004742c4    inc eax"
"	      004742c5    push eax"
"	      004742c6    call 0056A600h"
"	      004742cb    add esp,4"
"	      004742ce    mov [ebp-0Ch],eax"
"	      004742d1    jmp near ptr 004742D6h"
"	      004742d6    mov eax,[ebp-8]"
"	      004742d9    cmp dword ptr [eax+4],0"
"	      004742dd    je near ptr 00474340h"
"	      004742e3    jmp near ptr 004742E8h"
"	      004742e8    jmp near ptr 004742EDh"
"	      004742ed    mov eax,[ebp-8]"
"	      004742f0    cmp dword ptr [eax+4],0"
"	      004742f4    je near ptr 0047430Ch"
"	      004742fa    mov eax,[ebp-8]"
"	      004742fd    mov eax,[eax]"
"	      004742ff    mov [ebp-5Ch],eax"
"	      00474302    jmp near ptr 00474318h"
"	      00474307    jmp near ptr 00474318h"
"	      0047430c    mov dword ptr [ebp-5Ch],0"
"	      00474313    jmp near ptr 00474318h"
"	      00474318    mov eax,[ebp-8]"
"	      0047431b    mov eax,[eax+4]"
"	      0047431e    mov [ebp-60h],eax"
"	      00474321    mov eax,[ebp-0Ch]"
"	      00474324    mov [ebp-64h],eax"
"	      00474327    mov eax,[ebp-60h]"
"	      0047432a    push eax"
"	      0047432b    mov eax,[ebp-5Ch]"
"	      0047432e    push eax"
"	      0047432f    mov eax,[ebp-64h]"
"	      00474332    push eax"
"	      00474333    call 0056A800h"
"	      00474338    add esp,0Ch"
"	      0047433b    jmp near ptr 00474340h"
"	      00474340    jmp near ptr 00474345h"
"	      00474345    mov byte ptr [ebp-4Ch],0"
"	      00474349    jmp near ptr 0047434Eh"
"	      0047434e    lea eax,[ebp-4Ch]"
"	      00474351    mov [ebp-54h],eax"
"	      00474354    jmp near ptr 00474359h"
"	      00474359    mov eax,[ebp-8]"
"	      0047435c    mov eax,[eax+4]"
"	      0047435f    add eax,[ebp-0Ch]"
"	      00474362    mov [ebp-58h],eax"
"	      00474365    mov eax,[ebp-54h]"
"	      00474368    mov al,[eax]"
"	      0047436a    mov ecx,[ebp-58h]"
"	      0047436d    mov [ecx],al"
"	      0047436f    jmp near ptr 00474374h"
"	      00474374    jmp near ptr 00474379h"
"	      00474379    mov eax,[ebp-0Ch]"
"	      0047437c    mov [ebp-8Ch],eax"
"	      00474382    push 10h"
"	      00474384    call 0056A600h"
"	      00474389    add esp,4"
"	      0047438c    mov [ebp-80h],eax"
"	      0047438f    cmp dword ptr [ebp-80h],0"
"	      00474393    je near ptr 00474441h"
"	      00474399    mov eax,[ebp-8Ch]"
"	      0047439f    push eax"
"	      004743a0    call 0056ABE0h"
"	      004743a5    add esp,4"
"	      004743a8    mov ecx,[ebp-80h]"
"	      004743ab    mov [ecx+4],eax"
"	      004743ae    jmp near ptr 004743B3h"
"	      004743b3    mov eax,[ebp-80h]"
"	      004743b6    mov eax,[eax+4]"
"	      004743b9    mov ecx,[ebp-80h]"
"	      004743bc    mov [ecx+8],eax"
"	      004743bf    mov eax,[ebp-80h]"
"	      004743c2    cmp dword ptr [eax+8],0"
"	      004743c6    je near ptr 0047441Eh"
"	      004743cc    mov eax,[ebp-80h]"
"	      004743cf    mov eax,[eax+8]"
"	      004743d2    push eax"
"	      004743d3    call 0056A600h"
"	      004743d8    add esp,4"
"	      004743db    mov ecx,[ebp-80h]"
"	      004743de    mov [ecx],eax"
"	      004743e0    mov eax,[ebp-80h]"
"	      004743e3    mov eax,[eax+4]"
"	      004743e6    mov [ebp-84h],eax"
"	      004743ec    mov eax,[ebp-80h]"
"	      004743ef    mov eax,[eax]"
"	      004743f1    mov [ebp-88h],eax"
"	      004743f7    mov eax,[ebp-84h]"
"	      004743fd    push eax"
"	      004743fe    mov eax,[ebp-8Ch]"
"	      00474404    push eax"
"	      00474405    mov eax,[ebp-88h]"
"	      0047440b    push eax"
"	      0047440c    call 0056A800h"
"	      00474411    add esp,0Ch"
"	      00474414    jmp near ptr 00474419h"
"	      00474419    jmp near ptr 00474427h"
"	      0047441e    mov eax,[ebp-80h]"
"	      00474421    mov dword ptr [eax],0"
"	      00474427    mov eax,[ebp-80h]"
"	      0047442a    mov dword ptr [eax+0Ch],1"
"	      00474431    jmp near ptr 00474436h"
"	      00474436    mov eax,[ebp-80h]"
"	      00474439    mov [ebp-20h],eax"
"	      0047443c    jmp near ptr 00474448h"
"	      00474441    mov dword ptr [ebp-20h],0"
"	      00474448    mov dword ptr [ebp-24h],0"
"	      0047444f    jmp near ptr 00474454h"
"	      00474454    push 2"
"	      00474456    lea eax,[ebp-24h]"
"	      00474459    push eax"
"	      0047445a    mov ecx,[ebp-1094h]"
"	      00474460    mov eax,[ebp-1094h]"
"	      00474466    mov eax,[eax+78h]"
"	      00474469    add ecx,78h"
"	      0047446c    call dword ptr [eax+2Ch]"
"	      0047446f    mov eax,[ebp-20h]"
"	      00474472    dec dword ptr [eax+0Ch]"
"	      00474475    mov eax,[ebp-20h]"
"	      00474478    cmp dword ptr [eax+0Ch],0"
"	      0047447c    jne near ptr 004744A7h"
"	      00474482    mov eax,[ebp-20h]"
"	      00474485    mov [ebp-34h],eax"
"	      00474488    mov eax,[ebp-34h]"
"	      0047448b    mov [ebp-30h],eax"
"	      0047448e    cmp dword ptr [ebp-30h],0"
"	      00474492    je near ptr 004744A7h"
"	      00474498    push 1"
"	      0047449a    mov ecx,[ebp-30h]"
"	      0047449d    call 0041DD70h"
"	      004744a2    jmp near ptr 004744A7h"
"	      004744a7    jmp near ptr 004744ACh"
"	      004744ac    cmp dword ptr [ebp-24h],0"
"	      004744b0    je near ptr 004744CEh"
"	      004744b6    mov eax,[ebp-24h]"
"	      004744b9    mov [ebp-28h],eax"
"	      004744bc    mov eax,[ebp-28h]"
"	      004744bf    mov [ebp-2Ch],eax"
"	      004744c2    mov eax,[ebp-2Ch]"
"	      004744c5    push eax"
"	      004744c6    call 0056A740h"
"	      004744cb    add esp,4"
"	      004744ce    jmp near ptr 004744D3h"
);
// LINE 471:
	asm( 
"	      004744d3    mov eax,ds:[5C37F0h]"
"	      004744d8    push eax"
"	      004744d9    mov ecx,[ebp-1094h]"
"	      004744df    mov eax,[ebp-1094h]"
"	      004744e5    mov eax,[eax+78h]"
"	      004744e8    add ecx,78h"
"	      004744eb    call dword ptr [eax+24h]"
);
// LINE 472:
	asm( 
"	      004744ee    push 1"
"	      004744f0    push 0"
"	      004744f2    mov ecx,[ebp-1094h]"
"	      004744f8    mov eax,[ebp-1094h]"
"	      004744fe    mov eax,[eax+78h]"
"	      00474501    add ecx,78h"
"	      00474504    call dword ptr [eax+8]"
);
// LINE 474:
	asm( 
"	      00474507    mov eax,[ebp-8]"
"	      0047450a    dec dword ptr [eax+0Ch]"
"	      0047450d    mov eax,[ebp-8]"
"	      00474510    cmp dword ptr [eax+0Ch],0"
"	      00474514    jne near ptr 0047453Fh"
"	      0047451a    mov eax,[ebp-8]"
"	      0047451d    mov [ebp-44h],eax"
"	      00474520    mov eax,[ebp-44h]"
"	      00474523    mov [ebp-40h],eax"
"	      00474526    cmp dword ptr [ebp-40h],0"
"	      0047452a    je near ptr 0047453Fh"
"	      00474530    push 1"
"	      00474532    mov ecx,[ebp-40h]"
"	      00474535    call 0041DD70h"
"	      0047453a    jmp near ptr 0047453Fh"
"	      0047453f    jmp near ptr 00474544h"
"	      00474544    cmp dword ptr [ebp-0Ch],0"
"	      00474548    je near ptr 00474566h"
"	      0047454e    mov eax,[ebp-0Ch]"
"	      00474551    mov [ebp-38h],eax"
"	      00474554    mov eax,[ebp-38h]"
"	      00474557    mov [ebp-3Ch],eax"
"	      0047455a    mov eax,[ebp-3Ch]"
"	      0047455d    push eax"
"	      0047455e    call 0056A740h"
"	      00474563    add esp,4"
"	      00474566    jmp near ptr 0047456Bh"
"	      0047456b    jmp near ptr 00474570h"
"	      00474570    pop edi"
"	      00474571    pop esi"
"	      00474572    pop ebx"
"	      00474573    leave"
"	      00474574    ret 8"
);
}

// FUNCTION: COPTER_D 0x00474577
void HangarWindow::HideHelp() {
// LINE 485:
	asm( 
"	      00474577    push ebp"
"	      00474578    mov ebp,esp"
"	      0047457a    sub esp,8"
"	      0047457d    push ebx"
"	      0047457e    push esi"
"	      0047457f    push edi"
"	      00474580    mov [ebp-8],ecx"
"	      00474583    mov eax,[ebp-8]"
"	      00474586    mov eax,[eax+74h]"
"	      00474589    mov [ebp-4],eax"
);
// LINE 486:
	asm( 
"	      0047458c    mov eax,[ebp-4]"
"	      0047458f    mov dword ptr [eax+54h],0"
"	      00474596    jmp near ptr 0047459Bh"
);
// LINE 487:
	asm( 
"	      0047459b    jmp near ptr 004745A0h"
"	      004745a0    pop edi"
"	      004745a1    pop esi"
"	      004745a2    pop ebx"
"	      004745a3    leave"
"	      004745a4    ret"
);
}

// FUNCTION: COPTER_D 0x004745a5
int32_t HangarWindow::GetSoundFileNameFromHelpID(long, class basic_string<char>&) {
// LINE 494:
	asm( 
"	      004745a5    push ebp"
"	      004745a6    mov ebp,esp"
"	      004745a8    sub esp,30h"
"	      004745ab    push ebx"
"	      004745ac    push esi"
"	      004745ad    push edi"
"	      004745ae    mov [ebp-30h],ecx"
);
// LINE 496:
	asm( 
"	      004745b1    push 10h"
"	      004745b3    call 0056A600h"
"	      004745b8    add esp,4"
"	      004745bb    mov [ebp-24h],eax"
"	      004745be    cmp dword ptr [ebp-24h],0"
"	      004745c2    je near ptr 00474660h"
"	      004745c8    push 599810h"
"	      004745cd    call 0056ABE0h"
"	      004745d2    add esp,4"
"	      004745d5    mov ecx,[ebp-24h]"
"	      004745d8    mov [ecx+4],eax"
"	      004745db    jmp near ptr 004745E0h"
"	      004745e0    mov eax,[ebp-24h]"
"	      004745e3    mov eax,[eax+4]"
"	      004745e6    mov ecx,[ebp-24h]"
"	      004745e9    mov [ecx+8],eax"
"	      004745ec    mov eax,[ebp-24h]"
"	      004745ef    cmp dword ptr [eax+8],0"
"	      004745f3    je near ptr 0047463Dh"
"	      004745f9    mov eax,[ebp-24h]"
"	      004745fc    mov eax,[eax+8]"
"	      004745ff    push eax"
"	      00474600    call 0056A600h"
"	      00474605    add esp,4"
"	      00474608    mov ecx,[ebp-24h]"
"	      0047460b    mov [ecx],eax"
"	      0047460d    mov eax,[ebp-24h]"
"	      00474610    mov eax,[eax+4]"
"	      00474613    mov [ebp-28h],eax"
"	      00474616    mov eax,[ebp-24h]"
"	      00474619    mov eax,[eax]"
"	      0047461b    mov [ebp-2Ch],eax"
"	      0047461e    mov eax,[ebp-28h]"
"	      00474621    push eax"
"	      00474622    push 599810h"
"	      00474627    mov eax,[ebp-2Ch]"
"	      0047462a    push eax"
"	      0047462b    call 0056A800h"
"	      00474630    add esp,0Ch"
"	      00474633    jmp near ptr 00474638h"
"	      00474638    jmp near ptr 00474646h"
"	      0047463d    mov eax,[ebp-24h]"
"	      00474640    mov dword ptr [eax],0"
"	      00474646    mov eax,[ebp-24h]"
"	      00474649    mov dword ptr [eax+0Ch],1"
"	      00474650    jmp near ptr 00474655h"
"	      00474655    mov eax,[ebp-24h]"
"	      00474658    mov [ebp-4],eax"
"	      0047465b    jmp near ptr 00474667h"
"	      00474660    mov dword ptr [ebp-4],0"
"	      00474667    mov dword ptr [ebp-8],0"
"	      0047466e    jmp near ptr 00474673h"
"	      00474673    mov eax,[ebp+0Ch]"
"	      00474676    push eax"
"	      00474677    lea eax,[ebp-8]"
"	      0047467a    push eax"
"	      0047467b    push 0"
"	      0047467d    push 2"
"	      0047467f    mov ecx,604C00h"
"	      00474684    call 00494F82h"
"	      00474689    jmp near ptr 0047468Eh"
"	      0047468e    mov eax,[ebp-4]"
"	      00474691    dec dword ptr [eax+0Ch]"
"	      00474694    mov eax,[ebp-4]"
"	      00474697    cmp dword ptr [eax+0Ch],0"
"	      0047469b    jne near ptr 00474711h"
"	      004746a1    mov eax,[ebp-4]"
"	      004746a4    mov [ebp-18h],eax"
"	      004746a7    mov eax,[ebp-18h]"
"	      004746aa    mov [ebp-14h],eax"
"	      004746ad    cmp dword ptr [ebp-14h],0"
"	      004746b1    je near ptr 00474711h"
"	      004746b7    mov eax,[ebp-14h]"
"	      004746ba    cmp dword ptr [eax+8],0"
"	      004746be    je near ptr 004746F1h"
"	      004746c4    mov eax,[ebp-14h]"
"	      004746c7    mov eax,[eax]"
"	      004746c9    mov [ebp-1Ch],eax"
"	      004746cc    mov eax,[ebp-1Ch]"
"	      004746cf    mov [ebp-20h],eax"
"	      004746d2    mov eax,[ebp-20h]"
"	      004746d5    push eax"
"	      004746d6    call 0056A740h"
"	      004746db    add esp,4"
"	      004746de    mov eax,[ebp-14h]"
"	      004746e1    mov dword ptr [eax+8],0"
"	      004746e8    mov eax,[ebp-14h]"
"	      004746eb    mov dword ptr [eax],0"
"	      004746f1    jmp near ptr 004746F6h"
"	      004746f6    jmp near ptr 004746FBh"
"	      004746fb    mov eax,[ebp-14h]"
"	      004746fe    push eax"
"	      004746ff    call 0056A740h"
"	      00474704    add esp,4"
"	      00474707    jmp near ptr 0047470Ch"
"	      0047470c    jmp near ptr 00474711h"
"	      00474711    jmp near ptr 00474716h"
"	      00474716    cmp dword ptr [ebp-8],0"
"	      0047471a    je near ptr 00474738h"
"	      00474720    mov eax,[ebp-8]"
"	      00474723    mov [ebp-0Ch],eax"
"	      00474726    mov eax,[ebp-0Ch]"
"	      00474729    mov [ebp-10h],eax"
"	      0047472c    mov eax,[ebp-10h]"
"	      0047472f    push eax"
"	      00474730    call 0056A740h"
"	      00474735    add esp,4"
"	      00474738    jmp near ptr 0047473Dh"
);
// LINE 497:
	asm( 
"	      0047473d    mov eax,1"
"	      00474742    jmp near ptr 00474747h"
);
// LINE 498:
	asm( 
"	      00474747    pop edi"
"	      00474748    pop esi"
"	      00474749    pop ebx"
"	      0047474a    leave"
"	      0047474b    ret 8"
);
}

// FUNCTION: COPTER_D 0x0047474e
void HangarWindow::LoadHotSpots() {
// LINE 504:
	asm( 
"	      0047474e    push ebp"
"	      0047474f    mov ebp,esp"
"	      00474751    sub esp,4"
"	      00474754    push ebx"
"	      00474755    push esi"
"	      00474756    push edi"
"	      00474757    mov [ebp-4],ecx"
);
// LINE 505:
	asm( 
"	      0047475a    push 6Ah"
"	      0047475c    mov eax,[ebp-4]"
"	      0047475f    add eax,116h"
"	      00474764    push eax"
"	      00474765    call 004BB49Bh"
"	      0047476a    add esp,8"
);
// LINE 506:
	asm( 
"	      0047476d    jmp near ptr 00474772h"
"	      00474772    pop edi"
"	      00474773    pop esi"
"	      00474774    pop ebx"
"	      00474775    leave"
"	      00474776    ret"
);
}



// Contribution: 1:00073780-000737b8 Module: 36, 16 byte alignment, code, (comdat), execute, read, 
// FUNCTION: COPTER_D 0x00474780
// HangarWindow::`scalar deleting destructor'



// Contribution: 1:000737c0-000737db Module: 36, 16 byte alignment, code, (comdat), execute, read, 
// LIBRARY: MSVC 0x004747c0
// deallocate



// Contribution: 1:000737e0-000737ef Module: 36, 16 byte alignment, code, (comdat), execute, read, 
// LIBRARY: MSVC 0x004747e0
// destroy



// Contribution: 2:00001c20-00001ce3 Module: 36, 8 byte alignment, initialized_data, (comdat), read, 
// GLOBAL: COPTER_D 0x00590c20
// ??_7HangarWindow@@6B@


// Contribution: 3:000027c8-00002818 Module: 36, 4 byte alignment, initialized_data, read, write, 
// GLOBAL: COPTER_D 0x005997c8
// SZ_HANGAR_DAY_IMAGE_FILE_NAME
// GLOBAL: COPTER_D 0x005997cc
// SZ_HANGAR_NIGHT_IMAGE_FILE_NAME
// GLOBAL: COPTER_D 0x005997d0
// SZ_HANGAR_DAY_BUTTON_FILE_NAME
// GLOBAL: COPTER_D 0x005997d4
// SZ_HANGAR_NIGHT_BUTTON_FILE_NAME
