// Module: Graphwin.obj
// Source: C:\Copter\source\sparkal\Graphwin.cpp
// autogenerated by simcopter_tool from PDB file



// Contribution: 1:0009fa00-000a6b52 Module: 9, 16 byte alignment, code, execute, read, 
// FUNCTION: SIMCOPTER 0x004a0a00
// $E48

// FUNCTION: SIMCOPTER 0x004a0a1a
// $E44

// FUNCTION: SIMCOPTER 0x004a0c73
// $E47

// FUNCTION: SIMCOPTER 0x004a0c90
// $E45

// FUNCTION: SIMCOPTER 0x004a0e5f
// $E53

// FUNCTION: SIMCOPTER 0x004a0e79
// $E50

// FUNCTION: SIMCOPTER 0x004a10d2
// $E52

// FUNCTION: SIMCOPTER 0x004a10ef
// $E51

// FUNCTION: SIMCOPTER 0x004a12be
// $E58

// FUNCTION: SIMCOPTER 0x004a12d8
// $E55

// FUNCTION: SIMCOPTER 0x004a1531
// $E57

// FUNCTION: SIMCOPTER 0x004a154e
// $E56

// FUNCTION: SIMCOPTER 0x004a171d
// $E61

// FUNCTION: SIMCOPTER 0x004a1732
// $E60

// FUNCTION: SIMCOPTER 0x004a174c
void GraphicWindowColorConstants::GraphicWindowColorConstants() {
// LINE 33:
	asm( 
"	      004a174c    push ebp"
"	      004a174d    mov ebp,esp"
"	      004a174f    sub esp,4"
"	      004a1752    push ebx"
"	      004a1753    push esi"
"	      004a1754    push edi"
"	      004a1755    mov [ebp-4],ecx"
);
// LINE 36:
	asm( 
"	      004a1758    mov eax,[ebp-4]"
"	      004a175b    mov dword ptr [eax],0"
);
// LINE 37:
	asm( 
"	      004a1761    mov eax,[ebp-4]"
"	      004a1764    mov dword ptr [eax+4],0F8h"
);
// LINE 38:
	asm( 
"	      004a176b    mov eax,[ebp-4]"
"	      004a176e    mov dword ptr [eax+8],7"
);
// LINE 39:
	asm( 
"	      004a1775    mov eax,[ebp-4]"
"	      004a1778    mov dword ptr [eax+0Ch],0FFh"
);
// LINE 40:
	asm( 
"	      004a177f    mov eax,[ebp-4]"
"	      004a1782    mov dword ptr [eax+10h],1"
);
// LINE 41:
	asm( 
"	      004a1789    mov eax,[ebp-4]"
"	      004a178c    mov dword ptr [eax+14h],4"
);
// LINE 42:
	asm( 
"	      004a1793    mov eax,[ebp-4]"
"	      004a1796    mov dword ptr [eax+18h],2"
);
// LINE 43:
	asm( 
"	      004a179d    mov eax,[ebp-4]"
"	      004a17a0    mov dword ptr [eax+1Ch],6"
);
// LINE 44:
	asm( 
"	      004a17a7    mov eax,[ebp-4]"
"	      004a17aa    mov dword ptr [eax+20h],0FFFFFFFFh"
);
// LINE 48:
	asm( 
"	      004a17b1    jmp near ptr 004A17B6h"
"	      004a17b6    mov eax,[ebp-4]"
"	      004a17b9    pop edi"
"	      004a17ba    pop esi"
"	      004a17bb    pop ebx"
"	      004a17bc    leave"
"	      004a17bd    ret"
);
}

// FUNCTION: SIMCOPTER 0x004a17be
int32_t GraphicWindowOwner::DoMessage(class GraphicWindow*, long, long, void * __ptr32) {
// LINE 61:
	asm( 
"	      004a17be    push ebp"
"	      004a17bf    mov ebp,esp"
"	      004a17c1    sub esp,4"
"	      004a17c4    push ebx"
"	      004a17c5    push esi"
"	      004a17c6    push edi"
"	      004a17c7    mov [ebp-4],ecx"
);
// LINE 62:
	asm( 
"	      004a17ca    xor eax,eax"
"	      004a17cc    jmp near ptr 004A17D1h"
);
// LINE 63:
	asm( 
"	      004a17d1    pop edi"
"	      004a17d2    pop esi"
"	      004a17d3    pop ebx"
"	      004a17d4    leave"
"	      004a17d5    ret 10h"
);
}

// FUNCTION: SIMCOPTER 0x004a17d8
void GraphicWindowManager::GraphicWindowManager(class GraphicWindow*) {
// LINE 77:
	asm( 
"	      004a17d8    push ebp"
"	      004a17d9    mov ebp,esp"
"	      004a17db    sub esp,54h"
"	      004a17de    push ebx"
"	      004a17df    push esi"
"	      004a17e0    push edi"
"	      004a17e1    mov [ebp-54h],ecx"
"	      004a17e4    mov eax,[ebp-54h]"
"	      004a17e7    mov dword ptr [eax+4],0"
"	      004a17ee    mov eax,[ebp+8]"
"	      004a17f1    mov ecx,[ebp-54h]"
"	      004a17f4    mov [ecx+8],eax"
"	      004a17f7    mov eax,[ebp-54h]"
"	      004a17fa    mov dword ptr [eax+10h],0"
"	      004a1801    inc dword ptr ds:[59A970h]"
"	      004a1807    mov eax,ds:[59A97Ch]"
"	      004a180c    mov [ebp-4],eax"
"	      004a180f    cmp dword ptr ds:[59A97Ch],0"
"	      004a1816    je near ptr 004A1833h"
"	      004a181c    mov eax,ds:[59A97Ch]"
"	      004a1821    mov eax,[eax]"
"	      004a1823    mov ds:[59A97Ch],eax"
"	      004a1828    mov eax,[ebp-4]"
"	      004a182b    mov [ebp-50h],eax"
"	      004a182e    jmp near ptr 004A1A10h"
"	      004a1833    mov eax,ds:[59A978h]"
"	      004a1838    cmp ds:[59A974h],eax"
"	      004a183e    jne near ptr 004A19FBh"
"	      004a1844    push 0"
"	      004a1846    call 0056A620h"
"	      004a184b    add esp,4"
"	      004a184e    push 8"
"	      004a1850    call 0056A600h"
"	      004a1855    add esp,4"
"	      004a1858    mov [ebp-3Ch],eax"
"	      004a185b    cmp dword ptr [ebp-3Ch],0"
"	      004a185f    jne near ptr 004A1892h"
"	      004a1865    push 5971ACh"
"	      004a186a    mov ecx,638BA0h"
"	      004a186f    call 00569960h"
"	      004a1874    mov [ebp-40h],eax"
"	      004a1877    mov eax,[ebp-40h]"
"	      004a187a    push eax"
"	      004a187b    call 004011B0h"
"	      004a1880    add esp,4"
"	      004a1883    jmp near ptr 004A1888h"
"	      004a1888    push 1"
"	      004a188a    call 00569430h"
"	      004a188f    add esp,4"
"	      004a1892    jmp near ptr 004A1897h"
"	      004a1897    jmp near ptr 004A189Ch"
"	      004a189c    mov eax,[ebp-3Ch]"
"	      004a189f    mov [ebp-10h],eax"
"	      004a18a2    mov dword ptr [ebp-14h],155h"
"	      004a18a9    lea eax,[ebp-14h]"
"	      004a18ac    mov [ebp-1Ch],eax"
"	      004a18af    mov dword ptr [ebp-18h],1"
"	      004a18b6    lea eax,[ebp-18h]"
"	      004a18b9    mov [ebp-20h],eax"
"	      004a18bc    mov eax,[ebp-20h]"
"	      004a18bf    mov ecx,[ebp-1Ch]"
"	      004a18c2    mov ecx,[ecx]"
"	      004a18c4    cmp [eax],ecx"
"	      004a18c6    jb near ptr 004A18D7h"
"	      004a18cc    mov eax,[ebp-20h]"
"	      004a18cf    mov [ebp-24h],eax"
"	      004a18d2    jmp near ptr 004A18DDh"
"	      004a18d7    mov eax,[ebp-1Ch]"
"	      004a18da    mov [ebp-24h],eax"
"	      004a18dd    jmp near ptr 004A18E2h"
"	      004a18e2    jmp near ptr 004A18E7h"
"	      004a18e7    jmp near ptr 004A18ECh"
"	      004a18ec    mov eax,[ebp-24h]"
"	      004a18ef    mov eax,[eax]"
"	      004a18f1    mov [ebp-4Ch],eax"
"	      004a18f4    push 0"
"	      004a18f6    call 0056A620h"
"	      004a18fb    add esp,4"
"	      004a18fe    mov eax,[ebp-4Ch]"
"	      004a1901    lea eax,[eax+eax*2]"
"	      004a1904    shl eax,2"
"	      004a1907    push eax"
"	      004a1908    call 0056A600h"
"	      004a190d    add esp,4"
"	      004a1910    mov [ebp-44h],eax"
"	      004a1913    cmp dword ptr [ebp-44h],0"
"	      004a1917    jne near ptr 004A194Ah"
"	      004a191d    push 5971ACh"
"	      004a1922    mov ecx,638BA0h"
"	      004a1927    call 00569960h"
"	      004a192c    mov [ebp-48h],eax"
"	      004a192f    mov eax,[ebp-48h]"
"	      004a1932    push eax"
"	      004a1933    call 004011B0h"
"	      004a1938    add esp,4"
"	      004a193b    jmp near ptr 004A1940h"
"	      004a1940    push 1"
"	      004a1942    call 00569430h"
"	      004a1947    add esp,4"
"	      004a194a    jmp near ptr 004A194Fh"
"	      004a194f    jmp near ptr 004A1954h"
"	      004a1954    mov eax,[ebp-44h]"
"	      004a1957    mov ecx,[ebp-10h]"
"	      004a195a    mov [ecx+4],eax"
"	      004a195d    mov eax,ds:[59A980h]"
"	      004a1962    mov ecx,[ebp-10h]"
"	      004a1965    mov [ecx],eax"
"	      004a1967    mov eax,[ebp-10h]"
"	      004a196a    mov ds:[59A980h],eax"
"	      004a196f    mov eax,ds:[59A980h]"
"	      004a1974    mov eax,[eax+4]"
"	      004a1977    mov ds:[59A978h],eax"
"	      004a197c    mov dword ptr [ebp-28h],155h"
"	      004a1983    lea eax,[ebp-28h]"
"	      004a1986    mov [ebp-30h],eax"
"	      004a1989    mov dword ptr [ebp-2Ch],1"
"	      004a1990    lea eax,[ebp-2Ch]"
"	      004a1993    mov [ebp-34h],eax"
"	      004a1996    mov eax,[ebp-34h]"
"	      004a1999    mov ecx,[ebp-30h]"
"	      004a199c    mov ecx,[ecx]"
"	      004a199e    cmp [eax],ecx"
"	      004a19a0    jb near ptr 004A19B1h"
"	      004a19a6    mov eax,[ebp-34h]"
"	      004a19a9    mov [ebp-38h],eax"
"	      004a19ac    jmp near ptr 004A19B7h"
"	      004a19b1    mov eax,[ebp-30h]"
"	      004a19b4    mov [ebp-38h],eax"
"	      004a19b7    jmp near ptr 004A19BCh"
"	      004a19bc    jmp near ptr 004A19C1h"
"	      004a19c1    jmp near ptr 004A19C6h"
"	      004a19c6    mov eax,[ebp-38h]"
"	      004a19c9    mov eax,[eax]"
"	      004a19cb    lea eax,[eax+eax*2]"
"	      004a19ce    shl eax,2"
"	      004a19d1    add eax,ds:[59A978h]"
"	      004a19d7    mov ds:[59A974h],eax"
"	      004a19dc    jmp near ptr 004A19E1h"
"	      004a19e1    mov eax,ds:[59A978h]"
"	      004a19e6    mov [ebp-8],eax"
"	      004a19e9    add dword ptr ds:[59A978h],0Ch"
"	      004a19f0    mov eax,[ebp-8]"
"	      004a19f3    mov [ebp-50h],eax"
"	      004a19f6    jmp near ptr 004A1A10h"
"	      004a19fb    mov eax,ds:[59A978h]"
"	      004a1a00    mov [ebp-0Ch],eax"
"	      004a1a03    add dword ptr ds:[59A978h],0Ch"
"	      004a1a0a    mov eax,[ebp-0Ch]"
"	      004a1a0d    mov [ebp-50h],eax"
"	      004a1a10    jmp near ptr 004A1A15h"
"	      004a1a15    mov eax,[ebp-50h]"
"	      004a1a18    mov ecx,[ebp-54h]"
"	      004a1a1b    mov [ecx+0Ch],eax"
"	      004a1a1e    mov eax,[ebp-54h]"
"	      004a1a21    mov eax,[eax+0Ch]"
"	      004a1a24    mov ecx,[ebp-54h]"
"	      004a1a27    mov ecx,[ecx+0Ch]"
"	      004a1a2a    mov [ecx],eax"
"	      004a1a2c    mov eax,[ebp-54h]"
"	      004a1a2f    mov eax,[eax+0Ch]"
"	      004a1a32    mov ecx,[ebp-54h]"
"	      004a1a35    mov ecx,[ecx+0Ch]"
"	      004a1a38    mov [ecx+4],eax"
"	      004a1a3b    jmp near ptr 004A1A40h"
"	      004a1a40    mov eax,[ebp-54h]"
"	      004a1a43    mov dword ptr [eax],591648h"
);
// LINE 78:
	asm( 
"	      004a1a49    mov eax,[ebp-54h]"
"	      004a1a4c    mov ds:[59A964h],eax"
);
// LINE 79:
	asm( 
"	      004a1a51    jmp near ptr 004A1A56h"
"	      004a1a56    mov eax,[ebp-54h]"
"	      004a1a59    pop edi"
"	      004a1a5a    pop esi"
"	      004a1a5b    pop ebx"
"	      004a1a5c    leave"
"	      004a1a5d    ret 4"
);
}

// FUNCTION: SIMCOPTER 0x004a1a60
void GraphicWindowManager::~GraphicWindowManager() {
// LINE 85:
	asm( 
"	      004a1a60    push ebp"
"	      004a1a61    mov ebp,esp"
"	      004a1a63    sub esp,3Ch"
"	      004a1a66    push ebx"
"	      004a1a67    push esi"
"	      004a1a68    push edi"
"	      004a1a69    mov [ebp-3Ch],ecx"
"	      004a1a6c    mov eax,[ebp-3Ch]"
"	      004a1a6f    mov dword ptr [eax],591648h"
);
// LINE 87:
	asm( 
"	      004a1a75    jmp near ptr 004A1A7Ah"
"	      004a1a7a    mov eax,[ebp-3Ch]"
"	      004a1a7d    mov eax,[eax+0Ch]"
"	      004a1a80    mov [ebp-10h],eax"
"	      004a1a83    mov eax,[ebp-10h]"
"	      004a1a86    mov [ebp-4],eax"
"	      004a1a89    jmp near ptr 004A1A8Eh"
"	      004a1a8e    jmp near ptr 004A1A93h"
"	      004a1a93    mov eax,[ebp-3Ch]"
"	      004a1a96    mov eax,[eax+0Ch]"
"	      004a1a99    mov eax,[eax]"
"	      004a1a9b    mov [ebp-14h],eax"
"	      004a1a9e    mov eax,[ebp-14h]"
"	      004a1aa1    mov [ebp-8],eax"
"	      004a1aa4    jmp near ptr 004A1AA9h"
"	      004a1aa9    jmp near ptr 004A1AAEh"
"	      004a1aae    mov eax,[ebp-4]"
"	      004a1ab1    mov [ebp-2Ch],eax"
"	      004a1ab4    mov eax,[ebp-8]"
"	      004a1ab7    mov [ebp-30h],eax"
"	      004a1aba    mov eax,[ebp-2Ch]"
"	      004a1abd    cmp [ebp-30h],eax"
"	      004a1ac0    jne near ptr 004A1AD0h"
"	      004a1ac6    jmp near ptr 004A1AE4h"
"	      004a1acb    jmp near ptr 004A1AD0h"
"	      004a1ad0    jmp near ptr 004A1ADFh"
"	      004a1ad5    cmp dword ptr [ebp-20h],0"
"	      004a1ad9    jne near ptr 004A1AE4h"
"	      004a1adf    jmp near ptr 004A1AE9h"
"	      004a1ae4    jmp near ptr 004A1B68h"
"	      004a1ae9    jmp near ptr 004A1AF8h"
"	      004a1aee    cmp dword ptr [ebp-24h],0"
"	      004a1af2    je near ptr 004A1B68h"
"	      004a1af8    mov eax,[ebp-30h]"
"	      004a1afb    mov [ebp-1Ch],eax"
"	      004a1afe    mov eax,[ebp-30h]"
"	      004a1b01    mov eax,[eax]"
"	      004a1b03    mov [ebp-30h],eax"
"	      004a1b06    jmp near ptr 004A1B0Bh"
"	      004a1b0b    mov eax,[ebp-1Ch]"
"	      004a1b0e    mov [ebp-18h],eax"
"	      004a1b11    jmp near ptr 004A1B16h"
"	      004a1b16    mov eax,[ebp-18h]"
"	      004a1b19    mov [ebp-28h],eax"
"	      004a1b1c    mov eax,[ebp-28h]"
"	      004a1b1f    mov eax,[eax]"
"	      004a1b21    mov ecx,[ebp-28h]"
"	      004a1b24    mov ecx,[ecx+4]"
"	      004a1b27    mov [ecx],eax"
"	      004a1b29    mov eax,[ebp-28h]"
"	      004a1b2c    mov eax,[eax+4]"
"	      004a1b2f    mov ecx,[ebp-28h]"
"	      004a1b32    mov ecx,[ecx]"
"	      004a1b34    mov [ecx+4],eax"
"	      004a1b37    jmp near ptr 004A1B3Ch"
"	      004a1b3c    jmp near ptr 004A1B41h"
"	      004a1b41    mov eax,ds:[59A97Ch]"
"	      004a1b46    mov ecx,[ebp-28h]"
"	      004a1b49    mov [ecx],eax"
"	      004a1b4b    mov eax,[ebp-28h]"
"	      004a1b4e    mov ds:[59A97Ch],eax"
"	      004a1b53    jmp near ptr 004A1B58h"
"	      004a1b58    mov eax,[ebp-3Ch]"
"	      004a1b5b    dec dword ptr [eax+10h]"
"	      004a1b5e    jmp near ptr 004A1B63h"
"	      004a1b63    jmp near ptr 004A1ABAh"
"	      004a1b68    jmp near ptr 004A1B6Dh"
"	      004a1b6d    mov eax,[ebp-3Ch]"
"	      004a1b70    mov eax,[eax+0Ch]"
"	      004a1b73    mov [ebp-0Ch],eax"
"	      004a1b76    mov eax,ds:[59A97Ch]"
"	      004a1b7b    mov ecx,[ebp-0Ch]"
"	      004a1b7e    mov [ecx],eax"
"	      004a1b80    mov eax,[ebp-0Ch]"
"	      004a1b83    mov ds:[59A97Ch],eax"
"	      004a1b88    jmp near ptr 004A1B8Dh"
"	      004a1b8d    dec dword ptr ds:[59A970h]"
"	      004a1b93    jne near ptr 004A1C17h"
"	      004a1b99    cmp dword ptr ds:[59A980h],0"
"	      004a1ba0    je near ptr 004A1BF4h"
"	      004a1ba6    mov eax,ds:[59A980h]"
"	      004a1bab    mov [ebp-34h],eax"
"	      004a1bae    mov eax,ds:[59A980h]"
"	      004a1bb3    mov eax,[eax]"
"	      004a1bb5    mov ds:[59A980h],eax"
"	      004a1bba    mov eax,[ebp-34h]"
"	      004a1bbd    mov eax,[eax+4]"
"	      004a1bc0    mov [ebp-38h],eax"
"	      004a1bc3    mov eax,[ebp-38h]"
"	      004a1bc6    push eax"
"	      004a1bc7    call 0056A740h"
"	      004a1bcc    add esp,4"
"	      004a1bcf    jmp near ptr 004A1BD4h"
"	      004a1bd4    jmp near ptr 004A1BD9h"
"	      004a1bd9    mov eax,[ebp-34h]"
"	      004a1bdc    push eax"
"	      004a1bdd    call 0056A740h"
"	      004a1be2    add esp,4"
"	      004a1be5    jmp near ptr 004A1BEAh"
"	      004a1bea    jmp near ptr 004A1BEFh"
"	      004a1bef    jmp near ptr 004A1B99h"
"	      004a1bf4    mov dword ptr ds:[59A97Ch],0"
"	      004a1bfe    mov dword ptr ds:[59A978h],0"
"	      004a1c08    mov dword ptr ds:[59A974h],0"
"	      004a1c12    jmp near ptr 004A1C17h"
"	      004a1c17    jmp near ptr 004A1C1Ch"
"	      004a1c1c    pop edi"
"	      004a1c1d    pop esi"
"	      004a1c1e    pop ebx"
"	      004a1c1f    leave"
"	      004a1c20    ret"
);
}

// FUNCTION: SIMCOPTER 0x004a1c21
void GraphicWindowManager::SetNewBaseWindow(class GraphicWindow*) {
// LINE 97:
	asm( 
"	      004a1c21    push ebp"
"	      004a1c22    mov ebp,esp"
"	      004a1c24    sub esp,4"
"	      004a1c27    push ebx"
"	      004a1c28    push esi"
"	      004a1c29    push edi"
"	      004a1c2a    mov [ebp-4],ecx"
);
// LINE 98:
	asm( 
"	      004a1c2d    mov eax,[ebp+8]"
"	      004a1c30    mov ecx,[ebp-4]"
"	      004a1c33    mov [ecx+8],eax"
);
// LINE 99:
	asm( 
"	      004a1c36    jmp near ptr 004A1C3Bh"
"	      004a1c3b    pop edi"
"	      004a1c3c    pop esi"
"	      004a1c3d    pop ebx"
"	      004a1c3e    leave"
"	      004a1c3f    ret 4"
);
}

// FUNCTION: SIMCOPTER 0x004a1c42
int32_t GraphicWindowManager::DeleteWindow(class GraphicWindow*) {
// LINE 113:
	asm( 
"	      004a1c42    push ebp"
"	      004a1c43    mov ebp,esp"
"	      004a1c45    sub esp,6Ch"
"	      004a1c48    push ebx"
"	      004a1c49    push esi"
"	      004a1c4a    push edi"
"	      004a1c4b    mov [ebp-6Ch],ecx"
);
// LINE 114:
	asm( 
"	      004a1c4e    mov eax,[ebp-6Ch]"
"	      004a1c51    cmp dword ptr [eax+4],0"
"	      004a1c55    jle near ptr 004A1F27h"
);
// LINE 115:
	asm( 
"	      004a1c5b    mov eax,[ebp+8]"
"	      004a1c5e    push eax"
"	      004a1c5f    mov eax,[ebp-6Ch]"
"	      004a1c62    mov eax,[eax]"
"	      004a1c64    mov ecx,[ebp-6Ch]"
"	      004a1c67    call dword ptr [eax+2Ch]"
"	      004a1c6a    test eax,eax"
"	      004a1c6c    jne near ptr 004A1F18h"
);
// LINE 121:
	asm( 
"	      004a1c72    mov eax,[ebp-6Ch]"
"	      004a1c75    mov eax,[eax+0Ch]"
"	      004a1c78    mov [ebp-0Ch],eax"
"	      004a1c7b    mov eax,[ebp-0Ch]"
"	      004a1c7e    mov [ebp-4],eax"
"	      004a1c81    jmp near ptr 004A1C86h"
"	      004a1c86    jmp near ptr 004A1C8Bh"
"	      004a1c8b    mov eax,[ebp-4]"
"	      004a1c8e    mov [ebp-68h],eax"
"	      004a1c91    mov eax,ds:[59A97Ch]"
"	      004a1c96    mov [ebp-18h],eax"
"	      004a1c99    cmp dword ptr ds:[59A97Ch],0"
"	      004a1ca0    je near ptr 004A1CBDh"
"	      004a1ca6    mov eax,ds:[59A97Ch]"
"	      004a1cab    mov eax,[eax]"
"	      004a1cad    mov ds:[59A97Ch],eax"
"	      004a1cb2    mov eax,[ebp-18h]"
"	      004a1cb5    mov [ebp-64h],eax"
"	      004a1cb8    jmp near ptr 004A1E9Ah"
"	      004a1cbd    mov eax,ds:[59A978h]"
"	      004a1cc2    cmp ds:[59A974h],eax"
"	      004a1cc8    jne near ptr 004A1E85h"
"	      004a1cce    push 0"
"	      004a1cd0    call 0056A620h"
"	      004a1cd5    add esp,4"
"	      004a1cd8    push 8"
"	      004a1cda    call 0056A600h"
"	      004a1cdf    add esp,4"
"	      004a1ce2    mov [ebp-50h],eax"
"	      004a1ce5    cmp dword ptr [ebp-50h],0"
"	      004a1ce9    jne near ptr 004A1D1Ch"
"	      004a1cef    push 5971ACh"
"	      004a1cf4    mov ecx,638BA0h"
"	      004a1cf9    call 00569960h"
"	      004a1cfe    mov [ebp-54h],eax"
"	      004a1d01    mov eax,[ebp-54h]"
"	      004a1d04    push eax"
"	      004a1d05    call 004011B0h"
"	      004a1d0a    add esp,4"
"	      004a1d0d    jmp near ptr 004A1D12h"
"	      004a1d12    push 1"
"	      004a1d14    call 00569430h"
"	      004a1d19    add esp,4"
"	      004a1d1c    jmp near ptr 004A1D21h"
"	      004a1d21    jmp near ptr 004A1D26h"
"	      004a1d26    mov eax,[ebp-50h]"
"	      004a1d29    mov [ebp-24h],eax"
"	      004a1d2c    mov dword ptr [ebp-28h],155h"
"	      004a1d33    lea eax,[ebp-28h]"
"	      004a1d36    mov [ebp-30h],eax"
"	      004a1d39    mov dword ptr [ebp-2Ch],1"
"	      004a1d40    lea eax,[ebp-2Ch]"
"	      004a1d43    mov [ebp-34h],eax"
"	      004a1d46    mov eax,[ebp-34h]"
"	      004a1d49    mov ecx,[ebp-30h]"
"	      004a1d4c    mov ecx,[ecx]"
"	      004a1d4e    cmp [eax],ecx"
"	      004a1d50    jb near ptr 004A1D61h"
"	      004a1d56    mov eax,[ebp-34h]"
"	      004a1d59    mov [ebp-38h],eax"
"	      004a1d5c    jmp near ptr 004A1D67h"
"	      004a1d61    mov eax,[ebp-30h]"
"	      004a1d64    mov [ebp-38h],eax"
"	      004a1d67    jmp near ptr 004A1D6Ch"
"	      004a1d6c    jmp near ptr 004A1D71h"
"	      004a1d71    jmp near ptr 004A1D76h"
"	      004a1d76    mov eax,[ebp-38h]"
"	      004a1d79    mov eax,[eax]"
"	      004a1d7b    mov [ebp-60h],eax"
"	      004a1d7e    push 0"
"	      004a1d80    call 0056A620h"
"	      004a1d85    add esp,4"
"	      004a1d88    mov eax,[ebp-60h]"
"	      004a1d8b    lea eax,[eax+eax*2]"
"	      004a1d8e    shl eax,2"
"	      004a1d91    push eax"
"	      004a1d92    call 0056A600h"
"	      004a1d97    add esp,4"
"	      004a1d9a    mov [ebp-58h],eax"
"	      004a1d9d    cmp dword ptr [ebp-58h],0"
"	      004a1da1    jne near ptr 004A1DD4h"
"	      004a1da7    push 5971ACh"
"	      004a1dac    mov ecx,638BA0h"
"	      004a1db1    call 00569960h"
"	      004a1db6    mov [ebp-5Ch],eax"
"	      004a1db9    mov eax,[ebp-5Ch]"
"	      004a1dbc    push eax"
"	      004a1dbd    call 004011B0h"
"	      004a1dc2    add esp,4"
"	      004a1dc5    jmp near ptr 004A1DCAh"
"	      004a1dca    push 1"
"	      004a1dcc    call 00569430h"
"	      004a1dd1    add esp,4"
"	      004a1dd4    jmp near ptr 004A1DD9h"
"	      004a1dd9    jmp near ptr 004A1DDEh"
"	      004a1dde    mov eax,[ebp-58h]"
"	      004a1de1    mov ecx,[ebp-24h]"
"	      004a1de4    mov [ecx+4],eax"
"	      004a1de7    mov eax,ds:[59A980h]"
"	      004a1dec    mov ecx,[ebp-24h]"
"	      004a1def    mov [ecx],eax"
"	      004a1df1    mov eax,[ebp-24h]"
"	      004a1df4    mov ds:[59A980h],eax"
"	      004a1df9    mov eax,ds:[59A980h]"
"	      004a1dfe    mov eax,[eax+4]"
"	      004a1e01    mov ds:[59A978h],eax"
"	      004a1e06    mov dword ptr [ebp-3Ch],155h"
"	      004a1e0d    lea eax,[ebp-3Ch]"
"	      004a1e10    mov [ebp-44h],eax"
"	      004a1e13    mov dword ptr [ebp-40h],1"
"	      004a1e1a    lea eax,[ebp-40h]"
"	      004a1e1d    mov [ebp-48h],eax"
"	      004a1e20    mov eax,[ebp-48h]"
"	      004a1e23    mov ecx,[ebp-44h]"
"	      004a1e26    mov ecx,[ecx]"
"	      004a1e28    cmp [eax],ecx"
"	      004a1e2a    jb near ptr 004A1E3Bh"
"	      004a1e30    mov eax,[ebp-48h]"
"	      004a1e33    mov [ebp-4Ch],eax"
"	      004a1e36    jmp near ptr 004A1E41h"
"	      004a1e3b    mov eax,[ebp-44h]"
"	      004a1e3e    mov [ebp-4Ch],eax"
"	      004a1e41    jmp near ptr 004A1E46h"
"	      004a1e46    jmp near ptr 004A1E4Bh"
"	      004a1e4b    jmp near ptr 004A1E50h"
"	      004a1e50    mov eax,[ebp-4Ch]"
"	      004a1e53    mov eax,[eax]"
"	      004a1e55    lea eax,[eax+eax*2]"
"	      004a1e58    shl eax,2"
"	      004a1e5b    add eax,ds:[59A978h]"
"	      004a1e61    mov ds:[59A974h],eax"
"	      004a1e66    jmp near ptr 004A1E6Bh"
"	      004a1e6b    mov eax,ds:[59A978h]"
"	      004a1e70    mov [ebp-1Ch],eax"
"	      004a1e73    add dword ptr ds:[59A978h],0Ch"
"	      004a1e7a    mov eax,[ebp-1Ch]"
"	      004a1e7d    mov [ebp-64h],eax"
"	      004a1e80    jmp near ptr 004A1E9Ah"
"	      004a1e85    mov eax,ds:[59A978h]"
"	      004a1e8a    mov [ebp-20h],eax"
"	      004a1e8d    add dword ptr ds:[59A978h],0Ch"
"	      004a1e94    mov eax,[ebp-20h]"
"	      004a1e97    mov [ebp-64h],eax"
"	      004a1e9a    jmp near ptr 004A1E9Fh"
"	      004a1e9f    mov eax,[ebp-64h]"
"	      004a1ea2    mov [ebp-10h],eax"
"	      004a1ea5    jmp near ptr 004A1EAAh"
"	      004a1eaa    mov eax,[ebp-10h]"
"	      004a1ead    add eax,8"
"	      004a1eb0    mov [ebp-14h],eax"
"	      004a1eb3    jmp near ptr 004A1EB8h"
"	      004a1eb8    cmp dword ptr [ebp-14h],0"
"	      004a1ebc    je near ptr 004A1ECFh"
"	      004a1ec2    mov eax,[ebp+8]"
"	      004a1ec5    mov ecx,[ebp-14h]"
"	      004a1ec8    mov [ecx],eax"
"	      004a1eca    jmp near ptr 004A1ECFh"
"	      004a1ecf    jmp near ptr 004A1ED4h"
"	      004a1ed4    mov eax,[ebp-68h]"
"	      004a1ed7    mov ecx,[ebp-10h]"
"	      004a1eda    mov [ecx],eax"
"	      004a1edc    mov eax,[ebp-68h]"
"	      004a1edf    mov eax,[eax+4]"
"	      004a1ee2    mov ecx,[ebp-10h]"
"	      004a1ee5    mov [ecx+4],eax"
"	      004a1ee8    mov eax,[ebp-10h]"
"	      004a1eeb    mov ecx,[ebp-68h]"
"	      004a1eee    mov ecx,[ecx+4]"
"	      004a1ef1    mov [ecx],eax"
"	      004a1ef3    mov eax,[ebp-10h]"
"	      004a1ef6    mov ecx,[ebp-68h]"
"	      004a1ef9    mov [ecx+4],eax"
"	      004a1efc    mov eax,[ebp-6Ch]"
"	      004a1eff    add dword ptr [eax+10h],1"
"	      004a1f03    mov eax,[ebp-10h]"
"	      004a1f06    mov [ebp-8],eax"
"	      004a1f09    jmp near ptr 004A1F0Eh"
"	      004a1f0e    jmp near ptr 004A1F13h"
"	      004a1f13    jmp near ptr 004A1F18h"
);
// LINE 123:
	asm( 
"	      004a1f18    mov eax,2"
"	      004a1f1d    jmp near ptr 004A1F47h"
);
// LINE 125:
	asm( 
"	      004a1f22    jmp near ptr 004A1F31h"
);
// LINE 126:
	asm( 
"	      004a1f27    mov eax,[ebp-6Ch]"
"	      004a1f2a    mov dword ptr [eax+4],0"
);
// LINE 129:
	asm( 
"	      004a1f31    mov eax,[ebp+8]"
"	      004a1f34    push eax"
"	      004a1f35    mov ecx,[ebp-6Ch]"
"	      004a1f38    call 004A1F4Eh"
);
// LINE 130:
	asm( 
"	      004a1f3d    mov eax,1"
"	      004a1f42    jmp near ptr 004A1F47h"
);
// LINE 131:
	asm( 
"	      004a1f47    pop edi"
"	      004a1f48    pop esi"
"	      004a1f49    pop ebx"
"	      004a1f4a    leave"
"	      004a1f4b    ret 4"
);
}

// FUNCTION: SIMCOPTER 0x004a1f4e
int32_t GraphicWindowManager::DeleteWindowAndRemoveItsTraces(class GraphicWindow*) {
// LINE 138:
	asm( 
"	      004a1f4e    push ebp"
"	      004a1f4f    mov ebp,esp"
"	      004a1f51    sub esp,10h"
"	      004a1f54    push ebx"
"	      004a1f55    push esi"
"	      004a1f56    push edi"
"	      004a1f57    mov [ebp-10h],ecx"
);
// LINE 139:
	asm( 
"	      004a1f5a    mov eax,[ebp+8]"
"	      004a1f5d    push eax"
"	      004a1f5e    mov eax,[ebp-10h]"
"	      004a1f61    mov eax,[eax]"
"	      004a1f63    mov ecx,[ebp-10h]"
"	      004a1f66    call dword ptr [eax+28h]"
"	      004a1f69    test eax,eax"
"	      004a1f6b    jne near ptr 004A1F78h"
);
// LINE 140:
	asm( 
"	      004a1f71    xor eax,eax"
"	      004a1f73    jmp near ptr 004A1FEBh"
);
// LINE 144:
	asm( 
"	      004a1f78    mov eax,[ebp+8]"
"	      004a1f7b    mov eax,[eax+3Ch]"
"	      004a1f7e    mov [ebp-4],eax"
);
// LINE 145:
	asm( 
"	      004a1f81    cmp dword ptr [ebp-4],0"
"	      004a1f85    je near ptr 004A1FB6h"
);
// LINE 146:
	asm( 
"	      004a1f8b    mov eax,[ebp-4]"
"	      004a1f8e    push eax"
"	      004a1f8f    mov eax,[ebp-10h]"
"	      004a1f92    mov eax,[eax]"
"	      004a1f94    mov ecx,[ebp-10h]"
"	      004a1f97    call dword ptr [eax+28h]"
"	      004a1f9a    test eax,eax"
"	      004a1f9c    je near ptr 004A1FB1h"
);
// LINE 147:
	asm( 
"	      004a1fa2    mov eax,[ebp+8]"
"	      004a1fa5    push eax"
"	      004a1fa6    mov eax,[ebp-4]"
"	      004a1fa9    mov eax,[eax]"
"	      004a1fab    mov ecx,[ebp-4]"
"	      004a1fae    call dword ptr [eax+5Ch]"
);
// LINE 149:
	asm( 
"	      004a1fb1    jmp near ptr 004A1FE1h"
);
// LINE 150:
	asm( 
"	      004a1fb6    mov eax,[ebp+8]"
"	      004a1fb9    mov [ebp-0Ch],eax"
"	      004a1fbc    mov eax,[ebp-0Ch]"
"	      004a1fbf    mov [ebp-8],eax"
"	      004a1fc2    cmp dword ptr [ebp-8],0"
"	      004a1fc6    je near ptr 004A1FE1h"
"	      004a1fcc    push 1"
"	      004a1fce    mov eax,[ebp-8]"
"	      004a1fd1    mov eax,[eax]"
"	      004a1fd3    mov ecx,[ebp-8]"
"	      004a1fd6    call dword ptr [eax+0ACh]"
"	      004a1fdc    jmp near ptr 004A1FE1h"
);
// LINE 155:
	asm( 
"	      004a1fe1    mov eax,1"
"	      004a1fe6    jmp near ptr 004A1FEBh"
);
// LINE 156:
	asm( 
"	      004a1feb    pop edi"
"	      004a1fec    pop esi"
"	      004a1fed    pop ebx"
"	      004a1fee    leave"
"	      004a1fef    ret 4"
);
}

// FUNCTION: SIMCOPTER 0x004a1ff2
int32_t GraphicWindowManager::DeleteAllWindowsInDeletionList() {
// LINE 162:
	asm( 
"	      004a1ff2    push ebp"
"	      004a1ff3    mov ebp,esp"
"	      004a1ff5    sub esp,50h"
"	      004a1ff8    push ebx"
"	      004a1ff9    push esi"
"	      004a1ffa    push edi"
"	      004a1ffb    mov [ebp-50h],ecx"
);
// LINE 165:
	asm( 
"	      004a1ffe    cmp dword ptr ds:[59A96Ch],0"
"	      004a2005    jle near ptr 004A2012h"
);
// LINE 166:
	asm( 
"	      004a200b    xor eax,eax"
"	      004a200d    jmp near ptr 004A21D1h"
);
// LINE 167:
	asm( 
"	      004a2012    inc dword ptr ds:[59A96Ch]"
);
// LINE 169:
	asm( 
"	      004a2018    mov eax,[ebp-50h]"
"	      004a201b    mov eax,[eax+0Ch]"
"	      004a201e    mov eax,[eax]"
"	      004a2020    mov [ebp-2Ch],eax"
"	      004a2023    mov eax,[ebp-2Ch]"
"	      004a2026    mov [ebp-4],eax"
"	      004a2029    jmp near ptr 004A202Eh"
"	      004a202e    jmp near ptr 004A2033h"
);
// LINE 170:
	asm( 
"	      004a2033    mov eax,[ebp-50h]"
"	      004a2036    cmp dword ptr [eax+4],0"
"	      004a203a    jg near ptr 004A21C1h"
);
// LINE 171:
	asm( 
"	      004a2040    mov eax,[ebp-50h]"
"	      004a2043    mov eax,[eax+0Ch]"
"	      004a2046    mov [ebp-20h],eax"
"	      004a2049    mov eax,[ebp-20h]"
"	      004a204c    mov [ebp-8],eax"
"	      004a204f    jmp near ptr 004A2054h"
"	      004a2054    jmp near ptr 004A2059h"
"	      004a2059    mov eax,[ebp-8]"
"	      004a205c    cmp [ebp-4],eax"
"	      004a205f    jne near ptr 004A206Fh"
"	      004a2065    jmp near ptr 004A2083h"
"	      004a206a    jmp near ptr 004A206Fh"
"	      004a206f    jmp near ptr 004A207Eh"
"	      004a2074    cmp dword ptr [ebp-24h],0"
"	      004a2078    jne near ptr 004A2083h"
"	      004a207e    jmp near ptr 004A2088h"
"	      004a2083    jmp near ptr 004A20CEh"
"	      004a2088    jmp near ptr 004A2097h"
"	      004a208d    cmp dword ptr [ebp-28h],0"
"	      004a2091    je near ptr 004A20CEh"
);
// LINE 172:
	asm( 
"	      004a2097    jmp near ptr 004A209Ch"
"	      004a209c    mov eax,[ebp-4]"
"	      004a209f    mov eax,[eax+8]"
"	      004a20a2    push eax"
"	      004a20a3    mov ecx,[ebp-50h]"
"	      004a20a6    call 004A1F4Eh"
);
// LINE 173:
	asm( 
"	      004a20ab    mov eax,[ebp-4]"
"	      004a20ae    mov [ebp-4Ch],eax"
"	      004a20b1    mov eax,[ebp-4]"
"	      004a20b4    mov eax,[eax]"
"	      004a20b6    mov [ebp-4],eax"
"	      004a20b9    jmp near ptr 004A20BEh"
"	      004a20be    mov eax,[ebp-4Ch]"
"	      004a20c1    mov [ebp-0Ch],eax"
"	      004a20c4    jmp near ptr 004A20C9h"
);
// LINE 174:
	asm( 
"	      004a20c9    jmp near ptr 004A2040h"
);
// LINE 175:
	asm( 
"	      004a20ce    mov eax,[ebp-50h]"
"	      004a20d1    mov eax,[eax+0Ch]"
"	      004a20d4    mov [ebp-18h],eax"
"	      004a20d7    mov eax,[ebp-18h]"
"	      004a20da    mov [ebp-10h],eax"
"	      004a20dd    jmp near ptr 004A20E2h"
"	      004a20e2    jmp near ptr 004A20E7h"
"	      004a20e7    mov eax,[ebp-50h]"
"	      004a20ea    mov eax,[eax+0Ch]"
"	      004a20ed    mov eax,[eax]"
"	      004a20ef    mov [ebp-1Ch],eax"
"	      004a20f2    mov eax,[ebp-1Ch]"
"	      004a20f5    mov [ebp-14h],eax"
"	      004a20f8    jmp near ptr 004A20FDh"
"	      004a20fd    jmp near ptr 004A2102h"
"	      004a2102    mov eax,[ebp-10h]"
"	      004a2105    mov [ebp-44h],eax"
"	      004a2108    mov eax,[ebp-14h]"
"	      004a210b    mov [ebp-48h],eax"
"	      004a210e    mov eax,[ebp-44h]"
"	      004a2111    cmp [ebp-48h],eax"
"	      004a2114    jne near ptr 004A2124h"
"	      004a211a    jmp near ptr 004A2138h"
"	      004a211f    jmp near ptr 004A2124h"
"	      004a2124    jmp near ptr 004A2133h"
"	      004a2129    cmp dword ptr [ebp-38h],0"
"	      004a212d    jne near ptr 004A2138h"
"	      004a2133    jmp near ptr 004A213Dh"
"	      004a2138    jmp near ptr 004A21BCh"
"	      004a213d    jmp near ptr 004A214Ch"
"	      004a2142    cmp dword ptr [ebp-3Ch],0"
"	      004a2146    je near ptr 004A21BCh"
"	      004a214c    mov eax,[ebp-48h]"
"	      004a214f    mov [ebp-34h],eax"
"	      004a2152    mov eax,[ebp-48h]"
"	      004a2155    mov eax,[eax]"
"	      004a2157    mov [ebp-48h],eax"
"	      004a215a    jmp near ptr 004A215Fh"
"	      004a215f    mov eax,[ebp-34h]"
"	      004a2162    mov [ebp-30h],eax"
"	      004a2165    jmp near ptr 004A216Ah"
"	      004a216a    mov eax,[ebp-30h]"
"	      004a216d    mov [ebp-40h],eax"
"	      004a2170    mov eax,[ebp-40h]"
"	      004a2173    mov eax,[eax]"
"	      004a2175    mov ecx,[ebp-40h]"
"	      004a2178    mov ecx,[ecx+4]"
"	      004a217b    mov [ecx],eax"
"	      004a217d    mov eax,[ebp-40h]"
"	      004a2180    mov eax,[eax+4]"
"	      004a2183    mov ecx,[ebp-40h]"
"	      004a2186    mov ecx,[ecx]"
"	      004a2188    mov [ecx+4],eax"
"	      004a218b    jmp near ptr 004A2190h"
"	      004a2190    jmp near ptr 004A2195h"
"	      004a2195    mov eax,ds:[59A97Ch]"
"	      004a219a    mov ecx,[ebp-40h]"
"	      004a219d    mov [ecx],eax"
"	      004a219f    mov eax,[ebp-40h]"
"	      004a21a2    mov ds:[59A97Ch],eax"
"	      004a21a7    jmp near ptr 004A21ACh"
"	      004a21ac    mov eax,[ebp-50h]"
"	      004a21af    dec dword ptr [eax+10h]"
"	      004a21b2    jmp near ptr 004A21B7h"
"	      004a21b7    jmp near ptr 004A210Eh"
"	      004a21bc    jmp near ptr 004A21C1h"
);
// LINE 177:
	asm( 
"	      004a21c1    dec dword ptr ds:[59A96Ch]"
);
// LINE 178:
	asm( 
"	      004a21c7    mov eax,1"
"	      004a21cc    jmp near ptr 004A21D1h"
);
// LINE 179:
	asm( 
"	      004a21d1    pop edi"
"	      004a21d2    pop esi"
"	      004a21d3    pop ebx"
"	      004a21d4    leave"
"	      004a21d5    ret"
);
}

// FUNCTION: SIMCOPTER 0x004a21d6
int32_t GraphicWindowManager::IsWindowOrParentInDeletionList(class GraphicWindow*) {
// LINE 191:
	asm( 
"	      004a21d6    push ebp"
"	      004a21d7    mov ebp,esp"
"	      004a21d9    sub esp,28h"
"	      004a21dc    push ebx"
"	      004a21dd    push esi"
"	      004a21de    push edi"
"	      004a21df    mov [ebp-28h],ecx"
);
// LINE 192:
	asm( 
"	      004a21e2    mov eax,[ebp-28h]"
"	      004a21e5    mov eax,[eax+0Ch]"
"	      004a21e8    mov eax,[eax]"
"	      004a21ea    mov [ebp-20h],eax"
"	      004a21ed    mov eax,[ebp-20h]"
"	      004a21f0    mov [ebp-4],eax"
"	      004a21f3    jmp near ptr 004A21F8h"
"	      004a21f8    jmp near ptr 004A21FDh"
);
// LINE 195:
	asm( 
"	      004a21fd    mov eax,[ebp-28h]"
"	      004a2200    mov eax,[eax+0Ch]"
"	      004a2203    mov [ebp-14h],eax"
"	      004a2206    mov eax,[ebp-14h]"
"	      004a2209    mov [ebp-0Ch],eax"
"	      004a220c    jmp near ptr 004A2211h"
"	      004a2211    jmp near ptr 004A2216h"
"	      004a2216    mov eax,[ebp-4]"
"	      004a2219    cmp [ebp-0Ch],eax"
"	      004a221c    jne near ptr 004A222Ch"
"	      004a2222    jmp near ptr 004A2240h"
"	      004a2227    jmp near ptr 004A222Ch"
"	      004a222c    jmp near ptr 004A223Bh"
"	      004a2231    cmp dword ptr [ebp-18h],0"
"	      004a2235    jne near ptr 004A2240h"
"	      004a223b    jmp near ptr 004A2245h"
"	      004a2240    jmp near ptr 004A22B3h"
"	      004a2245    jmp near ptr 004A2254h"
"	      004a224a    cmp dword ptr [ebp-1Ch],0"
"	      004a224e    je near ptr 004A22B3h"
);
// LINE 196:
	asm( 
"	      004a2254    mov eax,[ebp+8]"
"	      004a2257    mov [ebp-8],eax"
);
// LINE 197:
	asm( 
"	      004a225a    cmp dword ptr [ebp-8],0"
"	      004a225e    je near ptr 004A2290h"
);
// LINE 198:
	asm( 
"	      004a2264    jmp near ptr 004A2269h"
"	      004a2269    mov eax,[ebp-4]"
"	      004a226c    mov ecx,[ebp-8]"
"	      004a226f    cmp [eax+8],ecx"
"	      004a2272    jne near ptr 004A2282h"
);
// LINE 199:
	asm( 
"	      004a2278    mov eax,1"
"	      004a227d    jmp near ptr 004A22BAh"
);
// LINE 201:
	asm( 
"	      004a2282    mov eax,[ebp-8]"
"	      004a2285    mov eax,[eax+3Ch]"
"	      004a2288    mov [ebp-8],eax"
);
// LINE 202:
	asm( 
"	      004a228b    jmp near ptr 004A225Ah"
);
// LINE 203:
	asm( 
"	      004a2290    mov eax,[ebp-4]"
"	      004a2293    mov [ebp-24h],eax"
"	      004a2296    mov eax,[ebp-4]"
"	      004a2299    mov eax,[eax]"
"	      004a229b    mov [ebp-4],eax"
"	      004a229e    jmp near ptr 004A22A3h"
"	      004a22a3    mov eax,[ebp-24h]"
"	      004a22a6    mov [ebp-10h],eax"
"	      004a22a9    jmp near ptr 004A22AEh"
);
// LINE 204:
	asm( 
"	      004a22ae    jmp near ptr 004A21FDh"
);
// LINE 205:
	asm( 
"	      004a22b3    xor eax,eax"
"	      004a22b5    jmp near ptr 004A22BAh"
);
// LINE 206:
	asm( 
"	      004a22ba    pop edi"
"	      004a22bb    pop esi"
"	      004a22bc    pop ebx"
"	      004a22bd    leave"
"	      004a22be    ret 4"
);
}

// FUNCTION: SIMCOPTER 0x004a22c1
long GraphicWindowManager::DoKeyDown(long, char) {
// LINE 217:
	asm( 
"	      004a22c1    push ebp"
"	      004a22c2    mov ebp,esp"
"	      004a22c4    sub esp,2Ch"
"	      004a22c7    push ebx"
"	      004a22c8    push esi"
"	      004a22c9    push edi"
"	      004a22ca    mov [ebp-2Ch],ecx"
);
// LINE 219:
	asm( 
"	      004a22cd    mov eax,ds:[606960h]"
"	      004a22d2    mov eax,[eax]"
"	      004a22d4    mov [ebp-24h],eax"
"	      004a22d7    mov eax,[ebp-24h]"
"	      004a22da    mov [ebp-0Ch],eax"
"	      004a22dd    jmp near ptr 004A22E2h"
"	      004a22e2    jmp near ptr 004A22E7h"
);
// LINE 220:
	asm( 
"	      004a22e7    mov dword ptr [ebp-8],0"
);
// LINE 222:
	asm( 
"	      004a22ee    mov eax,[ebp-2Ch]"
"	      004a22f1    inc dword ptr [eax+4]"
);
// LINE 223:
	asm( 
"	      004a22f4    mov eax,ds:[606960h]"
"	      004a22f9    mov [ebp-18h],eax"
"	      004a22fc    mov eax,[ebp-18h]"
"	      004a22ff    mov [ebp-10h],eax"
"	      004a2302    jmp near ptr 004A2307h"
"	      004a2307    jmp near ptr 004A230Ch"
"	      004a230c    mov eax,[ebp-0Ch]"
"	      004a230f    cmp [ebp-10h],eax"
"	      004a2312    jne near ptr 004A2322h"
"	      004a2318    jmp near ptr 004A2336h"
"	      004a231d    jmp near ptr 004A2322h"
"	      004a2322    jmp near ptr 004A2331h"
"	      004a2327    cmp dword ptr [ebp-1Ch],0"
"	      004a232b    jne near ptr 004A2336h"
"	      004a2331    jmp near ptr 004A233Bh"
"	      004a2336    jmp near ptr 004A23A6h"
"	      004a233b    jmp near ptr 004A234Ah"
"	      004a2340    cmp dword ptr [ebp-20h],0"
"	      004a2344    je near ptr 004A23A6h"
);
// LINE 224:
	asm( 
"	      004a234a    jmp near ptr 004A234Fh"
"	      004a234f    mov eax,[ebp-0Ch]"
"	      004a2352    mov eax,[eax+8]"
"	      004a2355    mov [ebp-4],eax"
);
// LINE 225:
	asm( 
"	      004a2358    mov eax,[ebp-4]"
"	      004a235b    cmp dword ptr [eax+54h],0"
"	      004a235f    je near ptr 004A2383h"
);
// LINE 226:
	asm( 
"	      004a2365    mov eax,[ebp+0Ch]"
"	      004a2368    push eax"
"	      004a2369    mov eax,[ebp+8]"
"	      004a236c    push eax"
"	      004a236d    mov eax,[ebp-4]"
"	      004a2370    mov eax,[eax]"
"	      004a2372    mov ecx,[ebp-4]"
"	      004a2375    call dword ptr [eax+84h]"
"	      004a237b    mov [ebp-8],eax"
);
// LINE 227:
	asm( 
"	      004a237e    jmp near ptr 004A23A6h"
);
// LINE 229:
	asm( 
"	      004a2383    mov eax,[ebp-0Ch]"
"	      004a2386    mov [ebp-28h],eax"
"	      004a2389    mov eax,[ebp-0Ch]"
"	      004a238c    mov eax,[eax]"
"	      004a238e    mov [ebp-0Ch],eax"
"	      004a2391    jmp near ptr 004A2396h"
"	      004a2396    mov eax,[ebp-28h]"
"	      004a2399    mov [ebp-14h],eax"
"	      004a239c    jmp near ptr 004A23A1h"
);
// LINE 230:
	asm( 
"	      004a23a1    jmp near ptr 004A22F4h"
);
// LINE 231:
	asm( 
"	      004a23a6    mov eax,[ebp-2Ch]"
"	      004a23a9    dec dword ptr [eax+4]"
);
// LINE 232:
	asm( 
"	      004a23ac    mov eax,[ebp-2Ch]"
"	      004a23af    cmp dword ptr [eax+4],0"
"	      004a23b3    jg near ptr 004A23CBh"
);
// LINE 233:
	asm( 
"	      004a23b9    mov eax,[ebp-2Ch]"
"	      004a23bc    mov dword ptr [eax+4],0"
);
// LINE 234:
	asm( 
"	      004a23c3    mov ecx,[ebp-2Ch]"
"	      004a23c6    call 004A1FF2h"
);
// LINE 237:
	asm( 
"	      004a23cb    mov eax,[ebp-8]"
"	      004a23ce    jmp near ptr 004A23D3h"
);
// LINE 238:
	asm( 
"	      004a23d3    pop edi"
"	      004a23d4    pop esi"
"	      004a23d5    pop ebx"
"	      004a23d6    leave"
"	      004a23d7    ret 8"
);
}

// FUNCTION: SIMCOPTER 0x004a23da
long GraphicWindowManager::DoKeyUp(long, char) {
// LINE 249:
	asm( 
"	      004a23da    push ebp"
"	      004a23db    mov ebp,esp"
"	      004a23dd    sub esp,2Ch"
"	      004a23e0    push ebx"
"	      004a23e1    push esi"
"	      004a23e2    push edi"
"	      004a23e3    mov [ebp-2Ch],ecx"
);
// LINE 251:
	asm( 
"	      004a23e6    mov eax,ds:[606960h]"
"	      004a23eb    mov eax,[eax]"
"	      004a23ed    mov [ebp-24h],eax"
"	      004a23f0    mov eax,[ebp-24h]"
"	      004a23f3    mov [ebp-0Ch],eax"
"	      004a23f6    jmp near ptr 004A23FBh"
"	      004a23fb    jmp near ptr 004A2400h"
);
// LINE 252:
	asm( 
"	      004a2400    mov dword ptr [ebp-8],0"
);
// LINE 254:
	asm( 
"	      004a2407    mov eax,[ebp-2Ch]"
"	      004a240a    inc dword ptr [eax+4]"
);
// LINE 255:
	asm( 
"	      004a240d    mov eax,ds:[606960h]"
"	      004a2412    mov [ebp-18h],eax"
"	      004a2415    mov eax,[ebp-18h]"
"	      004a2418    mov [ebp-10h],eax"
"	      004a241b    jmp near ptr 004A2420h"
"	      004a2420    jmp near ptr 004A2425h"
"	      004a2425    mov eax,[ebp-10h]"
"	      004a2428    cmp [ebp-0Ch],eax"
"	      004a242b    jne near ptr 004A243Bh"
"	      004a2431    jmp near ptr 004A244Fh"
"	      004a2436    jmp near ptr 004A243Bh"
"	      004a243b    jmp near ptr 004A244Ah"
"	      004a2440    cmp dword ptr [ebp-1Ch],0"
"	      004a2444    jne near ptr 004A244Fh"
"	      004a244a    jmp near ptr 004A2454h"
"	      004a244f    jmp near ptr 004A24BFh"
"	      004a2454    jmp near ptr 004A2463h"
"	      004a2459    cmp dword ptr [ebp-20h],0"
"	      004a245d    je near ptr 004A24BFh"
);
// LINE 256:
	asm( 
"	      004a2463    jmp near ptr 004A2468h"
"	      004a2468    mov eax,[ebp-0Ch]"
"	      004a246b    mov eax,[eax+8]"
"	      004a246e    mov [ebp-4],eax"
);
// LINE 257:
	asm( 
"	      004a2471    mov eax,[ebp-4]"
"	      004a2474    cmp dword ptr [eax+54h],0"
"	      004a2478    je near ptr 004A249Ch"
);
// LINE 258:
	asm( 
"	      004a247e    mov eax,[ebp+0Ch]"
"	      004a2481    push eax"
"	      004a2482    mov eax,[ebp+8]"
"	      004a2485    push eax"
"	      004a2486    mov eax,[ebp-4]"
"	      004a2489    mov eax,[eax]"
"	      004a248b    mov ecx,[ebp-4]"
"	      004a248e    call dword ptr [eax+88h]"
"	      004a2494    mov [ebp-8],eax"
);
// LINE 259:
	asm( 
"	      004a2497    jmp near ptr 004A24BFh"
);
// LINE 261:
	asm( 
"	      004a249c    mov eax,[ebp-0Ch]"
"	      004a249f    mov [ebp-28h],eax"
"	      004a24a2    mov eax,[ebp-0Ch]"
"	      004a24a5    mov eax,[eax]"
"	      004a24a7    mov [ebp-0Ch],eax"
"	      004a24aa    jmp near ptr 004A24AFh"
"	      004a24af    mov eax,[ebp-28h]"
"	      004a24b2    mov [ebp-14h],eax"
"	      004a24b5    jmp near ptr 004A24BAh"
);
// LINE 262:
	asm( 
"	      004a24ba    jmp near ptr 004A240Dh"
);
// LINE 263:
	asm( 
"	      004a24bf    mov eax,[ebp-2Ch]"
"	      004a24c2    dec dword ptr [eax+4]"
);
// LINE 264:
	asm( 
"	      004a24c5    mov eax,[ebp-2Ch]"
"	      004a24c8    cmp dword ptr [eax+4],0"
"	      004a24cc    jg near ptr 004A24E4h"
);
// LINE 265:
	asm( 
"	      004a24d2    mov eax,[ebp-2Ch]"
"	      004a24d5    mov dword ptr [eax+4],0"
);
// LINE 266:
	asm( 
"	      004a24dc    mov ecx,[ebp-2Ch]"
"	      004a24df    call 004A1FF2h"
);
// LINE 269:
	asm( 
"	      004a24e4    mov eax,[ebp-8]"
"	      004a24e7    jmp near ptr 004A24ECh"
);
// LINE 270:
	asm( 
"	      004a24ec    pop edi"
"	      004a24ed    pop esi"
"	      004a24ee    pop ebx"
"	      004a24ef    leave"
"	      004a24f0    ret 8"
);
}

// FUNCTION: SIMCOPTER 0x004a24f3
long GraphicWindowManager::DoCharacter(long) {
// LINE 276:
	asm( 
"	      004a24f3    push ebp"
"	      004a24f4    mov ebp,esp"
"	      004a24f6    sub esp,2Ch"
"	      004a24f9    push ebx"
"	      004a24fa    push esi"
"	      004a24fb    push edi"
"	      004a24fc    mov [ebp-2Ch],ecx"
);
// LINE 278:
	asm( 
"	      004a24ff    mov eax,ds:[606960h]"
"	      004a2504    mov eax,[eax]"
"	      004a2506    mov [ebp-24h],eax"
"	      004a2509    mov eax,[ebp-24h]"
"	      004a250c    mov [ebp-0Ch],eax"
"	      004a250f    jmp near ptr 004A2514h"
"	      004a2514    jmp near ptr 004A2519h"
);
// LINE 279:
	asm( 
"	      004a2519    mov dword ptr [ebp-8],0"
);
// LINE 281:
	asm( 
"	      004a2520    mov eax,[ebp-2Ch]"
"	      004a2523    inc dword ptr [eax+4]"
);
// LINE 282:
	asm( 
"	      004a2526    mov eax,ds:[606960h]"
"	      004a252b    mov [ebp-18h],eax"
"	      004a252e    mov eax,[ebp-18h]"
"	      004a2531    mov [ebp-10h],eax"
"	      004a2534    jmp near ptr 004A2539h"
"	      004a2539    jmp near ptr 004A253Eh"
"	      004a253e    mov eax,[ebp-0Ch]"
"	      004a2541    cmp [ebp-10h],eax"
"	      004a2544    jne near ptr 004A2554h"
"	      004a254a    jmp near ptr 004A2568h"
"	      004a254f    jmp near ptr 004A2554h"
"	      004a2554    jmp near ptr 004A2563h"
"	      004a2559    cmp dword ptr [ebp-1Ch],0"
"	      004a255d    jne near ptr 004A2568h"
"	      004a2563    jmp near ptr 004A256Dh"
"	      004a2568    jmp near ptr 004A25D4h"
"	      004a256d    jmp near ptr 004A257Ch"
"	      004a2572    cmp dword ptr [ebp-20h],0"
"	      004a2576    je near ptr 004A25D4h"
);
// LINE 283:
	asm( 
"	      004a257c    jmp near ptr 004A2581h"
"	      004a2581    mov eax,[ebp-0Ch]"
"	      004a2584    mov eax,[eax+8]"
"	      004a2587    mov [ebp-4],eax"
);
// LINE 284:
	asm( 
"	      004a258a    mov eax,[ebp-4]"
"	      004a258d    cmp dword ptr [eax+54h],0"
"	      004a2591    je near ptr 004A25B1h"
);
// LINE 285:
	asm( 
"	      004a2597    mov eax,[ebp+8]"
"	      004a259a    push eax"
"	      004a259b    mov eax,[ebp-4]"
"	      004a259e    mov eax,[eax]"
"	      004a25a0    mov ecx,[ebp-4]"
"	      004a25a3    call dword ptr [eax+80h]"
"	      004a25a9    mov [ebp-8],eax"
);
// LINE 286:
	asm( 
"	      004a25ac    jmp near ptr 004A25D4h"
);
// LINE 288:
	asm( 
"	      004a25b1    mov eax,[ebp-0Ch]"
"	      004a25b4    mov [ebp-28h],eax"
"	      004a25b7    mov eax,[ebp-0Ch]"
"	      004a25ba    mov eax,[eax]"
"	      004a25bc    mov [ebp-0Ch],eax"
"	      004a25bf    jmp near ptr 004A25C4h"
"	      004a25c4    mov eax,[ebp-28h]"
"	      004a25c7    mov [ebp-14h],eax"
"	      004a25ca    jmp near ptr 004A25CFh"
);
// LINE 289:
	asm( 
"	      004a25cf    jmp near ptr 004A2526h"
);
// LINE 290:
	asm( 
"	      004a25d4    mov eax,[ebp-2Ch]"
"	      004a25d7    dec dword ptr [eax+4]"
);
// LINE 291:
	asm( 
"	      004a25da    mov eax,[ebp-2Ch]"
"	      004a25dd    cmp dword ptr [eax+4],0"
"	      004a25e1    jg near ptr 004A25F9h"
);
// LINE 292:
	asm( 
"	      004a25e7    mov eax,[ebp-2Ch]"
"	      004a25ea    mov dword ptr [eax+4],0"
);
// LINE 293:
	asm( 
"	      004a25f1    mov ecx,[ebp-2Ch]"
"	      004a25f4    call 004A1FF2h"
);
// LINE 296:
	asm( 
"	      004a25f9    mov eax,[ebp-8]"
"	      004a25fc    jmp near ptr 004A2601h"
);
// LINE 297:
	asm( 
"	      004a2601    pop edi"
"	      004a2602    pop esi"
"	      004a2603    pop ebx"
"	      004a2604    leave"
"	      004a2605    ret 4"
);
}

// FUNCTION: SIMCOPTER 0x004a2608
long GraphicWindowManager::DoCursorDown(long, long, unsigned long) {
// LINE 303:
	asm( 
"	      004a2608    push ebp"
"	      004a2609    mov ebp,esp"
"	      004a260b    sub esp,4"
"	      004a260e    push ebx"
"	      004a260f    push esi"
"	      004a2610    push edi"
"	      004a2611    mov [ebp-4],ecx"
);
// LINE 308:
	asm( 
"	      004a2614    cmp dword ptr ds:[59A960h],0"
"	      004a261b    je near ptr 004A2660h"
);
// LINE 314:
	asm( 
"	      004a2621    lea eax,[ebp+0Ch]"
"	      004a2624    push eax"
"	      004a2625    lea eax,[ebp+8]"
"	      004a2628    push eax"
"	      004a2629    mov eax,ds:[59A960h]"
"	      004a262e    mov eax,[eax]"
"	      004a2630    mov ecx,ds:[59A960h]"
"	      004a2636    call dword ptr [eax+0A4h]"
);
// LINE 315:
	asm( 
"	      004a263c    mov eax,[ebp+10h]"
"	      004a263f    push eax"
"	      004a2640    mov eax,[ebp+0Ch]"
"	      004a2643    push eax"
"	      004a2644    mov eax,[ebp+8]"
"	      004a2647    push eax"
"	      004a2648    mov eax,ds:[59A960h]"
"	      004a264d    mov eax,[eax]"
"	      004a264f    mov ecx,ds:[59A960h]"
"	      004a2655    call dword ptr [eax+8Ch]"
"	      004a265b    jmp near ptr 004A2685h"
);
// LINE 320:
	asm( 
"	      004a2660    mov eax,[ebp+10h]"
"	      004a2663    push eax"
"	      004a2664    mov eax,[ebp+0Ch]"
"	      004a2667    push eax"
"	      004a2668    mov eax,[ebp+8]"
"	      004a266b    push eax"
"	      004a266c    push 1"
"	      004a266e    mov eax,[ebp-4]"
"	      004a2671    mov eax,[eax+8]"
"	      004a2674    push eax"
"	      004a2675    mov eax,[ebp-4]"
"	      004a2678    mov eax,[eax]"
"	      004a267a    mov ecx,[ebp-4]"
"	      004a267d    call dword ptr [eax+20h]"
"	      004a2680    jmp near ptr 004A2685h"
);
// LINE 321:
	asm( 
"	      004a2685    pop edi"
"	      004a2686    pop esi"
"	      004a2687    pop ebx"
"	      004a2688    leave"
"	      004a2689    ret 0Ch"
);
}

// FUNCTION: SIMCOPTER 0x004a268c
long GraphicWindowManager::DoCursorUp(long, long, unsigned long) {
// LINE 329:
	asm( 
"	      004a268c    push ebp"
"	      004a268d    mov ebp,esp"
"	      004a268f    sub esp,4"
"	      004a2692    push ebx"
"	      004a2693    push esi"
"	      004a2694    push edi"
"	      004a2695    mov [ebp-4],ecx"
);
// LINE 330:
	asm( 
"	      004a2698    cmp dword ptr ds:[59A960h],0"
"	      004a269f    je near ptr 004A26E4h"
);
// LINE 331:
	asm( 
"	      004a26a5    lea eax,[ebp+0Ch]"
"	      004a26a8    push eax"
"	      004a26a9    lea eax,[ebp+8]"
"	      004a26ac    push eax"
"	      004a26ad    mov eax,ds:[59A960h]"
"	      004a26b2    mov eax,[eax]"
"	      004a26b4    mov ecx,ds:[59A960h]"
"	      004a26ba    call dword ptr [eax+0A4h]"
);
// LINE 332:
	asm( 
"	      004a26c0    mov eax,[ebp+10h]"
"	      004a26c3    push eax"
"	      004a26c4    mov eax,[ebp+0Ch]"
"	      004a26c7    push eax"
"	      004a26c8    mov eax,[ebp+8]"
"	      004a26cb    push eax"
"	      004a26cc    mov eax,ds:[59A960h]"
"	      004a26d1    mov eax,[eax]"
"	      004a26d3    mov ecx,ds:[59A960h]"
"	      004a26d9    call dword ptr [eax+90h]"
"	      004a26df    jmp near ptr 004A2709h"
);
// LINE 336:
	asm( 
"	      004a26e4    mov eax,[ebp+10h]"
"	      004a26e7    push eax"
"	      004a26e8    mov eax,[ebp+0Ch]"
"	      004a26eb    push eax"
"	      004a26ec    mov eax,[ebp+8]"
"	      004a26ef    push eax"
"	      004a26f0    push 2"
"	      004a26f2    mov eax,[ebp-4]"
"	      004a26f5    mov eax,[eax+8]"
"	      004a26f8    push eax"
"	      004a26f9    mov eax,[ebp-4]"
"	      004a26fc    mov eax,[eax]"
"	      004a26fe    mov ecx,[ebp-4]"
"	      004a2701    call dword ptr [eax+20h]"
"	      004a2704    jmp near ptr 004A2709h"
);
// LINE 337:
	asm( 
"	      004a2709    pop edi"
"	      004a270a    pop esi"
"	      004a270b    pop ebx"
"	      004a270c    leave"
"	      004a270d    ret 0Ch"
);
}

// FUNCTION: SIMCOPTER 0x004a2710
long GraphicWindowManager::DoCursorMove(long, long) {
// LINE 343:
	asm( 
"	      004a2710    push ebp"
"	      004a2711    mov ebp,esp"
"	      004a2713    sub esp,4"
"	      004a2716    push ebx"
"	      004a2717    push esi"
"	      004a2718    push edi"
"	      004a2719    mov [ebp-4],ecx"
);
// LINE 344:
	asm( 
"	      004a271c    cmp dword ptr ds:[59A960h],0"
"	      004a2723    je near ptr 004A2764h"
);
// LINE 345:
	asm( 
"	      004a2729    lea eax,[ebp+0Ch]"
"	      004a272c    push eax"
"	      004a272d    lea eax,[ebp+8]"
"	      004a2730    push eax"
"	      004a2731    mov eax,ds:[59A960h]"
"	      004a2736    mov eax,[eax]"
"	      004a2738    mov ecx,ds:[59A960h]"
"	      004a273e    call dword ptr [eax+0A4h]"
);
// LINE 346:
	asm( 
"	      004a2744    mov eax,[ebp+0Ch]"
"	      004a2747    push eax"
"	      004a2748    mov eax,[ebp+8]"
"	      004a274b    push eax"
"	      004a274c    mov eax,ds:[59A960h]"
"	      004a2751    mov eax,[eax]"
"	      004a2753    mov ecx,ds:[59A960h]"
"	      004a2759    call dword ptr [eax+94h]"
"	      004a275f    jmp near ptr 004A2787h"
);
// LINE 350:
	asm( 
"	      004a2764    push 0"
"	      004a2766    mov eax,[ebp+0Ch]"
"	      004a2769    push eax"
"	      004a276a    mov eax,[ebp+8]"
"	      004a276d    push eax"
"	      004a276e    push 4"
"	      004a2770    mov eax,[ebp-4]"
"	      004a2773    mov eax,[eax+8]"
"	      004a2776    push eax"
"	      004a2777    mov eax,[ebp-4]"
"	      004a277a    mov eax,[eax]"
"	      004a277c    mov ecx,[ebp-4]"
"	      004a277f    call dword ptr [eax+20h]"
"	      004a2782    jmp near ptr 004A2787h"
);
// LINE 351:
	asm( 
"	      004a2787    pop edi"
"	      004a2788    pop esi"
"	      004a2789    pop ebx"
"	      004a278a    leave"
"	      004a278b    ret 8"
);
}

// FUNCTION: SIMCOPTER 0x004a278e
int32_t GraphicWindowManager::SendCursorMessageToChildWindow(class GraphicWindow*, int32_t, long, long, unsigned long) {
// LINE 359:
	asm( 
"	      004a278e    push ebp"
"	      004a278f    mov ebp,esp"
"	      004a2791    sub esp,30h"
"	      004a2794    push ebx"
"	      004a2795    push esi"
"	      004a2796    push edi"
"	      004a2797    mov [ebp-30h],ecx"
);
// LINE 361:
	asm( 
"	      004a279a    jmp near ptr 004A279Fh"
"	      004a279f    mov eax,[ebp+8]"
"	      004a27a2    cmp dword ptr [eax+34h],0"
"	      004a27a6    je near ptr 004A2924h"
);
// LINE 363:
	asm( 
"	      004a27ac    mov eax,[ebp+8]"
"	      004a27af    mov eax,[eax+30h]"
"	      004a27b2    mov [ebp-24h],eax"
"	      004a27b5    mov eax,[ebp-24h]"
"	      004a27b8    mov [ebp-4],eax"
"	      004a27bb    jmp near ptr 004A27C0h"
"	      004a27c0    jmp near ptr 004A27C5h"
);
// LINE 365:
	asm( 
"	      004a27c5    mov eax,[ebp-4]"
"	      004a27c8    mov [ebp-28h],eax"
"	      004a27cb    mov eax,[ebp-4]"
"	      004a27ce    mov eax,[eax+4]"
"	      004a27d1    mov [ebp-4],eax"
"	      004a27d4    jmp near ptr 004A27D9h"
"	      004a27d9    mov eax,[ebp-28h]"
"	      004a27dc    mov [ebp-8],eax"
"	      004a27df    jmp near ptr 004A27E4h"
);
// LINE 367:
	asm( 
"	      004a27e4    jmp near ptr 004A27E9h"
"	      004a27e9    mov eax,[ebp-4]"
"	      004a27ec    mov eax,[eax+8]"
"	      004a27ef    cmp dword ptr [eax+54h],0"
"	      004a27f3    je near ptr 004A28CBh"
"	      004a27f9    jmp near ptr 004A27FEh"
"	      004a27fe    jmp near ptr 004A2803h"
"	      004a2803    mov eax,[ebp+10h]"
"	      004a2806    mov [ebp-10h],eax"
"	      004a2809    mov eax,[ebp+14h]"
"	      004a280c    mov [ebp-0Ch],eax"
"	      004a280f    jmp near ptr 004A2814h"
"	      004a2814    mov eax,[ebp-4]"
"	      004a2817    mov eax,[eax+8]"
"	      004a281a    mov ecx,[ebp-10h]"
"	      004a281d    cmp [eax+10h],ecx"
"	      004a2820    jg near ptr 004A2861h"
"	      004a2826    mov eax,[ebp-4]"
"	      004a2829    mov eax,[eax+8]"
"	      004a282c    mov ecx,[ebp-0Ch]"
"	      004a282f    cmp [eax+14h],ecx"
"	      004a2832    jg near ptr 004A2861h"
"	      004a2838    mov eax,[ebp-4]"
"	      004a283b    mov eax,[eax+8]"
"	      004a283e    mov ecx,[ebp-10h]"
"	      004a2841    cmp [eax+18h],ecx"
"	      004a2844    jle near ptr 004A2861h"
"	      004a284a    mov eax,[ebp-4]"
"	      004a284d    mov eax,[eax+8]"
"	      004a2850    mov ecx,[ebp-0Ch]"
"	      004a2853    cmp [eax+1Ch],ecx"
"	      004a2856    jle near ptr 004A2861h"
"	      004a285c    jmp near ptr 004A2866h"
"	      004a2861    jmp near ptr 004A28CBh"
"	      004a2866    jmp near ptr 004A2875h"
"	      004a286b    cmp dword ptr [ebp-2Ch],0"
"	      004a286f    je near ptr 004A28CBh"
);
// LINE 369:
	asm( 
"	      004a2875    jmp near ptr 004A287Ah"
"	      004a287a    xor eax,eax"
"	      004a287c    mov ecx,[ebp-4]"
"	      004a287f    mov ecx,[ecx+8]"
"	      004a2882    sub eax,[ecx+10h]"
"	      004a2885    neg eax"
"	      004a2887    sub [ebp+10h],eax"
);
// LINE 370:
	asm( 
"	      004a288a    jmp near ptr 004A288Fh"
"	      004a288f    xor eax,eax"
"	      004a2891    mov ecx,[ebp-4]"
"	      004a2894    mov ecx,[ecx+8]"
"	      004a2897    sub eax,[ecx+14h]"
"	      004a289a    neg eax"
"	      004a289c    sub [ebp+14h],eax"
);
// LINE 373:
	asm( 
"	      004a289f    jmp near ptr 004A28A4h"
"	      004a28a4    mov eax,[ebp+18h]"
"	      004a28a7    push eax"
"	      004a28a8    mov eax,[ebp+14h]"
"	      004a28ab    push eax"
"	      004a28ac    mov eax,[ebp+10h]"
"	      004a28af    push eax"
"	      004a28b0    mov eax,[ebp+0Ch]"
"	      004a28b3    push eax"
"	      004a28b4    mov eax,[ebp-4]"
"	      004a28b7    mov eax,[eax+8]"
"	      004a28ba    push eax"
"	      004a28bb    mov eax,[ebp-30h]"
"	      004a28be    mov eax,[eax]"
"	      004a28c0    mov ecx,[ebp-30h]"
"	      004a28c3    call dword ptr [eax+20h]"
"	      004a28c6    jmp near ptr 004A29C6h"
);
// LINE 375:
	asm( 
"	      004a28cb    mov eax,[ebp+8]"
"	      004a28ce    mov eax,[eax+30h]"
"	      004a28d1    mov eax,[eax]"
"	      004a28d3    mov [ebp-18h],eax"
"	      004a28d6    mov eax,[ebp-18h]"
"	      004a28d9    mov [ebp-14h],eax"
"	      004a28dc    jmp near ptr 004A28E1h"
"	      004a28e1    jmp near ptr 004A28E6h"
"	      004a28e6    mov eax,[ebp-4]"
"	      004a28e9    cmp [ebp-14h],eax"
"	      004a28ec    jne near ptr 004A28FCh"
"	      004a28f2    jmp near ptr 004A2915h"
"	      004a28f7    jmp near ptr 004A28FCh"
"	      004a28fc    jmp near ptr 004A290Bh"
"	      004a2901    cmp dword ptr [ebp-1Ch],0"
"	      004a2905    jne near ptr 004A2915h"
"	      004a290b    jmp near ptr 004A27C5h"
"	      004a2910    jmp near ptr 004A2915h"
"	      004a2915    jmp near ptr 004A2924h"
"	      004a291a    cmp dword ptr [ebp-20h],0"
"	      004a291e    jne near ptr 004A27C5h"
);
// LINE 377:
	asm( 
"	      004a2924    mov eax,[ebp+8]"
"	      004a2927    mov eax,[eax]"
"	      004a2929    mov ecx,[ebp+8]"
"	      004a292c    call dword ptr [eax+7Ch]"
"	      004a292f    test eax,eax"
"	      004a2931    jne near ptr 004A293Eh"
);
// LINE 378:
	asm( 
"	      004a2937    xor eax,eax"
"	      004a2939    jmp near ptr 004A29C6h"
);
// LINE 380:
	asm( 
"	      004a293e    cmp dword ptr [ebp+0Ch],1"
"	      004a2942    jne near ptr 004A296Ch"
);
// LINE 381:
	asm( 
"	      004a2948    mov eax,[ebp+18h]"
"	      004a294b    push eax"
"	      004a294c    mov eax,[ebp+14h]"
"	      004a294f    push eax"
"	      004a2950    mov eax,[ebp+10h]"
"	      004a2953    push eax"
"	      004a2954    mov eax,[ebp+8]"
"	      004a2957    mov eax,[eax]"
"	      004a2959    mov ecx,[ebp+8]"
"	      004a295c    call dword ptr [eax+8Ch]"
"	      004a2962    jmp near ptr 004A29C6h"
);
// LINE 382:
	asm( 
"	      004a2967    jmp near ptr 004A29BFh"
"	      004a296c    cmp dword ptr [ebp+0Ch],2"
"	      004a2970    jne near ptr 004A299Ah"
);
// LINE 383:
	asm( 
"	      004a2976    mov eax,[ebp+18h]"
"	      004a2979    push eax"
"	      004a297a    mov eax,[ebp+14h]"
"	      004a297d    push eax"
"	      004a297e    mov eax,[ebp+10h]"
"	      004a2981    push eax"
"	      004a2982    mov eax,[ebp+8]"
"	      004a2985    mov eax,[eax]"
"	      004a2987    mov ecx,[ebp+8]"
"	      004a298a    call dword ptr [eax+90h]"
"	      004a2990    jmp near ptr 004A29C6h"
);
// LINE 384:
	asm( 
"	      004a2995    jmp near ptr 004A29BFh"
"	      004a299a    cmp dword ptr [ebp+0Ch],4"
"	      004a299e    jne near ptr 004A29BFh"
);
// LINE 385:
	asm( 
"	      004a29a4    mov eax,[ebp+14h]"
"	      004a29a7    push eax"
"	      004a29a8    mov eax,[ebp+10h]"
"	      004a29ab    push eax"
"	      004a29ac    mov eax,[ebp+8]"
"	      004a29af    mov eax,[eax]"
"	      004a29b1    mov ecx,[ebp+8]"
"	      004a29b4    call dword ptr [eax+94h]"
"	      004a29ba    jmp near ptr 004A29C6h"
);
// LINE 386:
	asm( 
"	      004a29bf    xor eax,eax"
"	      004a29c1    jmp near ptr 004A29C6h"
);
// LINE 387:
	asm( 
"	      004a29c6    pop edi"
"	      004a29c7    pop esi"
"	      004a29c8    pop ebx"
"	      004a29c9    leave"
"	      004a29ca    ret 14h"
);
}

// FUNCTION: SIMCOPTER 0x004a29cd
int32_t GraphicWindowManager::ComposeAllWindows() {
// LINE 396:
	asm( 
"	      004a29cd    push ebp"
"	      004a29ce    mov ebp,esp"
"	      004a29d0    sub esp,8"
"	      004a29d3    push ebx"
"	      004a29d4    push esi"
"	      004a29d5    push edi"
"	      004a29d6    mov [ebp-8],ecx"
);
// LINE 401:
	asm( 
"	      004a29d9    mov eax,[ebp-8]"
"	      004a29dc    inc dword ptr [eax+4]"
);
// LINE 402:
	asm( 
"	      004a29df    mov eax,[ebp-8]"
"	      004a29e2    mov ecx,[ebp-8]"
"	      004a29e5    mov ecx,[ecx+8]"
"	      004a29e8    mov edx,[ecx]"
"	      004a29ea    mov ecx,[eax+8]"
"	      004a29ed    call dword ptr [edx+18h]"
"	      004a29f0    mov [ebp-4],eax"
);
// LINE 403:
	asm( 
"	      004a29f3    mov eax,[ebp-8]"
"	      004a29f6    dec dword ptr [eax+4]"
);
// LINE 404:
	asm( 
"	      004a29f9    mov eax,[ebp-8]"
"	      004a29fc    cmp dword ptr [eax+4],0"
"	      004a2a00    jne near ptr 004A2A0Eh"
);
// LINE 405:
	asm( 
"	      004a2a06    mov ecx,[ebp-8]"
"	      004a2a09    call 004A1FF2h"
);
// LINE 406:
	asm( 
"	      004a2a0e    mov eax,[ebp-4]"
"	      004a2a11    jmp near ptr 004A2A16h"
);
// LINE 407:
	asm( 
"	      004a2a16    pop edi"
"	      004a2a17    pop esi"
"	      004a2a18    pop ebx"
"	      004a2a19    leave"
"	      004a2a1a    ret"
);
}

// FUNCTION: SIMCOPTER 0x004a2a1b
int32_t GraphicWindowManager::IsWindowValid(class GraphicWindow*) {
// LINE 414:
	asm( 
"	      004a2a1b    push ebp"
"	      004a2a1c    mov ebp,esp"
"	      004a2a1e    sub esp,4"
"	      004a2a21    push ebx"
"	      004a2a22    push esi"
"	      004a2a23    push edi"
"	      004a2a24    mov [ebp-4],ecx"
);
// LINE 415:
	asm( 
"	      004a2a27    mov eax,[ebp+8]"
"	      004a2a2a    push eax"
"	      004a2a2b    call 004A5F76h"
"	      004a2a30    add esp,4"
"	      004a2a33    jmp near ptr 004A2A38h"
);
// LINE 416:
	asm( 
"	      004a2a38    pop edi"
"	      004a2a39    pop esi"
"	      004a2a3a    pop ebx"
"	      004a2a3b    leave"
"	      004a2a3c    ret 4"
);
}

// FUNCTION: SIMCOPTER 0x004a2a3f
public: __thiscall GraphicWindow::GraphicWindow(void) {
// LINE 444:
	asm( 
"	      004a2a3f    push ebp"
"	      004a2a40    mov ebp,esp"
"	      004a2a42    sub esp,7Ch"
"	      004a2a45    push ebx"
"	      004a2a46    push esi"
"	      004a2a47    push edi"
"	      004a2a48    mov [ebp-7Ch],ecx"
"	      004a2a4b    mov eax,[ebp-7Ch]"
"	      004a2a4e    mov dword ptr [eax],590F2Ch"
"	      004a2a54    jmp near ptr 004A2A59h"
"	      004a2a59    push 10h"
"	      004a2a5b    call 0056A600h"
"	      004a2a60    add esp,4"
"	      004a2a63    mov [ebp-20h],eax"
"	      004a2a66    cmp dword ptr [ebp-20h],0"
"	      004a2a6a    je near ptr 004A2AACh"
"	      004a2a70    mov eax,[ebp-20h]"
"	      004a2a73    mov dword ptr [eax+4],0"
"	      004a2a7a    mov eax,[ebp-20h]"
"	      004a2a7d    mov eax,[eax+4]"
"	      004a2a80    mov ecx,[ebp-20h]"
"	      004a2a83    mov [ecx+8],eax"
"	      004a2a86    mov eax,[ebp-20h]"
"	      004a2a89    mov dword ptr [eax],0"
"	      004a2a8f    mov eax,[ebp-20h]"
"	      004a2a92    mov dword ptr [eax+0Ch],1"
"	      004a2a99    jmp near ptr 004A2A9Eh"
"	      004a2a9e    mov eax,[ebp-20h]"
"	      004a2aa1    mov ecx,[ebp-7Ch]"
"	      004a2aa4    mov [ecx+0Ch],eax"
"	      004a2aa7    jmp near ptr 004A2AB6h"
"	      004a2aac    mov eax,[ebp-7Ch]"
"	      004a2aaf    mov dword ptr [eax+0Ch],0"
"	      004a2ab6    mov eax,[ebp-7Ch]"
"	      004a2ab9    mov dword ptr [eax+8],0"
"	      004a2ac0    jmp near ptr 004A2AC5h"
"	      004a2ac5    jmp near ptr 004A2ACAh"
"	      004a2aca    mov eax,[ebp-7Ch]"
"	      004a2acd    mov dword ptr [eax+10h],0"
"	      004a2ad4    mov eax,[ebp-7Ch]"
"	      004a2ad7    mov dword ptr [eax+14h],0"
"	      004a2ade    mov eax,[ebp-7Ch]"
"	      004a2ae1    mov dword ptr [eax+18h],0"
"	      004a2ae8    mov eax,[ebp-7Ch]"
"	      004a2aeb    mov dword ptr [eax+1Ch],0"
"	      004a2af2    jmp near ptr 004A2AF7h"
"	      004a2af7    jmp near ptr 004A2AFCh"
"	      004a2afc    mov eax,[ebp-7Ch]"
"	      004a2aff    mov dword ptr [eax+20h],0"
"	      004a2b06    mov eax,[ebp-7Ch]"
"	      004a2b09    mov dword ptr [eax+24h],0"
"	      004a2b10    mov eax,[ebp-7Ch]"
"	      004a2b13    mov dword ptr [eax+28h],0"
"	      004a2b1a    mov eax,[ebp-7Ch]"
"	      004a2b1d    mov dword ptr [eax+2Ch],0"
"	      004a2b24    jmp near ptr 004A2B29h"
"	      004a2b29    mov eax,[ebp-7Ch]"
"	      004a2b2c    mov dword ptr [eax+34h],0"
"	      004a2b33    inc dword ptr ds:[59A970h]"
"	      004a2b39    mov eax,ds:[59A97Ch]"
"	      004a2b3e    mov [ebp-2Ch],eax"
"	      004a2b41    cmp dword ptr ds:[59A97Ch],0"
"	      004a2b48    je near ptr 004A2B65h"
"	      004a2b4e    mov eax,ds:[59A97Ch]"
"	      004a2b53    mov eax,[eax]"
"	      004a2b55    mov ds:[59A97Ch],eax"
"	      004a2b5a    mov eax,[ebp-2Ch]"
"	      004a2b5d    mov [ebp-78h],eax"
"	      004a2b60    jmp near ptr 004A2D42h"
"	      004a2b65    mov eax,ds:[59A978h]"
"	      004a2b6a    cmp ds:[59A974h],eax"
"	      004a2b70    jne near ptr 004A2D2Dh"
"	      004a2b76    push 0"
"	      004a2b78    call 0056A620h"
"	      004a2b7d    add esp,4"
"	      004a2b80    push 8"
"	      004a2b82    call 0056A600h"
"	      004a2b87    add esp,4"
"	      004a2b8a    mov [ebp-64h],eax"
"	      004a2b8d    cmp dword ptr [ebp-64h],0"
"	      004a2b91    jne near ptr 004A2BC4h"
"	      004a2b97    push 5971ACh"
"	      004a2b9c    mov ecx,638BA0h"
"	      004a2ba1    call 00569960h"
"	      004a2ba6    mov [ebp-68h],eax"
"	      004a2ba9    mov eax,[ebp-68h]"
"	      004a2bac    push eax"
"	      004a2bad    call 004011B0h"
"	      004a2bb2    add esp,4"
"	      004a2bb5    jmp near ptr 004A2BBAh"
"	      004a2bba    push 1"
"	      004a2bbc    call 00569430h"
"	      004a2bc1    add esp,4"
"	      004a2bc4    jmp near ptr 004A2BC9h"
"	      004a2bc9    jmp near ptr 004A2BCEh"
"	      004a2bce    mov eax,[ebp-64h]"
"	      004a2bd1    mov [ebp-38h],eax"
"	      004a2bd4    mov dword ptr [ebp-3Ch],155h"
"	      004a2bdb    lea eax,[ebp-3Ch]"
"	      004a2bde    mov [ebp-44h],eax"
"	      004a2be1    mov dword ptr [ebp-40h],1"
"	      004a2be8    lea eax,[ebp-40h]"
"	      004a2beb    mov [ebp-48h],eax"
"	      004a2bee    mov eax,[ebp-48h]"
"	      004a2bf1    mov ecx,[ebp-44h]"
"	      004a2bf4    mov ecx,[ecx]"
"	      004a2bf6    cmp [eax],ecx"
"	      004a2bf8    jb near ptr 004A2C09h"
"	      004a2bfe    mov eax,[ebp-48h]"
"	      004a2c01    mov [ebp-4Ch],eax"
"	      004a2c04    jmp near ptr 004A2C0Fh"
"	      004a2c09    mov eax,[ebp-44h]"
"	      004a2c0c    mov [ebp-4Ch],eax"
"	      004a2c0f    jmp near ptr 004A2C14h"
"	      004a2c14    jmp near ptr 004A2C19h"
"	      004a2c19    jmp near ptr 004A2C1Eh"
"	      004a2c1e    mov eax,[ebp-4Ch]"
"	      004a2c21    mov eax,[eax]"
"	      004a2c23    mov [ebp-74h],eax"
"	      004a2c26    push 0"
"	      004a2c28    call 0056A620h"
"	      004a2c2d    add esp,4"
"	      004a2c30    mov eax,[ebp-74h]"
"	      004a2c33    lea eax,[eax+eax*2]"
"	      004a2c36    shl eax,2"
"	      004a2c39    push eax"
"	      004a2c3a    call 0056A600h"
"	      004a2c3f    add esp,4"
"	      004a2c42    mov [ebp-6Ch],eax"
"	      004a2c45    cmp dword ptr [ebp-6Ch],0"
"	      004a2c49    jne near ptr 004A2C7Ch"
"	      004a2c4f    push 5971ACh"
"	      004a2c54    mov ecx,638BA0h"
"	      004a2c59    call 00569960h"
"	      004a2c5e    mov [ebp-70h],eax"
"	      004a2c61    mov eax,[ebp-70h]"
"	      004a2c64    push eax"
"	      004a2c65    call 004011B0h"
"	      004a2c6a    add esp,4"
"	      004a2c6d    jmp near ptr 004A2C72h"
"	      004a2c72    push 1"
"	      004a2c74    call 00569430h"
"	      004a2c79    add esp,4"
"	      004a2c7c    jmp near ptr 004A2C81h"
"	      004a2c81    jmp near ptr 004A2C86h"
"	      004a2c86    mov eax,[ebp-6Ch]"
"	      004a2c89    mov ecx,[ebp-38h]"
"	      004a2c8c    mov [ecx+4],eax"
"	      004a2c8f    mov eax,ds:[59A980h]"
"	      004a2c94    mov ecx,[ebp-38h]"
"	      004a2c97    mov [ecx],eax"
"	      004a2c99    mov eax,[ebp-38h]"
"	      004a2c9c    mov ds:[59A980h],eax"
"	      004a2ca1    mov eax,ds:[59A980h]"
"	      004a2ca6    mov eax,[eax+4]"
"	      004a2ca9    mov ds:[59A978h],eax"
"	      004a2cae    mov dword ptr [ebp-50h],155h"
"	      004a2cb5    lea eax,[ebp-50h]"
"	      004a2cb8    mov [ebp-58h],eax"
"	      004a2cbb    mov dword ptr [ebp-54h],1"
"	      004a2cc2    lea eax,[ebp-54h]"
"	      004a2cc5    mov [ebp-5Ch],eax"
"	      004a2cc8    mov eax,[ebp-5Ch]"
"	      004a2ccb    mov ecx,[ebp-58h]"
"	      004a2cce    mov ecx,[ecx]"
"	      004a2cd0    cmp [eax],ecx"
"	      004a2cd2    jb near ptr 004A2CE3h"
"	      004a2cd8    mov eax,[ebp-5Ch]"
"	      004a2cdb    mov [ebp-60h],eax"
"	      004a2cde    jmp near ptr 004A2CE9h"
"	      004a2ce3    mov eax,[ebp-58h]"
"	      004a2ce6    mov [ebp-60h],eax"
"	      004a2ce9    jmp near ptr 004A2CEEh"
"	      004a2cee    jmp near ptr 004A2CF3h"
"	      004a2cf3    jmp near ptr 004A2CF8h"
"	      004a2cf8    mov eax,[ebp-60h]"
"	      004a2cfb    mov eax,[eax]"
"	      004a2cfd    lea eax,[eax+eax*2]"
"	      004a2d00    shl eax,2"
"	      004a2d03    add eax,ds:[59A978h]"
"	      004a2d09    mov ds:[59A974h],eax"
"	      004a2d0e    jmp near ptr 004A2D13h"
"	      004a2d13    mov eax,ds:[59A978h]"
"	      004a2d18    mov [ebp-30h],eax"
"	      004a2d1b    add dword ptr ds:[59A978h],0Ch"
"	      004a2d22    mov eax,[ebp-30h]"
"	      004a2d25    mov [ebp-78h],eax"
"	      004a2d28    jmp near ptr 004A2D42h"
"	      004a2d2d    mov eax,ds:[59A978h]"
"	      004a2d32    mov [ebp-34h],eax"
"	      004a2d35    add dword ptr ds:[59A978h],0Ch"
"	      004a2d3c    mov eax,[ebp-34h]"
"	      004a2d3f    mov [ebp-78h],eax"
"	      004a2d42    jmp near ptr 004A2D47h"
"	      004a2d47    mov eax,[ebp-78h]"
"	      004a2d4a    mov ecx,[ebp-7Ch]"
"	      004a2d4d    mov [ecx+30h],eax"
"	      004a2d50    mov eax,[ebp-7Ch]"
"	      004a2d53    mov eax,[eax+30h]"
"	      004a2d56    mov ecx,[ebp-7Ch]"
"	      004a2d59    mov ecx,[ecx+30h]"
"	      004a2d5c    mov [ecx],eax"
"	      004a2d5e    mov eax,[ebp-7Ch]"
"	      004a2d61    mov eax,[eax+30h]"
"	      004a2d64    mov ecx,[ebp-7Ch]"
"	      004a2d67    mov ecx,[ecx+30h]"
"	      004a2d6a    mov [ecx+4],eax"
"	      004a2d6d    jmp near ptr 004A2D72h"
"	      004a2d72    push 10h"
"	      004a2d74    call 0056A600h"
"	      004a2d79    add esp,4"
"	      004a2d7c    mov [ebp-24h],eax"
"	      004a2d7f    cmp dword ptr [ebp-24h],0"
"	      004a2d83    je near ptr 004A2DC5h"
"	      004a2d89    mov eax,[ebp-24h]"
"	      004a2d8c    mov dword ptr [eax+4],0"
"	      004a2d93    mov eax,[ebp-24h]"
"	      004a2d96    mov eax,[eax+4]"
"	      004a2d99    mov ecx,[ebp-24h]"
"	      004a2d9c    mov [ecx+8],eax"
"	      004a2d9f    mov eax,[ebp-24h]"
"	      004a2da2    mov dword ptr [eax],0"
"	      004a2da8    mov eax,[ebp-24h]"
"	      004a2dab    mov dword ptr [eax+0Ch],1"
"	      004a2db2    jmp near ptr 004A2DB7h"
"	      004a2db7    mov eax,[ebp-24h]"
"	      004a2dba    mov ecx,[ebp-7Ch]"
"	      004a2dbd    mov [ecx+60h],eax"
"	      004a2dc0    jmp near ptr 004A2DCFh"
"	      004a2dc5    mov eax,[ebp-7Ch]"
"	      004a2dc8    mov dword ptr [eax+60h],0"
"	      004a2dcf    mov eax,[ebp-7Ch]"
"	      004a2dd2    mov dword ptr [eax+5Ch],0"
"	      004a2dd9    jmp near ptr 004A2DDEh"
"	      004a2dde    push 10h"
"	      004a2de0    call 0056A600h"
"	      004a2de5    add esp,4"
"	      004a2de8    mov [ebp-28h],eax"
"	      004a2deb    cmp dword ptr [ebp-28h],0"
"	      004a2def    je near ptr 004A2E31h"
"	      004a2df5    mov eax,[ebp-28h]"
"	      004a2df8    mov dword ptr [eax+4],0"
"	      004a2dff    mov eax,[ebp-28h]"
"	      004a2e02    mov eax,[eax+4]"
"	      004a2e05    mov ecx,[ebp-28h]"
"	      004a2e08    mov [ecx+8],eax"
"	      004a2e0b    mov eax,[ebp-28h]"
"	      004a2e0e    mov dword ptr [eax],0"
"	      004a2e14    mov eax,[ebp-28h]"
"	      004a2e17    mov dword ptr [eax+0Ch],1"
"	      004a2e1e    jmp near ptr 004A2E23h"
"	      004a2e23    mov eax,[ebp-28h]"
"	      004a2e26    mov ecx,[ebp-7Ch]"
"	      004a2e29    mov [ecx+68h],eax"
"	      004a2e2c    jmp near ptr 004A2E3Bh"
"	      004a2e31    mov eax,[ebp-7Ch]"
"	      004a2e34    mov dword ptr [eax+68h],0"
"	      004a2e3b    mov eax,[ebp-7Ch]"
"	      004a2e3e    mov dword ptr [eax+64h],0"
"	      004a2e45    jmp near ptr 004A2E4Ah"
"	      004a2e4a    jmp near ptr 004A2E4Fh"
"	      004a2e4f    mov eax,[ebp-7Ch]"
"	      004a2e52    mov dword ptr [eax],591680h"
);
// LINE 445:
	asm( 
"	      004a2e58    mov eax,[ebp-7Ch]"
"	      004a2e5b    mov [ebp-4],eax"
"	      004a2e5e    lea eax,[ebp-4]"
"	      004a2e61    mov [ebp-8],eax"
"	      004a2e64    mov eax,ds:[6069A0h]"
"	      004a2e69    mov [ebp-14h],eax"
"	      004a2e6c    mov eax,[ebp-14h]"
"	      004a2e6f    mov [ebp-0Ch],eax"
"	      004a2e72    jmp near ptr 004A2E77h"
"	      004a2e77    jmp near ptr 004A2E7Ch"
"	      004a2e7c    mov eax,[ebp-0Ch]"
"	      004a2e7f    mov [ebp-1Ch],eax"
"	      004a2e82    mov ecx,6069A0h"
"	      004a2e87    call 004A7BC0h"
"	      004a2e8c    mov [ebp-18h],eax"
"	      004a2e8f    jmp near ptr 004A2E94h"
"	      004a2e94    mov eax,[ebp-8]"
"	      004a2e97    push eax"
"	      004a2e98    mov eax,[ebp-18h]"
"	      004a2e9b    add eax,8"
"	      004a2e9e    push eax"
"	      004a2e9f    call 004A7F80h"
"	      004a2ea4    add esp,8"
"	      004a2ea7    mov eax,[ebp-1Ch]"
"	      004a2eaa    mov ecx,[ebp-18h]"
"	      004a2ead    mov [ecx],eax"
"	      004a2eaf    mov eax,[ebp-1Ch]"
"	      004a2eb2    mov eax,[eax+4]"
"	      004a2eb5    mov ecx,[ebp-18h]"
"	      004a2eb8    mov [ecx+4],eax"
"	      004a2ebb    mov eax,[ebp-18h]"
"	      004a2ebe    mov ecx,[ebp-1Ch]"
"	      004a2ec1    mov ecx,[ecx+4]"
"	      004a2ec4    mov [ecx],eax"
"	      004a2ec6    mov eax,[ebp-18h]"
"	      004a2ec9    mov ecx,[ebp-1Ch]"
"	      004a2ecc    mov [ecx+4],eax"
"	      004a2ecf    add dword ptr ds:[6069A4h],1"
"	      004a2ed6    mov eax,[ebp-18h]"
"	      004a2ed9    mov [ebp-10h],eax"
"	      004a2edc    jmp near ptr 004A2EE1h"
"	      004a2ee1    jmp near ptr 004A2EE6h"
"	      004a2ee6    jmp near ptr 004A2EEBh"
);
// LINE 446:
	asm( 
"	      004a2eeb    mov eax,[ebp-7Ch]"
"	      004a2eee    mov dword ptr [eax+3Ch],0"
);
// LINE 447:
	asm( 
"	      004a2ef5    mov eax,[ebp-7Ch]"
"	      004a2ef8    mov dword ptr [eax+40h],0"
);
// LINE 448:
	asm( 
"	      004a2eff    mov eax,[ebp-7Ch]"
"	      004a2f02    mov dword ptr [eax+44h],0"
);
// LINE 449:
	asm( 
"	      004a2f09    mov eax,[ebp-7Ch]"
"	      004a2f0c    mov dword ptr [eax+48h],1"
);
// LINE 450:
	asm( 
"	      004a2f13    mov eax,[ebp-7Ch]"
"	      004a2f16    mov dword ptr [eax+4Ch],0"
);
// LINE 451:
	asm( 
"	      004a2f1d    mov eax,[ebp-7Ch]"
"	      004a2f20    mov dword ptr [eax+4],0"
);
// LINE 452:
	asm( 
"	      004a2f27    mov eax,[ebp-7Ch]"
"	      004a2f2a    mov dword ptr [eax+50h],1"
);
// LINE 453:
	asm( 
"	      004a2f31    mov eax,[ebp-7Ch]"
"	      004a2f34    mov dword ptr [eax+54h],1"
);
// LINE 454:
	asm( 
"	      004a2f3b    mov eax,[ebp-7Ch]"
"	      004a2f3e    mov dword ptr [eax+6Ch],0"
);
// LINE 455:
	asm( 
"	      004a2f45    mov eax,[ebp-7Ch]"
"	      004a2f48    mov dword ptr [eax+58h],0FFFFFFFFh"
);
// LINE 456:
	asm( 
"	      004a2f4f    jmp near ptr 004A2F54h"
"	      004a2f54    mov eax,[ebp-7Ch]"
"	      004a2f57    pop edi"
"	      004a2f58    pop esi"
"	      004a2f59    pop ebx"
"	      004a2f5a    leave"
"	      004a2f5b    ret"
);
}

// FUNCTION: SIMCOPTER 0x004a2f5c
public: __thiscall GraphicWindow::GraphicWindow(class GraphicWindow const &) {
// LINE 464:
	asm( 
"	      004a2f5c    push ebp"
"	      004a2f5d    mov ebp,esp"
"	      004a2f5f    sub esp,80h"
"	      004a2f65    push ebx"
"	      004a2f66    push esi"
"	      004a2f67    push edi"
"	      004a2f68    mov [ebp-80h],ecx"
"	      004a2f6b    mov eax,[ebp-80h]"
"	      004a2f6e    mov dword ptr [eax],590F2Ch"
"	      004a2f74    jmp near ptr 004A2F79h"
"	      004a2f79    push 10h"
"	      004a2f7b    call 0056A600h"
"	      004a2f80    add esp,4"
"	      004a2f83    mov [ebp-24h],eax"
"	      004a2f86    cmp dword ptr [ebp-24h],0"
"	      004a2f8a    je near ptr 004A2FCCh"
"	      004a2f90    mov eax,[ebp-24h]"
"	      004a2f93    mov dword ptr [eax+4],0"
"	      004a2f9a    mov eax,[ebp-24h]"
"	      004a2f9d    mov eax,[eax+4]"
"	      004a2fa0    mov ecx,[ebp-24h]"
"	      004a2fa3    mov [ecx+8],eax"
"	      004a2fa6    mov eax,[ebp-24h]"
"	      004a2fa9    mov dword ptr [eax],0"
"	      004a2faf    mov eax,[ebp-24h]"
"	      004a2fb2    mov dword ptr [eax+0Ch],1"
"	      004a2fb9    jmp near ptr 004A2FBEh"
"	      004a2fbe    mov eax,[ebp-24h]"
"	      004a2fc1    mov ecx,[ebp-80h]"
"	      004a2fc4    mov [ecx+0Ch],eax"
"	      004a2fc7    jmp near ptr 004A2FD6h"
"	      004a2fcc    mov eax,[ebp-80h]"
"	      004a2fcf    mov dword ptr [eax+0Ch],0"
"	      004a2fd6    mov eax,[ebp-80h]"
"	      004a2fd9    mov dword ptr [eax+8],0"
"	      004a2fe0    jmp near ptr 004A2FE5h"
"	      004a2fe5    jmp near ptr 004A2FEAh"
"	      004a2fea    jmp near ptr 004A2FEFh"
"	      004a2fef    jmp near ptr 004A2FF4h"
"	      004a2ff4    jmp near ptr 004A2FF9h"
"	      004a2ff9    mov eax,[ebp-80h]"
"	      004a2ffc    mov dword ptr [eax+34h],0"
"	      004a3003    inc dword ptr ds:[59A970h]"
"	      004a3009    mov eax,ds:[59A97Ch]"
"	      004a300e    mov [ebp-30h],eax"
"	      004a3011    cmp dword ptr ds:[59A97Ch],0"
"	      004a3018    je near ptr 004A3035h"
"	      004a301e    mov eax,ds:[59A97Ch]"
"	      004a3023    mov eax,[eax]"
"	      004a3025    mov ds:[59A97Ch],eax"
"	      004a302a    mov eax,[ebp-30h]"
"	      004a302d    mov [ebp-7Ch],eax"
"	      004a3030    jmp near ptr 004A3212h"
"	      004a3035    mov eax,ds:[59A978h]"
"	      004a303a    cmp ds:[59A974h],eax"
"	      004a3040    jne near ptr 004A31FDh"
"	      004a3046    push 0"
"	      004a3048    call 0056A620h"
"	      004a304d    add esp,4"
"	      004a3050    push 8"
"	      004a3052    call 0056A600h"
"	      004a3057    add esp,4"
"	      004a305a    mov [ebp-68h],eax"
"	      004a305d    cmp dword ptr [ebp-68h],0"
"	      004a3061    jne near ptr 004A3094h"
"	      004a3067    push 5971ACh"
"	      004a306c    mov ecx,638BA0h"
"	      004a3071    call 00569960h"
"	      004a3076    mov [ebp-6Ch],eax"
"	      004a3079    mov eax,[ebp-6Ch]"
"	      004a307c    push eax"
"	      004a307d    call 004011B0h"
"	      004a3082    add esp,4"
"	      004a3085    jmp near ptr 004A308Ah"
"	      004a308a    push 1"
"	      004a308c    call 00569430h"
"	      004a3091    add esp,4"
"	      004a3094    jmp near ptr 004A3099h"
"	      004a3099    jmp near ptr 004A309Eh"
"	      004a309e    mov eax,[ebp-68h]"
"	      004a30a1    mov [ebp-3Ch],eax"
"	      004a30a4    mov dword ptr [ebp-40h],155h"
"	      004a30ab    lea eax,[ebp-40h]"
"	      004a30ae    mov [ebp-48h],eax"
"	      004a30b1    mov dword ptr [ebp-44h],1"
"	      004a30b8    lea eax,[ebp-44h]"
"	      004a30bb    mov [ebp-4Ch],eax"
"	      004a30be    mov eax,[ebp-4Ch]"
"	      004a30c1    mov ecx,[ebp-48h]"
"	      004a30c4    mov ecx,[ecx]"
"	      004a30c6    cmp [eax],ecx"
"	      004a30c8    jb near ptr 004A30D9h"
"	      004a30ce    mov eax,[ebp-4Ch]"
"	      004a30d1    mov [ebp-50h],eax"
"	      004a30d4    jmp near ptr 004A30DFh"
"	      004a30d9    mov eax,[ebp-48h]"
"	      004a30dc    mov [ebp-50h],eax"
"	      004a30df    jmp near ptr 004A30E4h"
"	      004a30e4    jmp near ptr 004A30E9h"
"	      004a30e9    jmp near ptr 004A30EEh"
"	      004a30ee    mov eax,[ebp-50h]"
"	      004a30f1    mov eax,[eax]"
"	      004a30f3    mov [ebp-78h],eax"
"	      004a30f6    push 0"
"	      004a30f8    call 0056A620h"
"	      004a30fd    add esp,4"
"	      004a3100    mov eax,[ebp-78h]"
"	      004a3103    lea eax,[eax+eax*2]"
"	      004a3106    shl eax,2"
"	      004a3109    push eax"
"	      004a310a    call 0056A600h"
"	      004a310f    add esp,4"
"	      004a3112    mov [ebp-70h],eax"
"	      004a3115    cmp dword ptr [ebp-70h],0"
"	      004a3119    jne near ptr 004A314Ch"
"	      004a311f    push 5971ACh"
"	      004a3124    mov ecx,638BA0h"
"	      004a3129    call 00569960h"
"	      004a312e    mov [ebp-74h],eax"
"	      004a3131    mov eax,[ebp-74h]"
"	      004a3134    push eax"
"	      004a3135    call 004011B0h"
"	      004a313a    add esp,4"
"	      004a313d    jmp near ptr 004A3142h"
"	      004a3142    push 1"
"	      004a3144    call 00569430h"
"	      004a3149    add esp,4"
"	      004a314c    jmp near ptr 004A3151h"
"	      004a3151    jmp near ptr 004A3156h"
"	      004a3156    mov eax,[ebp-70h]"
"	      004a3159    mov ecx,[ebp-3Ch]"
"	      004a315c    mov [ecx+4],eax"
"	      004a315f    mov eax,ds:[59A980h]"
"	      004a3164    mov ecx,[ebp-3Ch]"
"	      004a3167    mov [ecx],eax"
"	      004a3169    mov eax,[ebp-3Ch]"
"	      004a316c    mov ds:[59A980h],eax"
"	      004a3171    mov eax,ds:[59A980h]"
"	      004a3176    mov eax,[eax+4]"
"	      004a3179    mov ds:[59A978h],eax"
"	      004a317e    mov dword ptr [ebp-54h],155h"
"	      004a3185    lea eax,[ebp-54h]"
"	      004a3188    mov [ebp-5Ch],eax"
"	      004a318b    mov dword ptr [ebp-58h],1"
"	      004a3192    lea eax,[ebp-58h]"
"	      004a3195    mov [ebp-60h],eax"
"	      004a3198    mov eax,[ebp-60h]"
"	      004a319b    mov ecx,[ebp-5Ch]"
"	      004a319e    mov ecx,[ecx]"
"	      004a31a0    cmp [eax],ecx"
"	      004a31a2    jb near ptr 004A31B3h"
"	      004a31a8    mov eax,[ebp-60h]"
"	      004a31ab    mov [ebp-64h],eax"
"	      004a31ae    jmp near ptr 004A31B9h"
"	      004a31b3    mov eax,[ebp-5Ch]"
"	      004a31b6    mov [ebp-64h],eax"
"	      004a31b9    jmp near ptr 004A31BEh"
"	      004a31be    jmp near ptr 004A31C3h"
"	      004a31c3    jmp near ptr 004A31C8h"
"	      004a31c8    mov eax,[ebp-64h]"
"	      004a31cb    mov eax,[eax]"
"	      004a31cd    lea eax,[eax+eax*2]"
"	      004a31d0    shl eax,2"
"	      004a31d3    add eax,ds:[59A978h]"
"	      004a31d9    mov ds:[59A974h],eax"
"	      004a31de    jmp near ptr 004A31E3h"
"	      004a31e3    mov eax,ds:[59A978h]"
"	      004a31e8    mov [ebp-34h],eax"
"	      004a31eb    add dword ptr ds:[59A978h],0Ch"
"	      004a31f2    mov eax,[ebp-34h]"
"	      004a31f5    mov [ebp-7Ch],eax"
"	      004a31f8    jmp near ptr 004A3212h"
"	      004a31fd    mov eax,ds:[59A978h]"
"	      004a3202    mov [ebp-38h],eax"
"	      004a3205    add dword ptr ds:[59A978h],0Ch"
"	      004a320c    mov eax,[ebp-38h]"
"	      004a320f    mov [ebp-7Ch],eax"
"	      004a3212    jmp near ptr 004A3217h"
"	      004a3217    mov eax,[ebp-7Ch]"
"	      004a321a    mov ecx,[ebp-80h]"
"	      004a321d    mov [ecx+30h],eax"
"	      004a3220    mov eax,[ebp-80h]"
"	      004a3223    mov eax,[eax+30h]"
"	      004a3226    mov ecx,[ebp-80h]"
"	      004a3229    mov ecx,[ecx+30h]"
"	      004a322c    mov [ecx],eax"
"	      004a322e    mov eax,[ebp-80h]"
"	      004a3231    mov eax,[eax+30h]"
"	      004a3234    mov ecx,[ebp-80h]"
"	      004a3237    mov ecx,[ecx+30h]"
"	      004a323a    mov [ecx+4],eax"
"	      004a323d    jmp near ptr 004A3242h"
"	      004a3242    push 10h"
"	      004a3244    call 0056A600h"
"	      004a3249    add esp,4"
"	      004a324c    mov [ebp-28h],eax"
"	      004a324f    cmp dword ptr [ebp-28h],0"
"	      004a3253    je near ptr 004A3295h"
"	      004a3259    mov eax,[ebp-28h]"
"	      004a325c    mov dword ptr [eax+4],0"
"	      004a3263    mov eax,[ebp-28h]"
"	      004a3266    mov eax,[eax+4]"
"	      004a3269    mov ecx,[ebp-28h]"
"	      004a326c    mov [ecx+8],eax"
"	      004a326f    mov eax,[ebp-28h]"
"	      004a3272    mov dword ptr [eax],0"
"	      004a3278    mov eax,[ebp-28h]"
"	      004a327b    mov dword ptr [eax+0Ch],1"
"	      004a3282    jmp near ptr 004A3287h"
"	      004a3287    mov eax,[ebp-28h]"
"	      004a328a    mov ecx,[ebp-80h]"
"	      004a328d    mov [ecx+60h],eax"
"	      004a3290    jmp near ptr 004A329Fh"
"	      004a3295    mov eax,[ebp-80h]"
"	      004a3298    mov dword ptr [eax+60h],0"
"	      004a329f    mov eax,[ebp-80h]"
"	      004a32a2    mov dword ptr [eax+5Ch],0"
"	      004a32a9    jmp near ptr 004A32AEh"
"	      004a32ae    push 10h"
"	      004a32b0    call 0056A600h"
"	      004a32b5    add esp,4"
"	      004a32b8    mov [ebp-2Ch],eax"
"	      004a32bb    cmp dword ptr [ebp-2Ch],0"
"	      004a32bf    je near ptr 004A3301h"
"	      004a32c5    mov eax,[ebp-2Ch]"
"	      004a32c8    mov dword ptr [eax+4],0"
"	      004a32cf    mov eax,[ebp-2Ch]"
"	      004a32d2    mov eax,[eax+4]"
"	      004a32d5    mov ecx,[ebp-2Ch]"
"	      004a32d8    mov [ecx+8],eax"
"	      004a32db    mov eax,[ebp-2Ch]"
"	      004a32de    mov dword ptr [eax],0"
"	      004a32e4    mov eax,[ebp-2Ch]"
"	      004a32e7    mov dword ptr [eax+0Ch],1"
"	      004a32ee    jmp near ptr 004A32F3h"
"	      004a32f3    mov eax,[ebp-2Ch]"
"	      004a32f6    mov ecx,[ebp-80h]"
"	      004a32f9    mov [ecx+68h],eax"
"	      004a32fc    jmp near ptr 004A330Bh"
"	      004a3301    mov eax,[ebp-80h]"
"	      004a3304    mov dword ptr [eax+68h],0"
"	      004a330b    mov eax,[ebp-80h]"
"	      004a330e    mov dword ptr [eax+64h],0"
"	      004a3315    jmp near ptr 004A331Ah"
"	      004a331a    jmp near ptr 004A331Fh"
"	      004a331f    mov eax,[ebp-80h]"
"	      004a3322    mov dword ptr [eax],591680h"
);
// LINE 465:
	asm( 
"	      004a3328    mov eax,[ebp-80h]"
"	      004a332b    mov [ebp-4],eax"
"	      004a332e    lea eax,[ebp-4]"
"	      004a3331    mov [ebp-8],eax"
"	      004a3334    mov eax,ds:[6069A0h]"
"	      004a3339    mov [ebp-14h],eax"
"	      004a333c    mov eax,[ebp-14h]"
"	      004a333f    mov [ebp-0Ch],eax"
"	      004a3342    jmp near ptr 004A3347h"
"	      004a3347    jmp near ptr 004A334Ch"
"	      004a334c    mov eax,[ebp-0Ch]"
"	      004a334f    mov [ebp-20h],eax"
"	      004a3352    mov ecx,6069A0h"
"	      004a3357    call 004A7BC0h"
"	      004a335c    mov [ebp-18h],eax"
"	      004a335f    jmp near ptr 004A3364h"
"	      004a3364    mov eax,[ebp-18h]"
"	      004a3367    add eax,8"
"	      004a336a    mov [ebp-1Ch],eax"
"	      004a336d    jmp near ptr 004A3372h"
"	      004a3372    cmp dword ptr [ebp-1Ch],0"
"	      004a3376    je near ptr 004A338Bh"
"	      004a337c    mov eax,[ebp-8]"
"	      004a337f    mov eax,[eax]"
"	      004a3381    mov ecx,[ebp-1Ch]"
"	      004a3384    mov [ecx],eax"
"	      004a3386    jmp near ptr 004A338Bh"
"	      004a338b    jmp near ptr 004A3390h"
"	      004a3390    mov eax,[ebp-20h]"
"	      004a3393    mov ecx,[ebp-18h]"
"	      004a3396    mov [ecx],eax"
"	      004a3398    mov eax,[ebp-20h]"
"	      004a339b    mov eax,[eax+4]"
"	      004a339e    mov ecx,[ebp-18h]"
"	      004a33a1    mov [ecx+4],eax"
"	      004a33a4    mov eax,[ebp-18h]"
"	      004a33a7    mov ecx,[ebp-20h]"
"	      004a33aa    mov ecx,[ecx+4]"
"	      004a33ad    mov [ecx],eax"
"	      004a33af    mov eax,[ebp-18h]"
"	      004a33b2    mov ecx,[ebp-20h]"
"	      004a33b5    mov [ecx+4],eax"
"	      004a33b8    inc dword ptr ds:[6069A4h]"
"	      004a33be    mov eax,[ebp-18h]"
"	      004a33c1    mov [ebp-10h],eax"
"	      004a33c4    jmp near ptr 004A33C9h"
"	      004a33c9    jmp near ptr 004A33CEh"
"	      004a33ce    jmp near ptr 004A33D3h"
);
// LINE 466:
	asm( 
"	      004a33d3    mov eax,[ebp+8]"
"	      004a33d6    push eax"
"	      004a33d7    mov ecx,[ebp-80h]"
"	      004a33da    call 004A44EFh"
);
// LINE 467:
	asm( 
"	      004a33df    jmp near ptr 004A33E4h"
"	      004a33e4    mov eax,[ebp-80h]"
"	      004a33e7    pop edi"
"	      004a33e8    pop esi"
"	      004a33e9    pop ebx"
"	      004a33ea    leave"
"	      004a33eb    ret 4"
);
}

// FUNCTION: SIMCOPTER 0x004a33ee
public: __thiscall GraphicWindow::GraphicWindow(class MRect &, long, class GraphicWindow *, class GraphicWindowOwner *, int) {
// LINE 480:
	asm( 
"	      004a33ee    push ebp"
"	      004a33ef    mov ebp,esp"
"	      004a33f1    sub esp,80h"
"	      004a33f7    push ebx"
"	      004a33f8    push esi"
"	      004a33f9    push edi"
"	      004a33fa    mov [ebp-80h],ecx"
"	      004a33fd    mov eax,[ebp-80h]"
"	      004a3400    mov dword ptr [eax],590F2Ch"
"	      004a3406    jmp near ptr 004A340Bh"
"	      004a340b    mov eax,[ebp+0Ch]"
"	      004a340e    mov ecx,[ebp-80h]"
"	      004a3411    mov [ecx+4],eax"
"	      004a3414    push 10h"
"	      004a3416    call 0056A600h"
"	      004a341b    add esp,4"
"	      004a341e    mov [ebp-24h],eax"
"	      004a3421    cmp dword ptr [ebp-24h],0"
"	      004a3425    je near ptr 004A3467h"
"	      004a342b    mov eax,[ebp-24h]"
"	      004a342e    mov dword ptr [eax+4],0"
"	      004a3435    mov eax,[ebp-24h]"
"	      004a3438    mov eax,[eax+4]"
"	      004a343b    mov ecx,[ebp-24h]"
"	      004a343e    mov [ecx+8],eax"
"	      004a3441    mov eax,[ebp-24h]"
"	      004a3444    mov dword ptr [eax],0"
"	      004a344a    mov eax,[ebp-24h]"
"	      004a344d    mov dword ptr [eax+0Ch],1"
"	      004a3454    jmp near ptr 004A3459h"
"	      004a3459    mov eax,[ebp-24h]"
"	      004a345c    mov ecx,[ebp-80h]"
"	      004a345f    mov [ecx+0Ch],eax"
"	      004a3462    jmp near ptr 004A3471h"
"	      004a3467    mov eax,[ebp-80h]"
"	      004a346a    mov dword ptr [eax+0Ch],0"
"	      004a3471    mov eax,[ebp-80h]"
"	      004a3474    mov dword ptr [eax+8],0"
"	      004a347b    jmp near ptr 004A3480h"
"	      004a3480    mov eax,[ebp+8]"
"	      004a3483    mov ecx,[ebp-80h]"
"	      004a3486    add ecx,10h"
"	      004a3489    mov edx,[eax]"
"	      004a348b    mov [ecx],edx"
"	      004a348d    mov edx,[eax+4]"
"	      004a3490    mov [ecx+4],edx"
"	      004a3493    mov edx,[eax+8]"
"	      004a3496    mov [ecx+8],edx"
"	      004a3499    mov eax,[eax+0Ch]"
"	      004a349c    mov [ecx+0Ch],eax"
"	      004a349f    mov eax,[ebp+8]"
"	      004a34a2    mov ecx,[ebp-80h]"
"	      004a34a5    add ecx,20h"
"	      004a34a8    mov edx,[eax]"
"	      004a34aa    mov [ecx],edx"
"	      004a34ac    mov edx,[eax+4]"
"	      004a34af    mov [ecx+4],edx"
"	      004a34b2    mov edx,[eax+8]"
"	      004a34b5    mov [ecx+8],edx"
"	      004a34b8    mov eax,[eax+0Ch]"
"	      004a34bb    mov [ecx+0Ch],eax"
"	      004a34be    mov eax,[ebp-80h]"
"	      004a34c1    mov dword ptr [eax+34h],0"
"	      004a34c8    inc dword ptr ds:[59A970h]"
"	      004a34ce    mov eax,ds:[59A97Ch]"
"	      004a34d3    mov [ebp-30h],eax"
"	      004a34d6    cmp dword ptr ds:[59A97Ch],0"
"	      004a34dd    je near ptr 004A34FAh"
"	      004a34e3    mov eax,ds:[59A97Ch]"
"	      004a34e8    mov eax,[eax]"
"	      004a34ea    mov ds:[59A97Ch],eax"
"	      004a34ef    mov eax,[ebp-30h]"
"	      004a34f2    mov [ebp-7Ch],eax"
"	      004a34f5    jmp near ptr 004A36D7h"
"	      004a34fa    mov eax,ds:[59A978h]"
"	      004a34ff    cmp ds:[59A974h],eax"
"	      004a3505    jne near ptr 004A36C2h"
"	      004a350b    push 0"
"	      004a350d    call 0056A620h"
"	      004a3512    add esp,4"
"	      004a3515    push 8"
"	      004a3517    call 0056A600h"
"	      004a351c    add esp,4"
"	      004a351f    mov [ebp-68h],eax"
"	      004a3522    cmp dword ptr [ebp-68h],0"
"	      004a3526    jne near ptr 004A3559h"
"	      004a352c    push 5971ACh"
"	      004a3531    mov ecx,638BA0h"
"	      004a3536    call 00569960h"
"	      004a353b    mov [ebp-6Ch],eax"
"	      004a353e    mov eax,[ebp-6Ch]"
"	      004a3541    push eax"
"	      004a3542    call 004011B0h"
"	      004a3547    add esp,4"
"	      004a354a    jmp near ptr 004A354Fh"
"	      004a354f    push 1"
"	      004a3551    call 00569430h"
"	      004a3556    add esp,4"
"	      004a3559    jmp near ptr 004A355Eh"
"	      004a355e    jmp near ptr 004A3563h"
"	      004a3563    mov eax,[ebp-68h]"
"	      004a3566    mov [ebp-3Ch],eax"
"	      004a3569    mov dword ptr [ebp-40h],155h"
"	      004a3570    lea eax,[ebp-40h]"
"	      004a3573    mov [ebp-48h],eax"
"	      004a3576    mov dword ptr [ebp-44h],1"
"	      004a357d    lea eax,[ebp-44h]"
"	      004a3580    mov [ebp-4Ch],eax"
"	      004a3583    mov eax,[ebp-4Ch]"
"	      004a3586    mov ecx,[ebp-48h]"
"	      004a3589    mov ecx,[ecx]"
"	      004a358b    cmp [eax],ecx"
"	      004a358d    jb near ptr 004A359Eh"
"	      004a3593    mov eax,[ebp-4Ch]"
"	      004a3596    mov [ebp-50h],eax"
"	      004a3599    jmp near ptr 004A35A4h"
"	      004a359e    mov eax,[ebp-48h]"
"	      004a35a1    mov [ebp-50h],eax"
"	      004a35a4    jmp near ptr 004A35A9h"
"	      004a35a9    jmp near ptr 004A35AEh"
"	      004a35ae    jmp near ptr 004A35B3h"
"	      004a35b3    mov eax,[ebp-50h]"
"	      004a35b6    mov eax,[eax]"
"	      004a35b8    mov [ebp-78h],eax"
"	      004a35bb    push 0"
"	      004a35bd    call 0056A620h"
"	      004a35c2    add esp,4"
"	      004a35c5    mov eax,[ebp-78h]"
"	      004a35c8    lea eax,[eax+eax*2]"
"	      004a35cb    shl eax,2"
"	      004a35ce    push eax"
"	      004a35cf    call 0056A600h"
"	      004a35d4    add esp,4"
"	      004a35d7    mov [ebp-70h],eax"
"	      004a35da    cmp dword ptr [ebp-70h],0"
"	      004a35de    jne near ptr 004A3611h"
"	      004a35e4    push 5971ACh"
"	      004a35e9    mov ecx,638BA0h"
"	      004a35ee    call 00569960h"
"	      004a35f3    mov [ebp-74h],eax"
"	      004a35f6    mov eax,[ebp-74h]"
"	      004a35f9    push eax"
"	      004a35fa    call 004011B0h"
"	      004a35ff    add esp,4"
"	      004a3602    jmp near ptr 004A3607h"
"	      004a3607    push 1"
"	      004a3609    call 00569430h"
"	      004a360e    add esp,4"
"	      004a3611    jmp near ptr 004A3616h"
"	      004a3616    jmp near ptr 004A361Bh"
"	      004a361b    mov eax,[ebp-70h]"
"	      004a361e    mov ecx,[ebp-3Ch]"
"	      004a3621    mov [ecx+4],eax"
"	      004a3624    mov eax,ds:[59A980h]"
"	      004a3629    mov ecx,[ebp-3Ch]"
"	      004a362c    mov [ecx],eax"
"	      004a362e    mov eax,[ebp-3Ch]"
"	      004a3631    mov ds:[59A980h],eax"
"	      004a3636    mov eax,ds:[59A980h]"
"	      004a363b    mov eax,[eax+4]"
"	      004a363e    mov ds:[59A978h],eax"
"	      004a3643    mov dword ptr [ebp-54h],155h"
"	      004a364a    lea eax,[ebp-54h]"
"	      004a364d    mov [ebp-5Ch],eax"
"	      004a3650    mov dword ptr [ebp-58h],1"
"	      004a3657    lea eax,[ebp-58h]"
"	      004a365a    mov [ebp-60h],eax"
"	      004a365d    mov eax,[ebp-60h]"
"	      004a3660    mov ecx,[ebp-5Ch]"
"	      004a3663    mov ecx,[ecx]"
"	      004a3665    cmp [eax],ecx"
"	      004a3667    jb near ptr 004A3678h"
"	      004a366d    mov eax,[ebp-60h]"
"	      004a3670    mov [ebp-64h],eax"
"	      004a3673    jmp near ptr 004A367Eh"
"	      004a3678    mov eax,[ebp-5Ch]"
"	      004a367b    mov [ebp-64h],eax"
"	      004a367e    jmp near ptr 004A3683h"
"	      004a3683    jmp near ptr 004A3688h"
"	      004a3688    jmp near ptr 004A368Dh"
"	      004a368d    mov eax,[ebp-64h]"
"	      004a3690    mov eax,[eax]"
"	      004a3692    lea eax,[eax+eax*2]"
"	      004a3695    shl eax,2"
"	      004a3698    add eax,ds:[59A978h]"
"	      004a369e    mov ds:[59A974h],eax"
"	      004a36a3    jmp near ptr 004A36A8h"
"	      004a36a8    mov eax,ds:[59A978h]"
"	      004a36ad    mov [ebp-34h],eax"
"	      004a36b0    add dword ptr ds:[59A978h],0Ch"
"	      004a36b7    mov eax,[ebp-34h]"
"	      004a36ba    mov [ebp-7Ch],eax"
"	      004a36bd    jmp near ptr 004A36D7h"
"	      004a36c2    mov eax,ds:[59A978h]"
"	      004a36c7    mov [ebp-38h],eax"
"	      004a36ca    add dword ptr ds:[59A978h],0Ch"
"	      004a36d1    mov eax,[ebp-38h]"
"	      004a36d4    mov [ebp-7Ch],eax"
"	      004a36d7    jmp near ptr 004A36DCh"
"	      004a36dc    mov eax,[ebp-7Ch]"
"	      004a36df    mov ecx,[ebp-80h]"
"	      004a36e2    mov [ecx+30h],eax"
"	      004a36e5    mov eax,[ebp-80h]"
"	      004a36e8    mov eax,[eax+30h]"
"	      004a36eb    mov ecx,[ebp-80h]"
"	      004a36ee    mov ecx,[ecx+30h]"
"	      004a36f1    mov [ecx],eax"
"	      004a36f3    mov eax,[ebp-80h]"
"	      004a36f6    mov eax,[eax+30h]"
"	      004a36f9    mov ecx,[ebp-80h]"
"	      004a36fc    mov ecx,[ecx+30h]"
"	      004a36ff    mov [ecx+4],eax"
"	      004a3702    jmp near ptr 004A3707h"
"	      004a3707    mov eax,[ebp+14h]"
"	      004a370a    mov ecx,[ebp-80h]"
"	      004a370d    mov [ecx+38h],eax"
"	      004a3710    mov eax,[ebp+10h]"
"	      004a3713    mov ecx,[ebp-80h]"
"	      004a3716    mov [ecx+3Ch],eax"
"	      004a3719    push 10h"
"	      004a371b    call 0056A600h"
"	      004a3720    add esp,4"
"	      004a3723    mov [ebp-28h],eax"
"	      004a3726    cmp dword ptr [ebp-28h],0"
"	      004a372a    je near ptr 004A376Ch"
"	      004a3730    mov eax,[ebp-28h]"
"	      004a3733    mov dword ptr [eax+4],0"
"	      004a373a    mov eax,[ebp-28h]"
"	      004a373d    mov eax,[eax+4]"
"	      004a3740    mov ecx,[ebp-28h]"
"	      004a3743    mov [ecx+8],eax"
"	      004a3746    mov eax,[ebp-28h]"
"	      004a3749    mov dword ptr [eax],0"
"	      004a374f    mov eax,[ebp-28h]"
"	      004a3752    mov dword ptr [eax+0Ch],1"
"	      004a3759    jmp near ptr 004A375Eh"
"	      004a375e    mov eax,[ebp-28h]"
"	      004a3761    mov ecx,[ebp-80h]"
"	      004a3764    mov [ecx+60h],eax"
"	      004a3767    jmp near ptr 004A3776h"
"	      004a376c    mov eax,[ebp-80h]"
"	      004a376f    mov dword ptr [eax+60h],0"
"	      004a3776    mov eax,[ebp-80h]"
"	      004a3779    mov dword ptr [eax+5Ch],0"
"	      004a3780    jmp near ptr 004A3785h"
"	      004a3785    push 10h"
"	      004a3787    call 0056A600h"
"	      004a378c    add esp,4"
"	      004a378f    mov [ebp-2Ch],eax"
"	      004a3792    cmp dword ptr [ebp-2Ch],0"
"	      004a3796    je near ptr 004A37D8h"
"	      004a379c    mov eax,[ebp-2Ch]"
"	      004a379f    mov dword ptr [eax+4],0"
"	      004a37a6    mov eax,[ebp-2Ch]"
"	      004a37a9    mov eax,[eax+4]"
"	      004a37ac    mov ecx,[ebp-2Ch]"
"	      004a37af    mov [ecx+8],eax"
"	      004a37b2    mov eax,[ebp-2Ch]"
"	      004a37b5    mov dword ptr [eax],0"
"	      004a37bb    mov eax,[ebp-2Ch]"
"	      004a37be    mov dword ptr [eax+0Ch],1"
"	      004a37c5    jmp near ptr 004A37CAh"
"	      004a37ca    mov eax,[ebp-2Ch]"
"	      004a37cd    mov ecx,[ebp-80h]"
"	      004a37d0    mov [ecx+68h],eax"
"	      004a37d3    jmp near ptr 004A37E2h"
"	      004a37d8    mov eax,[ebp-80h]"
"	      004a37db    mov dword ptr [eax+68h],0"
"	      004a37e2    mov eax,[ebp-80h]"
"	      004a37e5    mov dword ptr [eax+64h],0"
"	      004a37ec    jmp near ptr 004A37F1h"
"	      004a37f1    jmp near ptr 004A37F6h"
"	      004a37f6    mov eax,[ebp-80h]"
"	      004a37f9    mov dword ptr [eax],591680h"
);
// LINE 481:
	asm( 
"	      004a37ff    mov eax,[ebp-80h]"
"	      004a3802    mov [ebp-4],eax"
"	      004a3805    lea eax,[ebp-4]"
"	      004a3808    mov [ebp-8],eax"
"	      004a380b    mov eax,ds:[6069A0h]"
"	      004a3810    mov [ebp-14h],eax"
"	      004a3813    mov eax,[ebp-14h]"
"	      004a3816    mov [ebp-0Ch],eax"
"	      004a3819    jmp near ptr 004A381Eh"
"	      004a381e    jmp near ptr 004A3823h"
"	      004a3823    mov eax,[ebp-0Ch]"
"	      004a3826    mov [ebp-20h],eax"
"	      004a3829    mov ecx,6069A0h"
"	      004a382e    call 004A7BC0h"
"	      004a3833    mov [ebp-18h],eax"
"	      004a3836    jmp near ptr 004A383Bh"
"	      004a383b    mov eax,[ebp-18h]"
"	      004a383e    add eax,8"
"	      004a3841    mov [ebp-1Ch],eax"
"	      004a3844    jmp near ptr 004A3849h"
"	      004a3849    cmp dword ptr [ebp-1Ch],0"
"	      004a384d    je near ptr 004A3862h"
"	      004a3853    mov eax,[ebp-8]"
"	      004a3856    mov eax,[eax]"
"	      004a3858    mov ecx,[ebp-1Ch]"
"	      004a385b    mov [ecx],eax"
"	      004a385d    jmp near ptr 004A3862h"
"	      004a3862    jmp near ptr 004A3867h"
"	      004a3867    mov eax,[ebp-20h]"
"	      004a386a    mov ecx,[ebp-18h]"
"	      004a386d    mov [ecx],eax"
"	      004a386f    mov eax,[ebp-20h]"
"	      004a3872    mov eax,[eax+4]"
"	      004a3875    mov ecx,[ebp-18h]"
"	      004a3878    mov [ecx+4],eax"
"	      004a387b    mov eax,[ebp-18h]"
"	      004a387e    mov ecx,[ebp-20h]"
"	      004a3881    mov ecx,[ecx+4]"
"	      004a3884    mov [ecx],eax"
"	      004a3886    mov eax,[ebp-18h]"
"	      004a3889    mov ecx,[ebp-20h]"
"	      004a388c    mov [ecx+4],eax"
"	      004a388f    inc dword ptr ds:[6069A4h]"
"	      004a3895    mov eax,[ebp-18h]"
"	      004a3898    mov [ebp-10h],eax"
"	      004a389b    jmp near ptr 004A38A0h"
"	      004a38a0    jmp near ptr 004A38A5h"
"	      004a38a5    jmp near ptr 004A38AAh"
);
// LINE 482:
	asm( 
"	      004a38aa    mov eax,[ebp-80h]"
"	      004a38ad    mov dword ptr [eax+40h],0"
);
// LINE 483:
	asm( 
"	      004a38b4    mov eax,[ebp-80h]"
"	      004a38b7    mov dword ptr [eax+44h],0"
);
// LINE 484:
	asm( 
"	      004a38be    mov eax,[ebp-80h]"
"	      004a38c1    mov dword ptr [eax+48h],1"
);
// LINE 485:
	asm( 
"	      004a38c8    mov eax,[ebp-80h]"
"	      004a38cb    mov dword ptr [eax+4Ch],0"
);
// LINE 486:
	asm( 
"	      004a38d2    mov eax,[ebp-80h]"
"	      004a38d5    mov dword ptr [eax+50h],1"
);
// LINE 487:
	asm( 
"	      004a38dc    mov eax,[ebp-80h]"
"	      004a38df    mov dword ptr [eax+54h],1"
);
// LINE 488:
	asm( 
"	      004a38e6    mov eax,[ebp-80h]"
"	      004a38e9    mov dword ptr [eax+6Ch],0"
);
// LINE 489:
	asm( 
"	      004a38f0    mov eax,[ebp-80h]"
"	      004a38f3    mov dword ptr [eax+58h],0FFFFFFFFh"
);
// LINE 490:
	asm( 
"	      004a38fa    cmp dword ptr [ebp+18h],0"
"	      004a38fe    je near ptr 004A3926h"
"	      004a3904    mov eax,[ebp-80h]"
"	      004a3907    cmp dword ptr [eax+3Ch],0"
"	      004a390b    je near ptr 004A3926h"
);
// LINE 491:
	asm( 
"	      004a3911    mov eax,[ebp-80h]"
"	      004a3914    push eax"
"	      004a3915    mov eax,[ebp-80h]"
"	      004a3918    mov ecx,[ebp-80h]"
"	      004a391b    mov ecx,[ecx+3Ch]"
"	      004a391e    mov edx,[ecx]"
"	      004a3920    mov ecx,[eax+3Ch]"
"	      004a3923    call dword ptr [edx+54h]"
);
// LINE 492:
	asm( 
"	      004a3926    mov ecx,[ebp-80h]"
"	      004a3929    call 004A6BCDh"
);
// LINE 493:
	asm( 
"	      004a392e    jmp near ptr 004A3933h"
"	      004a3933    mov eax,[ebp-80h]"
"	      004a3936    pop edi"
"	      004a3937    pop esi"
"	      004a3938    pop ebx"
"	      004a3939    leave"
"	      004a393a    ret 14h"
);
}

// FUNCTION: SIMCOPTER 0x004a393d
public: __thiscall GraphicWindow::GraphicWindow(char const *, class MRect &, long, class GraphicWindow *, class GraphicWindowOwner *, int, int) {
// LINE 513:
	asm( 
"	      004a393d    push ebp"
"	      004a393e    mov ebp,esp"
"	      004a3940    sub esp,90h"
"	      004a3946    push ebx"
"	      004a3947    push esi"
"	      004a3948    push edi"
"	      004a3949    mov [ebp-90h],ecx"
"	      004a394f    mov eax,[ebp-90h]"
"	      004a3955    mov dword ptr [eax],590F2Ch"
"	      004a395b    jmp near ptr 004A3960h"
"	      004a3960    mov eax,[ebp+10h]"
"	      004a3963    mov ecx,[ebp-90h]"
"	      004a3969    mov [ecx+4],eax"
"	      004a396c    push 10h"
"	      004a396e    call 0056A600h"
"	      004a3973    add esp,4"
"	      004a3976    mov [ebp-34h],eax"
"	      004a3979    cmp dword ptr [ebp-34h],0"
"	      004a397d    je near ptr 004A39C2h"
"	      004a3983    mov eax,[ebp-34h]"
"	      004a3986    mov dword ptr [eax+4],0"
"	      004a398d    mov eax,[ebp-34h]"
"	      004a3990    mov eax,[eax+4]"
"	      004a3993    mov ecx,[ebp-34h]"
"	      004a3996    mov [ecx+8],eax"
"	      004a3999    mov eax,[ebp-34h]"
"	      004a399c    mov dword ptr [eax],0"
"	      004a39a2    mov eax,[ebp-34h]"
"	      004a39a5    mov dword ptr [eax+0Ch],1"
"	      004a39ac    jmp near ptr 004A39B1h"
"	      004a39b1    mov eax,[ebp-34h]"
"	      004a39b4    mov ecx,[ebp-90h]"
"	      004a39ba    mov [ecx+0Ch],eax"
"	      004a39bd    jmp near ptr 004A39CFh"
"	      004a39c2    mov eax,[ebp-90h]"
"	      004a39c8    mov dword ptr [eax+0Ch],0"
"	      004a39cf    mov eax,[ebp-90h]"
"	      004a39d5    mov dword ptr [eax+8],0"
"	      004a39dc    jmp near ptr 004A39E1h"
"	      004a39e1    mov eax,[ebp+0Ch]"
"	      004a39e4    mov ecx,[ebp-90h]"
"	      004a39ea    add ecx,10h"
"	      004a39ed    mov edx,[eax]"
"	      004a39ef    mov [ecx],edx"
"	      004a39f1    mov edx,[eax+4]"
"	      004a39f4    mov [ecx+4],edx"
"	      004a39f7    mov edx,[eax+8]"
"	      004a39fa    mov [ecx+8],edx"
"	      004a39fd    mov eax,[eax+0Ch]"
"	      004a3a00    mov [ecx+0Ch],eax"
"	      004a3a03    mov eax,[ebp+0Ch]"
"	      004a3a06    mov ecx,[ebp-90h]"
"	      004a3a0c    add ecx,20h"
"	      004a3a0f    mov edx,[eax]"
"	      004a3a11    mov [ecx],edx"
"	      004a3a13    mov edx,[eax+4]"
"	      004a3a16    mov [ecx+4],edx"
"	      004a3a19    mov edx,[eax+8]"
"	      004a3a1c    mov [ecx+8],edx"
"	      004a3a1f    mov eax,[eax+0Ch]"
"	      004a3a22    mov [ecx+0Ch],eax"
"	      004a3a25    mov eax,[ebp-90h]"
"	      004a3a2b    mov dword ptr [eax+34h],0"
"	      004a3a32    inc dword ptr ds:[59A970h]"
"	      004a3a38    mov eax,ds:[59A97Ch]"
"	      004a3a3d    mov [ebp-40h],eax"
"	      004a3a40    cmp dword ptr ds:[59A97Ch],0"
"	      004a3a47    je near ptr 004A3A67h"
"	      004a3a4d    mov eax,ds:[59A97Ch]"
"	      004a3a52    mov eax,[eax]"
"	      004a3a54    mov ds:[59A97Ch],eax"
"	      004a3a59    mov eax,[ebp-40h]"
"	      004a3a5c    mov [ebp-8Ch],eax"
"	      004a3a62    jmp near ptr 004A3C56h"
"	      004a3a67    mov eax,ds:[59A978h]"
"	      004a3a6c    cmp ds:[59A974h],eax"
"	      004a3a72    jne near ptr 004A3C3Eh"
"	      004a3a78    push 0"
"	      004a3a7a    call 0056A620h"
"	      004a3a7f    add esp,4"
"	      004a3a82    push 8"
"	      004a3a84    call 0056A600h"
"	      004a3a89    add esp,4"
"	      004a3a8c    mov [ebp-78h],eax"
"	      004a3a8f    cmp dword ptr [ebp-78h],0"
"	      004a3a93    jne near ptr 004A3AC6h"
"	      004a3a99    push 5971ACh"
"	      004a3a9e    mov ecx,638BA0h"
"	      004a3aa3    call 00569960h"
"	      004a3aa8    mov [ebp-7Ch],eax"
"	      004a3aab    mov eax,[ebp-7Ch]"
"	      004a3aae    push eax"
"	      004a3aaf    call 004011B0h"
"	      004a3ab4    add esp,4"
"	      004a3ab7    jmp near ptr 004A3ABCh"
"	      004a3abc    push 1"
"	      004a3abe    call 00569430h"
"	      004a3ac3    add esp,4"
"	      004a3ac6    jmp near ptr 004A3ACBh"
"	      004a3acb    jmp near ptr 004A3AD0h"
"	      004a3ad0    mov eax,[ebp-78h]"
"	      004a3ad3    mov [ebp-4Ch],eax"
"	      004a3ad6    mov dword ptr [ebp-50h],155h"
"	      004a3add    lea eax,[ebp-50h]"
"	      004a3ae0    mov [ebp-58h],eax"
"	      004a3ae3    mov dword ptr [ebp-54h],1"
"	      004a3aea    lea eax,[ebp-54h]"
"	      004a3aed    mov [ebp-5Ch],eax"
"	      004a3af0    mov eax,[ebp-5Ch]"
"	      004a3af3    mov ecx,[ebp-58h]"
"	      004a3af6    mov ecx,[ecx]"
"	      004a3af8    cmp [eax],ecx"
"	      004a3afa    jb near ptr 004A3B0Bh"
"	      004a3b00    mov eax,[ebp-5Ch]"
"	      004a3b03    mov [ebp-60h],eax"
"	      004a3b06    jmp near ptr 004A3B11h"
"	      004a3b0b    mov eax,[ebp-58h]"
"	      004a3b0e    mov [ebp-60h],eax"
"	      004a3b11    jmp near ptr 004A3B16h"
"	      004a3b16    jmp near ptr 004A3B1Bh"
"	      004a3b1b    jmp near ptr 004A3B20h"
"	      004a3b20    mov eax,[ebp-60h]"
"	      004a3b23    mov eax,[eax]"
"	      004a3b25    mov [ebp-88h],eax"
"	      004a3b2b    push 0"
"	      004a3b2d    call 0056A620h"
"	      004a3b32    add esp,4"
"	      004a3b35    mov eax,[ebp-88h]"
"	      004a3b3b    lea eax,[eax+eax*2]"
"	      004a3b3e    shl eax,2"
"	      004a3b41    push eax"
"	      004a3b42    call 0056A600h"
"	      004a3b47    add esp,4"
"	      004a3b4a    mov [ebp-80h],eax"
"	      004a3b4d    cmp dword ptr [ebp-80h],0"
"	      004a3b51    jne near ptr 004A3B8Ah"
"	      004a3b57    push 5971ACh"
"	      004a3b5c    mov ecx,638BA0h"
"	      004a3b61    call 00569960h"
"	      004a3b66    mov [ebp-84h],eax"
"	      004a3b6c    mov eax,[ebp-84h]"
"	      004a3b72    push eax"
"	      004a3b73    call 004011B0h"
"	      004a3b78    add esp,4"
"	      004a3b7b    jmp near ptr 004A3B80h"
"	      004a3b80    push 1"
"	      004a3b82    call 00569430h"
"	      004a3b87    add esp,4"
"	      004a3b8a    jmp near ptr 004A3B8Fh"
"	      004a3b8f    jmp near ptr 004A3B94h"
"	      004a3b94    mov eax,[ebp-80h]"
"	      004a3b97    mov ecx,[ebp-4Ch]"
"	      004a3b9a    mov [ecx+4],eax"
"	      004a3b9d    mov eax,ds:[59A980h]"
"	      004a3ba2    mov ecx,[ebp-4Ch]"
"	      004a3ba5    mov [ecx],eax"
"	      004a3ba7    mov eax,[ebp-4Ch]"
"	      004a3baa    mov ds:[59A980h],eax"
"	      004a3baf    mov eax,ds:[59A980h]"
"	      004a3bb4    mov eax,[eax+4]"
"	      004a3bb7    mov ds:[59A978h],eax"
"	      004a3bbc    mov dword ptr [ebp-64h],155h"
"	      004a3bc3    lea eax,[ebp-64h]"
"	      004a3bc6    mov [ebp-6Ch],eax"
"	      004a3bc9    mov dword ptr [ebp-68h],1"
"	      004a3bd0    lea eax,[ebp-68h]"
"	      004a3bd3    mov [ebp-70h],eax"
"	      004a3bd6    mov eax,[ebp-70h]"
"	      004a3bd9    mov ecx,[ebp-6Ch]"
"	      004a3bdc    mov ecx,[ecx]"
"	      004a3bde    cmp [eax],ecx"
"	      004a3be0    jb near ptr 004A3BF1h"
"	      004a3be6    mov eax,[ebp-70h]"
"	      004a3be9    mov [ebp-74h],eax"
"	      004a3bec    jmp near ptr 004A3BF7h"
"	      004a3bf1    mov eax,[ebp-6Ch]"
"	      004a3bf4    mov [ebp-74h],eax"
"	      004a3bf7    jmp near ptr 004A3BFCh"
"	      004a3bfc    jmp near ptr 004A3C01h"
"	      004a3c01    jmp near ptr 004A3C06h"
"	      004a3c06    mov eax,[ebp-74h]"
"	      004a3c09    mov eax,[eax]"
"	      004a3c0b    lea eax,[eax+eax*2]"
"	      004a3c0e    shl eax,2"
"	      004a3c11    add eax,ds:[59A978h]"
"	      004a3c17    mov ds:[59A974h],eax"
"	      004a3c1c    jmp near ptr 004A3C21h"
"	      004a3c21    mov eax,ds:[59A978h]"
"	      004a3c26    mov [ebp-44h],eax"
"	      004a3c29    add dword ptr ds:[59A978h],0Ch"
"	      004a3c30    mov eax,[ebp-44h]"
"	      004a3c33    mov [ebp-8Ch],eax"
"	      004a3c39    jmp near ptr 004A3C56h"
"	      004a3c3e    mov eax,ds:[59A978h]"
"	      004a3c43    mov [ebp-48h],eax"
"	      004a3c46    add dword ptr ds:[59A978h],0Ch"
"	      004a3c4d    mov eax,[ebp-48h]"
"	      004a3c50    mov [ebp-8Ch],eax"
"	      004a3c56    jmp near ptr 004A3C5Bh"
"	      004a3c5b    mov eax,[ebp-8Ch]"
"	      004a3c61    mov ecx,[ebp-90h]"
"	      004a3c67    mov [ecx+30h],eax"
"	      004a3c6a    mov eax,[ebp-90h]"
"	      004a3c70    mov eax,[eax+30h]"
"	      004a3c73    mov ecx,[ebp-90h]"
"	      004a3c79    mov ecx,[ecx+30h]"
"	      004a3c7c    mov [ecx],eax"
"	      004a3c7e    mov eax,[ebp-90h]"
"	      004a3c84    mov eax,[eax+30h]"
"	      004a3c87    mov ecx,[ebp-90h]"
"	      004a3c8d    mov ecx,[ecx+30h]"
"	      004a3c90    mov [ecx+4],eax"
"	      004a3c93    jmp near ptr 004A3C98h"
"	      004a3c98    mov eax,[ebp+18h]"
"	      004a3c9b    mov ecx,[ebp-90h]"
"	      004a3ca1    mov [ecx+38h],eax"
"	      004a3ca4    mov eax,[ebp+14h]"
"	      004a3ca7    mov ecx,[ebp-90h]"
"	      004a3cad    mov [ecx+3Ch],eax"
"	      004a3cb0    mov eax,[ebp+20h]"
"	      004a3cb3    mov ecx,[ebp-90h]"
"	      004a3cb9    mov [ecx+58h],eax"
"	      004a3cbc    push 10h"
"	      004a3cbe    call 0056A600h"
"	      004a3cc3    add esp,4"
"	      004a3cc6    mov [ebp-38h],eax"
"	      004a3cc9    cmp dword ptr [ebp-38h],0"
"	      004a3ccd    je near ptr 004A3D12h"
"	      004a3cd3    mov eax,[ebp-38h]"
"	      004a3cd6    mov dword ptr [eax+4],0"
"	      004a3cdd    mov eax,[ebp-38h]"
"	      004a3ce0    mov eax,[eax+4]"
"	      004a3ce3    mov ecx,[ebp-38h]"
"	      004a3ce6    mov [ecx+8],eax"
"	      004a3ce9    mov eax,[ebp-38h]"
"	      004a3cec    mov dword ptr [eax],0"
"	      004a3cf2    mov eax,[ebp-38h]"
"	      004a3cf5    mov dword ptr [eax+0Ch],1"
"	      004a3cfc    jmp near ptr 004A3D01h"
"	      004a3d01    mov eax,[ebp-38h]"
"	      004a3d04    mov ecx,[ebp-90h]"
"	      004a3d0a    mov [ecx+60h],eax"
"	      004a3d0d    jmp near ptr 004A3D1Fh"
"	      004a3d12    mov eax,[ebp-90h]"
"	      004a3d18    mov dword ptr [eax+60h],0"
"	      004a3d1f    mov eax,[ebp-90h]"
"	      004a3d25    mov dword ptr [eax+5Ch],0"
"	      004a3d2c    jmp near ptr 004A3D31h"
"	      004a3d31    push 10h"
"	      004a3d33    call 0056A600h"
"	      004a3d38    add esp,4"
"	      004a3d3b    mov [ebp-3Ch],eax"
"	      004a3d3e    cmp dword ptr [ebp-3Ch],0"
"	      004a3d42    je near ptr 004A3D87h"
"	      004a3d48    mov eax,[ebp-3Ch]"
"	      004a3d4b    mov dword ptr [eax+4],0"
"	      004a3d52    mov eax,[ebp-3Ch]"
"	      004a3d55    mov eax,[eax+4]"
"	      004a3d58    mov ecx,[ebp-3Ch]"
"	      004a3d5b    mov [ecx+8],eax"
"	      004a3d5e    mov eax,[ebp-3Ch]"
"	      004a3d61    mov dword ptr [eax],0"
"	      004a3d67    mov eax,[ebp-3Ch]"
"	      004a3d6a    mov dword ptr [eax+0Ch],1"
"	      004a3d71    jmp near ptr 004A3D76h"
"	      004a3d76    mov eax,[ebp-3Ch]"
"	      004a3d79    mov ecx,[ebp-90h]"
"	      004a3d7f    mov [ecx+68h],eax"
"	      004a3d82    jmp near ptr 004A3D94h"
"	      004a3d87    mov eax,[ebp-90h]"
"	      004a3d8d    mov dword ptr [eax+68h],0"
"	      004a3d94    mov eax,[ebp-90h]"
"	      004a3d9a    mov dword ptr [eax+64h],0"
"	      004a3da1    jmp near ptr 004A3DA6h"
"	      004a3da6    jmp near ptr 004A3DABh"
"	      004a3dab    mov eax,[ebp-90h]"
"	      004a3db1    mov dword ptr [eax],591680h"
);
// LINE 514:
	asm( 
"	      004a3db7    mov eax,[ebp-90h]"
"	      004a3dbd    mov [ebp-4],eax"
"	      004a3dc0    lea eax,[ebp-4]"
"	      004a3dc3    mov [ebp-8],eax"
"	      004a3dc6    mov eax,ds:[6069A0h]"
"	      004a3dcb    mov [ebp-28h],eax"
"	      004a3dce    mov eax,[ebp-28h]"
"	      004a3dd1    mov [ebp-20h],eax"
"	      004a3dd4    jmp near ptr 004A3DD9h"
"	      004a3dd9    jmp near ptr 004A3DDEh"
"	      004a3dde    mov eax,[ebp-20h]"
"	      004a3de1    mov [ebp-30h],eax"
"	      004a3de4    mov ecx,6069A0h"
"	      004a3de9    call 004A7BC0h"
"	      004a3dee    mov [ebp-2Ch],eax"
"	      004a3df1    jmp near ptr 004A3DF6h"
"	      004a3df6    mov eax,[ebp-8]"
"	      004a3df9    push eax"
"	      004a3dfa    mov eax,[ebp-2Ch]"
"	      004a3dfd    add eax,8"
"	      004a3e00    push eax"
"	      004a3e01    call 004A7F80h"
"	      004a3e06    add esp,8"
"	      004a3e09    mov eax,[ebp-30h]"
"	      004a3e0c    mov ecx,[ebp-2Ch]"
"	      004a3e0f    mov [ecx],eax"
"	      004a3e11    mov eax,[ebp-30h]"
"	      004a3e14    mov eax,[eax+4]"
"	      004a3e17    mov ecx,[ebp-2Ch]"
"	      004a3e1a    mov [ecx+4],eax"
"	      004a3e1d    mov eax,[ebp-2Ch]"
"	      004a3e20    mov ecx,[ebp-30h]"
"	      004a3e23    mov ecx,[ecx+4]"
"	      004a3e26    mov [ecx],eax"
"	      004a3e28    mov eax,[ebp-2Ch]"
"	      004a3e2b    mov ecx,[ebp-30h]"
"	      004a3e2e    mov [ecx+4],eax"
"	      004a3e31    add dword ptr ds:[6069A4h],1"
"	      004a3e38    mov eax,[ebp-2Ch]"
"	      004a3e3b    mov [ebp-24h],eax"
"	      004a3e3e    jmp near ptr 004A3E43h"
"	      004a3e43    jmp near ptr 004A3E48h"
"	      004a3e48    jmp near ptr 004A3E4Dh"
);
// LINE 515:
	asm( 
"	      004a3e4d    jmp near ptr 004A3E52h"
"	      004a3e52    mov eax,[ebp+8]"
"	      004a3e55    push eax"
"	      004a3e56    call 0056ABE0h"
"	      004a3e5b    add esp,4"
"	      004a3e5e    mov [ebp-1Ch],eax"
"	      004a3e61    cmp dword ptr [ebp-1Ch],0FFFFFFFFh"
"	      004a3e65    jne near ptr 004A3E9Dh"
"	      004a3e6b    push 5971E4h"
"	      004a3e70    mov ecx,638C00h"
"	      004a3e75    call 00569960h"
"	      004a3e7a    mov [ebp-18h],eax"
"	      004a3e7d    mov eax,[ebp-18h]"
"	      004a3e80    push eax"
"	      004a3e81    call 004011B0h"
"	      004a3e86    add esp,4"
"	      004a3e89    jmp near ptr 004A3E8Eh"
"	      004a3e8e    push 1"
"	      004a3e90    call 00569430h"
"	      004a3e95    add esp,4"
"	      004a3e98    jmp near ptr 004A3E9Dh"
"	      004a3e9d    jmp near ptr 004A3EA2h"
"	      004a3ea2    mov eax,[ebp-90h]"
"	      004a3ea8    mov eax,[eax+60h]"
"	      004a3eab    cmp dword ptr [eax+0Ch],1"
"	      004a3eaf    ja near ptr 004A3ED9h"
"	      004a3eb5    cmp dword ptr [ebp-1Ch],0"
"	      004a3eb9    je near ptr 004A3F2Eh"
"	      004a3ebf    jmp near ptr 004A3EC4h"
"	      004a3ec4    mov eax,[ebp-90h]"
"	      004a3eca    mov eax,[eax+60h]"
"	      004a3ecd    mov ecx,[ebp-1Ch]"
"	      004a3ed0    cmp [eax+8],ecx"
"	      004a3ed3    jae near ptr 004A3F2Eh"
"	      004a3ed9    push 10h"
"	      004a3edb    call 0056A600h"
"	      004a3ee0    add esp,4"
"	      004a3ee3    mov [ebp-10h],eax"
"	      004a3ee6    cmp dword ptr [ebp-10h],0"
"	      004a3eea    je near ptr 004A3F08h"
"	      004a3ef0    mov eax,[ebp-1Ch]"
"	      004a3ef3    push eax"
"	      004a3ef4    mov eax,[ebp+8]"
"	      004a3ef7    push eax"
"	      004a3ef8    mov ecx,[ebp-10h]"
"	      004a3efb    call 0041E090h"
"	      004a3f00    mov [ebp-0Ch],eax"
"	      004a3f03    jmp near ptr 004A3F0Fh"
"	      004a3f08    mov dword ptr [ebp-0Ch],0"
"	      004a3f0f    mov ecx,[ebp-90h]"
"	      004a3f15    add ecx,5Ch"
"	      004a3f18    call 00412080h"
"	      004a3f1d    mov eax,[ebp-0Ch]"
"	      004a3f20    mov ecx,[ebp-90h]"
"	      004a3f26    mov [ecx+60h],eax"
"	      004a3f29    jmp near ptr 004A3F64h"
"	      004a3f2e    cmp dword ptr [ebp-1Ch],0"
"	      004a3f32    je near ptr 004A3F64h"
"	      004a3f38    jmp near ptr 004A3F3Dh"
"	      004a3f3d    mov eax,[ebp-90h]"
"	      004a3f43    mov eax,[eax+60h]"
"	      004a3f46    mov eax,[eax]"
"	      004a3f48    mov [ebp-14h],eax"
"	      004a3f4b    mov eax,[ebp-1Ch]"
"	      004a3f4e    push eax"
"	      004a3f4f    mov eax,[ebp+8]"
"	      004a3f52    push eax"
"	      004a3f53    mov eax,[ebp-14h]"
"	      004a3f56    push eax"
"	      004a3f57    call 0056A800h"
"	      004a3f5c    add esp,0Ch"
"	      004a3f5f    jmp near ptr 004A3F64h"
"	      004a3f64    mov eax,[ebp-1Ch]"
"	      004a3f67    mov ecx,[ebp-90h]"
"	      004a3f6d    mov ecx,[ecx+60h]"
"	      004a3f70    mov [ecx+4],eax"
"	      004a3f73    jmp near ptr 004A3F78h"
"	      004a3f78    jmp near ptr 004A3F7Dh"
);
// LINE 516:
	asm( 
"	      004a3f7d    mov eax,[ebp-90h]"
"	      004a3f83    mov dword ptr [eax+40h],0"
);
// LINE 517:
	asm( 
"	      004a3f8a    mov eax,[ebp-90h]"
"	      004a3f90    mov dword ptr [eax+44h],0"
);
// LINE 518:
	asm( 
"	      004a3f97    mov eax,[ebp-90h]"
"	      004a3f9d    mov dword ptr [eax+4Ch],0"
);
// LINE 519:
	asm( 
"	      004a3fa4    mov eax,[ebp-90h]"
"	      004a3faa    mov dword ptr [eax+50h],1"
);
// LINE 520:
	asm( 
"	      004a3fb1    mov eax,[ebp-90h]"
"	      004a3fb7    mov dword ptr [eax+48h],1"
);
// LINE 521:
	asm( 
"	      004a3fbe    mov eax,[ebp-90h]"
"	      004a3fc4    mov dword ptr [eax+54h],1"
);
// LINE 522:
	asm( 
"	      004a3fcb    mov eax,[ebp-90h]"
"	      004a3fd1    mov dword ptr [eax+6Ch],0"
);
// LINE 523:
	asm( 
"	      004a3fd8    cmp dword ptr [ebp+1Ch],0"
"	      004a3fdc    je near ptr 004A4010h"
"	      004a3fe2    mov eax,[ebp-90h]"
"	      004a3fe8    cmp dword ptr [eax+3Ch],0"
"	      004a3fec    je near ptr 004A4010h"
);
// LINE 524:
	asm( 
"	      004a3ff2    mov eax,[ebp-90h]"
"	      004a3ff8    push eax"
"	      004a3ff9    mov eax,[ebp-90h]"
"	      004a3fff    mov ecx,[ebp-90h]"
"	      004a4005    mov ecx,[ecx+3Ch]"
"	      004a4008    mov edx,[ecx]"
"	      004a400a    mov ecx,[eax+3Ch]"
"	      004a400d    call dword ptr [edx+54h]"
);
// LINE 525:
	asm( 
"	      004a4010    mov ecx,[ebp-90h]"
"	      004a4016    call 004A673Ch"
);
// LINE 526:
	asm( 
"	      004a401b    push 1"
"	      004a401d    mov ecx,[ebp-90h]"
"	      004a4023    call 004A4AA0h"
);
// LINE 527:
	asm( 
"	      004a4028    mov ecx,[ebp-90h]"
"	      004a402e    call 004A6BCDh"
);
// LINE 528:
	asm( 
"	      004a4033    jmp near ptr 004A4038h"
"	      004a4038    mov eax,[ebp-90h]"
"	      004a403e    pop edi"
"	      004a403f    pop esi"
"	      004a4040    pop ebx"
"	      004a4041    leave"
"	      004a4042    ret 1Ch"
);
}

// FUNCTION: SIMCOPTER 0x004a4045
protected: virtual __thiscall GraphicWindow::~GraphicWindow(void) {
// LINE 537:
	asm( 
"	      004a4045    push ebp"
"	      004a4046    mov ebp,esp"
"	      004a4048    sub esp,94h"
"	      004a404e    push ebx"
"	      004a404f    push esi"
"	      004a4050    push edi"
"	      004a4051    mov [ebp-94h],ecx"
"	      004a4057    mov eax,[ebp-94h]"
"	      004a405d    mov dword ptr [eax],591680h"
);
// LINE 538:
	asm( 
"	      004a4063    mov eax,[ebp-94h]"
"	      004a4069    mov [ebp-4],eax"
"	      004a406c    lea eax,[ebp-4]"
"	      004a406f    mov [ebp-8],eax"
"	      004a4072    mov eax,ds:[6069A0h]"
"	      004a4077    mov eax,[eax]"
"	      004a4079    mov [ebp-90h],eax"
"	      004a407f    mov eax,[ebp-90h]"
"	      004a4085    mov [ebp-7Ch],eax"
"	      004a4088    jmp near ptr 004A408Dh"
"	      004a408d    jmp near ptr 004A4092h"
"	      004a4092    mov eax,ds:[6069A0h]"
"	      004a4097    mov [ebp-8Ch],eax"
"	      004a409d    mov eax,[ebp-8Ch]"
"	      004a40a3    mov [ebp-78h],eax"
"	      004a40a6    jmp near ptr 004A40ABh"
"	      004a40ab    jmp near ptr 004A40B0h"
"	      004a40b0    mov eax,[ebp-7Ch]"
"	      004a40b3    cmp [ebp-78h],eax"
"	      004a40b6    jne near ptr 004A40C6h"
"	      004a40bc    jmp near ptr 004A40DDh"
"	      004a40c1    jmp near ptr 004A40C6h"
"	      004a40c6    jmp near ptr 004A40D8h"
"	      004a40cb    cmp dword ptr [ebp-84h],0"
"	      004a40d2    jne near ptr 004A40DDh"
"	      004a40d8    jmp near ptr 004A40E2h"
"	      004a40dd    jmp near ptr 004A4136h"
"	      004a40e2    jmp near ptr 004A40F4h"
"	      004a40e7    cmp dword ptr [ebp-88h],0"
"	      004a40ee    je near ptr 004A4136h"
"	      004a40f4    mov eax,[ebp-7Ch]"
"	      004a40f7    mov [ebp-80h],eax"
"	      004a40fa    mov eax,[ebp-80h]"
"	      004a40fd    mov eax,[eax]"
"	      004a40ff    mov [ebp-80h],eax"
"	      004a4102    jmp near ptr 004A4107h"
"	      004a4107    jmp near ptr 004A410Ch"
"	      004a410c    mov eax,[ebp-7Ch]"
"	      004a410f    mov ecx,[ebp-8]"
"	      004a4112    mov ecx,[ecx]"
"	      004a4114    cmp [eax+8],ecx"
"	      004a4117    jne near ptr 004A412Bh"
"	      004a411d    mov eax,[ebp-7Ch]"
"	      004a4120    push eax"
"	      004a4121    mov ecx,6069A0h"
"	      004a4126    call 004A7E60h"
"	      004a412b    mov eax,[ebp-80h]"
"	      004a412e    mov [ebp-7Ch],eax"
"	      004a4131    jmp near ptr 004A40B0h"
"	      004a4136    jmp near ptr 004A413Bh"
);
// LINE 539:
	asm( 
"	      004a413b    mov eax,ds:[59A960h]"
"	      004a4140    cmp [ebp-94h],eax"
"	      004a4146    jne near ptr 004A4151h"
"	      004a414c    jmp near ptr 004A4156h"
"	      004a4151    jmp near ptr 004A4177h"
"	      004a4156    jmp near ptr 004A4165h"
"	      004a415b    cmp dword ptr [ebp-0Ch],0"
"	      004a415f    je near ptr 004A4177h"
);
// LINE 540:
	asm( 
"	      004a4165    mov eax,[ebp-94h]"
"	      004a416b    push eax"
"	      004a416c    mov ecx,[ebp-94h]"
"	      004a4172    call 004A6640h"
);
// LINE 541:
	asm( 
"	      004a4177    mov eax,[ebp-94h]"
"	      004a417d    push eax"
"	      004a417e    call 004A773Bh"
"	      004a4183    add esp,4"
);
// LINE 542:
	asm( 
"	      004a4186    mov eax,[ebp-94h]"
"	      004a418c    push eax"
"	      004a418d    call 004A7340h"
"	      004a4192    add esp,4"
);
// LINE 543:
	asm( 
"	      004a4195    mov ecx,[ebp-94h]"
"	      004a419b    call 004A5B58h"
);
// LINE 544:
	asm( 
"	      004a41a0    mov ecx,[ebp-94h]"
"	      004a41a6    call 004A4CABh"
);
// LINE 554:
	asm( 
"	      004a41ab    jmp near ptr 004A41B0h"
"	      004a41b0    mov eax,[ebp-94h]"
"	      004a41b6    mov eax,[eax+68h]"
"	      004a41b9    dec dword ptr [eax+0Ch]"
"	      004a41bc    mov eax,[ebp-94h]"
"	      004a41c2    mov eax,[eax+68h]"
"	      004a41c5    cmp dword ptr [eax+0Ch],0"
"	      004a41c9    jne near ptr 004A4245h"
"	      004a41cf    mov eax,[ebp-94h]"
"	      004a41d5    mov eax,[eax+68h]"
"	      004a41d8    mov [ebp-1Ch],eax"
"	      004a41db    mov eax,[ebp-1Ch]"
"	      004a41de    mov [ebp-18h],eax"
"	      004a41e1    cmp dword ptr [ebp-18h],0"
"	      004a41e5    je near ptr 004A4245h"
"	      004a41eb    mov eax,[ebp-18h]"
"	      004a41ee    cmp dword ptr [eax+8],0"
"	      004a41f2    je near ptr 004A4225h"
"	      004a41f8    mov eax,[ebp-18h]"
"	      004a41fb    mov eax,[eax]"
"	      004a41fd    mov [ebp-20h],eax"
"	      004a4200    mov eax,[ebp-20h]"
"	      004a4203    mov [ebp-24h],eax"
"	      004a4206    mov eax,[ebp-24h]"
"	      004a4209    push eax"
"	      004a420a    call 0056A740h"
"	      004a420f    add esp,4"
"	      004a4212    mov eax,[ebp-18h]"
"	      004a4215    mov dword ptr [eax+8],0"
"	      004a421c    mov eax,[ebp-18h]"
"	      004a421f    mov dword ptr [eax],0"
"	      004a4225    jmp near ptr 004A422Ah"
"	      004a422a    jmp near ptr 004A422Fh"
"	      004a422f    mov eax,[ebp-18h]"
"	      004a4232    push eax"
"	      004a4233    call 0056A740h"
"	      004a4238    add esp,4"
"	      004a423b    jmp near ptr 004A4240h"
"	      004a4240    jmp near ptr 004A4245h"
"	      004a4245    jmp near ptr 004A424Ah"
"	      004a424a    mov eax,[ebp-94h]"
"	      004a4250    cmp dword ptr [eax+64h],0"
"	      004a4254    je near ptr 004A4278h"
"	      004a425a    mov eax,[ebp-94h]"
"	      004a4260    mov eax,[eax+64h]"
"	      004a4263    mov [ebp-10h],eax"
"	      004a4266    mov eax,[ebp-10h]"
"	      004a4269    mov [ebp-14h],eax"
"	      004a426c    mov eax,[ebp-14h]"
"	      004a426f    push eax"
"	      004a4270    call 0056A740h"
"	      004a4275    add esp,4"
"	      004a4278    jmp near ptr 004A427Dh"
"	      004a427d    mov eax,[ebp-94h]"
"	      004a4283    mov eax,[eax+60h]"
"	      004a4286    dec dword ptr [eax+0Ch]"
"	      004a4289    mov eax,[ebp-94h]"
"	      004a428f    mov eax,[eax+60h]"
"	      004a4292    cmp dword ptr [eax+0Ch],0"
"	      004a4296    jne near ptr 004A4312h"
"	      004a429c    mov eax,[ebp-94h]"
"	      004a42a2    mov eax,[eax+60h]"
"	      004a42a5    mov [ebp-34h],eax"
"	      004a42a8    mov eax,[ebp-34h]"
"	      004a42ab    mov [ebp-30h],eax"
"	      004a42ae    cmp dword ptr [ebp-30h],0"
"	      004a42b2    je near ptr 004A4312h"
"	      004a42b8    mov eax,[ebp-30h]"
"	      004a42bb    cmp dword ptr [eax+8],0"
"	      004a42bf    je near ptr 004A42F2h"
"	      004a42c5    mov eax,[ebp-30h]"
"	      004a42c8    mov eax,[eax]"
"	      004a42ca    mov [ebp-38h],eax"
"	      004a42cd    mov eax,[ebp-38h]"
"	      004a42d0    mov [ebp-3Ch],eax"
"	      004a42d3    mov eax,[ebp-3Ch]"
"	      004a42d6    push eax"
"	      004a42d7    call 0056A740h"
"	      004a42dc    add esp,4"
"	      004a42df    mov eax,[ebp-30h]"
"	      004a42e2    mov dword ptr [eax+8],0"
"	      004a42e9    mov eax,[ebp-30h]"
"	      004a42ec    mov dword ptr [eax],0"
"	      004a42f2    jmp near ptr 004A42F7h"
"	      004a42f7    jmp near ptr 004A42FCh"
"	      004a42fc    mov eax,[ebp-30h]"
"	      004a42ff    push eax"
"	      004a4300    call 0056A740h"
"	      004a4305    add esp,4"
"	      004a4308    jmp near ptr 004A430Dh"
"	      004a430d    jmp near ptr 004A4312h"
"	      004a4312    jmp near ptr 004A4317h"
"	      004a4317    mov eax,[ebp-94h]"
"	      004a431d    cmp dword ptr [eax+5Ch],0"
"	      004a4321    je near ptr 004A4345h"
"	      004a4327    mov eax,[ebp-94h]"
"	      004a432d    mov eax,[eax+5Ch]"
"	      004a4330    mov [ebp-28h],eax"
"	      004a4333    mov eax,[ebp-28h]"
"	      004a4336    mov [ebp-2Ch],eax"
"	      004a4339    mov eax,[ebp-2Ch]"
"	      004a433c    push eax"
"	      004a433d    call 0056A740h"
"	      004a4342    add esp,4"
"	      004a4345    jmp near ptr 004A434Ah"
"	      004a434a    mov eax,[ebp-94h]"
"	      004a4350    mov eax,[eax+30h]"
"	      004a4353    mov [ebp-5Ch],eax"
"	      004a4356    mov eax,[ebp-5Ch]"
"	      004a4359    mov [ebp-50h],eax"
"	      004a435c    jmp near ptr 004A4361h"
"	      004a4361    jmp near ptr 004A4366h"
"	      004a4366    mov eax,[ebp-94h]"
"	      004a436c    mov eax,[eax+30h]"
"	      004a436f    mov eax,[eax]"
"	      004a4371    mov [ebp-60h],eax"
"	      004a4374    mov eax,[ebp-60h]"
"	      004a4377    mov [ebp-54h],eax"
"	      004a437a    jmp near ptr 004A437Fh"
"	      004a437f    jmp near ptr 004A4384h"
"	      004a4384    mov eax,[ebp-50h]"
"	      004a4387    mov [ebp-70h],eax"
"	      004a438a    mov eax,[ebp-54h]"
"	      004a438d    mov [ebp-74h],eax"
"	      004a4390    mov eax,[ebp-70h]"
"	      004a4393    cmp [ebp-74h],eax"
"	      004a4396    jne near ptr 004A43A6h"
"	      004a439c    jmp near ptr 004A43BAh"
"	      004a43a1    jmp near ptr 004A43A6h"
"	      004a43a6    jmp near ptr 004A43B5h"
"	      004a43ab    cmp dword ptr [ebp-68h],0"
"	      004a43af    jne near ptr 004A43BAh"
"	      004a43b5    jmp near ptr 004A43BFh"
"	      004a43ba    jmp near ptr 004A43F2h"
"	      004a43bf    jmp near ptr 004A43CEh"
"	      004a43c4    cmp dword ptr [ebp-6Ch],0"
"	      004a43c8    je near ptr 004A43F2h"
"	      004a43ce    push 0"
"	      004a43d0    lea eax,[ebp-64h]"
"	      004a43d3    push eax"
"	      004a43d4    lea ecx,[ebp-74h]"
"	      004a43d7    call 004A7E20h"
"	      004a43dc    mov eax,[eax]"
"	      004a43de    push eax"
"	      004a43df    mov ecx,[ebp-94h]"
"	      004a43e5    add ecx,30h"
"	      004a43e8    call 004A7E60h"
"	      004a43ed    jmp near ptr 004A4390h"
"	      004a43f2    jmp near ptr 004A43F7h"
"	      004a43f7    mov eax,[ebp-94h]"
"	      004a43fd    mov eax,[eax+30h]"
"	      004a4400    mov [ebp-58h],eax"
"	      004a4403    mov eax,ds:[59A97Ch]"
"	      004a4408    mov ecx,[ebp-58h]"
"	      004a440b    mov [ecx],eax"
"	      004a440d    mov eax,[ebp-58h]"
"	      004a4410    mov ds:[59A97Ch],eax"
"	      004a4415    jmp near ptr 004A441Ah"
"	      004a441a    dec dword ptr ds:[59A970h]"
"	      004a4420    jne near ptr 004A4434h"
"	      004a4426    mov ecx,[ebp-94h]"
"	      004a442c    add ecx,30h"
"	      004a442f    call 004A7FC0h"
"	      004a4434    jmp near ptr 004A4439h"
"	      004a4439    mov eax,[ebp-94h]"
"	      004a443f    mov eax,[eax+0Ch]"
"	      004a4442    dec dword ptr [eax+0Ch]"
"	      004a4445    mov eax,[ebp-94h]"
"	      004a444b    mov eax,[eax+0Ch]"
"	      004a444e    cmp dword ptr [eax+0Ch],0"
"	      004a4452    jne near ptr 004A4497h"
"	      004a4458    mov eax,[ebp-94h]"
"	      004a445e    mov eax,[eax+0Ch]"
"	      004a4461    mov [ebp-4Ch],eax"
"	      004a4464    mov eax,[ebp-4Ch]"
"	      004a4467    mov [ebp-48h],eax"
"	      004a446a    cmp dword ptr [ebp-48h],0"
"	      004a446e    je near ptr 004A4497h"
"	      004a4474    mov ecx,[ebp-48h]"
"	      004a4477    call 0041F4B0h"
"	      004a447c    jmp near ptr 004A4481h"
"	      004a4481    mov eax,[ebp-48h]"
"	      004a4484    push eax"
"	      004a4485    call 0056A740h"
"	      004a448a    add esp,4"
"	      004a448d    jmp near ptr 004A4492h"
"	      004a4492    jmp near ptr 004A4497h"
"	      004a4497    jmp near ptr 004A449Ch"
"	      004a449c    mov eax,[ebp-94h]"
"	      004a44a2    cmp dword ptr [eax+8],0"
"	      004a44a6    je near ptr 004A44CAh"
"	      004a44ac    mov eax,[ebp-94h]"
"	      004a44b2    mov eax,[eax+8]"
"	      004a44b5    mov [ebp-40h],eax"
"	      004a44b8    mov eax,[ebp-40h]"
"	      004a44bb    mov [ebp-44h],eax"
"	      004a44be    mov eax,[ebp-44h]"
"	      004a44c1    push eax"
"	      004a44c2    call 0056A740h"
"	      004a44c7    add esp,4"
"	      004a44ca    jmp near ptr 004A44CFh"
"	      004a44cf    pop edi"
"	      004a44d0    pop esi"
"	      004a44d1    pop ebx"
"	      004a44d2    leave"
"	      004a44d3    ret"
);
}

// FUNCTION: SIMCOPTER 0x004a44d4
public: virtual int __thiscall GraphicWindow::Initialize(void) {
// LINE 560:
	asm( 
"	      004a44d4    push ebp"
"	      004a44d5    mov ebp,esp"
"	      004a44d7    sub esp,4"
"	      004a44da    push ebx"
"	      004a44db    push esi"
"	      004a44dc    push edi"
"	      004a44dd    mov [ebp-4],ecx"
);
// LINE 561:
	asm( 
"	      004a44e0    mov eax,1"
"	      004a44e5    jmp near ptr 004A44EAh"
);
// LINE 562:
	asm( 
"	      004a44ea    pop edi"
"	      004a44eb    pop esi"
"	      004a44ec    pop ebx"
"	      004a44ed    leave"
"	      004a44ee    ret"
);
}

// FUNCTION: SIMCOPTER 0x004a44ef
public: class GraphicWindow & __thiscall GraphicWindow::operator=(class GraphicWindow const &) {
// LINE 604:
	asm( 
"	      004a44ef    push ebp"
"	      004a44f0    mov ebp,esp"
"	      004a44f2    sub esp,7Ch"
"	      004a44f5    push ebx"
"	      004a44f6    push esi"
"	      004a44f7    push edi"
"	      004a44f8    mov [ebp-7Ch],ecx"
);
// LINE 605:
	asm( 
"	      004a44fb    mov eax,[ebp+8]"
"	      004a44fe    cmp [ebp-7Ch],eax"
"	      004a4501    jne near ptr 004A450Fh"
);
// LINE 606:
	asm( 
"	      004a4507    mov eax,[ebp-7Ch]"
"	      004a450a    jmp near ptr 004A4A99h"
);
// LINE 608:
	asm( 
"	      004a450f    mov eax,[ebp+8]"
"	      004a4512    add eax,10h"
"	      004a4515    mov ecx,[ebp-7Ch]"
"	      004a4518    add ecx,10h"
"	      004a451b    mov edx,[eax]"
"	      004a451d    mov [ecx],edx"
"	      004a451f    mov edx,[eax+4]"
"	      004a4522    mov [ecx+4],edx"
"	      004a4525    mov edx,[eax+8]"
"	      004a4528    mov [ecx+8],edx"
"	      004a452b    mov eax,[eax+0Ch]"
"	      004a452e    mov [ecx+0Ch],eax"
);
// LINE 609:
	asm( 
"	      004a4531    mov eax,[ebp+8]"
"	      004a4534    add eax,20h"
"	      004a4537    mov ecx,[ebp-7Ch]"
"	      004a453a    add ecx,20h"
"	      004a453d    mov edx,[eax]"
"	      004a453f    mov [ecx],edx"
"	      004a4541    mov edx,[eax+4]"
"	      004a4544    mov [ecx+4],edx"
"	      004a4547    mov edx,[eax+8]"
"	      004a454a    mov [ecx+8],edx"
"	      004a454d    mov eax,[eax+0Ch]"
"	      004a4550    mov [ecx+0Ch],eax"
);
// LINE 610:
	asm( 
"	      004a4553    mov eax,[ebp-7Ch]"
"	      004a4556    add eax,30h"
"	      004a4559    mov ecx,[ebp+8]"
"	      004a455c    add ecx,30h"
"	      004a455f    cmp eax,ecx"
"	      004a4561    je near ptr 004A4738h"
"	      004a4567    lea eax,[ebp-2Ch]"
"	      004a456a    push eax"
"	      004a456b    mov ecx,[ebp-7Ch]"
"	      004a456e    add ecx,30h"
"	      004a4571    call 004A7EC0h"
"	      004a4576    mov eax,[ebp-7Ch]"
"	      004a4579    mov eax,[eax+30h]"
"	      004a457c    mov [ebp-74h],eax"
"	      004a457f    mov eax,[ebp-74h]"
"	      004a4582    mov [ebp-30h],eax"
"	      004a4585    jmp near ptr 004A458Ah"
"	      004a458a    jmp near ptr 004A458Fh"
"	      004a458f    lea eax,[ebp-28h]"
"	      004a4592    push eax"
"	      004a4593    mov ecx,[ebp+8]"
"	      004a4596    add ecx,30h"
"	      004a4599    call 004A7F00h"
"	      004a459e    mov eax,[ebp+8]"
"	      004a45a1    mov eax,[eax+30h]"
"	      004a45a4    mov [ebp-78h],eax"
"	      004a45a7    mov eax,[ebp-78h]"
"	      004a45aa    mov [ebp-34h],eax"
"	      004a45ad    jmp near ptr 004A45B2h"
"	      004a45b2    jmp near ptr 004A45B7h"
"	      004a45b7    mov eax,[ebp-2Ch]"
"	      004a45ba    cmp [ebp-30h],eax"
"	      004a45bd    jne near ptr 004A45CDh"
"	      004a45c3    jmp near ptr 004A45E1h"
"	      004a45c8    jmp near ptr 004A45CDh"
"	      004a45cd    jmp near ptr 004A45DCh"
"	      004a45d2    cmp dword ptr [ebp-60h],0"
"	      004a45d6    jne near ptr 004A45E1h"
"	      004a45dc    jmp near ptr 004A45E6h"
"	      004a45e1    jmp near ptr 004A4687h"
"	      004a45e6    jmp near ptr 004A45F5h"
"	      004a45eb    cmp dword ptr [ebp-64h],0"
"	      004a45ef    je near ptr 004A4687h"
"	      004a45f5    mov eax,[ebp-28h]"
"	      004a45f8    cmp [ebp-34h],eax"
"	      004a45fb    jne near ptr 004A460Bh"
"	      004a4601    jmp near ptr 004A461Fh"
"	      004a4606    jmp near ptr 004A460Bh"
"	      004a460b    jmp near ptr 004A461Ah"
"	      004a4610    cmp dword ptr [ebp-68h],0"
"	      004a4614    jne near ptr 004A461Fh"
"	      004a461a    jmp near ptr 004A4624h"
"	      004a461f    jmp near ptr 004A4687h"
"	      004a4624    jmp near ptr 004A4633h"
"	      004a4629    cmp dword ptr [ebp-6Ch],0"
"	      004a462d    je near ptr 004A4687h"
"	      004a4633    push 0"
"	      004a4635    lea eax,[ebp-38h]"
"	      004a4638    push eax"
"	      004a4639    lea ecx,[ebp-2Ch]"
"	      004a463c    call 004A7E20h"
"	      004a4641    mov [ebp-70h],eax"
"	      004a4644    mov eax,[ebp-70h]"
"	      004a4647    mov eax,[eax]"
"	      004a4649    add eax,8"
"	      004a464c    mov [ebp-40h],eax"
"	      004a464f    jmp near ptr 004A4654h"
"	      004a4654    mov eax,[ebp-28h]"
"	      004a4657    mov [ebp-5Ch],eax"
"	      004a465a    mov eax,[ebp-28h]"
"	      004a465d    mov eax,[eax]"
"	      004a465f    mov [ebp-28h],eax"
"	      004a4662    jmp near ptr 004A4667h"
"	      004a4667    mov eax,[ebp-5Ch]"
"	      004a466a    mov [ebp-3Ch],eax"
"	      004a466d    jmp near ptr 004A4672h"
"	      004a4672    jmp near ptr 004A4677h"
"	      004a4677    mov eax,[ebp-3Ch]"
"	      004a467a    mov eax,[eax+8]"
"	      004a467d    mov ecx,[ebp-40h]"
"	      004a4680    mov [ecx],eax"
"	      004a4682    jmp near ptr 004A45B7h"
"	      004a4687    mov eax,[ebp-28h]"
"	      004a468a    cmp [ebp-34h],eax"
"	      004a468d    jne near ptr 004A4698h"
"	      004a4693    jmp near ptr 004A469Dh"
"	      004a4698    jmp near ptr 004A4721h"
"	      004a469d    jmp near ptr 004A46ACh"
"	      004a46a2    cmp dword ptr [ebp-44h],0"
"	      004a46a6    je near ptr 004A4721h"
"	      004a46ac    mov eax,[ebp-30h]"
"	      004a46af    mov [ebp-54h],eax"
"	      004a46b2    mov eax,[ebp-2Ch]"
"	      004a46b5    mov [ebp-58h],eax"
"	      004a46b8    mov eax,[ebp-54h]"
"	      004a46bb    cmp [ebp-58h],eax"
"	      004a46be    jne near ptr 004A46CEh"
"	      004a46c4    jmp near ptr 004A46E2h"
"	      004a46c9    jmp near ptr 004A46CEh"
"	      004a46ce    jmp near ptr 004A46DDh"
"	      004a46d3    cmp dword ptr [ebp-4Ch],0"
"	      004a46d7    jne near ptr 004A46E2h"
"	      004a46dd    jmp near ptr 004A46E7h"
"	      004a46e2    jmp near ptr 004A4717h"
"	      004a46e7    jmp near ptr 004A46F6h"
"	      004a46ec    cmp dword ptr [ebp-50h],0"
"	      004a46f0    je near ptr 004A4717h"
"	      004a46f6    push 0"
"	      004a46f8    lea eax,[ebp-48h]"
"	      004a46fb    push eax"
"	      004a46fc    lea ecx,[ebp-58h]"
"	      004a46ff    call 004A7E20h"
"	      004a4704    mov eax,[eax]"
"	      004a4706    push eax"
"	      004a4707    mov ecx,[ebp-7Ch]"
"	      004a470a    add ecx,30h"
"	      004a470d    call 004A7E60h"
"	      004a4712    jmp near ptr 004A46B8h"
"	      004a4717    jmp near ptr 004A471Ch"
"	      004a471c    jmp near ptr 004A4738h"
"	      004a4721    mov eax,[ebp-34h]"
"	      004a4724    push eax"
"	      004a4725    mov eax,[ebp-28h]"
"	      004a4728    push eax"
"	      004a4729    mov eax,[ebp-30h]"
"	      004a472c    push eax"
"	      004a472d    mov ecx,[ebp-7Ch]"
"	      004a4730    add ecx,30h"
"	      004a4733    call 004A8050h"
"	      004a4738    jmp near ptr 004A473Dh"
);
// LINE 611:
	asm( 
"	      004a473d    mov eax,[ebp+8]"
"	      004a4740    mov eax,[eax+3Ch]"
"	      004a4743    mov ecx,[ebp-7Ch]"
"	      004a4746    mov [ecx+3Ch],eax"
);
// LINE 612:
	asm( 
"	      004a4749    mov eax,[ebp+8]"
"	      004a474c    mov eax,[eax+40h]"
"	      004a474f    mov ecx,[ebp-7Ch]"
"	      004a4752    mov [ecx+40h],eax"
);
// LINE 613:
	asm( 
"	      004a4755    mov eax,[ebp+8]"
"	      004a4758    mov eax,[eax+44h]"
"	      004a475b    mov ecx,[ebp-7Ch]"
"	      004a475e    mov [ecx+44h],eax"
);
// LINE 614:
	asm( 
"	      004a4761    mov eax,[ebp+8]"
"	      004a4764    mov eax,[eax+48h]"
"	      004a4767    mov ecx,[ebp-7Ch]"
"	      004a476a    mov [ecx+48h],eax"
);
// LINE 615:
	asm( 
"	      004a476d    mov eax,[ebp+8]"
"	      004a4770    mov eax,[eax+4Ch]"
"	      004a4773    mov ecx,[ebp-7Ch]"
"	      004a4776    mov [ecx+4Ch],eax"
);
// LINE 616:
	asm( 
"	      004a4779    mov eax,[ebp+8]"
"	      004a477c    mov eax,[eax+4]"
"	      004a477f    mov ecx,[ebp-7Ch]"
"	      004a4782    mov [ecx+4],eax"
);
// LINE 617:
	asm( 
"	      004a4785    mov eax,[ebp+8]"
"	      004a4788    mov eax,[eax+50h]"
"	      004a478b    mov ecx,[ebp-7Ch]"
"	      004a478e    mov [ecx+50h],eax"
);
// LINE 618:
	asm( 
"	      004a4791    mov eax,[ebp+8]"
"	      004a4794    mov eax,[eax+54h]"
"	      004a4797    mov ecx,[ebp-7Ch]"
"	      004a479a    mov [ecx+54h],eax"
);
// LINE 619:
	asm( 
"	      004a479d    mov eax,[ebp+8]"
"	      004a47a0    mov eax,[eax+6Ch]"
"	      004a47a3    mov ecx,[ebp-7Ch]"
"	      004a47a6    mov [ecx+6Ch],eax"
);
// LINE 620:
	asm( 
"	      004a47a9    mov eax,[ebp+8]"
"	      004a47ac    mov eax,[eax+70h]"
"	      004a47af    mov ecx,[ebp-7Ch]"
"	      004a47b2    mov [ecx+70h],eax"
);
// LINE 621:
	asm( 
"	      004a47b5    mov eax,[ebp+8]"
"	      004a47b8    mov eax,[eax+58h]"
"	      004a47bb    push eax"
"	      004a47bc    mov eax,[ebp-7Ch]"
"	      004a47bf    mov eax,[eax]"
"	      004a47c1    mov ecx,[ebp-7Ch]"
"	      004a47c4    call dword ptr [eax+24h]"
);
// LINE 622:
	asm( 
"	      004a47c7    mov eax,[ebp-7Ch]"
"	      004a47ca    add eax,64h"
"	      004a47cd    mov ecx,[ebp+8]"
"	      004a47d0    add ecx,64h"
"	      004a47d3    cmp eax,ecx"
"	      004a47d5    je near ptr 004A48B0h"
"	      004a47db    mov eax,[ebp-7Ch]"
"	      004a47de    mov eax,[eax+68h]"
"	      004a47e1    dec dword ptr [eax+0Ch]"
"	      004a47e4    mov eax,[ebp-7Ch]"
"	      004a47e7    mov eax,[eax+68h]"
"	      004a47ea    cmp dword ptr [eax+0Ch],0"
"	      004a47ee    jne near ptr 004A4830h"
"	      004a47f4    mov eax,[ebp-7Ch]"
"	      004a47f7    mov eax,[eax+68h]"
"	      004a47fa    mov [ebp-0Ch],eax"
"	      004a47fd    mov eax,[ebp-0Ch]"
"	      004a4800    mov [ebp-8],eax"
"	      004a4803    cmp dword ptr [ebp-8],0"
"	      004a4807    je near ptr 004A4830h"
"	      004a480d    mov ecx,[ebp-8]"
"	      004a4810    call 0041F4B0h"
"	      004a4815    jmp near ptr 004A481Ah"
"	      004a481a    mov eax,[ebp-8]"
"	      004a481d    push eax"
"	      004a481e    call 0056A740h"
"	      004a4823    add esp,4"
"	      004a4826    jmp near ptr 004A482Bh"
"	      004a482b    jmp near ptr 004A4830h"
"	      004a4830    jmp near ptr 004A4835h"
"	      004a4835    jmp near ptr 004A483Ah"
"	      004a483a    mov eax,[ebp+8]"
"	      004a483d    mov eax,[eax+68h]"
"	      004a4840    cmp dword ptr [eax+0Ch],0FFFFFFFFh"
"	      004a4844    je near ptr 004A4864h"
"	      004a484a    mov eax,[ebp+8]"
"	      004a484d    mov eax,[eax+68h]"
"	      004a4850    mov ecx,[ebp-7Ch]"
"	      004a4853    mov [ecx+68h],eax"
"	      004a4856    mov eax,[ebp-7Ch]"
"	      004a4859    mov eax,[eax+68h]"
"	      004a485c    inc dword ptr [eax+0Ch]"
"	      004a485f    jmp near ptr 004A48B0h"
"	      004a4864    push 10h"
"	      004a4866    call 0056A600h"
"	      004a486b    add esp,4"
"	      004a486e    mov [ebp-4],eax"
"	      004a4871    cmp dword ptr [ebp-4],0"
"	      004a4875    je near ptr 004A48A6h"
"	      004a487b    jmp near ptr 004A4880h"
"	      004a4880    mov eax,[ebp+8]"
"	      004a4883    mov eax,[eax+68h]"
"	      004a4886    mov eax,[eax+4]"
"	      004a4889    push eax"
"	      004a488a    push 0"
"	      004a488c    mov eax,[ebp+8]"
"	      004a488f    add eax,64h"
"	      004a4892    push eax"
"	      004a4893    mov ecx,[ebp-4]"
"	      004a4896    call 0041E200h"
"	      004a489b    mov ecx,[ebp-7Ch]"
"	      004a489e    mov [ecx+68h],eax"
"	      004a48a1    jmp near ptr 004A48B0h"
"	      004a48a6    mov eax,[ebp-7Ch]"
"	      004a48a9    mov dword ptr [eax+68h],0"
"	      004a48b0    jmp near ptr 004A48B5h"
);
// LINE 623:
	asm( 
"	      004a48b5    mov eax,[ebp-7Ch]"
"	      004a48b8    add eax,5Ch"
"	      004a48bb    mov ecx,[ebp+8]"
"	      004a48be    add ecx,5Ch"
"	      004a48c1    cmp eax,ecx"
"	      004a48c3    je near ptr 004A499Eh"
"	      004a48c9    mov eax,[ebp-7Ch]"
"	      004a48cc    mov eax,[eax+60h]"
"	      004a48cf    dec dword ptr [eax+0Ch]"
"	      004a48d2    mov eax,[ebp-7Ch]"
"	      004a48d5    mov eax,[eax+60h]"
"	      004a48d8    cmp dword ptr [eax+0Ch],0"
"	      004a48dc    jne near ptr 004A491Eh"
"	      004a48e2    mov eax,[ebp-7Ch]"
"	      004a48e5    mov eax,[eax+60h]"
"	      004a48e8    mov [ebp-18h],eax"
"	      004a48eb    mov eax,[ebp-18h]"
"	      004a48ee    mov [ebp-14h],eax"
"	      004a48f1    cmp dword ptr [ebp-14h],0"
"	      004a48f5    je near ptr 004A491Eh"
"	      004a48fb    mov ecx,[ebp-14h]"
"	      004a48fe    call 0041F4B0h"
"	      004a4903    jmp near ptr 004A4908h"
"	      004a4908    mov eax,[ebp-14h]"
"	      004a490b    push eax"
"	      004a490c    call 0056A740h"
"	      004a4911    add esp,4"
"	      004a4914    jmp near ptr 004A4919h"
"	      004a4919    jmp near ptr 004A491Eh"
"	      004a491e    jmp near ptr 004A4923h"
"	      004a4923    jmp near ptr 004A4928h"
"	      004a4928    mov eax,[ebp+8]"
"	      004a492b    mov eax,[eax+60h]"
"	      004a492e    cmp dword ptr [eax+0Ch],0FFFFFFFFh"
"	      004a4932    je near ptr 004A4952h"
"	      004a4938    mov eax,[ebp+8]"
"	      004a493b    mov eax,[eax+60h]"
"	      004a493e    mov ecx,[ebp-7Ch]"
"	      004a4941    mov [ecx+60h],eax"
"	      004a4944    mov eax,[ebp-7Ch]"
"	      004a4947    mov eax,[eax+60h]"
"	      004a494a    inc dword ptr [eax+0Ch]"
"	      004a494d    jmp near ptr 004A499Eh"
"	      004a4952    push 10h"
"	      004a4954    call 0056A600h"
"	      004a4959    add esp,4"
"	      004a495c    mov [ebp-10h],eax"
"	      004a495f    cmp dword ptr [ebp-10h],0"
"	      004a4963    je near ptr 004A4994h"
"	      004a4969    jmp near ptr 004A496Eh"
"	      004a496e    mov eax,[ebp+8]"
"	      004a4971    mov eax,[eax+60h]"
"	      004a4974    mov eax,[eax+4]"
"	      004a4977    push eax"
"	      004a4978    push 0"
"	      004a497a    mov eax,[ebp+8]"
"	      004a497d    add eax,5Ch"
"	      004a4980    push eax"
"	      004a4981    mov ecx,[ebp-10h]"
"	      004a4984    call 0041E200h"
"	      004a4989    mov ecx,[ebp-7Ch]"
"	      004a498c    mov [ecx+60h],eax"
"	      004a498f    jmp near ptr 004A499Eh"
"	      004a4994    mov eax,[ebp-7Ch]"
"	      004a4997    mov dword ptr [eax+60h],0"
"	      004a499e    jmp near ptr 004A49A3h"
);
// LINE 624:
	asm( 
"	      004a49a3    mov eax,[ebp-7Ch]"
"	      004a49a6    add eax,8"
"	      004a49a9    mov ecx,[ebp+8]"
"	      004a49ac    add ecx,8"
"	      004a49af    cmp eax,ecx"
"	      004a49b1    je near ptr 004A4A8Ch"
"	      004a49b7    mov eax,[ebp-7Ch]"
"	      004a49ba    mov eax,[eax+0Ch]"
"	      004a49bd    dec dword ptr [eax+0Ch]"
"	      004a49c0    mov eax,[ebp-7Ch]"
"	      004a49c3    mov eax,[eax+0Ch]"
"	      004a49c6    cmp dword ptr [eax+0Ch],0"
"	      004a49ca    jne near ptr 004A4A0Ch"
"	      004a49d0    mov eax,[ebp-7Ch]"
"	      004a49d3    mov eax,[eax+0Ch]"
"	      004a49d6    mov [ebp-24h],eax"
"	      004a49d9    mov eax,[ebp-24h]"
"	      004a49dc    mov [ebp-20h],eax"
"	      004a49df    cmp dword ptr [ebp-20h],0"
"	      004a49e3    je near ptr 004A4A0Ch"
"	      004a49e9    mov ecx,[ebp-20h]"
"	      004a49ec    call 0041F4B0h"
"	      004a49f1    jmp near ptr 004A49F6h"
"	      004a49f6    mov eax,[ebp-20h]"
"	      004a49f9    push eax"
"	      004a49fa    call 0056A740h"
"	      004a49ff    add esp,4"
"	      004a4a02    jmp near ptr 004A4A07h"
"	      004a4a07    jmp near ptr 004A4A0Ch"
"	      004a4a0c    jmp near ptr 004A4A11h"
"	      004a4a11    jmp near ptr 004A4A16h"
"	      004a4a16    mov eax,[ebp+8]"
"	      004a4a19    mov eax,[eax+0Ch]"
"	      004a4a1c    cmp dword ptr [eax+0Ch],0FFFFFFFFh"
"	      004a4a20    je near ptr 004A4A40h"
"	      004a4a26    mov eax,[ebp+8]"
"	      004a4a29    mov eax,[eax+0Ch]"
"	      004a4a2c    mov ecx,[ebp-7Ch]"
"	      004a4a2f    mov [ecx+0Ch],eax"
"	      004a4a32    mov eax,[ebp-7Ch]"
"	      004a4a35    mov eax,[eax+0Ch]"
"	      004a4a38    inc dword ptr [eax+0Ch]"
"	      004a4a3b    jmp near ptr 004A4A8Ch"
"	      004a4a40    push 10h"
"	      004a4a42    call 0056A600h"
"	      004a4a47    add esp,4"
"	      004a4a4a    mov [ebp-1Ch],eax"
"	      004a4a4d    cmp dword ptr [ebp-1Ch],0"
"	      004a4a51    je near ptr 004A4A82h"
"	      004a4a57    jmp near ptr 004A4A5Ch"
"	      004a4a5c    mov eax,[ebp+8]"
"	      004a4a5f    mov eax,[eax+0Ch]"
"	      004a4a62    mov eax,[eax+4]"
"	      004a4a65    push eax"
"	      004a4a66    push 0"
"	      004a4a68    mov eax,[ebp+8]"
"	      004a4a6b    add eax,8"
"	      004a4a6e    push eax"
"	      004a4a6f    mov ecx,[ebp-1Ch]"
"	      004a4a72    call 0041E200h"
"	      004a4a77    mov ecx,[ebp-7Ch]"
"	      004a4a7a    mov [ecx+0Ch],eax"
"	      004a4a7d    jmp near ptr 004A4A8Ch"
"	      004a4a82    mov eax,[ebp-7Ch]"
"	      004a4a85    mov dword ptr [eax+0Ch],0"
"	      004a4a8c    jmp near ptr 004A4A91h"
);
// LINE 625:
	asm( 
"	      004a4a91    mov eax,[ebp-7Ch]"
"	      004a4a94    jmp near ptr 004A4A99h"
);
// LINE 626:
	asm( 
"	      004a4a99    pop edi"
"	      004a4a9a    pop esi"
"	      004a4a9b    pop ebx"
"	      004a4a9c    leave"
"	      004a4a9d    ret 4"
);
}

// FUNCTION: SIMCOPTER 0x004a4aa0
public: virtual int __thiscall GraphicWindow::CreateImage(int) {
// LINE 641:
	asm( 
"	      004a4aa0    push ebp"
"	      004a4aa1    mov ebp,esp"
"	      004a4aa3    sub esp,28h"
"	      004a4aa6    push ebx"
"	      004a4aa7    push esi"
"	      004a4aa8    push edi"
"	      004a4aa9    mov [ebp-28h],ecx"
);
// LINE 642:
	asm( 
"	      004a4aac    mov eax,[ebp-28h]"
"	      004a4aaf    cmp dword ptr [eax+40h],0"
"	      004a4ab3    jne near ptr 004A4ACEh"
"	      004a4ab9    jmp near ptr 004A4ABEh"
"	      004a4abe    mov eax,[ebp-28h]"
"	      004a4ac1    mov eax,[eax+60h]"
"	      004a4ac4    cmp dword ptr [eax+4],0"
"	      004a4ac8    jne near ptr 004A4AD8h"
);
// LINE 643:
	asm( 
"	      004a4ace    mov eax,1"
"	      004a4ad3    jmp near ptr 004A4CA4h"
);
// LINE 645:
	asm( 
"	      004a4ad8    mov eax,[ebp-28h]"
"	      004a4adb    mov eax,[eax]"
"	      004a4add    mov ecx,[ebp-28h]"
"	      004a4ae0    call dword ptr [eax+0B4h]"
);
// LINE 646:
	asm( 
"	      004a4ae6    push 134h"
"	      004a4aeb    call 0056A600h"
"	      004a4af0    add esp,4"
"	      004a4af3    mov [ebp-4],eax"
"	      004a4af6    cmp dword ptr [ebp-4],0"
"	      004a4afa    je near ptr 004A4C1Dh"
"	      004a4b00    mov eax,[ebp-28h]"
"	      004a4b03    cmp dword ptr [eax+64h],0"
"	      004a4b07    je near ptr 004A4B28h"
"	      004a4b0d    mov eax,[ebp-28h]"
"	      004a4b10    mov eax,[eax+64h]"
"	      004a4b13    mov [ebp-8],eax"
"	      004a4b16    mov eax,[ebp-8]"
"	      004a4b19    mov [ebp-10h],eax"
"	      004a4b1c    mov eax,[ebp-10h]"
"	      004a4b1f    push eax"
"	      004a4b20    call 0056A740h"
"	      004a4b25    add esp,4"
"	      004a4b28    jmp near ptr 004A4B2Dh"
"	      004a4b2d    mov eax,[ebp-28h]"
"	      004a4b30    mov eax,[eax+68h]"
"	      004a4b33    mov eax,[eax+4]"
"	      004a4b36    inc eax"
"	      004a4b37    push eax"
"	      004a4b38    call 0056A600h"
"	      004a4b3d    add esp,4"
"	      004a4b40    mov ecx,[ebp-28h]"
"	      004a4b43    mov [ecx+64h],eax"
"	      004a4b46    jmp near ptr 004A4B4Bh"
"	      004a4b4b    mov eax,[ebp-28h]"
"	      004a4b4e    mov eax,[eax+68h]"
"	      004a4b51    cmp dword ptr [eax+4],0"
"	      004a4b55    je near ptr 004A4BC4h"
"	      004a4b5b    jmp near ptr 004A4B60h"
"	      004a4b60    jmp near ptr 004A4B65h"
"	      004a4b65    mov eax,[ebp-28h]"
"	      004a4b68    mov eax,[eax+68h]"
"	      004a4b6b    cmp dword ptr [eax+4],0"
"	      004a4b6f    je near ptr 004A4B8Ah"
"	      004a4b75    mov eax,[ebp-28h]"
"	      004a4b78    mov eax,[eax+68h]"
"	      004a4b7b    mov eax,[eax]"
"	      004a4b7d    mov [ebp-1Ch],eax"
"	      004a4b80    jmp near ptr 004A4B96h"
"	      004a4b85    jmp near ptr 004A4B96h"
"	      004a4b8a    mov dword ptr [ebp-1Ch],0"
"	      004a4b91    jmp near ptr 004A4B96h"
"	      004a4b96    mov eax,[ebp-28h]"
"	      004a4b99    mov eax,[eax+68h]"
"	      004a4b9c    mov eax,[eax+4]"
"	      004a4b9f    mov [ebp-20h],eax"
"	      004a4ba2    mov eax,[ebp-28h]"
"	      004a4ba5    mov eax,[eax+64h]"
"	      004a4ba8    mov [ebp-24h],eax"
"	      004a4bab    mov eax,[ebp-20h]"
"	      004a4bae    push eax"
"	      004a4baf    mov eax,[ebp-1Ch]"
"	      004a4bb2    push eax"
"	      004a4bb3    mov eax,[ebp-24h]"
"	      004a4bb6    push eax"
"	      004a4bb7    call 0056A800h"
"	      004a4bbc    add esp,0Ch"
"	      004a4bbf    jmp near ptr 004A4BC4h"
"	      004a4bc4    jmp near ptr 004A4BC9h"
"	      004a4bc9    mov byte ptr [ebp-0Ch],0"
"	      004a4bcd    jmp near ptr 004A4BD2h"
"	      004a4bd2    lea eax,[ebp-0Ch]"
"	      004a4bd5    mov [ebp-14h],eax"
"	      004a4bd8    jmp near ptr 004A4BDDh"
"	      004a4bdd    mov eax,[ebp-28h]"
"	      004a4be0    mov eax,[eax+68h]"
"	      004a4be3    mov eax,[eax+4]"
"	      004a4be6    mov ecx,[ebp-28h]"
"	      004a4be9    add eax,[ecx+64h]"
"	      004a4bec    mov [ebp-18h],eax"
"	      004a4bef    mov eax,[ebp-14h]"
"	      004a4bf2    mov al,[eax]"
"	      004a4bf4    mov ecx,[ebp-18h]"
"	      004a4bf7    mov [ecx],al"
"	      004a4bf9    jmp near ptr 004A4BFEh"
"	      004a4bfe    jmp near ptr 004A4C03h"
"	      004a4c03    mov eax,[ebp-28h]"
"	      004a4c06    mov eax,[eax+64h]"
"	      004a4c09    push eax"
"	      004a4c0a    mov ecx,[ebp-4]"
"	      004a4c0d    call 0046E6DFh"
"	      004a4c12    mov ecx,[ebp-28h]"
"	      004a4c15    mov [ecx+40h],eax"
"	      004a4c18    jmp near ptr 004A4C27h"
"	      004a4c1d    mov eax,[ebp-28h]"
"	      004a4c20    mov dword ptr [eax+40h],0"
);
// LINE 647:
	asm( 
"	      004a4c27    cmp dword ptr [ebp+8],0"
"	      004a4c2b    je near ptr 004A4C99h"
"	      004a4c31    mov eax,[ebp-28h]"
"	      004a4c34    cmp dword ptr [eax+40h],0"
"	      004a4c38    je near ptr 004A4C99h"
);
// LINE 648:
	asm( 
"	      004a4c3e    jmp near ptr 004A4C43h"
"	      004a4c43    mov eax,[ebp-28h]"
"	      004a4c46    mov eax,[eax+40h]"
"	      004a4c49    mov eax,[eax+8]"
"	      004a4c4c    mov ecx,[ebp-28h]"
"	      004a4c4f    add eax,[ecx+10h]"
"	      004a4c52    mov ecx,[ebp-28h]"
"	      004a4c55    mov [ecx+18h],eax"
);
// LINE 649:
	asm( 
"	      004a4c58    jmp near ptr 004A4C5Dh"
"	      004a4c5d    mov eax,[ebp-28h]"
"	      004a4c60    mov eax,[eax+40h]"
"	      004a4c63    mov eax,[eax+0Ch]"
"	      004a4c66    mov ecx,[ebp-28h]"
"	      004a4c69    add eax,[ecx+14h]"
"	      004a4c6c    mov ecx,[ebp-28h]"
"	      004a4c6f    mov [ecx+1Ch],eax"
);
// LINE 650:
	asm( 
"	      004a4c72    mov eax,[ebp-28h]"
"	      004a4c75    cmp dword ptr [eax+58h],0FFFFFFFFh"
"	      004a4c79    je near ptr 004A4C99h"
);
// LINE 651:
	asm( 
"	      004a4c7f    mov eax,[ebp-28h]"
"	      004a4c82    mov eax,[eax+58h]"
"	      004a4c85    push eax"
"	      004a4c86    push 1"
"	      004a4c88    mov eax,[ebp-28h]"
"	      004a4c8b    mov ecx,[ebp-28h]"
"	      004a4c8e    mov ecx,[ecx+40h]"
"	      004a4c91    mov edx,[ecx]"
"	      004a4c93    mov ecx,[eax+40h]"
"	      004a4c96    call dword ptr [edx+8]"
);
// LINE 653:
	asm( 
"	      004a4c99    mov eax,[ebp-28h]"
"	      004a4c9c    mov eax,[eax+40h]"
"	      004a4c9f    jmp near ptr 004A4CA4h"
);
// LINE 654:
	asm( 
"	      004a4ca4    pop edi"
"	      004a4ca5    pop esi"
"	      004a4ca6    pop ebx"
"	      004a4ca7    leave"
"	      004a4ca8    ret 4"
);
}

// FUNCTION: SIMCOPTER 0x004a4cab
public: virtual void __thiscall GraphicWindow::DestroyImage(void) {
// LINE 663:
	asm( 
"	      004a4cab    push ebp"
"	      004a4cac    mov ebp,esp"
"	      004a4cae    sub esp,0Ch"
"	      004a4cb1    push ebx"
"	      004a4cb2    push esi"
"	      004a4cb3    push edi"
"	      004a4cb4    mov [ebp-0Ch],ecx"
);
// LINE 664:
	asm( 
"	      004a4cb7    mov eax,[ebp-0Ch]"
"	      004a4cba    cmp dword ptr [eax+40h],0"
"	      004a4cbe    je near ptr 004A4D12h"
"	      004a4cc4    mov eax,[ebp-0Ch]"
"	      004a4cc7    cmp dword ptr [eax+50h],0"
"	      004a4ccb    je near ptr 004A4D12h"
);
// LINE 665:
	asm( 
"	      004a4cd1    mov eax,[ebp-0Ch]"
"	      004a4cd4    mov eax,[eax+40h]"
"	      004a4cd7    mov [ebp-8],eax"
"	      004a4cda    mov eax,[ebp-8]"
"	      004a4cdd    mov [ebp-4],eax"
"	      004a4ce0    cmp dword ptr [ebp-4],0"
"	      004a4ce4    je near ptr 004A4D08h"
"	      004a4cea    mov ecx,[ebp-4]"
"	      004a4ced    call 0046EC7Ah"
"	      004a4cf2    mov eax,[ebp-4]"
"	      004a4cf5    push eax"
"	      004a4cf6    call 0056A740h"
"	      004a4cfb    add esp,4"
"	      004a4cfe    jmp near ptr 004A4D03h"
"	      004a4d03    jmp near ptr 004A4D08h"
);
// LINE 666:
	asm( 
"	      004a4d08    mov eax,[ebp-0Ch]"
"	      004a4d0b    mov dword ptr [eax+40h],0"
);
// LINE 668:
	asm( 
"	      004a4d12    jmp near ptr 004A4D17h"
"	      004a4d17    pop edi"
"	      004a4d18    pop esi"
"	      004a4d19    pop ebx"
"	      004a4d1a    leave"
"	      004a4d1b    ret"
);
}

// FUNCTION: SIMCOPTER 0x004a4d1c
public: virtual void __thiscall GraphicWindow::SetTransparentColor(int) {
// LINE 676:
	asm( 
"	      004a4d1c    push ebp"
"	      004a4d1d    mov ebp,esp"
"	      004a4d1f    sub esp,4"
"	      004a4d22    push ebx"
"	      004a4d23    push esi"
"	      004a4d24    push edi"
"	      004a4d25    mov [ebp-4],ecx"
);
// LINE 677:
	asm( 
"	      004a4d28    mov eax,[ebp+8]"
"	      004a4d2b    mov ecx,[ebp-4]"
"	      004a4d2e    mov [ecx+58h],eax"
);
// LINE 678:
	asm( 
"	      004a4d31    mov eax,[ebp-4]"
"	      004a4d34    cmp dword ptr [eax+58h],0FFFFFFFFh"
"	      004a4d38    je near ptr 004A4D5Dh"
);
// LINE 679:
	asm( 
"	      004a4d3e    mov eax,[ebp-4]"
"	      004a4d41    mov eax,[eax+58h]"
"	      004a4d44    push eax"
"	      004a4d45    push 1"
"	      004a4d47    mov eax,[ebp-4]"
"	      004a4d4a    mov ecx,[ebp-4]"
"	      004a4d4d    mov ecx,[ecx+40h]"
"	      004a4d50    mov edx,[ecx]"
"	      004a4d52    mov ecx,[eax+40h]"
"	      004a4d55    call dword ptr [edx+8]"
);
// LINE 680:
	asm( 
"	      004a4d58    jmp near ptr 004A4D72h"
);
// LINE 681:
	asm( 
"	      004a4d5d    push 0"
"	      004a4d5f    push 0"
"	      004a4d61    mov eax,[ebp-4]"
"	      004a4d64    mov ecx,[ebp-4]"
"	      004a4d67    mov ecx,[ecx+40h]"
"	      004a4d6a    mov edx,[ecx]"
"	      004a4d6c    mov ecx,[eax+40h]"
"	      004a4d6f    call dword ptr [edx+8]"
);
// LINE 682:
	asm( 
"	      004a4d72    jmp near ptr 004A4D77h"
"	      004a4d77    pop edi"
"	      004a4d78    pop esi"
"	      004a4d79    pop ebx"
"	      004a4d7a    leave"
"	      004a4d7b    ret 4"
);
}

// FUNCTION: SIMCOPTER 0x004a4d7e
public: virtual void __thiscall GraphicWindow::MoveWindow(int, int) {
// LINE 690:
	asm( 
"	      004a4d7e    push ebp"
"	      004a4d7f    mov ebp,esp"
"	      004a4d81    sub esp,0Ch"
"	      004a4d84    push ebx"
"	      004a4d85    push esi"
"	      004a4d86    push edi"
"	      004a4d87    mov [ebp-0Ch],ecx"
);
// LINE 691:
	asm( 
"	      004a4d8a    mov eax,[ebp+8]"
"	      004a4d8d    mov ecx,[ebp-0Ch]"
"	      004a4d90    sub eax,[ecx+10h]"
"	      004a4d93    mov [ebp-8],eax"
"	      004a4d96    mov eax,[ebp+0Ch]"
"	      004a4d99    mov ecx,[ebp-0Ch]"
"	      004a4d9c    sub eax,[ecx+14h]"
"	      004a4d9f    mov [ebp-4],eax"
"	      004a4da2    mov eax,[ebp-8]"
"	      004a4da5    mov ecx,[ebp-0Ch]"
"	      004a4da8    add [ecx+10h],eax"
"	      004a4dab    mov eax,[ebp-8]"
"	      004a4dae    mov ecx,[ebp-0Ch]"
"	      004a4db1    add [ecx+18h],eax"
"	      004a4db4    mov eax,[ebp-4]"
"	      004a4db7    mov ecx,[ebp-0Ch]"
"	      004a4dba    add [ecx+14h],eax"
"	      004a4dbd    mov eax,[ebp-4]"
"	      004a4dc0    mov ecx,[ebp-0Ch]"
"	      004a4dc3    add [ecx+1Ch],eax"
"	      004a4dc6    jmp near ptr 004A4DCBh"
);
// LINE 692:
	asm( 
"	      004a4dcb    mov eax,[ebp-0Ch]"
"	      004a4dce    mov eax,[eax]"
"	      004a4dd0    mov ecx,[ebp-0Ch]"
"	      004a4dd3    call dword ptr [eax+20h]"
);
// LINE 693:
	asm( 
"	      004a4dd6    push 1"
"	      004a4dd8    push 1"
"	      004a4dda    mov eax,[ebp-0Ch]"
"	      004a4ddd    mov eax,[eax]"
"	      004a4ddf    mov ecx,[ebp-0Ch]"
"	      004a4de2    call dword ptr [eax+30h]"
);
// LINE 694:
	asm( 
"	      004a4de5    jmp near ptr 004A4DEAh"
"	      004a4dea    pop edi"
"	      004a4deb    pop esi"
"	      004a4dec    pop ebx"
"	      004a4ded    leave"
"	      004a4dee    ret 8"
);
}

// FUNCTION: SIMCOPTER 0x004a4df1
public: virtual void __thiscall GraphicWindow::SetWidthAndHeight(int, int) {
// LINE 701:
	asm( 
"	      004a4df1    push ebp"
"	      004a4df2    mov ebp,esp"
"	      004a4df4    sub esp,4"
"	      004a4df7    push ebx"
"	      004a4df8    push esi"
"	      004a4df9    push edi"
"	      004a4dfa    mov [ebp-4],ecx"
);
// LINE 702:
	asm( 
"	      004a4dfd    cmp dword ptr [ebp+8],0FFFFFFFFh"
"	      004a4e01    je near ptr 004A4E16h"
);
// LINE 703:
	asm( 
"	      004a4e07    mov eax,[ebp-4]"
"	      004a4e0a    mov eax,[eax+10h]"
"	      004a4e0d    add eax,[ebp+8]"
"	      004a4e10    mov ecx,[ebp-4]"
"	      004a4e13    mov [ecx+18h],eax"
);
// LINE 704:
	asm( 
"	      004a4e16    cmp dword ptr [ebp+0Ch],0FFFFFFFFh"
"	      004a4e1a    je near ptr 004A4E2Fh"
);
// LINE 705:
	asm( 
"	      004a4e20    mov eax,[ebp-4]"
"	      004a4e23    mov eax,[eax+14h]"
"	      004a4e26    add eax,[ebp+0Ch]"
"	      004a4e29    mov ecx,[ebp-4]"
"	      004a4e2c    mov [ecx+1Ch],eax"
);
// LINE 706:
	asm( 
"	      004a4e2f    mov eax,[ebp-4]"
"	      004a4e32    mov eax,[eax]"
"	      004a4e34    mov ecx,[ebp-4]"
"	      004a4e37    call dword ptr [eax+20h]"
);
// LINE 707:
	asm( 
"	      004a4e3a    push 1"
"	      004a4e3c    push 1"
"	      004a4e3e    mov eax,[ebp-4]"
"	      004a4e41    mov eax,[eax]"
"	      004a4e43    mov ecx,[ebp-4]"
"	      004a4e46    call dword ptr [eax+30h]"
);
// LINE 708:
	asm( 
"	      004a4e49    jmp near ptr 004A4E4Eh"
"	      004a4e4e    pop edi"
"	      004a4e4f    pop esi"
"	      004a4e50    pop ebx"
"	      004a4e51    leave"
"	      004a4e52    ret 8"
);
}

// FUNCTION: SIMCOPTER 0x004a4e55
public: virtual void __thiscall GraphicWindow::CenterWindow(class GraphicWindow *) {
// LINE 714:
	asm( 
"	      004a4e55    push ebp"
"	      004a4e56    mov ebp,esp"
"	      004a4e58    sub esp,4"
"	      004a4e5b    push ebx"
"	      004a4e5c    push esi"
"	      004a4e5d    push edi"
"	      004a4e5e    mov [ebp-4],ecx"
);
// LINE 716:
	asm( 
"	      004a4e61    jmp near ptr 004A4E66h"
"	      004a4e66    jmp near ptr 004A4E6Bh"
"	      004a4e6b    mov eax,[ebp+8]"
"	      004a4e6e    mov eax,[eax+1Ch]"
"	      004a4e71    mov ecx,[ebp+8]"
"	      004a4e74    sub eax,[ecx+14h]"
"	      004a4e77    cdq"
"	      004a4e78    sub eax,edx"
"	      004a4e7a    sar eax,1"
"	      004a4e7d    push eax"
"	      004a4e7e    mov eax,[ebp+8]"
"	      004a4e81    mov eax,[eax+18h]"
"	      004a4e84    mov ecx,[ebp+8]"
"	      004a4e87    sub eax,[ecx+10h]"
"	      004a4e8a    cdq"
"	      004a4e8b    sub eax,edx"
"	      004a4e8d    sar eax,1"
"	      004a4e90    push eax"
"	      004a4e91    mov eax,[ebp-4]"
"	      004a4e94    mov eax,[eax]"
"	      004a4e96    mov ecx,[ebp-4]"
"	      004a4e99    call dword ptr [eax+3Ch]"
);
// LINE 717:
	asm( 
"	      004a4e9c    jmp near ptr 004A4EA1h"
"	      004a4ea1    pop edi"
"	      004a4ea2    pop esi"
"	      004a4ea3    pop ebx"
"	      004a4ea4    leave"
"	      004a4ea5    ret 4"
);
}

// FUNCTION: SIMCOPTER 0x004a4ea8
public: virtual void __thiscall GraphicWindow::CenterWindow(int, int) {
// LINE 729:
	asm( 
"	      004a4ea8    push ebp"
"	      004a4ea9    mov ebp,esp"
"	      004a4eab    sub esp,0Ch"
"	      004a4eae    push ebx"
"	      004a4eaf    push esi"
"	      004a4eb0    push edi"
"	      004a4eb1    mov [ebp-0Ch],ecx"
);
// LINE 733:
	asm( 
"	      004a4eb4    cmp dword ptr [ebp+8],0FFFFFFFFh"
"	      004a4eb8    je near ptr 004A4F02h"
);
// LINE 734:
	asm( 
"	      004a4ebe    jmp near ptr 004A4EC3h"
"	      004a4ec3    mov ecx,[ebp+8]"
"	      004a4ec6    mov eax,[ebp-0Ch]"
"	      004a4ec9    mov eax,[eax+18h]"
"	      004a4ecc    mov edx,[ebp-0Ch]"
"	      004a4ecf    sub eax,[edx+10h]"
"	      004a4ed2    cdq"
"	      004a4ed3    sub eax,edx"
"	      004a4ed5    sar eax,1"
"	      004a4ed8    sub ecx,eax"
"	      004a4eda    mov [ebp-8],ecx"
);
// LINE 735:
	asm( 
"	      004a4edd    mov eax,[ebp-0Ch]"
"	      004a4ee0    mov ecx,[ebp-8]"
"	      004a4ee3    cmp [eax+10h],ecx"
"	      004a4ee6    je near ptr 004A4F02h"
);
// LINE 736:
	asm( 
"	      004a4eec    mov eax,[ebp-0Ch]"
"	      004a4eef    mov eax,[eax+14h]"
"	      004a4ef2    push eax"
"	      004a4ef3    mov eax,[ebp-8]"
"	      004a4ef6    push eax"
"	      004a4ef7    mov eax,[ebp-0Ch]"
"	      004a4efa    mov eax,[eax]"
"	      004a4efc    mov ecx,[ebp-0Ch]"
"	      004a4eff    call dword ptr [eax+34h]"
);
// LINE 738:
	asm( 
"	      004a4f02    cmp dword ptr [ebp+0Ch],0FFFFFFFFh"
"	      004a4f06    je near ptr 004A4F50h"
);
// LINE 739:
	asm( 
"	      004a4f0c    jmp near ptr 004A4F11h"
"	      004a4f11    mov ecx,[ebp+0Ch]"
"	      004a4f14    mov eax,[ebp-0Ch]"
"	      004a4f17    mov eax,[eax+1Ch]"
"	      004a4f1a    mov edx,[ebp-0Ch]"
"	      004a4f1d    sub eax,[edx+14h]"
"	      004a4f20    cdq"
"	      004a4f21    sub eax,edx"
"	      004a4f23    sar eax,1"
"	      004a4f26    sub ecx,eax"
"	      004a4f28    mov [ebp-4],ecx"
);
// LINE 740:
	asm( 
"	      004a4f2b    mov eax,[ebp-0Ch]"
"	      004a4f2e    mov ecx,[ebp-4]"
"	      004a4f31    cmp [eax+14h],ecx"
"	      004a4f34    je near ptr 004A4F50h"
);
// LINE 741:
	asm( 
"	      004a4f3a    mov eax,[ebp-4]"
"	      004a4f3d    push eax"
"	      004a4f3e    mov eax,[ebp-0Ch]"
"	      004a4f41    mov eax,[eax+10h]"
"	      004a4f44    push eax"
"	      004a4f45    mov eax,[ebp-0Ch]"
"	      004a4f48    mov eax,[eax]"
"	      004a4f4a    mov ecx,[ebp-0Ch]"
"	      004a4f4d    call dword ptr [eax+34h]"
);
// LINE 743:
	asm( 
"	      004a4f50    jmp near ptr 004A4F55h"
"	      004a4f55    pop edi"
"	      004a4f56    pop esi"
"	      004a4f57    pop ebx"
"	      004a4f58    leave"
"	      004a4f59    ret 8"
);
}

// FUNCTION: SIMCOPTER 0x004a4f5c
public: int __thiscall GraphicWindow::FitRectToWindow(class MRect &) {
// LINE 755:
	asm( 
"	      004a4f5c    push ebp"
"	      004a4f5d    mov ebp,esp"
"	      004a4f5f    sub esp,1Ch"
"	      004a4f62    push ebx"
"	      004a4f63    push esi"
"	      004a4f64    push edi"
"	      004a4f65    mov [ebp-1Ch],ecx"
);
// LINE 756:
	asm( 
"	      004a4f68    mov eax,[ebp-1Ch]"
"	      004a4f6b    add eax,10h"
"	      004a4f6e    lea ecx,[ebp-10h]"
"	      004a4f71    mov edx,[eax]"
"	      004a4f73    mov [ecx],edx"
"	      004a4f75    mov edx,[eax+4]"
"	      004a4f78    mov [ecx+4],edx"
"	      004a4f7b    mov edx,[eax+8]"
"	      004a4f7e    mov [ecx+8],edx"
"	      004a4f81    mov eax,[eax+0Ch]"
"	      004a4f84    mov [ecx+0Ch],eax"
);
// LINE 759:
	asm( 
"	      004a4f87    xor eax,eax"
"	      004a4f89    sub eax,[ebp-10h]"
"	      004a4f8c    mov [ebp-18h],eax"
"	      004a4f8f    xor eax,eax"
"	      004a4f91    sub eax,[ebp-0Ch]"
"	      004a4f94    mov [ebp-14h],eax"
"	      004a4f97    mov eax,[ebp-18h]"
"	      004a4f9a    add [ebp-10h],eax"
"	      004a4f9d    mov eax,[ebp-18h]"
"	      004a4fa0    add [ebp-8],eax"
"	      004a4fa3    mov eax,[ebp-14h]"
"	      004a4fa6    add [ebp-0Ch],eax"
"	      004a4fa9    mov eax,[ebp-14h]"
"	      004a4fac    add [ebp-4],eax"
"	      004a4faf    jmp near ptr 004A4FB4h"
);
// LINE 760:
	asm( 
"	      004a4fb4    mov eax,[ebp+8]"
"	      004a4fb7    mov ecx,[ebp-10h]"
"	      004a4fba    cmp [eax],ecx"
"	      004a4fbc    jge near ptr 004A4FE3h"
);
// LINE 761:
	asm( 
"	      004a4fc2    mov eax,[ebp-10h]"
"	      004a4fc5    mov ecx,[ebp+8]"
"	      004a4fc8    sub eax,[ecx]"
"	      004a4fca    add eax,5"
"	      004a4fcd    mov ecx,[ebp+8]"
"	      004a4fd0    add [ecx],eax"
);
// LINE 762:
	asm( 
"	      004a4fd2    mov eax,[ebp-10h]"
"	      004a4fd5    mov ecx,[ebp+8]"
"	      004a4fd8    sub eax,[ecx]"
"	      004a4fda    add eax,5"
"	      004a4fdd    mov ecx,[ebp+8]"
"	      004a4fe0    add [ecx+8],eax"
);
// LINE 764:
	asm( 
"	      004a4fe3    mov eax,[ebp+8]"
"	      004a4fe6    mov ecx,[ebp-0Ch]"
"	      004a4fe9    cmp [eax+4],ecx"
"	      004a4fec    jge near ptr 004A5016h"
);
// LINE 765:
	asm( 
"	      004a4ff2    mov eax,[ebp-0Ch]"
"	      004a4ff5    mov ecx,[ebp+8]"
"	      004a4ff8    sub eax,[ecx+4]"
"	      004a4ffb    add eax,5"
"	      004a4ffe    mov ecx,[ebp+8]"
"	      004a5001    add [ecx+4],eax"
);
// LINE 766:
	asm( 
"	      004a5004    mov eax,[ebp-0Ch]"
"	      004a5007    mov ecx,[ebp+8]"
"	      004a500a    sub eax,[ecx+4]"
"	      004a500d    add eax,5"
"	      004a5010    mov ecx,[ebp+8]"
"	      004a5013    add [ecx+0Ch],eax"
);
// LINE 768:
	asm( 
"	      004a5016    mov eax,[ebp+8]"
"	      004a5019    mov ecx,[ebp-8]"
"	      004a501c    cmp [eax+8],ecx"
"	      004a501f    jle near ptr 004A5048h"
);
// LINE 769:
	asm( 
"	      004a5025    mov eax,[ebp-8]"
"	      004a5028    mov ecx,[ebp+8]"
"	      004a502b    sub eax,[ecx+8]"
"	      004a502e    sub eax,5"
"	      004a5031    mov ecx,[ebp+8]"
"	      004a5034    add [ecx],eax"
);
// LINE 770:
	asm( 
"	      004a5036    mov eax,[ebp-8]"
"	      004a5039    mov ecx,[ebp+8]"
"	      004a503c    sub eax,[ecx+8]"
"	      004a503f    sub eax,5"
"	      004a5042    mov ecx,[ebp+8]"
"	      004a5045    add [ecx+8],eax"
);
// LINE 772:
	asm( 
"	      004a5048    mov eax,[ebp+8]"
"	      004a504b    mov ecx,[ebp-4]"
"	      004a504e    cmp [eax+0Ch],ecx"
"	      004a5051    jle near ptr 004A507Bh"
);
// LINE 773:
	asm( 
"	      004a5057    mov eax,[ebp-4]"
"	      004a505a    mov ecx,[ebp+8]"
"	      004a505d    sub eax,[ecx+0Ch]"
"	      004a5060    sub eax,5"
"	      004a5063    mov ecx,[ebp+8]"
"	      004a5066    add [ecx+4],eax"
);
// LINE 774:
	asm( 
"	      004a5069    mov eax,[ebp-4]"
"	      004a506c    mov ecx,[ebp+8]"
"	      004a506f    sub eax,[ecx+0Ch]"
"	      004a5072    sub eax,5"
"	      004a5075    mov ecx,[ebp+8]"
"	      004a5078    add [ecx+0Ch],eax"
);
// LINE 777:
	asm( 
"	      004a507b    jmp near ptr 004A5080h"
"	      004a5080    jmp near ptr 004A5085h"
"	      004a5085    mov eax,[ebp-8]"
"	      004a5088    sub eax,[ebp-10h]"
"	      004a508b    mov ecx,[ebp+8]"
"	      004a508e    mov ecx,[ecx+8]"
"	      004a5091    mov edx,[ebp+8]"
"	      004a5094    sub ecx,[edx]"
"	      004a5096    add ecx,5"
"	      004a5099    cmp eax,ecx"
"	      004a509b    jl near ptr 004A50D2h"
"	      004a50a1    jmp near ptr 004A50A6h"
"	      004a50a6    jmp near ptr 004A50ABh"
"	      004a50ab    mov eax,[ebp-4]"
"	      004a50ae    sub eax,[ebp-0Ch]"
"	      004a50b1    mov ecx,[ebp+8]"
"	      004a50b4    mov ecx,[ecx+0Ch]"
"	      004a50b7    mov edx,[ebp+8]"
"	      004a50ba    sub ecx,[edx+4]"
"	      004a50bd    add ecx,5"
"	      004a50c0    cmp eax,ecx"
"	      004a50c2    jl near ptr 004A50D2h"
"	      004a50c8    mov eax,1"
"	      004a50cd    jmp near ptr 004A50D4h"
"	      004a50d2    xor eax,eax"
"	      004a50d4    jmp near ptr 004A50D9h"
);
// LINE 778:
	asm( 
"	      004a50d9    pop edi"
"	      004a50da    pop esi"
"	      004a50db    pop ebx"
"	      004a50dc    leave"
"	      004a50dd    ret 4"
);
}

// FUNCTION: SIMCOPTER 0x004a50e0
public: virtual void __thiscall GraphicWindow::SetChanged(int, int) {
// LINE 786:
	asm( 
"	      004a50e0    push ebp"
"	      004a50e1    mov ebp,esp"
"	      004a50e3    sub esp,2Ch"
"	      004a50e6    push ebx"
"	      004a50e7    push esi"
"	      004a50e8    push edi"
"	      004a50e9    mov [ebp-2Ch],ecx"
);
// LINE 787:
	asm( 
"	      004a50ec    mov eax,[ebp+8]"
"	      004a50ef    mov ecx,[ebp-2Ch]"
"	      004a50f2    mov [ecx+48h],eax"
);
// LINE 788:
	asm( 
"	      004a50f5    cmp dword ptr [ebp+0Ch],0"
"	      004a50f9    je near ptr 004A51C4h"
);
// LINE 789:
	asm( 
"	      004a50ff    mov eax,[ebp-2Ch]"
"	      004a5102    cmp dword ptr [eax+48h],0"
"	      004a5106    je near ptr 004A51C4h"
);
// LINE 790:
	asm( 
"	      004a510c    mov eax,[ebp-2Ch]"
"	      004a510f    mov eax,[eax+30h]"
"	      004a5112    mov eax,[eax]"
"	      004a5114    mov [ebp-24h],eax"
"	      004a5117    mov eax,[ebp-24h]"
"	      004a511a    mov [ebp-4],eax"
"	      004a511d    jmp near ptr 004A5122h"
"	      004a5122    jmp near ptr 004A5127h"
);
// LINE 791:
	asm( 
"	      004a5127    mov eax,[ebp-2Ch]"
"	      004a512a    mov eax,[eax+30h]"
"	      004a512d    mov [ebp-18h],eax"
"	      004a5130    mov eax,[ebp-18h]"
"	      004a5133    mov [ebp-8],eax"
"	      004a5136    jmp near ptr 004A513Bh"
"	      004a513b    jmp near ptr 004A5140h"
"	      004a5140    mov eax,[ebp-4]"
"	      004a5143    cmp [ebp-8],eax"
"	      004a5146    jne near ptr 004A5156h"
"	      004a514c    jmp near ptr 004A516Ah"
"	      004a5151    jmp near ptr 004A5156h"
"	      004a5156    jmp near ptr 004A5165h"
"	      004a515b    cmp dword ptr [ebp-1Ch],0"
"	      004a515f    jne near ptr 004A516Ah"
"	      004a5165    jmp near ptr 004A516Fh"
"	      004a516a    jmp near ptr 004A51C4h"
"	      004a516f    jmp near ptr 004A517Eh"
"	      004a5174    cmp dword ptr [ebp-20h],0"
"	      004a5178    je near ptr 004A51C4h"
);
// LINE 792:
	asm( 
"	      004a517e    jmp near ptr 004A5183h"
"	      004a5183    mov eax,[ebp-4]"
"	      004a5186    mov eax,[eax+8]"
"	      004a5189    mov [ebp-10h],eax"
"	      004a518c    mov eax,[ebp-10h]"
"	      004a518f    mov eax,[eax]"
"	      004a5191    mov [ebp-14h],eax"
"	      004a5194    push 1"
"	      004a5196    push 1"
"	      004a5198    mov eax,[ebp-14h]"
"	      004a519b    mov ecx,[ebp-10h]"
"	      004a519e    call dword ptr [eax+30h]"
);
// LINE 793:
	asm( 
"	      004a51a1    mov eax,[ebp-4]"
"	      004a51a4    mov [ebp-28h],eax"
"	      004a51a7    mov eax,[ebp-4]"
"	      004a51aa    mov eax,[eax]"
"	      004a51ac    mov [ebp-4],eax"
"	      004a51af    jmp near ptr 004A51B4h"
"	      004a51b4    mov eax,[ebp-28h]"
"	      004a51b7    mov [ebp-0Ch],eax"
"	      004a51ba    jmp near ptr 004A51BFh"
);
// LINE 794:
	asm( 
"	      004a51bf    jmp near ptr 004A5127h"
);
// LINE 797:
	asm( 
"	      004a51c4    jmp near ptr 004A51C9h"
"	      004a51c9    pop edi"
"	      004a51ca    pop esi"
"	      004a51cb    pop ebx"
"	      004a51cc    leave"
"	      004a51cd    ret 8"
);
}

// FUNCTION: SIMCOPTER 0x004a51d0
public: virtual void __thiscall GraphicWindow::SetWindowTitle(class basic_string<char> &) {
// LINE 808:
	asm( 
"	      004a51d0    push ebp"
"	      004a51d1    mov ebp,esp"
"	      004a51d3    sub esp,28h"
"	      004a51d6    push ebx"
"	      004a51d7    push esi"
"	      004a51d8    push edi"
"	      004a51d9    mov [ebp-28h],ecx"
);
// LINE 809:
	asm( 
"	      004a51dc    mov eax,[ebp-28h]"
"	      004a51df    add eax,8"
"	      004a51e2    cmp eax,[ebp+8]"
"	      004a51e5    je near ptr 004A539Eh"
"	      004a51eb    mov eax,[ebp-28h]"
"	      004a51ee    mov eax,[eax+0Ch]"
"	      004a51f1    dec dword ptr [eax+0Ch]"
"	      004a51f4    mov eax,[ebp-28h]"
"	      004a51f7    mov eax,[eax+0Ch]"
"	      004a51fa    cmp dword ptr [eax+0Ch],0"
"	      004a51fe    jne near ptr 004A5277h"
"	      004a5204    mov eax,[ebp-28h]"
"	      004a5207    mov eax,[eax+0Ch]"
"	      004a520a    mov [ebp-0Ch],eax"
"	      004a520d    mov eax,[ebp-0Ch]"
"	      004a5210    mov [ebp-8],eax"
"	      004a5213    cmp dword ptr [ebp-8],0"
"	      004a5217    je near ptr 004A5277h"
"	      004a521d    mov eax,[ebp-8]"
"	      004a5220    cmp dword ptr [eax+8],0"
"	      004a5224    je near ptr 004A5257h"
"	      004a522a    mov eax,[ebp-8]"
"	      004a522d    mov eax,[eax]"
"	      004a522f    mov [ebp-10h],eax"
"	      004a5232    mov eax,[ebp-10h]"
"	      004a5235    mov [ebp-14h],eax"
"	      004a5238    mov eax,[ebp-14h]"
"	      004a523b    push eax"
"	      004a523c    call 0056A740h"
"	      004a5241    add esp,4"
"	      004a5244    mov eax,[ebp-8]"
"	      004a5247    mov dword ptr [eax+8],0"
"	      004a524e    mov eax,[ebp-8]"
"	      004a5251    mov dword ptr [eax],0"
"	      004a5257    jmp near ptr 004A525Ch"
"	      004a525c    jmp near ptr 004A5261h"
"	      004a5261    mov eax,[ebp-8]"
"	      004a5264    push eax"
"	      004a5265    call 0056A740h"
"	      004a526a    add esp,4"
"	      004a526d    jmp near ptr 004A5272h"
"	      004a5272    jmp near ptr 004A5277h"
"	      004a5277    jmp near ptr 004A527Ch"
"	      004a527c    jmp near ptr 004A5281h"
"	      004a5281    mov eax,[ebp+8]"
"	      004a5284    mov eax,[eax+4]"
"	      004a5287    cmp dword ptr [eax+0Ch],0FFFFFFFFh"
"	      004a528b    je near ptr 004A52ABh"
"	      004a5291    mov eax,[ebp+8]"
"	      004a5294    mov eax,[eax+4]"
"	      004a5297    mov ecx,[ebp-28h]"
"	      004a529a    mov [ecx+0Ch],eax"
"	      004a529d    mov eax,[ebp-28h]"
"	      004a52a0    mov eax,[eax+0Ch]"
"	      004a52a3    inc dword ptr [eax+0Ch]"
"	      004a52a6    jmp near ptr 004A539Eh"
"	      004a52ab    push 10h"
"	      004a52ad    call 0056A600h"
"	      004a52b2    add esp,4"
"	      004a52b5    mov [ebp-4],eax"
"	      004a52b8    cmp dword ptr [ebp-4],0"
"	      004a52bc    je near ptr 004A5394h"
"	      004a52c2    jmp near ptr 004A52C7h"
"	      004a52c7    mov eax,[ebp+8]"
"	      004a52ca    mov eax,[eax+4]"
"	      004a52cd    mov eax,[eax+4]"
"	      004a52d0    mov [ebp-24h],eax"
"	      004a52d3    mov eax,[ebp-24h]"
"	      004a52d6    mov ecx,[ebp-4]"
"	      004a52d9    mov [ecx+4],eax"
"	      004a52dc    mov eax,[ebp-4]"
"	      004a52df    mov eax,[eax+4]"
"	      004a52e2    mov ecx,[ebp-4]"
"	      004a52e5    mov [ecx+8],eax"
"	      004a52e8    mov eax,[ebp-4]"
"	      004a52eb    cmp dword ptr [eax+8],0"
"	      004a52ef    je near ptr 004A536Eh"
"	      004a52f5    mov eax,[ebp-4]"
"	      004a52f8    mov eax,[eax+8]"
"	      004a52fb    push eax"
"	      004a52fc    call 0056A600h"
"	      004a5301    add esp,4"
"	      004a5304    mov ecx,[ebp-4]"
"	      004a5307    mov [ecx],eax"
"	      004a5309    jmp near ptr 004A530Eh"
"	      004a530e    mov eax,[ebp+8]"
"	      004a5311    mov eax,[eax+4]"
"	      004a5314    cmp dword ptr [eax+4],0"
"	      004a5318    je near ptr 004A5333h"
"	      004a531e    mov eax,[ebp+8]"
"	      004a5321    mov eax,[eax+4]"
"	      004a5324    mov eax,[eax]"
"	      004a5326    mov [ebp-18h],eax"
"	      004a5329    jmp near ptr 004A533Fh"
"	      004a532e    jmp near ptr 004A533Fh"
"	      004a5333    mov dword ptr [ebp-18h],0"
"	      004a533a    jmp near ptr 004A533Fh"
"	      004a533f    mov eax,[ebp-4]"
"	      004a5342    mov eax,[eax+4]"
"	      004a5345    mov [ebp-1Ch],eax"
"	      004a5348    mov eax,[ebp-4]"
"	      004a534b    mov eax,[eax]"
"	      004a534d    mov [ebp-20h],eax"
"	      004a5350    mov eax,[ebp-1Ch]"
"	      004a5353    push eax"
"	      004a5354    mov eax,[ebp-18h]"
"	      004a5357    push eax"
"	      004a5358    mov eax,[ebp-20h]"
"	      004a535b    push eax"
"	      004a535c    call 0056A800h"
"	      004a5361    add esp,0Ch"
"	      004a5364    jmp near ptr 004A5369h"
"	      004a5369    jmp near ptr 004A5377h"
"	      004a536e    mov eax,[ebp-4]"
"	      004a5371    mov dword ptr [eax],0"
"	      004a5377    mov eax,[ebp-4]"
"	      004a537a    mov dword ptr [eax+0Ch],1"
"	      004a5381    jmp near ptr 004A5386h"
"	      004a5386    mov eax,[ebp-4]"
"	      004a5389    mov ecx,[ebp-28h]"
"	      004a538c    mov [ecx+0Ch],eax"
"	      004a538f    jmp near ptr 004A539Eh"
"	      004a5394    mov eax,[ebp-28h]"
"	      004a5397    mov dword ptr [eax+0Ch],0"
"	      004a539e    jmp near ptr 004A53A3h"
);
// LINE 810:
	asm( 
"	      004a53a3    push 1"
"	      004a53a5    push 1"
"	      004a53a7    mov eax,[ebp-28h]"
"	      004a53aa    mov eax,[eax]"
"	      004a53ac    mov ecx,[ebp-28h]"
"	      004a53af    call dword ptr [eax+30h]"
);
// LINE 811:
	asm( 
"	      004a53b2    jmp near ptr 004A53B7h"
"	      004a53b7    pop edi"
"	      004a53b8    pop esi"
"	      004a53b9    pop ebx"
"	      004a53ba    leave"
"	      004a53bb    ret 4"
);
}

// FUNCTION: SIMCOPTER 0x004a53be
public: virtual int __thiscall GraphicWindow::AddChild(class GraphicWindow *) {
// LINE 817:
	asm( 
"	      004a53be    push ebp"
"	      004a53bf    mov ebp,esp"
"	      004a53c1    sub esp,6Ch"
"	      004a53c4    push ebx"
"	      004a53c5    push esi"
"	      004a53c6    push edi"
"	      004a53c7    mov [ebp-6Ch],ecx"
);
// LINE 818:
	asm( 
"	      004a53ca    mov eax,[ebp-6Ch]"
"	      004a53cd    mov eax,[eax+30h]"
"	      004a53d0    mov [ebp-0Ch],eax"
"	      004a53d3    mov eax,[ebp-0Ch]"
"	      004a53d6    mov [ebp-4],eax"
"	      004a53d9    jmp near ptr 004A53DEh"
"	      004a53de    jmp near ptr 004A53E3h"
"	      004a53e3    mov eax,[ebp-4]"
"	      004a53e6    mov [ebp-68h],eax"
"	      004a53e9    mov eax,ds:[59A97Ch]"
"	      004a53ee    mov [ebp-18h],eax"
"	      004a53f1    cmp dword ptr ds:[59A97Ch],0"
"	      004a53f8    je near ptr 004A5415h"
"	      004a53fe    mov eax,ds:[59A97Ch]"
"	      004a5403    mov eax,[eax]"
"	      004a5405    mov ds:[59A97Ch],eax"
"	      004a540a    mov eax,[ebp-18h]"
"	      004a540d    mov [ebp-64h],eax"
"	      004a5410    jmp near ptr 004A55F2h"
"	      004a5415    mov eax,ds:[59A978h]"
"	      004a541a    cmp ds:[59A974h],eax"
"	      004a5420    jne near ptr 004A55DDh"
"	      004a5426    push 0"
"	      004a5428    call 0056A620h"
"	      004a542d    add esp,4"
"	      004a5430    push 8"
"	      004a5432    call 0056A600h"
"	      004a5437    add esp,4"
"	      004a543a    mov [ebp-50h],eax"
"	      004a543d    cmp dword ptr [ebp-50h],0"
"	      004a5441    jne near ptr 004A5474h"
"	      004a5447    push 5971ACh"
"	      004a544c    mov ecx,638BA0h"
"	      004a5451    call 00569960h"
"	      004a5456    mov [ebp-54h],eax"
"	      004a5459    mov eax,[ebp-54h]"
"	      004a545c    push eax"
"	      004a545d    call 004011B0h"
"	      004a5462    add esp,4"
"	      004a5465    jmp near ptr 004A546Ah"
"	      004a546a    push 1"
"	      004a546c    call 00569430h"
"	      004a5471    add esp,4"
"	      004a5474    jmp near ptr 004A5479h"
"	      004a5479    jmp near ptr 004A547Eh"
"	      004a547e    mov eax,[ebp-50h]"
"	      004a5481    mov [ebp-24h],eax"
"	      004a5484    mov dword ptr [ebp-28h],155h"
"	      004a548b    lea eax,[ebp-28h]"
"	      004a548e    mov [ebp-30h],eax"
"	      004a5491    mov dword ptr [ebp-2Ch],1"
"	      004a5498    lea eax,[ebp-2Ch]"
"	      004a549b    mov [ebp-34h],eax"
"	      004a549e    mov eax,[ebp-34h]"
"	      004a54a1    mov ecx,[ebp-30h]"
"	      004a54a4    mov ecx,[ecx]"
"	      004a54a6    cmp [eax],ecx"
"	      004a54a8    jb near ptr 004A54B9h"
"	      004a54ae    mov eax,[ebp-34h]"
"	      004a54b1    mov [ebp-38h],eax"
"	      004a54b4    jmp near ptr 004A54BFh"
"	      004a54b9    mov eax,[ebp-30h]"
"	      004a54bc    mov [ebp-38h],eax"
"	      004a54bf    jmp near ptr 004A54C4h"
"	      004a54c4    jmp near ptr 004A54C9h"
"	      004a54c9    jmp near ptr 004A54CEh"
"	      004a54ce    mov eax,[ebp-38h]"
"	      004a54d1    mov eax,[eax]"
"	      004a54d3    mov [ebp-60h],eax"
"	      004a54d6    push 0"
"	      004a54d8    call 0056A620h"
"	      004a54dd    add esp,4"
"	      004a54e0    mov eax,[ebp-60h]"
"	      004a54e3    lea eax,[eax+eax*2]"
"	      004a54e6    shl eax,2"
"	      004a54e9    push eax"
"	      004a54ea    call 0056A600h"
"	      004a54ef    add esp,4"
"	      004a54f2    mov [ebp-58h],eax"
"	      004a54f5    cmp dword ptr [ebp-58h],0"
"	      004a54f9    jne near ptr 004A552Ch"
"	      004a54ff    push 5971ACh"
"	      004a5504    mov ecx,638BA0h"
"	      004a5509    call 00569960h"
"	      004a550e    mov [ebp-5Ch],eax"
"	      004a5511    mov eax,[ebp-5Ch]"
"	      004a5514    push eax"
"	      004a5515    call 004011B0h"
"	      004a551a    add esp,4"
"	      004a551d    jmp near ptr 004A5522h"
"	      004a5522    push 1"
"	      004a5524    call 00569430h"
"	      004a5529    add esp,4"
"	      004a552c    jmp near ptr 004A5531h"
"	      004a5531    jmp near ptr 004A5536h"
"	      004a5536    mov eax,[ebp-58h]"
"	      004a5539    mov ecx,[ebp-24h]"
"	      004a553c    mov [ecx+4],eax"
"	      004a553f    mov eax,ds:[59A980h]"
"	      004a5544    mov ecx,[ebp-24h]"
"	      004a5547    mov [ecx],eax"
"	      004a5549    mov eax,[ebp-24h]"
"	      004a554c    mov ds:[59A980h],eax"
"	      004a5551    mov eax,ds:[59A980h]"
"	      004a5556    mov eax,[eax+4]"
"	      004a5559    mov ds:[59A978h],eax"
"	      004a555e    mov dword ptr [ebp-3Ch],155h"
"	      004a5565    lea eax,[ebp-3Ch]"
"	      004a5568    mov [ebp-44h],eax"
"	      004a556b    mov dword ptr [ebp-40h],1"
"	      004a5572    lea eax,[ebp-40h]"
"	      004a5575    mov [ebp-48h],eax"
"	      004a5578    mov eax,[ebp-48h]"
"	      004a557b    mov ecx,[ebp-44h]"
"	      004a557e    mov ecx,[ecx]"
"	      004a5580    cmp [eax],ecx"
"	      004a5582    jb near ptr 004A5593h"
"	      004a5588    mov eax,[ebp-48h]"
"	      004a558b    mov [ebp-4Ch],eax"
"	      004a558e    jmp near ptr 004A5599h"
"	      004a5593    mov eax,[ebp-44h]"
"	      004a5596    mov [ebp-4Ch],eax"
"	      004a5599    jmp near ptr 004A559Eh"
"	      004a559e    jmp near ptr 004A55A3h"
"	      004a55a3    jmp near ptr 004A55A8h"
"	      004a55a8    mov eax,[ebp-4Ch]"
"	      004a55ab    mov eax,[eax]"
"	      004a55ad    lea eax,[eax+eax*2]"
"	      004a55b0    shl eax,2"
"	      004a55b3    add eax,ds:[59A978h]"
"	      004a55b9    mov ds:[59A974h],eax"
"	      004a55be    jmp near ptr 004A55C3h"
"	      004a55c3    mov eax,ds:[59A978h]"
"	      004a55c8    mov [ebp-1Ch],eax"
"	      004a55cb    add dword ptr ds:[59A978h],0Ch"
"	      004a55d2    mov eax,[ebp-1Ch]"
"	      004a55d5    mov [ebp-64h],eax"
"	      004a55d8    jmp near ptr 004A55F2h"
"	      004a55dd    mov eax,ds:[59A978h]"
"	      004a55e2    mov [ebp-20h],eax"
"	      004a55e5    add dword ptr ds:[59A978h],0Ch"
"	      004a55ec    mov eax,[ebp-20h]"
"	      004a55ef    mov [ebp-64h],eax"
"	      004a55f2    jmp near ptr 004A55F7h"
"	      004a55f7    mov eax,[ebp-64h]"
"	      004a55fa    mov [ebp-10h],eax"
"	      004a55fd    jmp near ptr 004A5602h"
"	      004a5602    mov eax,[ebp-10h]"
"	      004a5605    add eax,8"
"	      004a5608    mov [ebp-14h],eax"
"	      004a560b    jmp near ptr 004A5610h"
"	      004a5610    cmp dword ptr [ebp-14h],0"
"	      004a5614    je near ptr 004A5627h"
"	      004a561a    mov eax,[ebp+8]"
"	      004a561d    mov ecx,[ebp-14h]"
"	      004a5620    mov [ecx],eax"
"	      004a5622    jmp near ptr 004A5627h"
"	      004a5627    jmp near ptr 004A562Ch"
"	      004a562c    mov eax,[ebp-68h]"
"	      004a562f    mov ecx,[ebp-10h]"
"	      004a5632    mov [ecx],eax"
"	      004a5634    mov eax,[ebp-68h]"
"	      004a5637    mov eax,[eax+4]"
"	      004a563a    mov ecx,[ebp-10h]"
"	      004a563d    mov [ecx+4],eax"
"	      004a5640    mov eax,[ebp-10h]"
"	      004a5643    mov ecx,[ebp-68h]"
"	      004a5646    mov ecx,[ecx+4]"
"	      004a5649    mov [ecx],eax"
"	      004a564b    mov eax,[ebp-10h]"
"	      004a564e    mov ecx,[ebp-68h]"
"	      004a5651    mov [ecx+4],eax"
"	      004a5654    mov eax,[ebp-6Ch]"
"	      004a5657    inc dword ptr [eax+34h]"
"	      004a565a    mov eax,[ebp-10h]"
"	      004a565d    mov [ebp-8],eax"
"	      004a5660    jmp near ptr 004A5665h"
"	      004a5665    jmp near ptr 004A566Ah"
"	      004a566a    jmp near ptr 004A566Fh"
);
// LINE 819:
	asm( 
"	      004a566f    mov eax,[ebp+8]"
"	      004a5672    mov eax,[eax]"
"	      004a5674    mov ecx,[ebp+8]"
"	      004a5677    call dword ptr [eax+1Ch]"
);
// LINE 820:
	asm( 
"	      004a567a    push 1"
"	      004a567c    push 1"
"	      004a567e    mov eax,[ebp-6Ch]"
"	      004a5681    mov eax,[eax]"
"	      004a5683    mov ecx,[ebp-6Ch]"
"	      004a5686    call dword ptr [eax+30h]"
);
// LINE 821:
	asm( 
"	      004a5689    mov eax,1"
"	      004a568e    jmp near ptr 004A5693h"
);
// LINE 822:
	asm( 
"	      004a5693    pop edi"
"	      004a5694    pop esi"
"	      004a5695    pop ebx"
"	      004a5696    leave"
"	      004a5697    ret 4"
);
}

// FUNCTION: SIMCOPTER 0x004a569a
public: virtual int __thiscall GraphicWindow::DeleteChild(class GraphicWindow *) {
// LINE 830:
	asm( 
"	      004a569a    push ebp"
"	      004a569b    mov ebp,esp"
"	      004a569d    sub esp,3Ch"
"	      004a56a0    push ebx"
"	      004a56a1    push esi"
"	      004a56a2    push edi"
"	      004a56a3    mov [ebp-3Ch],ecx"
);
// LINE 831:
	asm( 
"	      004a56a6    mov eax,[ebp-3Ch]"
"	      004a56a9    mov eax,[eax+30h]"
"	      004a56ac    mov eax,[eax]"
"	      004a56ae    mov [ebp-30h],eax"
"	      004a56b1    mov eax,[ebp-30h]"
"	      004a56b4    mov [ebp-4],eax"
"	      004a56b7    jmp near ptr 004A56BCh"
"	      004a56bc    jmp near ptr 004A56C1h"
);
// LINE 832:
	asm( 
"	      004a56c1    mov dword ptr [ebp-8],0"
);
// LINE 835:
	asm( 
"	      004a56c8    mov eax,[ebp-3Ch]"
"	      004a56cb    mov eax,[eax+30h]"
"	      004a56ce    mov [ebp-24h],eax"
"	      004a56d1    mov eax,[ebp-24h]"
"	      004a56d4    mov [ebp-0Ch],eax"
"	      004a56d7    jmp near ptr 004A56DCh"
"	      004a56dc    jmp near ptr 004A56E1h"
"	      004a56e1    mov eax,[ebp-4]"
"	      004a56e4    cmp [ebp-0Ch],eax"
"	      004a56e7    jne near ptr 004A56F7h"
"	      004a56ed    jmp near ptr 004A570Bh"
"	      004a56f2    jmp near ptr 004A56F7h"
"	      004a56f7    jmp near ptr 004A5706h"
"	      004a56fc    cmp dword ptr [ebp-28h],0"
"	      004a5700    jne near ptr 004A570Bh"
"	      004a5706    jmp near ptr 004A5710h"
"	      004a570b    jmp near ptr 004A5828h"
"	      004a5710    jmp near ptr 004A571Fh"
"	      004a5715    cmp dword ptr [ebp-2Ch],0"
"	      004a5719    je near ptr 004A5828h"
);
// LINE 836:
	asm( 
"	      004a571f    jmp near ptr 004A5724h"
"	      004a5724    mov eax,[ebp-4]"
"	      004a5727    mov ecx,[ebp+8]"
"	      004a572a    cmp [eax+8],ecx"
"	      004a572d    jne near ptr 004A5805h"
);
// LINE 840:
	asm( 
"	      004a5733    mov eax,[ebp-4]"
"	      004a5736    mov [ebp-20h],eax"
"	      004a5739    mov eax,[ebp-4]"
"	      004a573c    mov eax,[eax]"
"	      004a573e    mov [ebp-4],eax"
"	      004a5741    jmp near ptr 004A5746h"
"	      004a5746    mov eax,[ebp-20h]"
"	      004a5749    mov [ebp-10h],eax"
"	      004a574c    jmp near ptr 004A5751h"
"	      004a5751    mov eax,[ebp-10h]"
"	      004a5754    mov [ebp-38h],eax"
"	      004a5757    mov eax,[ebp-38h]"
"	      004a575a    mov eax,[eax]"
"	      004a575c    mov ecx,[ebp-38h]"
"	      004a575f    mov ecx,[ecx+4]"
"	      004a5762    mov [ecx],eax"
"	      004a5764    mov eax,[ebp-38h]"
"	      004a5767    mov eax,[eax+4]"
"	      004a576a    mov ecx,[ebp-38h]"
"	      004a576d    mov ecx,[ecx]"
"	      004a576f    mov [ecx+4],eax"
"	      004a5772    jmp near ptr 004A5777h"
"	      004a5777    jmp near ptr 004A577Ch"
"	      004a577c    mov eax,ds:[59A97Ch]"
"	      004a5781    mov ecx,[ebp-38h]"
"	      004a5784    mov [ecx],eax"
"	      004a5786    mov eax,[ebp-38h]"
"	      004a5789    mov ds:[59A97Ch],eax"
"	      004a578e    jmp near ptr 004A5793h"
"	      004a5793    mov eax,[ebp-3Ch]"
"	      004a5796    dec dword ptr [eax+34h]"
"	      004a5799    jmp near ptr 004A579Eh"
);
// LINE 841:
	asm( 
"	      004a579e    mov eax,[ebp+8]"
"	      004a57a1    push eax"
"	      004a57a2    mov eax,ds:[59A964h]"
"	      004a57a7    mov eax,[eax]"
"	      004a57a9    mov ecx,ds:[59A964h]"
"	      004a57af    call dword ptr [eax+28h]"
"	      004a57b2    test eax,eax"
"	      004a57b4    je near ptr 004A57E5h"
);
// LINE 842:
	asm( 
"	      004a57ba    mov eax,[ebp+8]"
"	      004a57bd    mov [ebp-18h],eax"
"	      004a57c0    mov eax,[ebp-18h]"
"	      004a57c3    mov [ebp-14h],eax"
"	      004a57c6    cmp dword ptr [ebp-14h],0"
"	      004a57ca    je near ptr 004A57E5h"
"	      004a57d0    push 1"
"	      004a57d2    mov eax,[ebp-14h]"
"	      004a57d5    mov eax,[eax]"
"	      004a57d7    mov ecx,[ebp-14h]"
"	      004a57da    call dword ptr [eax+0ACh]"
"	      004a57e0    jmp near ptr 004A57E5h"
);
// LINE 843:
	asm( 
"	      004a57e5    push 1"
"	      004a57e7    push 1"
"	      004a57e9    mov eax,[ebp-3Ch]"
"	      004a57ec    mov eax,[eax]"
"	      004a57ee    mov ecx,[ebp-3Ch]"
"	      004a57f1    call dword ptr [eax+30h]"
);
// LINE 844:
	asm( 
"	      004a57f4    mov dword ptr [ebp-8],1"
);
// LINE 845:
	asm( 
"	      004a57fb    jmp near ptr 004A5828h"
);
// LINE 847:
	asm( 
"	      004a5800    jmp near ptr 004A5823h"
);
// LINE 848:
	asm( 
"	      004a5805    mov eax,[ebp-4]"
"	      004a5808    mov [ebp-34h],eax"
"	      004a580b    mov eax,[ebp-4]"
"	      004a580e    mov eax,[eax]"
"	      004a5810    mov [ebp-4],eax"
"	      004a5813    jmp near ptr 004A5818h"
"	      004a5818    mov eax,[ebp-34h]"
"	      004a581b    mov [ebp-1Ch],eax"
"	      004a581e    jmp near ptr 004A5823h"
);
// LINE 849:
	asm( 
"	      004a5823    jmp near ptr 004A56C8h"
);
// LINE 852:
	asm( 
"	      004a5828    mov eax,[ebp-8]"
"	      004a582b    jmp near ptr 004A5830h"
);
// LINE 853:
	asm( 
"	      004a5830    pop edi"
"	      004a5831    pop esi"
"	      004a5832    pop ebx"
"	      004a5833    leave"
"	      004a5834    ret 4"
);
}

// FUNCTION: SIMCOPTER 0x004a5837
public: virtual class GraphicWindow * __thiscall GraphicWindow::DeleteChild(long) {
// LINE 861:
	asm( 
"	      004a5837    push ebp"
"	      004a5838    mov ebp,esp"
"	      004a583a    sub esp,3Ch"
"	      004a583d    push ebx"
"	      004a583e    push esi"
"	      004a583f    push edi"
"	      004a5840    mov [ebp-3Ch],ecx"
);
// LINE 862:
	asm( 
"	      004a5843    mov eax,[ebp-3Ch]"
"	      004a5846    mov eax,[eax+30h]"
"	      004a5849    mov eax,[eax]"
"	      004a584b    mov [ebp-30h],eax"
"	      004a584e    mov eax,[ebp-30h]"
"	      004a5851    mov [ebp-8],eax"
"	      004a5854    jmp near ptr 004A5859h"
"	      004a5859    jmp near ptr 004A585Eh"
);
// LINE 863:
	asm( 
"	      004a585e    mov dword ptr [ebp-4],0"
);
// LINE 865:
	asm( 
"	      004a5865    mov eax,ds:[59A964h]"
"	      004a586a    mov eax,[eax]"
"	      004a586c    mov ecx,ds:[59A964h]"
"	      004a5872    call dword ptr [eax+30h]"
);
// LINE 866:
	asm( 
"	      004a5875    mov eax,[ebp-3Ch]"
"	      004a5878    mov eax,[eax+30h]"
"	      004a587b    mov [ebp-24h],eax"
"	      004a587e    mov eax,[ebp-24h]"
"	      004a5881    mov [ebp-0Ch],eax"
"	      004a5884    jmp near ptr 004A5889h"
"	      004a5889    jmp near ptr 004A588Eh"
"	      004a588e    mov eax,[ebp-0Ch]"
"	      004a5891    cmp [ebp-8],eax"
"	      004a5894    jne near ptr 004A58A4h"
"	      004a589a    jmp near ptr 004A58B8h"
"	      004a589f    jmp near ptr 004A58A4h"
"	      004a58a4    jmp near ptr 004A58B3h"
"	      004a58a9    cmp dword ptr [ebp-28h],0"
"	      004a58ad    jne near ptr 004A58B8h"
"	      004a58b3    jmp near ptr 004A58BDh"
"	      004a58b8    jmp near ptr 004A59DFh"
"	      004a58bd    jmp near ptr 004A58CCh"
"	      004a58c2    cmp dword ptr [ebp-2Ch],0"
"	      004a58c6    je near ptr 004A59DFh"
);
// LINE 867:
	asm( 
"	      004a58cc    jmp near ptr 004A58D1h"
"	      004a58d1    mov eax,[ebp-8]"
"	      004a58d4    mov eax,[eax+8]"
"	      004a58d7    mov ecx,[ebp+8]"
"	      004a58da    cmp [eax+4],ecx"
"	      004a58dd    jne near ptr 004A59BCh"
);
// LINE 871:
	asm( 
"	      004a58e3    jmp near ptr 004A58E8h"
"	      004a58e8    mov eax,[ebp-8]"
"	      004a58eb    mov eax,[eax+8]"
"	      004a58ee    mov [ebp-4],eax"
);
// LINE 872:
	asm( 
"	      004a58f1    mov eax,[ebp-8]"
"	      004a58f4    mov [ebp-20h],eax"
"	      004a58f7    mov eax,[ebp-8]"
"	      004a58fa    mov eax,[eax]"
"	      004a58fc    mov [ebp-8],eax"
"	      004a58ff    jmp near ptr 004A5904h"
"	      004a5904    mov eax,[ebp-20h]"
"	      004a5907    mov [ebp-10h],eax"
"	      004a590a    jmp near ptr 004A590Fh"
"	      004a590f    mov eax,[ebp-10h]"
"	      004a5912    mov [ebp-38h],eax"
"	      004a5915    mov eax,[ebp-38h]"
"	      004a5918    mov eax,[eax]"
"	      004a591a    mov ecx,[ebp-38h]"
"	      004a591d    mov ecx,[ecx+4]"
"	      004a5920    mov [ecx],eax"
"	      004a5922    mov eax,[ebp-38h]"
"	      004a5925    mov eax,[eax+4]"
"	      004a5928    mov ecx,[ebp-38h]"
"	      004a592b    mov ecx,[ecx]"
"	      004a592d    mov [ecx+4],eax"
"	      004a5930    jmp near ptr 004A5935h"
"	      004a5935    jmp near ptr 004A593Ah"
"	      004a593a    mov eax,ds:[59A97Ch]"
"	      004a593f    mov ecx,[ebp-38h]"
"	      004a5942    mov [ecx],eax"
"	      004a5944    mov eax,[ebp-38h]"
"	      004a5947    mov ds:[59A97Ch],eax"
"	      004a594c    jmp near ptr 004A5951h"
"	      004a5951    mov eax,[ebp-3Ch]"
"	      004a5954    dec dword ptr [eax+34h]"
"	      004a5957    jmp near ptr 004A595Ch"
);
// LINE 873:
	asm( 
"	      004a595c    mov eax,[ebp-4]"
"	      004a595f    push eax"
"	      004a5960    mov eax,ds:[59A964h]"
"	      004a5965    mov eax,[eax]"
"	      004a5967    mov ecx,ds:[59A964h]"
"	      004a596d    call dword ptr [eax+28h]"
"	      004a5970    test eax,eax"
"	      004a5972    je near ptr 004A59A3h"
);
// LINE 874:
	asm( 
"	      004a5978    mov eax,[ebp-4]"
"	      004a597b    mov [ebp-18h],eax"
"	      004a597e    mov eax,[ebp-18h]"
"	      004a5981    mov [ebp-14h],eax"
"	      004a5984    cmp dword ptr [ebp-14h],0"
"	      004a5988    je near ptr 004A59A3h"
"	      004a598e    push 1"
"	      004a5990    mov eax,[ebp-14h]"
"	      004a5993    mov eax,[eax]"
"	      004a5995    mov ecx,[ebp-14h]"
"	      004a5998    call dword ptr [eax+0ACh]"
"	      004a599e    jmp near ptr 004A59A3h"
);
// LINE 875:
	asm( 
"	      004a59a3    push 1"
"	      004a59a5    push 1"
"	      004a59a7    mov eax,[ebp-3Ch]"
"	      004a59aa    mov eax,[eax]"
"	      004a59ac    mov ecx,[ebp-3Ch]"
"	      004a59af    call dword ptr [eax+30h]"
);
// LINE 876:
	asm( 
"	      004a59b2    jmp near ptr 004A59DFh"
);
// LINE 878:
	asm( 
"	      004a59b7    jmp near ptr 004A59DAh"
);
// LINE 879:
	asm( 
"	      004a59bc    mov eax,[ebp-8]"
"	      004a59bf    mov [ebp-34h],eax"
"	      004a59c2    mov eax,[ebp-8]"
"	      004a59c5    mov eax,[eax]"
"	      004a59c7    mov [ebp-8],eax"
"	      004a59ca    jmp near ptr 004A59CFh"
"	      004a59cf    mov eax,[ebp-34h]"
"	      004a59d2    mov [ebp-1Ch],eax"
"	      004a59d5    jmp near ptr 004A59DAh"
);
// LINE 880:
	asm( 
"	      004a59da    jmp near ptr 004A5875h"
);
// LINE 881:
	asm( 
"	      004a59df    mov eax,ds:[59A964h]"
"	      004a59e4    mov eax,[eax]"
"	      004a59e6    mov ecx,ds:[59A964h]"
"	      004a59ec    call dword ptr [eax+34h]"
"	      004a59ef    test eax,eax"
"	      004a59f1    jg near ptr 004A5A02h"
);
// LINE 882:
	asm( 
"	      004a59f7    mov ecx,ds:[59A964h]"
"	      004a59fd    call 004A1FF2h"
);
// LINE 883:
	asm( 
"	      004a5a02    mov eax,[ebp-4]"
"	      004a5a05    jmp near ptr 004A5A0Ah"
);
// LINE 884:
	asm( 
"	      004a5a0a    pop edi"
"	      004a5a0b    pop esi"
"	      004a5a0c    pop ebx"
"	      004a5a0d    leave"
"	      004a5a0e    ret 4"
);
}

// FUNCTION: SIMCOPTER 0x004a5a11
public: virtual int __thiscall GraphicWindow::RemoveChild(class GraphicWindow *) {
// LINE 892:
	asm( 
"	      004a5a11    push ebp"
"	      004a5a12    mov ebp,esp"
"	      004a5a14    sub esp,34h"
"	      004a5a17    push ebx"
"	      004a5a18    push esi"
"	      004a5a19    push edi"
"	      004a5a1a    mov [ebp-34h],ecx"
);
// LINE 893:
	asm( 
"	      004a5a1d    mov eax,[ebp-34h]"
"	      004a5a20    mov eax,[eax+30h]"
"	      004a5a23    mov eax,[eax]"
"	      004a5a25    mov [ebp-28h],eax"
"	      004a5a28    mov eax,[ebp-28h]"
"	      004a5a2b    mov [ebp-4],eax"
"	      004a5a2e    jmp near ptr 004A5A33h"
"	      004a5a33    jmp near ptr 004A5A38h"
);
// LINE 894:
	asm( 
"	      004a5a38    mov dword ptr [ebp-8],0"
);
// LINE 896:
	asm( 
"	      004a5a3f    mov eax,[ebp-34h]"
"	      004a5a42    mov eax,[eax+30h]"
"	      004a5a45    mov [ebp-1Ch],eax"
"	      004a5a48    mov eax,[ebp-1Ch]"
"	      004a5a4b    mov [ebp-0Ch],eax"
"	      004a5a4e    jmp near ptr 004A5A53h"
"	      004a5a53    jmp near ptr 004A5A58h"
"	      004a5a58    mov eax,[ebp-4]"
"	      004a5a5b    cmp [ebp-0Ch],eax"
"	      004a5a5e    jne near ptr 004A5A6Eh"
"	      004a5a64    jmp near ptr 004A5A82h"
"	      004a5a69    jmp near ptr 004A5A6Eh"
"	      004a5a6e    jmp near ptr 004A5A7Dh"
"	      004a5a73    cmp dword ptr [ebp-20h],0"
"	      004a5a77    jne near ptr 004A5A82h"
"	      004a5a7d    jmp near ptr 004A5A87h"
"	      004a5a82    jmp near ptr 004A5B49h"
"	      004a5a87    jmp near ptr 004A5A96h"
"	      004a5a8c    cmp dword ptr [ebp-24h],0"
"	      004a5a90    je near ptr 004A5B49h"
);
// LINE 897:
	asm( 
"	      004a5a96    jmp near ptr 004A5A9Bh"
"	      004a5a9b    mov eax,[ebp-4]"
"	      004a5a9e    mov ecx,[ebp+8]"
"	      004a5aa1    cmp [eax+8],ecx"
"	      004a5aa4    jne near ptr 004A5B26h"
);
// LINE 898:
	asm( 
"	      004a5aaa    mov eax,[ebp-4]"
"	      004a5aad    mov [ebp-18h],eax"
"	      004a5ab0    mov eax,[ebp-4]"
"	      004a5ab3    mov eax,[eax]"
"	      004a5ab5    mov [ebp-4],eax"
"	      004a5ab8    jmp near ptr 004A5ABDh"
"	      004a5abd    mov eax,[ebp-18h]"
"	      004a5ac0    mov [ebp-10h],eax"
"	      004a5ac3    jmp near ptr 004A5AC8h"
"	      004a5ac8    mov eax,[ebp-10h]"
"	      004a5acb    mov [ebp-30h],eax"
"	      004a5ace    mov eax,[ebp-30h]"
"	      004a5ad1    mov eax,[eax]"
"	      004a5ad3    mov ecx,[ebp-30h]"
"	      004a5ad6    mov ecx,[ecx+4]"
"	      004a5ad9    mov [ecx],eax"
"	      004a5adb    mov eax,[ebp-30h]"
"	      004a5ade    mov eax,[eax+4]"
"	      004a5ae1    mov ecx,[ebp-30h]"
"	      004a5ae4    mov ecx,[ecx]"
"	      004a5ae6    mov [ecx+4],eax"
"	      004a5ae9    jmp near ptr 004A5AEEh"
"	      004a5aee    jmp near ptr 004A5AF3h"
"	      004a5af3    mov eax,ds:[59A97Ch]"
"	      004a5af8    mov ecx,[ebp-30h]"
"	      004a5afb    mov [ecx],eax"
"	      004a5afd    mov eax,[ebp-30h]"
"	      004a5b00    mov ds:[59A97Ch],eax"
"	      004a5b05    jmp near ptr 004A5B0Ah"
"	      004a5b0a    mov eax,[ebp-34h]"
"	      004a5b0d    dec dword ptr [eax+34h]"
"	      004a5b10    jmp near ptr 004A5B15h"
);
// LINE 899:
	asm( 
"	      004a5b15    mov dword ptr [ebp-8],1"
);
// LINE 900:
	asm( 
"	      004a5b1c    jmp near ptr 004A5B49h"
);
// LINE 902:
	asm( 
"	      004a5b21    jmp near ptr 004A5B44h"
);
// LINE 903:
	asm( 
"	      004a5b26    mov eax,[ebp-4]"
"	      004a5b29    mov [ebp-2Ch],eax"
"	      004a5b2c    mov eax,[ebp-4]"
"	      004a5b2f    mov eax,[eax]"
"	      004a5b31    mov [ebp-4],eax"
"	      004a5b34    jmp near ptr 004A5B39h"
"	      004a5b39    mov eax,[ebp-2Ch]"
"	      004a5b3c    mov [ebp-14h],eax"
"	      004a5b3f    jmp near ptr 004A5B44h"
);
// LINE 904:
	asm( 
"	      004a5b44    jmp near ptr 004A5A3Fh"
);
// LINE 905:
	asm( 
"	      004a5b49    mov eax,[ebp-8]"
"	      004a5b4c    jmp near ptr 004A5B51h"
);
// LINE 906:
	asm( 
"	      004a5b51    pop edi"
"	      004a5b52    pop esi"
"	      004a5b53    pop ebx"
"	      004a5b54    leave"
"	      004a5b55    ret 4"
);
}

// FUNCTION: SIMCOPTER 0x004a5b58
public: virtual void __thiscall GraphicWindow::DeleteAllChildren(void) {
// LINE 913:
	asm( 
"	      004a5b58    push ebp"
"	      004a5b59    mov ebp,esp"
"	      004a5b5b    sub esp,34h"
"	      004a5b5e    push ebx"
"	      004a5b5f    push esi"
"	      004a5b60    push edi"
"	      004a5b61    mov [ebp-34h],ecx"
);
// LINE 914:
	asm( 
"	      004a5b64    mov eax,[ebp-34h]"
"	      004a5b67    mov eax,[eax+30h]"
"	      004a5b6a    mov eax,[eax]"
"	      004a5b6c    mov [ebp-2Ch],eax"
"	      004a5b6f    mov eax,[ebp-2Ch]"
"	      004a5b72    mov [ebp-8],eax"
"	      004a5b75    jmp near ptr 004A5B7Ah"
"	      004a5b7a    jmp near ptr 004A5B7Fh"
);
// LINE 917:
	asm( 
"	      004a5b7f    mov eax,ds:[59A964h]"
"	      004a5b84    mov eax,[eax]"
"	      004a5b86    mov ecx,ds:[59A964h]"
"	      004a5b8c    call dword ptr [eax+30h]"
);
// LINE 918:
	asm( 
"	      004a5b8f    mov eax,[ebp-34h]"
"	      004a5b92    mov eax,[eax+30h]"
"	      004a5b95    mov [ebp-20h],eax"
"	      004a5b98    mov eax,[ebp-20h]"
"	      004a5b9b    mov [ebp-0Ch],eax"
"	      004a5b9e    jmp near ptr 004A5BA3h"
"	      004a5ba3    jmp near ptr 004A5BA8h"
"	      004a5ba8    mov eax,[ebp-8]"
"	      004a5bab    cmp [ebp-0Ch],eax"
"	      004a5bae    jne near ptr 004A5BBEh"
"	      004a5bb4    jmp near ptr 004A5BD2h"
"	      004a5bb9    jmp near ptr 004A5BBEh"
"	      004a5bbe    jmp near ptr 004A5BCDh"
"	      004a5bc3    cmp dword ptr [ebp-24h],0"
"	      004a5bc7    jne near ptr 004A5BD2h"
"	      004a5bcd    jmp near ptr 004A5BD7h"
"	      004a5bd2    jmp near ptr 004A5CABh"
"	      004a5bd7    jmp near ptr 004A5BE6h"
"	      004a5bdc    cmp dword ptr [ebp-28h],0"
"	      004a5be0    je near ptr 004A5CABh"
);
// LINE 922:
	asm( 
"	      004a5be6    jmp near ptr 004A5BEBh"
"	      004a5beb    mov eax,[ebp-8]"
"	      004a5bee    mov eax,[eax+8]"
"	      004a5bf1    mov [ebp-4],eax"
);
// LINE 923:
	asm( 
"	      004a5bf4    mov eax,[ebp-8]"
"	      004a5bf7    mov [ebp-1Ch],eax"
"	      004a5bfa    mov eax,[ebp-8]"
"	      004a5bfd    mov eax,[eax]"
"	      004a5bff    mov [ebp-8],eax"
"	      004a5c02    jmp near ptr 004A5C07h"
"	      004a5c07    mov eax,[ebp-1Ch]"
"	      004a5c0a    mov [ebp-10h],eax"
"	      004a5c0d    jmp near ptr 004A5C12h"
"	      004a5c12    mov eax,[ebp-10h]"
"	      004a5c15    mov [ebp-30h],eax"
"	      004a5c18    mov eax,[ebp-30h]"
"	      004a5c1b    mov eax,[eax]"
"	      004a5c1d    mov ecx,[ebp-30h]"
"	      004a5c20    mov ecx,[ecx+4]"
"	      004a5c23    mov [ecx],eax"
"	      004a5c25    mov eax,[ebp-30h]"
"	      004a5c28    mov eax,[eax+4]"
"	      004a5c2b    mov ecx,[ebp-30h]"
"	      004a5c2e    mov ecx,[ecx]"
"	      004a5c30    mov [ecx+4],eax"
"	      004a5c33    jmp near ptr 004A5C38h"
"	      004a5c38    jmp near ptr 004A5C3Dh"
"	      004a5c3d    mov eax,ds:[59A97Ch]"
"	      004a5c42    mov ecx,[ebp-30h]"
"	      004a5c45    mov [ecx],eax"
"	      004a5c47    mov eax,[ebp-30h]"
"	      004a5c4a    mov ds:[59A97Ch],eax"
"	      004a5c4f    jmp near ptr 004A5C54h"
"	      004a5c54    mov eax,[ebp-34h]"
"	      004a5c57    dec dword ptr [eax+34h]"
"	      004a5c5a    jmp near ptr 004A5C5Fh"
);
// LINE 924:
	asm( 
"	      004a5c5f    mov eax,[ebp-4]"
"	      004a5c62    push eax"
"	      004a5c63    mov eax,ds:[59A964h]"
"	      004a5c68    mov eax,[eax]"
"	      004a5c6a    mov ecx,ds:[59A964h]"
"	      004a5c70    call dword ptr [eax+28h]"
"	      004a5c73    test eax,eax"
"	      004a5c75    je near ptr 004A5CA6h"
);
// LINE 925:
	asm( 
"	      004a5c7b    mov eax,[ebp-4]"
"	      004a5c7e    mov [ebp-18h],eax"
"	      004a5c81    mov eax,[ebp-18h]"
"	      004a5c84    mov [ebp-14h],eax"
"	      004a5c87    cmp dword ptr [ebp-14h],0"
"	      004a5c8b    je near ptr 004A5CA6h"
"	      004a5c91    push 1"
"	      004a5c93    mov eax,[ebp-14h]"
"	      004a5c96    mov eax,[eax]"
"	      004a5c98    mov ecx,[ebp-14h]"
"	      004a5c9b    call dword ptr [eax+0ACh]"
"	      004a5ca1    jmp near ptr 004A5CA6h"
);
// LINE 926:
	asm( 
"	      004a5ca6    jmp near ptr 004A5B8Fh"
);
// LINE 927:
	asm( 
"	      004a5cab    mov eax,ds:[59A964h]"
"	      004a5cb0    mov eax,[eax]"
"	      004a5cb2    mov ecx,ds:[59A964h]"
"	      004a5cb8    call dword ptr [eax+34h]"
"	      004a5cbb    test eax,eax"
"	      004a5cbd    jg near ptr 004A5CCEh"
);
// LINE 928:
	asm( 
"	      004a5cc3    mov ecx,ds:[59A964h]"
"	      004a5cc9    call 004A1FF2h"
);
// LINE 929:
	asm( 
"	      004a5cce    jmp near ptr 004A5CD3h"
"	      004a5cd3    pop edi"
"	      004a5cd4    pop esi"
"	      004a5cd5    pop ebx"
"	      004a5cd6    leave"
"	      004a5cd7    ret"
);
}

// FUNCTION: SIMCOPTER 0x004a5cd8
public: virtual void __thiscall GraphicWindow::RemoveAllChildren(void) {
// LINE 935:
	asm( 
"	      004a5cd8    push ebp"
"	      004a5cd9    mov ebp,esp"
"	      004a5cdb    sub esp,28h"
"	      004a5cde    push ebx"
"	      004a5cdf    push esi"
"	      004a5ce0    push edi"
"	      004a5ce1    mov [ebp-28h],ecx"
);
// LINE 936:
	asm( 
"	      004a5ce4    mov eax,[ebp-28h]"
"	      004a5ce7    mov eax,[eax+30h]"
"	      004a5cea    mov eax,[eax]"
"	      004a5cec    mov [ebp-20h],eax"
"	      004a5cef    mov eax,[ebp-20h]"
"	      004a5cf2    mov [ebp-4],eax"
"	      004a5cf5    jmp near ptr 004A5CFAh"
"	      004a5cfa    jmp near ptr 004A5CFFh"
);
// LINE 938:
	asm( 
"	      004a5cff    mov eax,[ebp-28h]"
"	      004a5d02    mov eax,[eax+30h]"
"	      004a5d05    mov [ebp-10h],eax"
"	      004a5d08    mov eax,[ebp-10h]"
"	      004a5d0b    mov [ebp-8],eax"
"	      004a5d0e    jmp near ptr 004A5D13h"
"	      004a5d13    jmp near ptr 004A5D18h"
"	      004a5d18    mov eax,[ebp-4]"
"	      004a5d1b    cmp [ebp-8],eax"
"	      004a5d1e    jne near ptr 004A5D2Eh"
"	      004a5d24    jmp near ptr 004A5D42h"
"	      004a5d29    jmp near ptr 004A5D2Eh"
"	      004a5d2e    jmp near ptr 004A5D3Dh"
"	      004a5d33    cmp dword ptr [ebp-18h],0"
"	      004a5d37    jne near ptr 004A5D42h"
"	      004a5d3d    jmp near ptr 004A5D47h"
"	      004a5d42    jmp near ptr 004A5DC7h"
"	      004a5d47    jmp near ptr 004A5D56h"
"	      004a5d4c    cmp dword ptr [ebp-1Ch],0"
"	      004a5d50    je near ptr 004A5DC7h"
);
// LINE 939:
	asm( 
"	      004a5d56    mov eax,[ebp-4]"
"	      004a5d59    mov [ebp-14h],eax"
"	      004a5d5c    mov eax,[ebp-4]"
"	      004a5d5f    mov eax,[eax]"
"	      004a5d61    mov [ebp-4],eax"
"	      004a5d64    jmp near ptr 004A5D69h"
"	      004a5d69    mov eax,[ebp-14h]"
"	      004a5d6c    mov [ebp-0Ch],eax"
"	      004a5d6f    jmp near ptr 004A5D74h"
"	      004a5d74    mov eax,[ebp-0Ch]"
"	      004a5d77    mov [ebp-24h],eax"
"	      004a5d7a    mov eax,[ebp-24h]"
"	      004a5d7d    mov eax,[eax]"
"	      004a5d7f    mov ecx,[ebp-24h]"
"	      004a5d82    mov ecx,[ecx+4]"
"	      004a5d85    mov [ecx],eax"
"	      004a5d87    mov eax,[ebp-24h]"
"	      004a5d8a    mov eax,[eax+4]"
"	      004a5d8d    mov ecx,[ebp-24h]"
"	      004a5d90    mov ecx,[ecx]"
"	      004a5d92    mov [ecx+4],eax"
"	      004a5d95    jmp near ptr 004A5D9Ah"
"	      004a5d9a    jmp near ptr 004A5D9Fh"
"	      004a5d9f    mov eax,ds:[59A97Ch]"
"	      004a5da4    mov ecx,[ebp-24h]"
"	      004a5da7    mov [ecx],eax"
"	      004a5da9    mov eax,[ebp-24h]"
"	      004a5dac    mov ds:[59A97Ch],eax"
"	      004a5db1    jmp near ptr 004A5DB6h"
"	      004a5db6    mov eax,[ebp-28h]"
"	      004a5db9    add dword ptr [eax+34h],0FFFFFFFFh"
"	      004a5dbd    jmp near ptr 004A5DC2h"
"	      004a5dc2    jmp near ptr 004A5CFFh"
);
// LINE 940:
	asm( 
"	      004a5dc7    jmp near ptr 004A5DCCh"
"	      004a5dcc    pop edi"
"	      004a5dcd    pop esi"
"	      004a5dce    pop ebx"
"	      004a5dcf    leave"
"	      004a5dd0    ret"
);
}

// FUNCTION: SIMCOPTER 0x004a5dd1
public: virtual class GraphicWindow * __thiscall GraphicWindow::FindChild(long) {
// LINE 950:
	asm( 
"	      004a5dd1    push ebp"
"	      004a5dd2    mov ebp,esp"
"	      004a5dd4    sub esp,24h"
"	      004a5dd7    push ebx"
"	      004a5dd8    push esi"
"	      004a5dd9    push edi"
"	      004a5dda    mov [ebp-24h],ecx"
);
// LINE 951:
	asm( 
"	      004a5ddd    mov eax,[ebp-24h]"
"	      004a5de0    mov eax,[eax+30h]"
"	      004a5de3    mov eax,[eax]"
"	      004a5de5    mov [ebp-1Ch],eax"
"	      004a5de8    mov eax,[ebp-1Ch]"
"	      004a5deb    mov [ebp-4],eax"
"	      004a5dee    jmp near ptr 004A5DF3h"
"	      004a5df3    jmp near ptr 004A5DF8h"
);
// LINE 953:
	asm( 
"	      004a5df8    mov eax,[ebp-24h]"
"	      004a5dfb    mov eax,[eax+30h]"
"	      004a5dfe    mov [ebp-10h],eax"
"	      004a5e01    mov eax,[ebp-10h]"
"	      004a5e04    mov [ebp-8],eax"
"	      004a5e07    jmp near ptr 004A5E0Ch"
"	      004a5e0c    jmp near ptr 004A5E11h"
"	      004a5e11    mov eax,[ebp-4]"
"	      004a5e14    cmp [ebp-8],eax"
"	      004a5e17    jne near ptr 004A5E27h"
"	      004a5e1d    jmp near ptr 004A5E3Bh"
"	      004a5e22    jmp near ptr 004A5E27h"
"	      004a5e27    jmp near ptr 004A5E36h"
"	      004a5e2c    cmp dword ptr [ebp-14h],0"
"	      004a5e30    jne near ptr 004A5E3Bh"
"	      004a5e36    jmp near ptr 004A5E40h"
"	      004a5e3b    jmp near ptr 004A5E99h"
"	      004a5e40    jmp near ptr 004A5E4Fh"
"	      004a5e45    cmp dword ptr [ebp-18h],0"
"	      004a5e49    je near ptr 004A5E99h"
);
// LINE 954:
	asm( 
"	      004a5e4f    jmp near ptr 004A5E54h"
"	      004a5e54    mov eax,[ebp-4]"
"	      004a5e57    mov eax,[eax+8]"
"	      004a5e5a    mov ecx,[ebp+8]"
"	      004a5e5d    cmp [eax+4],ecx"
"	      004a5e60    jne near ptr 004A5E76h"
);
// LINE 955:
	asm( 
"	      004a5e66    jmp near ptr 004A5E6Bh"
"	      004a5e6b    mov eax,[ebp-4]"
"	      004a5e6e    mov eax,[eax+8]"
"	      004a5e71    jmp near ptr 004A5EA0h"
);
// LINE 956:
	asm( 
"	      004a5e76    mov eax,[ebp-4]"
"	      004a5e79    mov [ebp-20h],eax"
"	      004a5e7c    mov eax,[ebp-4]"
"	      004a5e7f    mov eax,[eax]"
"	      004a5e81    mov [ebp-4],eax"
"	      004a5e84    jmp near ptr 004A5E89h"
"	      004a5e89    mov eax,[ebp-20h]"
"	      004a5e8c    mov [ebp-0Ch],eax"
"	      004a5e8f    jmp near ptr 004A5E94h"
);
// LINE 957:
	asm( 
"	      004a5e94    jmp near ptr 004A5DF8h"
);
// LINE 958:
	asm( 
"	      004a5e99    xor eax,eax"
"	      004a5e9b    jmp near ptr 004A5EA0h"
);
// LINE 959:
	asm( 
"	      004a5ea0    pop edi"
"	      004a5ea1    pop esi"
"	      004a5ea2    pop ebx"
"	      004a5ea3    leave"
"	      004a5ea4    ret 4"
);
}

// FUNCTION: SIMCOPTER 0x004a5ea7
public: static class GraphicWindow * __cdecl GraphicWindow::FindWindowA(long) {
// LINE 968:
	asm( 
"	      004a5ea7    push ebp"
"	      004a5ea8    mov ebp,esp"
"	      004a5eaa    sub esp,20h"
"	      004a5ead    push ebx"
"	      004a5eae    push esi"
"	      004a5eaf    push edi"
);
// LINE 969:
	asm( 
"	      004a5eb0    mov eax,ds:[6069A0h]"
"	      004a5eb5    mov eax,[eax]"
"	      004a5eb7    mov [ebp-1Ch],eax"
"	      004a5eba    mov eax,[ebp-1Ch]"
"	      004a5ebd    mov [ebp-4],eax"
"	      004a5ec0    jmp near ptr 004A5EC5h"
"	      004a5ec5    jmp near ptr 004A5ECAh"
);
// LINE 971:
	asm( 
"	      004a5eca    mov eax,ds:[6069A0h]"
"	      004a5ecf    mov [ebp-10h],eax"
"	      004a5ed2    mov eax,[ebp-10h]"
"	      004a5ed5    mov [ebp-8],eax"
"	      004a5ed8    jmp near ptr 004A5EDDh"
"	      004a5edd    jmp near ptr 004A5EE2h"
"	      004a5ee2    mov eax,[ebp-4]"
"	      004a5ee5    cmp [ebp-8],eax"
"	      004a5ee8    jne near ptr 004A5EF8h"
"	      004a5eee    jmp near ptr 004A5F0Ch"
"	      004a5ef3    jmp near ptr 004A5EF8h"
"	      004a5ef8    jmp near ptr 004A5F07h"
"	      004a5efd    cmp dword ptr [ebp-14h],0"
"	      004a5f01    jne near ptr 004A5F0Ch"
"	      004a5f07    jmp near ptr 004A5F11h"
"	      004a5f0c    jmp near ptr 004A5F6Ah"
"	      004a5f11    jmp near ptr 004A5F20h"
"	      004a5f16    cmp dword ptr [ebp-18h],0"
"	      004a5f1a    je near ptr 004A5F6Ah"
);
// LINE 972:
	asm( 
"	      004a5f20    jmp near ptr 004A5F25h"
"	      004a5f25    mov eax,[ebp-4]"
"	      004a5f28    mov eax,[eax+8]"
"	      004a5f2b    mov ecx,[ebp+8]"
"	      004a5f2e    cmp [eax+4],ecx"
"	      004a5f31    jne near ptr 004A5F47h"
);
// LINE 973:
	asm( 
"	      004a5f37    jmp near ptr 004A5F3Ch"
"	      004a5f3c    mov eax,[ebp-4]"
"	      004a5f3f    mov eax,[eax+8]"
"	      004a5f42    jmp near ptr 004A5F71h"
);
// LINE 974:
	asm( 
"	      004a5f47    mov eax,[ebp-4]"
"	      004a5f4a    mov [ebp-20h],eax"
"	      004a5f4d    mov eax,[ebp-4]"
"	      004a5f50    mov eax,[eax]"
"	      004a5f52    mov [ebp-4],eax"
"	      004a5f55    jmp near ptr 004A5F5Ah"
"	      004a5f5a    mov eax,[ebp-20h]"
"	      004a5f5d    mov [ebp-0Ch],eax"
"	      004a5f60    jmp near ptr 004A5F65h"
);
// LINE 975:
	asm( 
"	      004a5f65    jmp near ptr 004A5ECAh"
);
// LINE 976:
	asm( 
"	      004a5f6a    xor eax,eax"
"	      004a5f6c    jmp near ptr 004A5F71h"
);
// LINE 977:
	asm( 
"	      004a5f71    pop edi"
"	      004a5f72    pop esi"
"	      004a5f73    pop ebx"
"	      004a5f74    leave"
"	      004a5f75    ret"
);
}

// FUNCTION: SIMCOPTER 0x004a5f76
public: static int __cdecl GraphicWindow::FindWindowA(class GraphicWindow *) {
// LINE 983:
	asm( 
"	      004a5f76    push ebp"
"	      004a5f77    mov ebp,esp"
"	      004a5f79    sub esp,20h"
"	      004a5f7c    push ebx"
"	      004a5f7d    push esi"
"	      004a5f7e    push edi"
);
// LINE 984:
	asm( 
"	      004a5f7f    mov eax,ds:[6069A0h]"
"	      004a5f84    mov eax,[eax]"
"	      004a5f86    mov [ebp-1Ch],eax"
"	      004a5f89    mov eax,[ebp-1Ch]"
"	      004a5f8c    mov [ebp-4],eax"
"	      004a5f8f    jmp near ptr 004A5F94h"
"	      004a5f94    jmp near ptr 004A5F99h"
);
// LINE 986:
	asm( 
"	      004a5f99    mov eax,ds:[6069A0h]"
"	      004a5f9e    mov [ebp-10h],eax"
"	      004a5fa1    mov eax,[ebp-10h]"
"	      004a5fa4    mov [ebp-8],eax"
"	      004a5fa7    jmp near ptr 004A5FACh"
"	      004a5fac    jmp near ptr 004A5FB1h"
"	      004a5fb1    mov eax,[ebp-8]"
"	      004a5fb4    cmp [ebp-4],eax"
"	      004a5fb7    jne near ptr 004A5FC7h"
"	      004a5fbd    jmp near ptr 004A5FDBh"
"	      004a5fc2    jmp near ptr 004A5FC7h"
"	      004a5fc7    jmp near ptr 004A5FD6h"
"	      004a5fcc    cmp dword ptr [ebp-14h],0"
"	      004a5fd0    jne near ptr 004A5FDBh"
"	      004a5fd6    jmp near ptr 004A5FE0h"
"	      004a5fdb    jmp near ptr 004A6030h"
"	      004a5fe0    jmp near ptr 004A5FEFh"
"	      004a5fe5    cmp dword ptr [ebp-18h],0"
"	      004a5fe9    je near ptr 004A6030h"
);
// LINE 987:
	asm( 
"	      004a5fef    jmp near ptr 004A5FF4h"
"	      004a5ff4    mov eax,[ebp-4]"
"	      004a5ff7    mov ecx,[ebp+8]"
"	      004a5ffa    cmp [eax+8],ecx"
"	      004a5ffd    jne near ptr 004A600Dh"
);
// LINE 988:
	asm( 
"	      004a6003    mov eax,1"
"	      004a6008    jmp near ptr 004A6037h"
);
// LINE 989:
	asm( 
"	      004a600d    mov eax,[ebp-4]"
"	      004a6010    mov [ebp-20h],eax"
"	      004a6013    mov eax,[ebp-4]"
"	      004a6016    mov eax,[eax]"
"	      004a6018    mov [ebp-4],eax"
"	      004a601b    jmp near ptr 004A6020h"
"	      004a6020    mov eax,[ebp-20h]"
"	      004a6023    mov [ebp-0Ch],eax"
"	      004a6026    jmp near ptr 004A602Bh"
);
// LINE 990:
	asm( 
"	      004a602b    jmp near ptr 004A5F99h"
);
// LINE 991:
	asm( 
"	      004a6030    xor eax,eax"
"	      004a6032    jmp near ptr 004A6037h"
);
// LINE 992:
	asm( 
"	      004a6037    pop edi"
"	      004a6038    pop esi"
"	      004a6039    pop ebx"
"	      004a603a    leave"
"	      004a603b    ret"
);
}

// FUNCTION: SIMCOPTER 0x004a603c
public: virtual int __thiscall GraphicWindow::DeleteSelf(void) {
// LINE 999:
	asm( 
"	      004a603c    push ebp"
"	      004a603d    mov ebp,esp"
"	      004a603f    sub esp,4"
"	      004a6042    push ebx"
"	      004a6043    push esi"
"	      004a6044    push edi"
"	      004a6045    mov [ebp-4],ecx"
);
// LINE 1000:
	asm( 
"	      004a6048    mov eax,[ebp-4]"
"	      004a604b    push eax"
"	      004a604c    mov eax,ds:[59A964h]"
"	      004a6051    mov eax,[eax]"
"	      004a6053    mov ecx,ds:[59A964h]"
"	      004a6059    call dword ptr [eax+4]"
);
// LINE 1001:
	asm( 
"	      004a605c    mov eax,1"
"	      004a6061    jmp near ptr 004A6066h"
);
// LINE 1002:
	asm( 
"	      004a6066    pop edi"
"	      004a6067    pop esi"
"	      004a6068    pop ebx"
"	      004a6069    leave"
"	      004a606a    ret"
);
}

// FUNCTION: SIMCOPTER 0x004a606b
public: virtual void __thiscall GraphicWindow::RemoveSelf(void) {
// LINE 1010:
	asm( 
"	      004a606b    push ebp"
"	      004a606c    mov ebp,esp"
"	      004a606e    sub esp,4"
"	      004a6071    push ebx"
"	      004a6072    push esi"
"	      004a6073    push edi"
"	      004a6074    mov [ebp-4],ecx"
);
// LINE 1011:
	asm( 
"	      004a6077    mov eax,[ebp-4]"
"	      004a607a    cmp dword ptr [eax+3Ch],0"
"	      004a607e    je near ptr 004A6099h"
);
// LINE 1012:
	asm( 
"	      004a6084    mov eax,[ebp-4]"
"	      004a6087    push eax"
"	      004a6088    mov eax,[ebp-4]"
"	      004a608b    mov ecx,[ebp-4]"
"	      004a608e    mov ecx,[ecx+3Ch]"
"	      004a6091    mov edx,[ecx]"
"	      004a6093    mov ecx,[eax+3Ch]"
"	      004a6096    call dword ptr [edx+60h]"
);
// LINE 1013:
	asm( 
"	      004a6099    jmp near ptr 004A609Eh"
"	      004a609e    pop edi"
"	      004a609f    pop esi"
"	      004a60a0    pop ebx"
"	      004a60a1    leave"
"	      004a60a2    ret"
);
}

// FUNCTION: SIMCOPTER 0x004a60a3
public: virtual int __thiscall GraphicWindow::ComposeSelf(void) {
// LINE 1027:
	asm( 
"	      004a60a3    push ebp"
"	      004a60a4    mov ebp,esp"
"	      004a60a6    sub esp,4"
"	      004a60a9    push ebx"
"	      004a60aa    push esi"
"	      004a60ab    push edi"
"	      004a60ac    mov [ebp-4],ecx"
);
// LINE 1028:
	asm( 
"	      004a60af    mov eax,[ebp-4]"
"	      004a60b2    cmp dword ptr [eax+54h],0"
"	      004a60b6    jne near ptr 004A60C3h"
);
// LINE 1029:
	asm( 
"	      004a60bc    xor eax,eax"
"	      004a60be    jmp near ptr 004A6163h"
);
// LINE 1032:
	asm( 
"	      004a60c3    mov eax,[ebp-4]"
"	      004a60c6    mov eax,[eax]"
"	      004a60c8    mov ecx,[ebp-4]"
"	      004a60cb    call dword ptr [eax+0C0h]"
"	      004a60d1    test eax,eax"
"	      004a60d3    je near ptr 004A6104h"
);
// LINE 1033:
	asm( 
"	      004a60d9    push 1"
"	      004a60db    push 0"
"	      004a60dd    mov eax,[ebp-4]"
"	      004a60e0    mov eax,[eax]"
"	      004a60e2    mov ecx,[ebp-4]"
"	      004a60e5    call dword ptr [eax+30h]"
);
// LINE 1034:
	asm( 
"	      004a60e8    mov eax,[ebp-4]"
"	      004a60eb    mov eax,[eax]"
"	      004a60ed    mov ecx,[ebp-4]"
"	      004a60f0    call dword ptr [eax+0BCh]"
);
// LINE 1035:
	asm( 
"	      004a60f6    mov eax,[ebp-4]"
"	      004a60f9    mov eax,[eax]"
"	      004a60fb    mov ecx,[ebp-4]"
"	      004a60fe    call dword ptr [eax+0B8h]"
);
// LINE 1037:
	asm( 
"	      004a6104    mov eax,[ebp-4]"
"	      004a6107    cmp dword ptr [eax+40h],0"
"	      004a610b    je near ptr 004A6159h"
);
// LINE 1039:
	asm( 
"	      004a6111    jmp near ptr 004A6116h"
"	      004a6116    jmp near ptr 004A611Bh"
"	      004a611b    mov eax,[ebp-4]"
"	      004a611e    mov eax,[eax+40h]"
"	      004a6121    mov eax,[eax+0Ch]"
"	      004a6124    push eax"
"	      004a6125    mov eax,[ebp-4]"
"	      004a6128    mov eax,[eax+40h]"
"	      004a612b    mov eax,[eax+8]"
"	      004a612e    push eax"
"	      004a612f    push 0"
"	      004a6131    push 0"
"	      004a6133    mov eax,[ebp-4]"
"	      004a6136    mov eax,[eax+24h]"
"	      004a6139    push eax"
"	      004a613a    mov eax,[ebp-4]"
"	      004a613d    mov eax,[eax+20h]"
"	      004a6140    push eax"
"	      004a6141    mov eax,[ebp-4]"
"	      004a6144    mov eax,[eax+44h]"
"	      004a6147    push eax"
"	      004a6148    mov eax,[ebp-4]"
"	      004a614b    mov ecx,[ebp-4]"
"	      004a614e    mov ecx,[ecx+40h]"
"	      004a6151    mov edx,[ecx]"
"	      004a6153    mov ecx,[eax+40h]"
"	      004a6156    call dword ptr [edx+0Ch]"
);
// LINE 1041:
	asm( 
"	      004a6159    mov eax,1"
"	      004a615e    jmp near ptr 004A6163h"
);
// LINE 1042:
	asm( 
"	      004a6163    pop edi"
"	      004a6164    pop esi"
"	      004a6165    pop ebx"
"	      004a6166    leave"
"	      004a6167    ret"
);
}

// FUNCTION: SIMCOPTER 0x004a6168
protected: virtual int __thiscall GraphicWindow::DrawSelf(void) {
// LINE 1059:
	asm( 
"	      004a6168    push ebp"
"	      004a6169    mov ebp,esp"
"	      004a616b    sub esp,4"
"	      004a616e    push ebx"
"	      004a616f    push esi"
"	      004a6170    push edi"
"	      004a6171    mov [ebp-4],ecx"
);
// LINE 1060:
	asm( 
"	      004a6174    xor eax,eax"
"	      004a6176    jmp near ptr 004A617Bh"
);
// LINE 1061:
	asm( 
"	      004a617b    pop edi"
"	      004a617c    pop esi"
"	      004a617d    pop ebx"
"	      004a617e    leave"
"	      004a617f    ret"
);
}

// FUNCTION: SIMCOPTER 0x004a6180
protected: virtual void __thiscall GraphicWindow::DrawChildren(void) {
// LINE 1075:
	asm( 
"	      004a6180    push ebp"
"	      004a6181    mov ebp,esp"
"	      004a6183    sub esp,28h"
"	      004a6186    push ebx"
"	      004a6187    push esi"
"	      004a6188    push edi"
"	      004a6189    mov [ebp-28h],ecx"
);
// LINE 1078:
	asm( 
"	      004a618c    mov eax,[ebp-28h]"
"	      004a618f    cmp dword ptr [eax+54h],0"
"	      004a6193    jne near ptr 004A619Eh"
);
// LINE 1079:
	asm( 
"	      004a6199    jmp near ptr 004A6251h"
);
// LINE 1081:
	asm( 
"	      004a619e    mov eax,[ebp-28h]"
"	      004a61a1    mov eax,[eax+30h]"
"	      004a61a4    mov eax,[eax]"
"	      004a61a6    mov [ebp-20h],eax"
"	      004a61a9    mov eax,[ebp-20h]"
"	      004a61ac    mov [ebp-8],eax"
"	      004a61af    jmp near ptr 004A61B4h"
"	      004a61b4    jmp near ptr 004A61B9h"
);
// LINE 1082:
	asm( 
"	      004a61b9    mov eax,[ebp-28h]"
"	      004a61bc    mov eax,[eax+30h]"
"	      004a61bf    mov [ebp-14h],eax"
"	      004a61c2    mov eax,[ebp-14h]"
"	      004a61c5    mov [ebp-0Ch],eax"
"	      004a61c8    jmp near ptr 004A61CDh"
"	      004a61cd    jmp near ptr 004A61D2h"
"	      004a61d2    mov eax,[ebp-0Ch]"
"	      004a61d5    cmp [ebp-8],eax"
"	      004a61d8    jne near ptr 004A61E8h"
"	      004a61de    jmp near ptr 004A61FCh"
"	      004a61e3    jmp near ptr 004A61E8h"
"	      004a61e8    jmp near ptr 004A61F7h"
"	      004a61ed    cmp dword ptr [ebp-18h],0"
"	      004a61f1    jne near ptr 004A61FCh"
"	      004a61f7    jmp near ptr 004A6201h"
"	      004a61fc    jmp near ptr 004A624Ch"
"	      004a6201    jmp near ptr 004A6210h"
"	      004a6206    cmp dword ptr [ebp-1Ch],0"
"	      004a620a    je near ptr 004A624Ch"
);
// LINE 1088:
	asm( 
"	      004a6210    jmp near ptr 004A6215h"
"	      004a6215    mov eax,[ebp-8]"
"	      004a6218    mov eax,[eax+8]"
"	      004a621b    mov [ebp-4],eax"
);
// LINE 1089:
	asm( 
"	      004a621e    mov eax,[ebp-8]"
"	      004a6221    mov [ebp-24h],eax"
"	      004a6224    mov eax,[ebp-8]"
"	      004a6227    mov eax,[eax]"
"	      004a6229    mov [ebp-8],eax"
"	      004a622c    jmp near ptr 004A6231h"
"	      004a6231    mov eax,[ebp-24h]"
"	      004a6234    mov [ebp-10h],eax"
"	      004a6237    jmp near ptr 004A623Ch"
);
// LINE 1090:
	asm( 
"	      004a623c    mov eax,[ebp-4]"
"	      004a623f    mov eax,[eax]"
"	      004a6241    mov ecx,[ebp-4]"
"	      004a6244    call dword ptr [eax+18h]"
);
// LINE 1091:
	asm( 
"	      004a6247    jmp near ptr 004A61B9h"
);
// LINE 1092:
	asm( 
"	      004a624c    jmp near ptr 004A6251h"
"	      004a6251    pop edi"
"	      004a6252    pop esi"
"	      004a6253    pop ebx"
"	      004a6254    leave"
"	      004a6255    ret"
);
}

// FUNCTION: SIMCOPTER 0x004a6256
public: virtual void __thiscall GraphicWindow::InvalidateAllOverlaps(class list<class GraphicWindow *>::iterator) {
// LINE 1115:
	asm( 
"	      004a6256    push ebp"
"	      004a6257    mov ebp,esp"
"	      004a6259    sub esp,28h"
"	      004a625c    push ebx"
"	      004a625d    push esi"
"	      004a625e    push edi"
"	      004a625f    mov [ebp-28h],ecx"
);
// LINE 1117:
	asm( 
"	      004a6262    jmp near ptr 004A6267h"
"	      004a6267    mov eax,[ebp+8]"
"	      004a626a    mov eax,[eax+8]"
"	      004a626d    mov [ebp-4],eax"
);
// LINE 1119:
	asm( 
"	      004a6270    add dword ptr [ebp-8],74h"
);
// LINE 1120:
	asm( 
"	      004a6274    mov eax,[ebp-28h]"
"	      004a6277    mov eax,[eax+30h]"
"	      004a627a    mov [ebp-14h],eax"
"	      004a627d    mov eax,[ebp-14h]"
"	      004a6280    mov [ebp-0Ch],eax"
"	      004a6283    jmp near ptr 004A6288h"
"	      004a6288    jmp near ptr 004A628Dh"
"	      004a628d    mov eax,[ebp+8]"
"	      004a6290    cmp [ebp-0Ch],eax"
"	      004a6293    jne near ptr 004A62A3h"
"	      004a6299    jmp near ptr 004A62B7h"
"	      004a629e    jmp near ptr 004A62A3h"
"	      004a62a3    jmp near ptr 004A62B2h"
"	      004a62a8    cmp dword ptr [ebp-18h],0"
"	      004a62ac    jne near ptr 004A62B7h"
"	      004a62b2    jmp near ptr 004A62BCh"
"	      004a62b7    jmp near ptr 004A638Dh"
"	      004a62bc    jmp near ptr 004A62CBh"
"	      004a62c1    cmp dword ptr [ebp-1Ch],0"
"	      004a62c5    je near ptr 004A638Dh"
);
// LINE 1121:
	asm( 
"	      004a62cb    jmp near ptr 004A62D0h"
"	      004a62d0    mov eax,[ebp+8]"
"	      004a62d3    mov eax,[eax+8]"
"	      004a62d6    mov [ebp-8],eax"
);
// LINE 1122:
	asm( 
"	      004a62d9    mov eax,[ebp-8]"
"	      004a62dc    cmp dword ptr [eax+4Ch],0"
"	      004a62e0    jne near ptr 004A636Ah"
);
// LINE 1123:
	asm( 
"	      004a62e6    jmp near ptr 004A62EBh"
"	      004a62eb    mov eax,[ebp-8]"
"	      004a62ee    mov ecx,[ebp-4]"
"	      004a62f1    mov ecx,[ecx+10h]"
"	      004a62f4    cmp [eax+18h],ecx"
"	      004a62f7    jl near ptr 004A6338h"
"	      004a62fd    mov eax,[ebp-4]"
"	      004a6300    mov ecx,[ebp-8]"
"	      004a6303    mov ecx,[ecx+10h]"
"	      004a6306    cmp [eax+18h],ecx"
"	      004a6309    jl near ptr 004A6338h"
"	      004a630f    mov eax,[ebp-4]"
"	      004a6312    mov ecx,[ebp-8]"
"	      004a6315    mov ecx,[ecx+1Ch]"
"	      004a6318    cmp [eax+14h],ecx"
"	      004a631b    jg near ptr 004A6338h"
"	      004a6321    mov eax,[ebp-8]"
"	      004a6324    mov ecx,[ebp-4]"
"	      004a6327    mov ecx,[ecx+1Ch]"
"	      004a632a    cmp [eax+14h],ecx"
"	      004a632d    jl near ptr 004A6338h"
"	      004a6333    jmp near ptr 004A633Dh"
"	      004a6338    jmp near ptr 004A636Ah"
"	      004a633d    jmp near ptr 004A634Ch"
"	      004a6342    cmp dword ptr [ebp-24h],0"
"	      004a6346    je near ptr 004A636Ah"
);
// LINE 1124:
	asm( 
"	      004a634c    push 1"
"	      004a634e    push 1"
"	      004a6350    mov eax,[ebp-8]"
"	      004a6353    mov eax,[eax]"
"	      004a6355    mov ecx,[ebp-8]"
"	      004a6358    call dword ptr [eax+30h]"
);
// LINE 1125:
	asm( 
"	      004a635b    mov eax,[ebp+8]"
"	      004a635e    push eax"
"	      004a635f    mov eax,[ebp-28h]"
"	      004a6362    mov eax,[eax]"
"	      004a6364    mov ecx,[ebp-28h]"
"	      004a6367    call dword ptr [eax+4Ch]"
);
// LINE 1128:
	asm( 
"	      004a636a    mov eax,[ebp+8]"
"	      004a636d    mov [ebp-20h],eax"
"	      004a6370    mov eax,[ebp+8]"
"	      004a6373    mov eax,[eax]"
"	      004a6375    mov [ebp+8],eax"
"	      004a6378    jmp near ptr 004A637Dh"
"	      004a637d    mov eax,[ebp-20h]"
"	      004a6380    mov [ebp-10h],eax"
"	      004a6383    jmp near ptr 004A6388h"
);
// LINE 1129:
	asm( 
"	      004a6388    jmp near ptr 004A6274h"
);
// LINE 1130:
	asm( 
"	      004a638d    jmp near ptr 004A6392h"
"	      004a6392    pop edi"
"	      004a6393    pop esi"
"	      004a6394    pop ebx"
"	      004a6395    leave"
"	      004a6396    ret 4"
);
}

// FUNCTION: SIMCOPTER 0x004a6399
public: virtual void __thiscall GraphicWindow::InvalidateAllChildren(int) {
// LINE 1136:
	asm( 
"	      004a6399    push ebp"
"	      004a639a    mov ebp,esp"
"	      004a639c    sub esp,2Ch"
"	      004a639f    push ebx"
"	      004a63a0    push esi"
"	      004a63a1    push edi"
"	      004a63a2    mov [ebp-2Ch],ecx"
);
// LINE 1137:
	asm( 
"	      004a63a5    mov eax,[ebp-2Ch]"
"	      004a63a8    mov eax,[eax+30h]"
"	      004a63ab    mov eax,[eax]"
"	      004a63ad    mov [ebp-24h],eax"
"	      004a63b0    mov eax,[ebp-24h]"
"	      004a63b3    mov [ebp-4],eax"
"	      004a63b6    jmp near ptr 004A63BBh"
"	      004a63bb    jmp near ptr 004A63C0h"
);
// LINE 1138:
	asm( 
"	      004a63c0    mov eax,[ebp-2Ch]"
"	      004a63c3    mov eax,[eax+30h]"
"	      004a63c6    mov [ebp-18h],eax"
"	      004a63c9    mov eax,[ebp-18h]"
"	      004a63cc    mov [ebp-8],eax"
"	      004a63cf    jmp near ptr 004A63D4h"
"	      004a63d4    jmp near ptr 004A63D9h"
"	      004a63d9    mov eax,[ebp-4]"
"	      004a63dc    cmp [ebp-8],eax"
"	      004a63df    jne near ptr 004A63EFh"
"	      004a63e5    jmp near ptr 004A6403h"
"	      004a63ea    jmp near ptr 004A63EFh"
"	      004a63ef    jmp near ptr 004A63FEh"
"	      004a63f4    cmp dword ptr [ebp-1Ch],0"
"	      004a63f8    jne near ptr 004A6403h"
"	      004a63fe    jmp near ptr 004A6408h"
"	      004a6403    jmp near ptr 004A645Fh"
"	      004a6408    jmp near ptr 004A6417h"
"	      004a640d    cmp dword ptr [ebp-20h],0"
"	      004a6411    je near ptr 004A645Fh"
);
// LINE 1139:
	asm( 
"	      004a6417    jmp near ptr 004A641Ch"
"	      004a641c    mov eax,[ebp-4]"
"	      004a641f    mov eax,[eax+8]"
"	      004a6422    mov [ebp-10h],eax"
"	      004a6425    mov eax,[ebp-10h]"
"	      004a6428    mov eax,[eax]"
"	      004a642a    mov [ebp-14h],eax"
"	      004a642d    mov eax,[ebp+8]"
"	      004a6430    push eax"
"	      004a6431    push 1"
"	      004a6433    mov eax,[ebp-14h]"
"	      004a6436    mov ecx,[ebp-10h]"
"	      004a6439    call dword ptr [eax+30h]"
);
// LINE 1140:
	asm( 
"	      004a643c    mov eax,[ebp-4]"
"	      004a643f    mov [ebp-28h],eax"
"	      004a6442    mov eax,[ebp-4]"
"	      004a6445    mov eax,[eax]"
"	      004a6447    mov [ebp-4],eax"
"	      004a644a    jmp near ptr 004A644Fh"
"	      004a644f    mov eax,[ebp-28h]"
"	      004a6452    mov [ebp-0Ch],eax"
"	      004a6455    jmp near ptr 004A645Ah"
);
// LINE 1141:
	asm( 
"	      004a645a    jmp near ptr 004A63C0h"
);
// LINE 1142:
	asm( 
"	      004a645f    jmp near ptr 004A6464h"
"	      004a6464    pop edi"
"	      004a6465    pop esi"
"	      004a6466    pop ebx"
"	      004a6467    leave"
"	      004a6468    ret 4"
);
}

// FUNCTION: SIMCOPTER 0x004a646b
protected: virtual int __thiscall GraphicWindow::DoesWindowNeedUpdating(void) {
// LINE 1161:
	asm( 
"	      004a646b    push ebp"
"	      004a646c    mov ebp,esp"
"	      004a646e    sub esp,2Ch"
"	      004a6471    push ebx"
"	      004a6472    push esi"
"	      004a6473    push edi"
"	      004a6474    mov [ebp-2Ch],ecx"
);
// LINE 1163:
	asm( 
"	      004a6477    jmp near ptr 004A647Ch"
"	      004a647c    mov eax,[ebp-2Ch]"
"	      004a647f    cmp dword ptr [eax+48h],0"
"	      004a6483    je near ptr 004A6493h"
);
// LINE 1164:
	asm( 
"	      004a6489    mov eax,1"
"	      004a648e    jmp near ptr 004A6563h"
);
// LINE 1168:
	asm( 
"	      004a6493    mov eax,[ebp-2Ch]"
"	      004a6496    mov eax,[eax+30h]"
"	      004a6499    mov eax,[eax]"
"	      004a649b    mov [ebp-24h],eax"
"	      004a649e    mov eax,[ebp-24h]"
"	      004a64a1    mov [ebp-4],eax"
"	      004a64a4    jmp near ptr 004A64A9h"
"	      004a64a9    jmp near ptr 004A64AEh"
);
// LINE 1169:
	asm( 
"	      004a64ae    mov eax,[ebp-2Ch]"
"	      004a64b1    mov eax,[eax+30h]"
"	      004a64b4    mov [ebp-18h],eax"
"	      004a64b7    mov eax,[ebp-18h]"
"	      004a64ba    mov [ebp-8],eax"
"	      004a64bd    jmp near ptr 004A64C2h"
"	      004a64c2    jmp near ptr 004A64C7h"
"	      004a64c7    mov eax,[ebp-8]"
"	      004a64ca    cmp [ebp-4],eax"
"	      004a64cd    jne near ptr 004A64DDh"
"	      004a64d3    jmp near ptr 004A64F1h"
"	      004a64d8    jmp near ptr 004A64DDh"
"	      004a64dd    jmp near ptr 004A64ECh"
"	      004a64e2    cmp dword ptr [ebp-1Ch],0"
"	      004a64e6    jne near ptr 004A64F1h"
"	      004a64ec    jmp near ptr 004A64F6h"
"	      004a64f1    jmp near ptr 004A655Ch"
"	      004a64f6    jmp near ptr 004A6505h"
"	      004a64fb    cmp dword ptr [ebp-20h],0"
"	      004a64ff    je near ptr 004A655Ch"
);
// LINE 1170:
	asm( 
"	      004a6505    jmp near ptr 004A650Ah"
"	      004a650a    mov eax,[ebp-4]"
"	      004a650d    mov eax,[eax+8]"
"	      004a6510    mov [ebp-10h],eax"
"	      004a6513    mov eax,[ebp-10h]"
"	      004a6516    mov eax,[eax]"
"	      004a6518    mov [ebp-14h],eax"
"	      004a651b    mov eax,[ebp-14h]"
"	      004a651e    mov ecx,[ebp-10h]"
"	      004a6521    call dword ptr [eax+0C0h]"
"	      004a6527    test eax,eax"
"	      004a6529    je near ptr 004A6539h"
);
// LINE 1171:
	asm( 
"	      004a652f    mov eax,1"
"	      004a6534    jmp near ptr 004A6563h"
);
// LINE 1172:
	asm( 
"	      004a6539    mov eax,[ebp-4]"
"	      004a653c    mov [ebp-28h],eax"
"	      004a653f    mov eax,[ebp-4]"
"	      004a6542    mov eax,[eax]"
"	      004a6544    mov [ebp-4],eax"
"	      004a6547    jmp near ptr 004A654Ch"
"	      004a654c    mov eax,[ebp-28h]"
"	      004a654f    mov [ebp-0Ch],eax"
"	      004a6552    jmp near ptr 004A6557h"
);
// LINE 1173:
	asm( 
"	      004a6557    jmp near ptr 004A64AEh"
);
// LINE 1174:
	asm( 
"	      004a655c    xor eax,eax"
"	      004a655e    jmp near ptr 004A6563h"
);
// LINE 1175:
	asm( 
"	      004a6563    pop edi"
"	      004a6564    pop esi"
"	      004a6565    pop ebx"
"	      004a6566    leave"
"	      004a6567    ret"
);
}

// FUNCTION: SIMCOPTER 0x004a6568
public: virtual long __thiscall GraphicWindow::DoCharacter(long) {
// LINE 1186:
	asm( 
"	      004a6568    push ebp"
"	      004a6569    mov ebp,esp"
"	      004a656b    sub esp,4"
"	      004a656e    push ebx"
"	      004a656f    push esi"
"	      004a6570    push edi"
"	      004a6571    mov [ebp-4],ecx"
);
// LINE 1187:
	asm( 
"	      004a6574    xor eax,eax"
"	      004a6576    jmp near ptr 004A657Bh"
);
// LINE 1188:
	asm( 
"	      004a657b    pop edi"
"	      004a657c    pop esi"
"	      004a657d    pop ebx"
"	      004a657e    leave"
"	      004a657f    ret 4"
);
}

// FUNCTION: SIMCOPTER 0x004a6582
public: virtual long __thiscall GraphicWindow::DoKeyDown(long, char) {
// LINE 1199:
	asm( 
"	      004a6582    push ebp"
"	      004a6583    mov ebp,esp"
"	      004a6585    sub esp,4"
"	      004a6588    push ebx"
"	      004a6589    push esi"
"	      004a658a    push edi"
"	      004a658b    mov [ebp-4],ecx"
);
// LINE 1200:
	asm( 
"	      004a658e    xor eax,eax"
"	      004a6590    jmp near ptr 004A6595h"
);
// LINE 1201:
	asm( 
"	      004a6595    pop edi"
"	      004a6596    pop esi"
"	      004a6597    pop ebx"
"	      004a6598    leave"
"	      004a6599    ret 8"
);
}

// FUNCTION: SIMCOPTER 0x004a659c
public: virtual long __thiscall GraphicWindow::DoKeyUp(long, char) {
// LINE 1213:
	asm( 
"	      004a659c    push ebp"
"	      004a659d    mov ebp,esp"
"	      004a659f    sub esp,4"
"	      004a65a2    push ebx"
"	      004a65a3    push esi"
"	      004a65a4    push edi"
"	      004a65a5    mov [ebp-4],ecx"
);
// LINE 1214:
	asm( 
"	      004a65a8    xor eax,eax"
"	      004a65aa    jmp near ptr 004A65AFh"
);
// LINE 1215:
	asm( 
"	      004a65af    pop edi"
"	      004a65b0    pop esi"
"	      004a65b1    pop ebx"
"	      004a65b2    leave"
"	      004a65b3    ret 8"
);
}

// FUNCTION: SIMCOPTER 0x004a65b6
public: virtual long __thiscall GraphicWindow::DoCursorDown(long, long, unsigned long) {
// LINE 1230:
	asm( 
"	      004a65b6    push ebp"
"	      004a65b7    mov ebp,esp"
"	      004a65b9    sub esp,4"
"	      004a65bc    push ebx"
"	      004a65bd    push esi"
"	      004a65be    push edi"
"	      004a65bf    mov [ebp-4],ecx"
);
// LINE 1231:
	asm( 
"	      004a65c2    xor eax,eax"
"	      004a65c4    jmp near ptr 004A65C9h"
);
// LINE 1232:
	asm( 
"	      004a65c9    pop edi"
"	      004a65ca    pop esi"
"	      004a65cb    pop ebx"
"	      004a65cc    leave"
"	      004a65cd    ret 0Ch"
);
}

// FUNCTION: SIMCOPTER 0x004a65d0
public: virtual long __thiscall GraphicWindow::DoCursorUp(long, long, unsigned long) {
// LINE 1243:
	asm( 
"	      004a65d0    push ebp"
"	      004a65d1    mov ebp,esp"
"	      004a65d3    sub esp,4"
"	      004a65d6    push ebx"
"	      004a65d7    push esi"
"	      004a65d8    push edi"
"	      004a65d9    mov [ebp-4],ecx"
);
// LINE 1244:
	asm( 
"	      004a65dc    mov eax,1"
"	      004a65e1    jmp near ptr 004A65E6h"
);
// LINE 1245:
	asm( 
"	      004a65e6    pop edi"
"	      004a65e7    pop esi"
"	      004a65e8    pop ebx"
"	      004a65e9    leave"
"	      004a65ea    ret 0Ch"
);
}

// FUNCTION: SIMCOPTER 0x004a65ed
public: virtual long __thiscall GraphicWindow::DoCursorMove(long, long) {
// LINE 1256:
	asm( 
"	      004a65ed    push ebp"
"	      004a65ee    mov ebp,esp"
"	      004a65f0    sub esp,4"
"	      004a65f3    push ebx"
"	      004a65f4    push esi"
"	      004a65f5    push edi"
"	      004a65f6    mov [ebp-4],ecx"
);
// LINE 1257:
	asm( 
"	      004a65f9    xor eax,eax"
"	      004a65fb    jmp near ptr 004A6600h"
);
// LINE 1258:
	asm( 
"	      004a6600    pop edi"
"	      004a6601    pop esi"
"	      004a6602    pop ebx"
"	      004a6603    leave"
"	      004a6604    ret 8"
);
}

// FUNCTION: SIMCOPTER 0x004a6607
public: virtual int __thiscall GraphicWindow::CaptureCursorStart(class GraphicWindow *) {
// LINE 1269:
	asm( 
"	      004a6607    push ebp"
"	      004a6608    mov ebp,esp"
"	      004a660a    sub esp,4"
"	      004a660d    push ebx"
"	      004a660e    push esi"
"	      004a660f    push edi"
"	      004a6610    mov [ebp-4],ecx"
);
// LINE 1270:
	asm( 
"	      004a6613    cmp dword ptr ds:[59A960h],0"
"	      004a661a    je near ptr 004A6627h"
);
// LINE 1271:
	asm( 
"	      004a6620    xor eax,eax"
"	      004a6622    jmp near ptr 004A6639h"
);
// LINE 1272:
	asm( 
"	      004a6627    mov eax,[ebp+8]"
"	      004a662a    mov ds:[59A960h],eax"
);
// LINE 1273:
	asm( 
"	      004a662f    mov eax,1"
"	      004a6634    jmp near ptr 004A6639h"
);
// LINE 1274:
	asm( 
"	      004a6639    pop edi"
"	      004a663a    pop esi"
"	      004a663b    pop ebx"
"	      004a663c    leave"
"	      004a663d    ret 4"
);
}

// FUNCTION: SIMCOPTER 0x004a6640
public: virtual int __thiscall GraphicWindow::CaptureCursorEnd(class GraphicWindow *) {
// LINE 1281:
	asm( 
"	      004a6640    push ebp"
"	      004a6641    mov ebp,esp"
"	      004a6643    sub esp,4"
"	      004a6646    push ebx"
"	      004a6647    push esi"
"	      004a6648    push edi"
"	      004a6649    mov [ebp-4],ecx"
);
// LINE 1282:
	asm( 
"	      004a664c    mov eax,[ebp+8]"
"	      004a664f    cmp ds:[59A960h],eax"
"	      004a6655    je near ptr 004A6662h"
);
// LINE 1283:
	asm( 
"	      004a665b    xor eax,eax"
"	      004a665d    jmp near ptr 004A6676h"
);
// LINE 1284:
	asm( 
"	      004a6662    mov dword ptr ds:[59A960h],0"
);
// LINE 1285:
	asm( 
"	      004a666c    mov eax,1"
"	      004a6671    jmp near ptr 004A6676h"
);
// LINE 1286:
	asm( 
"	      004a6676    pop edi"
"	      004a6677    pop esi"
"	      004a6678    pop ebx"
"	      004a6679    leave"
"	      004a667a    ret 4"
);
}

// FUNCTION: SIMCOPTER 0x004a667d
public: virtual void __thiscall GraphicWindow::WindowToScreenCoordinates(long &, long &) {
// LINE 1298:
	asm( 
"	      004a667d    push ebp"
"	      004a667e    mov ebp,esp"
"	      004a6680    sub esp,8"
"	      004a6683    push ebx"
"	      004a6684    push esi"
"	      004a6685    push edi"
"	      004a6686    mov [ebp-8],ecx"
);
// LINE 1299:
	asm( 
"	      004a6689    mov eax,[ebp-8]"
"	      004a668c    mov [ebp-4],eax"
);
// LINE 1301:
	asm( 
"	      004a668f    mov eax,[ebp-4]"
"	      004a6692    cmp dword ptr [eax+3Ch],0"
"	      004a6696    je near ptr 004A66C0h"
);
// LINE 1302:
	asm( 
"	      004a669c    mov eax,[ebp-4]"
"	      004a669f    mov eax,[eax+10h]"
"	      004a66a2    mov ecx,[ebp+8]"
"	      004a66a5    add [ecx],eax"
);
// LINE 1303:
	asm( 
"	      004a66a7    mov eax,[ebp-4]"
"	      004a66aa    mov eax,[eax+14h]"
"	      004a66ad    mov ecx,[ebp+0Ch]"
"	      004a66b0    add [ecx],eax"
);
// LINE 1304:
	asm( 
"	      004a66b2    mov eax,[ebp-4]"
"	      004a66b5    mov eax,[eax+3Ch]"
"	      004a66b8    mov [ebp-4],eax"
);
// LINE 1305:
	asm( 
"	      004a66bb    jmp near ptr 004A668Fh"
);
// LINE 1307:
	asm( 
"	      004a66c0    jmp near ptr 004A66C5h"
"	      004a66c5    pop edi"
"	      004a66c6    pop esi"
"	      004a66c7    pop ebx"
"	      004a66c8    leave"
"	      004a66c9    ret 8"
);
}

// FUNCTION: SIMCOPTER 0x004a66cc
public: virtual void __thiscall GraphicWindow::ScreenToWindowCoordinates(long &, long &) {
// LINE 1319:
	asm( 
"	      004a66cc    push ebp"
"	      004a66cd    mov ebp,esp"
"	      004a66cf    sub esp,0Ch"
"	      004a66d2    push ebx"
"	      004a66d3    push esi"
"	      004a66d4    push edi"
"	      004a66d5    mov [ebp-0Ch],ecx"
);
// LINE 1320:
	asm( 
"	      004a66d8    mov dword ptr [ebp-4],0"
);
// LINE 1321:
	asm( 
"	      004a66df    mov dword ptr [ebp-8],0"
);
// LINE 1324:
	asm( 
"	      004a66e6    lea eax,[ebp-8]"
"	      004a66e9    push eax"
"	      004a66ea    lea eax,[ebp-4]"
"	      004a66ed    push eax"
"	      004a66ee    mov eax,[ebp-0Ch]"
"	      004a66f1    mov eax,[eax]"
"	      004a66f3    mov ecx,[ebp-0Ch]"
"	      004a66f6    call dword ptr [eax+0A0h]"
);
// LINE 1325:
	asm( 
"	      004a66fc    xor eax,eax"
"	      004a66fe    sub eax,[ebp-4]"
"	      004a6701    neg eax"
"	      004a6703    mov ecx,[ebp+8]"
"	      004a6706    sub [ecx],eax"
);
// LINE 1326:
	asm( 
"	      004a6708    xor eax,eax"
"	      004a670a    sub eax,[ebp-8]"
"	      004a670d    neg eax"
"	      004a670f    mov ecx,[ebp+0Ch]"
"	      004a6712    sub [ecx],eax"
);
// LINE 1327:
	asm( 
"	      004a6714    jmp near ptr 004A6719h"
"	      004a6719    pop edi"
"	      004a671a    pop esi"
"	      004a671b    pop ebx"
"	      004a671c    leave"
"	      004a671d    ret 8"
);
}

// FUNCTION: SIMCOPTER 0x004a6720
protected: virtual class CBackBuffer * __thiscall GraphicWindow::GetImage(void) {
// LINE 1340:
	asm( 
"	      004a6720    push ebp"
"	      004a6721    mov ebp,esp"
"	      004a6723    sub esp,4"
"	      004a6726    push ebx"
"	      004a6727    push esi"
"	      004a6728    push edi"
"	      004a6729    mov [ebp-4],ecx"
);
// LINE 1341:
	asm( 
"	      004a672c    mov eax,[ebp-4]"
"	      004a672f    mov eax,[eax+40h]"
"	      004a6732    jmp near ptr 004A6737h"
);
// LINE 1342:
	asm( 
"	      004a6737    pop edi"
"	      004a6738    pop esi"
"	      004a6739    pop ebx"
"	      004a673a    leave"
"	      004a673b    ret"
);
}

// FUNCTION: SIMCOPTER 0x004a673c
protected: virtual void __thiscall GraphicWindow::GetImagePath(void) {
// LINE 1353:
	asm( 
"	      004a673c    push ebp"
"	      004a673d    mov ebp,esp"
"	      004a673f    sub esp,15Ch"
"	      004a6745    push ebx"
"	      004a6746    push esi"
"	      004a6747    push edi"
"	      004a6748    mov [ebp-15Ch],ecx"
);
// LINE 1356:
	asm( 
"	      004a674e    mov eax,[ebp-15Ch]"
"	      004a6754    cmp dword ptr [eax+5Ch],0"
"	      004a6758    je near ptr 004A6788h"
"	      004a675e    mov eax,[ebp-15Ch]"
"	      004a6764    mov eax,[eax+5Ch]"
"	      004a6767    mov [ebp-13Ch],eax"
"	      004a676d    mov eax,[ebp-13Ch]"
"	      004a6773    mov [ebp-144h],eax"
"	      004a6779    mov eax,[ebp-144h]"
"	      004a677f    push eax"
"	      004a6780    call 0056A740h"
"	      004a6785    add esp,4"
"	      004a6788    jmp near ptr 004A678Dh"
"	      004a678d    mov eax,[ebp-15Ch]"
"	      004a6793    mov eax,[eax+60h]"
"	      004a6796    mov eax,[eax+4]"
"	      004a6799    inc eax"
"	      004a679a    push eax"
"	      004a679b    call 0056A600h"
"	      004a67a0    add esp,4"
"	      004a67a3    mov ecx,[ebp-15Ch]"
"	      004a67a9    mov [ecx+5Ch],eax"
"	      004a67ac    jmp near ptr 004A67B1h"
"	      004a67b1    mov eax,[ebp-15Ch]"
"	      004a67b7    mov eax,[eax+60h]"
"	      004a67ba    cmp dword ptr [eax+4],0"
"	      004a67be    je near ptr 004A684Eh"
"	      004a67c4    jmp near ptr 004A67C9h"
"	      004a67c9    jmp near ptr 004A67CEh"
"	      004a67ce    mov eax,[ebp-15Ch]"
"	      004a67d4    mov eax,[eax+60h]"
"	      004a67d7    cmp dword ptr [eax+4],0"
"	      004a67db    je near ptr 004A67FCh"
"	      004a67e1    mov eax,[ebp-15Ch]"
"	      004a67e7    mov eax,[eax+60h]"
"	      004a67ea    mov eax,[eax]"
"	      004a67ec    mov [ebp-150h],eax"
"	      004a67f2    jmp near ptr 004A680Bh"
"	      004a67f7    jmp near ptr 004A680Bh"
"	      004a67fc    mov dword ptr [ebp-150h],0"
"	      004a6806    jmp near ptr 004A680Bh"
"	      004a680b    mov eax,[ebp-15Ch]"
"	      004a6811    mov eax,[eax+60h]"
"	      004a6814    mov eax,[eax+4]"
"	      004a6817    mov [ebp-154h],eax"
"	      004a681d    mov eax,[ebp-15Ch]"
"	      004a6823    mov eax,[eax+5Ch]"
"	      004a6826    mov [ebp-158h],eax"
"	      004a682c    mov eax,[ebp-154h]"
"	      004a6832    push eax"
"	      004a6833    mov eax,[ebp-150h]"
"	      004a6839    push eax"
"	      004a683a    mov eax,[ebp-158h]"
"	      004a6840    push eax"
"	      004a6841    call 0056A800h"
"	      004a6846    add esp,0Ch"
"	      004a6849    jmp near ptr 004A684Eh"
"	      004a684e    jmp near ptr 004A6853h"
"	      004a6853    mov byte ptr [ebp-140h],0"
"	      004a685a    jmp near ptr 004A685Fh"
"	      004a685f    lea eax,[ebp-140h]"
"	      004a6865    mov [ebp-148h],eax"
"	      004a686b    jmp near ptr 004A6870h"
"	      004a6870    mov eax,[ebp-15Ch]"
"	      004a6876    mov eax,[eax+60h]"
"	      004a6879    mov eax,[eax+4]"
"	      004a687c    mov ecx,[ebp-15Ch]"
"	      004a6882    add eax,[ecx+5Ch]"
"	      004a6885    mov [ebp-14Ch],eax"
"	      004a688b    mov eax,[ebp-148h]"
"	      004a6891    mov al,[eax]"
"	      004a6893    mov ecx,[ebp-14Ch]"
"	      004a6899    mov [ecx],al"
"	      004a689b    jmp near ptr 004A68A0h"
"	      004a68a0    jmp near ptr 004A68A5h"
"	      004a68a5    lea eax,[ebp-108h]"
"	      004a68ab    push eax"
"	      004a68ac    mov eax,[ebp-15Ch]"
"	      004a68b2    mov eax,[eax+5Ch]"
"	      004a68b5    push eax"
"	      004a68b6    push 0"
"	      004a68b8    push 6"
"	      004a68ba    call 0049172Bh"
"	      004a68bf    add esp,10h"
);
// LINE 1357:
	asm( 
"	      004a68c2    jmp near ptr 004A68C7h"
"	      004a68c7    lea eax,[ebp-108h]"
"	      004a68cd    push eax"
"	      004a68ce    call 0056ABE0h"
"	      004a68d3    add esp,4"
"	      004a68d6    mov [ebp-138h],eax"
"	      004a68dc    cmp dword ptr [ebp-138h],0FFFFFFFFh"
"	      004a68e3    jne near ptr 004A6921h"
"	      004a68e9    push 5971E4h"
"	      004a68ee    mov ecx,638C00h"
"	      004a68f3    call 00569960h"
"	      004a68f8    mov [ebp-118h],eax"
"	      004a68fe    mov eax,[ebp-118h]"
"	      004a6904    push eax"
"	      004a6905    call 004011B0h"
"	      004a690a    add esp,4"
"	      004a690d    jmp near ptr 004A6912h"
"	      004a6912    push 1"
"	      004a6914    call 00569430h"
"	      004a6919    add esp,4"
"	      004a691c    jmp near ptr 004A6921h"
"	      004a6921    jmp near ptr 004A6926h"
"	      004a6926    mov eax,[ebp-15Ch]"
"	      004a692c    mov eax,[eax+68h]"
"	      004a692f    cmp dword ptr [eax+0Ch],1"
"	      004a6933    ja near ptr 004A6963h"
"	      004a6939    cmp dword ptr [ebp-138h],0"
"	      004a6940    je near ptr 004A6B62h"
"	      004a6946    jmp near ptr 004A694Bh"
"	      004a694b    mov eax,[ebp-15Ch]"
"	      004a6951    mov eax,[eax+68h]"
"	      004a6954    mov ecx,[ebp-138h]"
"	      004a695a    cmp [eax+8],ecx"
"	      004a695d    jae near ptr 004A6B62h"
"	      004a6963    push 10h"
"	      004a6965    call 0056A600h"
"	      004a696a    add esp,4"
"	      004a696d    mov [ebp-110h],eax"
"	      004a6973    cmp dword ptr [ebp-110h],0"
"	      004a697a    je near ptr 004A6A83h"
"	      004a6980    cmp dword ptr [ebp-138h],0FFFFFFFFh"
"	      004a6987    jne near ptr 004A69C5h"
"	      004a698d    push 5971E4h"
"	      004a6992    mov ecx,638C00h"
"	      004a6997    call 00569960h"
"	      004a699c    mov [ebp-134h],eax"
"	      004a69a2    mov eax,[ebp-134h]"
"	      004a69a8    push eax"
"	      004a69a9    call 004011B0h"
"	      004a69ae    add esp,4"
"	      004a69b1    jmp near ptr 004A69B6h"
"	      004a69b6    push 1"
"	      004a69b8    call 00569430h"
"	      004a69bd    add esp,4"
"	      004a69c0    jmp near ptr 004A69C5h"
"	      004a69c5    mov eax,[ebp-138h]"
"	      004a69cb    mov ecx,[ebp-110h]"
"	      004a69d1    mov [ecx+4],eax"
"	      004a69d4    mov eax,[ebp-110h]"
"	      004a69da    mov eax,[eax+4]"
"	      004a69dd    mov ecx,[ebp-110h]"
"	      004a69e3    mov [ecx+8],eax"
"	      004a69e6    mov eax,[ebp-110h]"
"	      004a69ec    cmp dword ptr [eax+8],0"
"	      004a69f0    je near ptr 004A6A54h"
"	      004a69f6    mov eax,[ebp-110h]"
"	      004a69fc    mov eax,[eax+8]"
"	      004a69ff    push eax"
"	      004a6a00    call 0056A600h"
"	      004a6a05    add esp,4"
"	      004a6a08    mov ecx,[ebp-110h]"
"	      004a6a0e    mov [ecx],eax"
"	      004a6a10    mov eax,[ebp-110h]"
"	      004a6a16    mov eax,[eax+4]"
"	      004a6a19    mov [ebp-12Ch],eax"
"	      004a6a1f    mov eax,[ebp-110h]"
"	      004a6a25    mov eax,[eax]"
"	      004a6a27    mov [ebp-130h],eax"
"	      004a6a2d    mov eax,[ebp-12Ch]"
"	      004a6a33    push eax"
"	      004a6a34    lea eax,[ebp-108h]"
"	      004a6a3a    push eax"
"	      004a6a3b    mov eax,[ebp-130h]"
"	      004a6a41    push eax"
"	      004a6a42    call 0056A800h"
"	      004a6a47    add esp,0Ch"
"	      004a6a4a    jmp near ptr 004A6A4Fh"
"	      004a6a4f    jmp near ptr 004A6A60h"
"	      004a6a54    mov eax,[ebp-110h]"
"	      004a6a5a    mov dword ptr [eax],0"
"	      004a6a60    mov eax,[ebp-110h]"
"	      004a6a66    mov dword ptr [eax+0Ch],1"
"	      004a6a6d    jmp near ptr 004A6A72h"
"	      004a6a72    mov eax,[ebp-110h]"
"	      004a6a78    mov [ebp-10Ch],eax"
"	      004a6a7e    jmp near ptr 004A6A8Dh"
"	      004a6a83    mov dword ptr [ebp-10Ch],0"
"	      004a6a8d    mov eax,[ebp-15Ch]"
"	      004a6a93    mov eax,[eax+68h]"
"	      004a6a96    dec dword ptr [eax+0Ch]"
"	      004a6a99    mov eax,[ebp-15Ch]"
"	      004a6a9f    mov eax,[eax+68h]"
"	      004a6aa2    cmp dword ptr [eax+0Ch],0"
"	      004a6aa6    jne near ptr 004A6B49h"
"	      004a6aac    mov eax,[ebp-15Ch]"
"	      004a6ab2    mov eax,[eax+68h]"
"	      004a6ab5    mov [ebp-120h],eax"
"	      004a6abb    mov eax,[ebp-120h]"
"	      004a6ac1    mov [ebp-11Ch],eax"
"	      004a6ac7    cmp dword ptr [ebp-11Ch],0"
"	      004a6ace    je near ptr 004A6B49h"
"	      004a6ad4    mov eax,[ebp-11Ch]"
"	      004a6ada    cmp dword ptr [eax+8],0"
"	      004a6ade    je near ptr 004A6B26h"
"	      004a6ae4    mov eax,[ebp-11Ch]"
"	      004a6aea    mov eax,[eax]"
"	      004a6aec    mov [ebp-124h],eax"
"	      004a6af2    mov eax,[ebp-124h]"
"	      004a6af8    mov [ebp-128h],eax"
"	      004a6afe    mov eax,[ebp-128h]"
"	      004a6b04    push eax"
"	      004a6b05    call 0056A740h"
"	      004a6b0a    add esp,4"
"	      004a6b0d    mov eax,[ebp-11Ch]"
"	      004a6b13    mov dword ptr [eax+8],0"
"	      004a6b1a    mov eax,[ebp-11Ch]"
"	      004a6b20    mov dword ptr [eax],0"
"	      004a6b26    jmp near ptr 004A6B2Bh"
"	      004a6b2b    jmp near ptr 004A6B30h"
"	      004a6b30    mov eax,[ebp-11Ch]"
"	      004a6b36    push eax"
"	      004a6b37    call 0056A740h"
"	      004a6b3c    add esp,4"
"	      004a6b3f    jmp near ptr 004A6B44h"
"	      004a6b44    jmp near ptr 004A6B49h"
"	      004a6b49    jmp near ptr 004A6B4Eh"
"	      004a6b4e    mov eax,[ebp-10Ch]"
"	      004a6b54    mov ecx,[ebp-15Ch]"
"	      004a6b5a    mov [ecx+68h],eax"
"	      004a6b5d    jmp near ptr 004A6BA7h"
"	      004a6b62    cmp dword ptr [ebp-138h],0"
"	      004a6b69    je near ptr 004A6BA7h"
"	      004a6b6f    jmp near ptr 004A6B74h"
"	      004a6b74    mov eax,[ebp-15Ch]"
"	      004a6b7a    mov eax,[eax+68h]"
"	      004a6b7d    mov eax,[eax]"
"	      004a6b7f    mov [ebp-114h],eax"
"	      004a6b85    mov eax,[ebp-138h]"
"	      004a6b8b    push eax"
"	      004a6b8c    lea eax,[ebp-108h]"
"	      004a6b92    push eax"
"	      004a6b93    mov eax,[ebp-114h]"
"	      004a6b99    push eax"
"	      004a6b9a    call 0056A800h"
"	      004a6b9f    add esp,0Ch"
"	      004a6ba2    jmp near ptr 004A6BA7h"
"	      004a6ba7    mov eax,[ebp-138h]"
"	      004a6bad    mov ecx,[ebp-15Ch]"
"	      004a6bb3    mov ecx,[ecx+68h]"
"	      004a6bb6    mov [ecx+4],eax"
"	      004a6bb9    jmp near ptr 004A6BBEh"
"	      004a6bbe    jmp near ptr 004A6BC3h"
);
// LINE 1358:
	asm( 
"	      004a6bc3    jmp near ptr 004A6BC8h"
"	      004a6bc8    pop edi"
"	      004a6bc9    pop esi"
"	      004a6bca    pop ebx"
"	      004a6bcb    leave"
"	      004a6bcc    ret"
);
}

// FUNCTION: SIMCOPTER 0x004a6bcd
public: virtual int __thiscall GraphicWindow::SetImageToDrawOnto(void) {
// LINE 1366:
	asm( 
"	      004a6bcd    push ebp"
"	      004a6bce    mov ebp,esp"
"	      004a6bd0    sub esp,38h"
"	      004a6bd3    push ebx"
"	      004a6bd4    push esi"
"	      004a6bd5    push edi"
"	      004a6bd6    mov [ebp-38h],ecx"
);
// LINE 1367:
	asm( 
"	      004a6bd9    mov eax,[ebp-38h]"
"	      004a6bdc    add eax,10h"
"	      004a6bdf    mov ecx,[ebp-38h]"
"	      004a6be2    add ecx,20h"
"	      004a6be5    mov edx,[eax]"
"	      004a6be7    mov [ecx],edx"
"	      004a6be9    mov edx,[eax+4]"
"	      004a6bec    mov [ecx+4],edx"
"	      004a6bef    mov edx,[eax+8]"
"	      004a6bf2    mov [ecx+8],edx"
"	      004a6bf5    mov eax,[eax+0Ch]"
"	      004a6bf8    mov [ecx+0Ch],eax"
"	      004a6bfb    mov eax,[ebp-38h]"
"	      004a6bfe    add eax,20h"
"	      004a6c01    mov [ebp-24h],eax"
"	      004a6c04    mov eax,[ebp-24h]"
"	      004a6c07    lea ecx,[ebp-18h]"
"	      004a6c0a    mov edx,[eax]"
"	      004a6c0c    mov [ecx],edx"
"	      004a6c0e    mov edx,[eax+4]"
"	      004a6c11    mov [ecx+4],edx"
"	      004a6c14    mov edx,[eax+8]"
"	      004a6c17    mov [ecx+8],edx"
"	      004a6c1a    mov eax,[eax+0Ch]"
"	      004a6c1d    mov [ecx+0Ch],eax"
);
// LINE 1368:
	asm( 
"	      004a6c20    mov eax,[ebp-38h]"
"	      004a6c23    mov eax,[eax+3Ch]"
"	      004a6c26    mov [ebp-8],eax"
);
// LINE 1371:
	asm( 
"	      004a6c29    cmp dword ptr [ebp-8],0"
"	      004a6c2d    je near ptr 004A6CE4h"
);
// LINE 1372:
	asm( 
"	      004a6c33    mov eax,[ebp-8]"
"	      004a6c36    mov eax,[eax]"
"	      004a6c38    mov ecx,[ebp-8]"
"	      004a6c3b    call dword ptr [eax+0B0h]"
"	      004a6c41    mov [ebp-4],eax"
);
// LINE 1373:
	asm( 
"	      004a6c44    cmp dword ptr [ebp-4],0"
"	      004a6c48    je near ptr 004A6C80h"
);
// LINE 1374:
	asm( 
"	      004a6c4e    mov eax,[ebp-4]"
"	      004a6c51    mov ecx,[ebp-38h]"
"	      004a6c54    mov [ecx+44h],eax"
);
// LINE 1375:
	asm( 
"	      004a6c57    lea eax,[ebp-18h]"
"	      004a6c5a    mov ecx,[ebp-38h]"
"	      004a6c5d    add ecx,20h"
"	      004a6c60    mov edx,[eax]"
"	      004a6c62    mov [ecx],edx"
"	      004a6c64    mov edx,[eax+4]"
"	      004a6c67    mov [ecx+4],edx"
"	      004a6c6a    mov edx,[eax+8]"
"	      004a6c6d    mov [ecx+8],edx"
"	      004a6c70    mov eax,[eax+0Ch]"
"	      004a6c73    mov [ecx+0Ch],eax"
);
// LINE 1376:
	asm( 
"	      004a6c76    mov eax,1"
"	      004a6c7b    jmp near ptr 004A6CEBh"
);
// LINE 1381:
	asm( 
"	      004a6c80    mov eax,[ebp-8]"
"	      004a6c83    mov eax,[eax+14h]"
"	      004a6c86    mov [ebp-28h],eax"
"	      004a6c89    mov eax,[ebp-8]"
"	      004a6c8c    mov eax,[eax+10h]"
"	      004a6c8f    mov [ebp-2Ch],eax"
"	      004a6c92    jmp near ptr 004A6C97h"
"	      004a6c97    mov eax,[ebp-2Ch]"
"	      004a6c9a    mov [ebp-20h],eax"
"	      004a6c9d    mov eax,[ebp-28h]"
"	      004a6ca0    mov [ebp-1Ch],eax"
"	      004a6ca3    jmp near ptr 004A6CA8h"
"	      004a6ca8    mov eax,[ebp-20h]"
"	      004a6cab    mov ecx,[ebp-1Ch]"
"	      004a6cae    mov [ebp-34h],eax"
"	      004a6cb1    mov [ebp-30h],ecx"
"	      004a6cb4    mov eax,[ebp-34h]"
"	      004a6cb7    add [ebp-18h],eax"
"	      004a6cba    mov eax,[ebp-34h]"
"	      004a6cbd    add [ebp-10h],eax"
"	      004a6cc0    mov eax,[ebp-30h]"
"	      004a6cc3    add [ebp-14h],eax"
"	      004a6cc6    mov eax,[ebp-30h]"
"	      004a6cc9    add [ebp-0Ch],eax"
"	      004a6ccc    jmp near ptr 004A6CD1h"
"	      004a6cd1    jmp near ptr 004A6CD6h"
);
// LINE 1382:
	asm( 
"	      004a6cd6    mov eax,[ebp-8]"
"	      004a6cd9    mov eax,[eax+3Ch]"
"	      004a6cdc    mov [ebp-8],eax"
);
// LINE 1383:
	asm( 
"	      004a6cdf    jmp near ptr 004A6C29h"
);
// LINE 1384:
	asm( 
"	      004a6ce4    xor eax,eax"
"	      004a6ce6    jmp near ptr 004A6CEBh"
);
// LINE 1385:
	asm( 
"	      004a6ceb    pop edi"
"	      004a6cec    pop esi"
"	      004a6ced    pop ebx"
"	      004a6cee    leave"
"	      004a6cef    ret"
);
}

// FUNCTION: SIMCOPTER 0x004a6cf0
public: virtual void __thiscall GraphicWindow::SetAllImagesToDrawOnto(void) {
// LINE 1402:
	asm( 
"	      004a6cf0    push ebp"
"	      004a6cf1    mov ebp,esp"
"	      004a6cf3    sub esp,2Ch"
"	      004a6cf6    push ebx"
"	      004a6cf7    push esi"
"	      004a6cf8    push edi"
"	      004a6cf9    mov [ebp-2Ch],ecx"
);
// LINE 1403:
	asm( 
"	      004a6cfc    mov eax,[ebp-2Ch]"
"	      004a6cff    mov eax,[eax]"
"	      004a6d01    mov ecx,[ebp-2Ch]"
"	      004a6d04    call dword ptr [eax+1Ch]"
);
// LINE 1405:
	asm( 
"	      004a6d07    mov eax,[ebp-2Ch]"
"	      004a6d0a    mov eax,[eax+30h]"
"	      004a6d0d    mov eax,[eax]"
"	      004a6d0f    mov [ebp-24h],eax"
"	      004a6d12    mov eax,[ebp-24h]"
"	      004a6d15    mov [ebp-4],eax"
"	      004a6d18    jmp near ptr 004A6D1Dh"
"	      004a6d1d    jmp near ptr 004A6D22h"
);
// LINE 1406:
	asm( 
"	      004a6d22    mov eax,[ebp-2Ch]"
"	      004a6d25    mov eax,[eax+30h]"
"	      004a6d28    mov [ebp-18h],eax"
"	      004a6d2b    mov eax,[ebp-18h]"
"	      004a6d2e    mov [ebp-8],eax"
"	      004a6d31    jmp near ptr 004A6D36h"
"	      004a6d36    jmp near ptr 004A6D3Bh"
"	      004a6d3b    mov eax,[ebp-4]"
"	      004a6d3e    cmp [ebp-8],eax"
"	      004a6d41    jne near ptr 004A6D51h"
"	      004a6d47    jmp near ptr 004A6D65h"
"	      004a6d4c    jmp near ptr 004A6D51h"
"	      004a6d51    jmp near ptr 004A6D60h"
"	      004a6d56    cmp dword ptr [ebp-1Ch],0"
"	      004a6d5a    jne near ptr 004A6D65h"
"	      004a6d60    jmp near ptr 004A6D6Ah"
"	      004a6d65    jmp near ptr 004A6DBBh"
"	      004a6d6a    jmp near ptr 004A6D79h"
"	      004a6d6f    cmp dword ptr [ebp-20h],0"
"	      004a6d73    je near ptr 004A6DBBh"
);
// LINE 1407:
	asm( 
"	      004a6d79    jmp near ptr 004A6D7Eh"
"	      004a6d7e    mov eax,[ebp-4]"
"	      004a6d81    mov eax,[eax+8]"
"	      004a6d84    mov [ebp-10h],eax"
"	      004a6d87    mov eax,[ebp-10h]"
"	      004a6d8a    mov eax,[eax]"
"	      004a6d8c    mov [ebp-14h],eax"
"	      004a6d8f    mov eax,[ebp-14h]"
"	      004a6d92    mov ecx,[ebp-10h]"
"	      004a6d95    call dword ptr [eax+20h]"
);
// LINE 1408:
	asm( 
"	      004a6d98    mov eax,[ebp-4]"
"	      004a6d9b    mov [ebp-28h],eax"
"	      004a6d9e    mov eax,[ebp-4]"
"	      004a6da1    mov eax,[eax]"
"	      004a6da3    mov [ebp-4],eax"
"	      004a6da6    jmp near ptr 004A6DABh"
"	      004a6dab    mov eax,[ebp-28h]"
"	      004a6dae    mov [ebp-0Ch],eax"
"	      004a6db1    jmp near ptr 004A6DB6h"
);
// LINE 1409:
	asm( 
"	      004a6db6    jmp near ptr 004A6D22h"
);
// LINE 1410:
	asm( 
"	      004a6dbb    jmp near ptr 004A6DC0h"
"	      004a6dc0    pop edi"
"	      004a6dc1    pop esi"
"	      004a6dc2    pop ebx"
"	      004a6dc3    leave"
"	      004a6dc4    ret"
);
}

// FUNCTION: SIMCOPTER 0x004a6dc5
public: virtual void __thiscall GraphicWindow::CreateAllImages(void) {
// LINE 1421:
	asm( 
"	      004a6dc5    push ebp"
"	      004a6dc6    mov ebp,esp"
"	      004a6dc8    sub esp,2Ch"
"	      004a6dcb    push ebx"
"	      004a6dcc    push esi"
"	      004a6dcd    push edi"
"	      004a6dce    mov [ebp-2Ch],ecx"
);
// LINE 1422:
	asm( 
"	      004a6dd1    push 1"
"	      004a6dd3    mov eax,[ebp-2Ch]"
"	      004a6dd6    mov eax,[eax]"
"	      004a6dd8    mov ecx,[ebp-2Ch]"
"	      004a6ddb    call dword ptr [eax+10h]"
);
// LINE 1423:
	asm( 
"	      004a6dde    mov eax,[ebp-2Ch]"
"	      004a6de1    mov eax,[eax]"
"	      004a6de3    mov ecx,[ebp-2Ch]"
"	      004a6de6    call dword ptr [eax+1Ch]"
);
// LINE 1425:
	asm( 
"	      004a6de9    mov eax,[ebp-2Ch]"
"	      004a6dec    mov eax,[eax+30h]"
"	      004a6def    mov eax,[eax]"
"	      004a6df1    mov [ebp-24h],eax"
"	      004a6df4    mov eax,[ebp-24h]"
"	      004a6df7    mov [ebp-4],eax"
"	      004a6dfa    jmp near ptr 004A6DFFh"
"	      004a6dff    jmp near ptr 004A6E04h"
);
// LINE 1426:
	asm( 
"	      004a6e04    mov eax,[ebp-2Ch]"
"	      004a6e07    mov eax,[eax+30h]"
"	      004a6e0a    mov [ebp-18h],eax"
"	      004a6e0d    mov eax,[ebp-18h]"
"	      004a6e10    mov [ebp-8],eax"
"	      004a6e13    jmp near ptr 004A6E18h"
"	      004a6e18    jmp near ptr 004A6E1Dh"
"	      004a6e1d    mov eax,[ebp-8]"
"	      004a6e20    cmp [ebp-4],eax"
"	      004a6e23    jne near ptr 004A6E33h"
"	      004a6e29    jmp near ptr 004A6E47h"
"	      004a6e2e    jmp near ptr 004A6E33h"
"	      004a6e33    jmp near ptr 004A6E42h"
"	      004a6e38    cmp dword ptr [ebp-1Ch],0"
"	      004a6e3c    jne near ptr 004A6E47h"
"	      004a6e42    jmp near ptr 004A6E4Ch"
"	      004a6e47    jmp near ptr 004A6E9Dh"
"	      004a6e4c    jmp near ptr 004A6E5Bh"
"	      004a6e51    cmp dword ptr [ebp-20h],0"
"	      004a6e55    je near ptr 004A6E9Dh"
);
// LINE 1427:
	asm( 
"	      004a6e5b    jmp near ptr 004A6E60h"
"	      004a6e60    mov eax,[ebp-4]"
"	      004a6e63    mov eax,[eax+8]"
"	      004a6e66    mov [ebp-10h],eax"
"	      004a6e69    mov eax,[ebp-10h]"
"	      004a6e6c    mov eax,[eax]"
"	      004a6e6e    mov [ebp-14h],eax"
"	      004a6e71    mov eax,[ebp-14h]"
"	      004a6e74    mov ecx,[ebp-10h]"
"	      004a6e77    call dword ptr [eax+8]"
);
// LINE 1428:
	asm( 
"	      004a6e7a    mov eax,[ebp-4]"
"	      004a6e7d    mov [ebp-28h],eax"
"	      004a6e80    mov eax,[ebp-4]"
"	      004a6e83    mov eax,[eax]"
"	      004a6e85    mov [ebp-4],eax"
"	      004a6e88    jmp near ptr 004A6E8Dh"
"	      004a6e8d    mov eax,[ebp-28h]"
"	      004a6e90    mov [ebp-0Ch],eax"
"	      004a6e93    jmp near ptr 004A6E98h"
);
// LINE 1429:
	asm( 
"	      004a6e98    jmp near ptr 004A6E04h"
);
// LINE 1430:
	asm( 
"	      004a6e9d    jmp near ptr 004A6EA2h"
"	      004a6ea2    pop edi"
"	      004a6ea3    pop esi"
"	      004a6ea4    pop ebx"
"	      004a6ea5    leave"
"	      004a6ea6    ret"
);
}

// FUNCTION: SIMCOPTER 0x004a6ea7
public: virtual void __thiscall GraphicWindow::DestroyAllImages(void) {
// LINE 1441:
	asm( 
"	      004a6ea7    push ebp"
"	      004a6ea8    mov ebp,esp"
"	      004a6eaa    sub esp,2Ch"
"	      004a6ead    push ebx"
"	      004a6eae    push esi"
"	      004a6eaf    push edi"
"	      004a6eb0    mov [ebp-2Ch],ecx"
);
// LINE 1442:
	asm( 
"	      004a6eb3    mov eax,[ebp-2Ch]"
"	      004a6eb6    mov eax,[eax]"
"	      004a6eb8    mov ecx,[ebp-2Ch]"
"	      004a6ebb    call dword ptr [eax+14h]"
);
// LINE 1444:
	asm( 
"	      004a6ebe    mov eax,[ebp-2Ch]"
"	      004a6ec1    mov eax,[eax+30h]"
"	      004a6ec4    mov eax,[eax]"
"	      004a6ec6    mov [ebp-24h],eax"
"	      004a6ec9    mov eax,[ebp-24h]"
"	      004a6ecc    mov [ebp-4],eax"
"	      004a6ecf    jmp near ptr 004A6ED4h"
"	      004a6ed4    jmp near ptr 004A6ED9h"
);
// LINE 1445:
	asm( 
"	      004a6ed9    mov eax,[ebp-2Ch]"
"	      004a6edc    mov eax,[eax+30h]"
"	      004a6edf    mov [ebp-18h],eax"
"	      004a6ee2    mov eax,[ebp-18h]"
"	      004a6ee5    mov [ebp-8],eax"
"	      004a6ee8    jmp near ptr 004A6EEDh"
"	      004a6eed    jmp near ptr 004A6EF2h"
"	      004a6ef2    mov eax,[ebp-8]"
"	      004a6ef5    cmp [ebp-4],eax"
"	      004a6ef8    jne near ptr 004A6F08h"
"	      004a6efe    jmp near ptr 004A6F1Ch"
"	      004a6f03    jmp near ptr 004A6F08h"
"	      004a6f08    jmp near ptr 004A6F17h"
"	      004a6f0d    cmp dword ptr [ebp-1Ch],0"
"	      004a6f11    jne near ptr 004A6F1Ch"
"	      004a6f17    jmp near ptr 004A6F21h"
"	      004a6f1c    jmp near ptr 004A6F72h"
"	      004a6f21    jmp near ptr 004A6F30h"
"	      004a6f26    cmp dword ptr [ebp-20h],0"
"	      004a6f2a    je near ptr 004A6F72h"
);
// LINE 1446:
	asm( 
"	      004a6f30    jmp near ptr 004A6F35h"
"	      004a6f35    mov eax,[ebp-4]"
"	      004a6f38    mov eax,[eax+8]"
"	      004a6f3b    mov [ebp-10h],eax"
"	      004a6f3e    mov eax,[ebp-10h]"
"	      004a6f41    mov eax,[eax]"
"	      004a6f43    mov [ebp-14h],eax"
"	      004a6f46    mov eax,[ebp-14h]"
"	      004a6f49    mov ecx,[ebp-10h]"
"	      004a6f4c    call dword ptr [eax+0Ch]"
);
// LINE 1447:
	asm( 
"	      004a6f4f    mov eax,[ebp-4]"
"	      004a6f52    mov [ebp-28h],eax"
"	      004a6f55    mov eax,[ebp-4]"
"	      004a6f58    mov eax,[eax]"
"	      004a6f5a    mov [ebp-4],eax"
"	      004a6f5d    jmp near ptr 004A6F62h"
"	      004a6f62    mov eax,[ebp-28h]"
"	      004a6f65    mov [ebp-0Ch],eax"
"	      004a6f68    jmp near ptr 004A6F6Dh"
);
// LINE 1448:
	asm( 
"	      004a6f6d    jmp near ptr 004A6ED9h"
);
// LINE 1449:
	asm( 
"	      004a6f72    jmp near ptr 004A6F77h"
"	      004a6f77    pop edi"
"	      004a6f78    pop esi"
"	      004a6f79    pop ebx"
"	      004a6f7a    leave"
"	      004a6f7b    ret"
);
}

// FUNCTION: SIMCOPTER 0x004a6f7c
public: virtual void __thiscall GraphicWindow::DrawBorder(struct SparkalColor *) {
// LINE 1455:
	asm( 
"	      004a6f7c    push ebp"
"	      004a6f7d    mov ebp,esp"
"	      004a6f7f    sub esp,8"
"	      004a6f82    push ebx"
"	      004a6f83    push esi"
"	      004a6f84    push edi"
"	      004a6f85    mov [ebp-8],ecx"
);
// LINE 1456:
	asm( 
"	      004a6f88    cmp dword ptr [ebp+8],0"
"	      004a6f8c    je near ptr 004A6FABh"
);
// LINE 1457:
	asm( 
"	      004a6f92    mov eax,[ebp-8]"
"	      004a6f95    mov eax,[eax+44h]"
"	      004a6f98    mov [ebp-4],eax"
"	      004a6f9b    mov eax,[ebp+8]"
"	      004a6f9e    mov eax,[eax]"
"	      004a6fa0    mov ecx,[ebp-4]"
"	      004a6fa3    mov [ecx+3Ch],eax"
"	      004a6fa6    jmp near ptr 004A6FABh"
);
// LINE 1461:
	asm( 
"	      004a6fab    push 1"
"	      004a6fad    mov eax,[ebp-8]"
"	      004a6fb0    mov eax,[eax+24h]"
"	      004a6fb3    push eax"
"	      004a6fb4    mov eax,[ebp-8]"
"	      004a6fb7    mov eax,[eax+28h]"
"	      004a6fba    push eax"
"	      004a6fbb    mov eax,[ebp-8]"
"	      004a6fbe    mov eax,[eax+24h]"
"	      004a6fc1    push eax"
"	      004a6fc2    mov eax,[ebp-8]"
"	      004a6fc5    mov eax,[eax+20h]"
"	      004a6fc8    push eax"
"	      004a6fc9    mov eax,[ebp-8]"
"	      004a6fcc    mov ecx,[ebp-8]"
"	      004a6fcf    mov ecx,[ecx+44h]"
"	      004a6fd2    mov edx,[ecx]"
"	      004a6fd4    mov ecx,[eax+44h]"
"	      004a6fd7    call dword ptr [edx+40h]"
);
// LINE 1463:
	asm( 
"	      004a6fda    push 1"
"	      004a6fdc    mov eax,[ebp-8]"
"	      004a6fdf    mov eax,[eax+2Ch]"
"	      004a6fe2    push eax"
"	      004a6fe3    mov eax,[ebp-8]"
"	      004a6fe6    mov eax,[eax+20h]"
"	      004a6fe9    push eax"
"	      004a6fea    mov eax,[ebp-8]"
"	      004a6fed    mov eax,[eax+24h]"
"	      004a6ff0    push eax"
"	      004a6ff1    mov eax,[ebp-8]"
"	      004a6ff4    mov eax,[eax+20h]"
"	      004a6ff7    push eax"
"	      004a6ff8    mov eax,[ebp-8]"
"	      004a6ffb    mov ecx,[ebp-8]"
"	      004a6ffe    mov ecx,[ecx+44h]"
"	      004a7001    mov edx,[ecx]"
"	      004a7003    mov ecx,[eax+44h]"
"	      004a7006    call dword ptr [edx+40h]"
);
// LINE 1465:
	asm( 
"	      004a7009    push 1"
"	      004a700b    mov eax,[ebp-8]"
"	      004a700e    mov eax,[eax+2Ch]"
"	      004a7011    inc eax"
"	      004a7012    push eax"
"	      004a7013    mov eax,[ebp-8]"
"	      004a7016    mov eax,[eax+28h]"
"	      004a7019    push eax"
"	      004a701a    mov eax,[ebp-8]"
"	      004a701d    mov eax,[eax+24h]"
"	      004a7020    push eax"
"	      004a7021    mov eax,[ebp-8]"
"	      004a7024    mov eax,[eax+28h]"
"	      004a7027    push eax"
"	      004a7028    mov eax,[ebp-8]"
"	      004a702b    mov ecx,[ebp-8]"
"	      004a702e    mov ecx,[ecx+44h]"
"	      004a7031    mov edx,[ecx]"
"	      004a7033    mov ecx,[eax+44h]"
"	      004a7036    call dword ptr [edx+40h]"
);
// LINE 1467:
	asm( 
"	      004a7039    push 1"
"	      004a703b    mov eax,[ebp-8]"
"	      004a703e    mov eax,[eax+2Ch]"
"	      004a7041    push eax"
"	      004a7042    mov eax,[ebp-8]"
"	      004a7045    mov eax,[eax+28h]"
"	      004a7048    inc eax"
"	      004a7049    push eax"
"	      004a704a    mov eax,[ebp-8]"
"	      004a704d    mov eax,[eax+2Ch]"
"	      004a7050    push eax"
"	      004a7051    mov eax,[ebp-8]"
"	      004a7054    mov eax,[eax+20h]"
"	      004a7057    push eax"
"	      004a7058    mov eax,[ebp-8]"
"	      004a705b    mov ecx,[ebp-8]"
"	      004a705e    mov ecx,[ecx+44h]"
"	      004a7061    mov edx,[ecx]"
"	      004a7063    mov ecx,[eax+44h]"
"	      004a7066    call dword ptr [edx+40h]"
);
// LINE 1468:
	asm( 
"	      004a7069    jmp near ptr 004A706Eh"
"	      004a706e    pop edi"
"	      004a706f    pop esi"
"	      004a7070    pop ebx"
"	      004a7071    leave"
"	      004a7072    ret 4"
);
}

// FUNCTION: SIMCOPTER 0x004a7075
public: static int __cdecl GraphicWindow::MakeModal(class GraphicWindow *) {
// LINE 1484:
	asm( 
"	      004a7075    push ebp"
"	      004a7076    mov ebp,esp"
"	      004a7078    sub esp,68h"
"	      004a707b    push ebx"
"	      004a707c    push esi"
"	      004a707d    push edi"
);
// LINE 1485:
	asm( 
"	      004a707e    mov eax,[ebp+8]"
"	      004a7081    push eax"
"	      004a7082    call 004A7340h"
"	      004a7087    add esp,4"
);
// LINE 1486:
	asm( 
"	      004a708a    mov eax,ds:[606990h]"
"	      004a708f    mov eax,[eax]"
"	      004a7091    mov [ebp-0Ch],eax"
"	      004a7094    mov eax,[ebp-0Ch]"
"	      004a7097    mov [ebp-4],eax"
"	      004a709a    jmp near ptr 004A709Fh"
"	      004a709f    jmp near ptr 004A70A4h"
"	      004a70a4    mov eax,[ebp-4]"
"	      004a70a7    mov [ebp-68h],eax"
"	      004a70aa    mov eax,ds:[59A97Ch]"
"	      004a70af    mov [ebp-18h],eax"
"	      004a70b2    cmp dword ptr ds:[59A97Ch],0"
"	      004a70b9    je near ptr 004A70D6h"
"	      004a70bf    mov eax,ds:[59A97Ch]"
"	      004a70c4    mov eax,[eax]"
"	      004a70c6    mov ds:[59A97Ch],eax"
"	      004a70cb    mov eax,[ebp-18h]"
"	      004a70ce    mov [ebp-64h],eax"
"	      004a70d1    jmp near ptr 004A72B3h"
"	      004a70d6    mov eax,ds:[59A978h]"
"	      004a70db    cmp ds:[59A974h],eax"
"	      004a70e1    jne near ptr 004A729Eh"
"	      004a70e7    push 0"
"	      004a70e9    call 0056A620h"
"	      004a70ee    add esp,4"
"	      004a70f1    push 8"
"	      004a70f3    call 0056A600h"
"	      004a70f8    add esp,4"
"	      004a70fb    mov [ebp-50h],eax"
"	      004a70fe    cmp dword ptr [ebp-50h],0"
"	      004a7102    jne near ptr 004A7135h"
"	      004a7108    push 5971ACh"
"	      004a710d    mov ecx,638BA0h"
"	      004a7112    call 00569960h"
"	      004a7117    mov [ebp-54h],eax"
"	      004a711a    mov eax,[ebp-54h]"
"	      004a711d    push eax"
"	      004a711e    call 004011B0h"
"	      004a7123    add esp,4"
"	      004a7126    jmp near ptr 004A712Bh"
"	      004a712b    push 1"
"	      004a712d    call 00569430h"
"	      004a7132    add esp,4"
"	      004a7135    jmp near ptr 004A713Ah"
"	      004a713a    jmp near ptr 004A713Fh"
"	      004a713f    mov eax,[ebp-50h]"
"	      004a7142    mov [ebp-24h],eax"
"	      004a7145    mov dword ptr [ebp-28h],155h"
"	      004a714c    lea eax,[ebp-28h]"
"	      004a714f    mov [ebp-30h],eax"
"	      004a7152    mov dword ptr [ebp-2Ch],1"
"	      004a7159    lea eax,[ebp-2Ch]"
"	      004a715c    mov [ebp-34h],eax"
"	      004a715f    mov eax,[ebp-34h]"
"	      004a7162    mov ecx,[ebp-30h]"
"	      004a7165    mov ecx,[ecx]"
"	      004a7167    cmp [eax],ecx"
"	      004a7169    jb near ptr 004A717Ah"
"	      004a716f    mov eax,[ebp-34h]"
"	      004a7172    mov [ebp-38h],eax"
"	      004a7175    jmp near ptr 004A7180h"
"	      004a717a    mov eax,[ebp-30h]"
"	      004a717d    mov [ebp-38h],eax"
"	      004a7180    jmp near ptr 004A7185h"
"	      004a7185    jmp near ptr 004A718Ah"
"	      004a718a    jmp near ptr 004A718Fh"
"	      004a718f    mov eax,[ebp-38h]"
"	      004a7192    mov eax,[eax]"
"	      004a7194    mov [ebp-60h],eax"
"	      004a7197    push 0"
"	      004a7199    call 0056A620h"
"	      004a719e    add esp,4"
"	      004a71a1    mov eax,[ebp-60h]"
"	      004a71a4    lea eax,[eax+eax*2]"
"	      004a71a7    shl eax,2"
"	      004a71aa    push eax"
"	      004a71ab    call 0056A600h"
"	      004a71b0    add esp,4"
"	      004a71b3    mov [ebp-58h],eax"
"	      004a71b6    cmp dword ptr [ebp-58h],0"
"	      004a71ba    jne near ptr 004A71EDh"
"	      004a71c0    push 5971ACh"
"	      004a71c5    mov ecx,638BA0h"
"	      004a71ca    call 00569960h"
"	      004a71cf    mov [ebp-5Ch],eax"
"	      004a71d2    mov eax,[ebp-5Ch]"
"	      004a71d5    push eax"
"	      004a71d6    call 004011B0h"
"	      004a71db    add esp,4"
"	      004a71de    jmp near ptr 004A71E3h"
"	      004a71e3    push 1"
"	      004a71e5    call 00569430h"
"	      004a71ea    add esp,4"
"	      004a71ed    jmp near ptr 004A71F2h"
"	      004a71f2    jmp near ptr 004A71F7h"
"	      004a71f7    mov eax,[ebp-58h]"
"	      004a71fa    mov ecx,[ebp-24h]"
"	      004a71fd    mov [ecx+4],eax"
"	      004a7200    mov eax,ds:[59A980h]"
"	      004a7205    mov ecx,[ebp-24h]"
"	      004a7208    mov [ecx],eax"
"	      004a720a    mov eax,[ebp-24h]"
"	      004a720d    mov ds:[59A980h],eax"
"	      004a7212    mov eax,ds:[59A980h]"
"	      004a7217    mov eax,[eax+4]"
"	      004a721a    mov ds:[59A978h],eax"
"	      004a721f    mov dword ptr [ebp-3Ch],155h"
"	      004a7226    lea eax,[ebp-3Ch]"
"	      004a7229    mov [ebp-44h],eax"
"	      004a722c    mov dword ptr [ebp-40h],1"
"	      004a7233    lea eax,[ebp-40h]"
"	      004a7236    mov [ebp-48h],eax"
"	      004a7239    mov eax,[ebp-48h]"
"	      004a723c    mov ecx,[ebp-44h]"
"	      004a723f    mov ecx,[ecx]"
"	      004a7241    cmp [eax],ecx"
"	      004a7243    jb near ptr 004A7254h"
"	      004a7249    mov eax,[ebp-48h]"
"	      004a724c    mov [ebp-4Ch],eax"
"	      004a724f    jmp near ptr 004A725Ah"
"	      004a7254    mov eax,[ebp-44h]"
"	      004a7257    mov [ebp-4Ch],eax"
"	      004a725a    jmp near ptr 004A725Fh"
"	      004a725f    jmp near ptr 004A7264h"
"	      004a7264    jmp near ptr 004A7269h"
"	      004a7269    mov eax,[ebp-4Ch]"
"	      004a726c    mov eax,[eax]"
"	      004a726e    lea eax,[eax+eax*2]"
"	      004a7271    shl eax,2"
"	      004a7274    add eax,ds:[59A978h]"
"	      004a727a    mov ds:[59A974h],eax"
"	      004a727f    jmp near ptr 004A7284h"
"	      004a7284    mov eax,ds:[59A978h]"
"	      004a7289    mov [ebp-1Ch],eax"
"	      004a728c    add dword ptr ds:[59A978h],0Ch"
"	      004a7293    mov eax,[ebp-1Ch]"
"	      004a7296    mov [ebp-64h],eax"
"	      004a7299    jmp near ptr 004A72B3h"
"	      004a729e    mov eax,ds:[59A978h]"
"	      004a72a3    mov [ebp-20h],eax"
"	      004a72a6    add dword ptr ds:[59A978h],0Ch"
"	      004a72ad    mov eax,[ebp-20h]"
"	      004a72b0    mov [ebp-64h],eax"
"	      004a72b3    jmp near ptr 004A72B8h"
"	      004a72b8    mov eax,[ebp-64h]"
"	      004a72bb    mov [ebp-10h],eax"
"	      004a72be    jmp near ptr 004A72C3h"
"	      004a72c3    mov eax,[ebp-10h]"
"	      004a72c6    add eax,8"
"	      004a72c9    mov [ebp-14h],eax"
"	      004a72cc    jmp near ptr 004A72D1h"
"	      004a72d1    cmp dword ptr [ebp-14h],0"
"	      004a72d5    je near ptr 004A72E8h"
"	      004a72db    mov eax,[ebp+8]"
"	      004a72de    mov ecx,[ebp-14h]"
"	      004a72e1    mov [ecx],eax"
"	      004a72e3    jmp near ptr 004A72E8h"
"	      004a72e8    jmp near ptr 004A72EDh"
"	      004a72ed    mov eax,[ebp-68h]"
"	      004a72f0    mov ecx,[ebp-10h]"
"	      004a72f3    mov [ecx],eax"
"	      004a72f5    mov eax,[ebp-68h]"
"	      004a72f8    mov eax,[eax+4]"
"	      004a72fb    mov ecx,[ebp-10h]"
"	      004a72fe    mov [ecx+4],eax"
"	      004a7301    mov eax,[ebp-10h]"
"	      004a7304    mov ecx,[ebp-68h]"
"	      004a7307    mov ecx,[ecx+4]"
"	      004a730a    mov [ecx],eax"
"	      004a730c    mov eax,[ebp-10h]"
"	      004a730f    mov ecx,[ebp-68h]"
"	      004a7312    mov [ecx+4],eax"
"	      004a7315    add dword ptr ds:[606994h],1"
"	      004a731c    mov eax,[ebp-10h]"
"	      004a731f    mov [ebp-8],eax"
"	      004a7322    jmp near ptr 004A7327h"
"	      004a7327    jmp near ptr 004A732Ch"
"	      004a732c    jmp near ptr 004A7331h"
);
// LINE 1487:
	asm( 
"	      004a7331    mov eax,1"
"	      004a7336    jmp near ptr 004A733Bh"
);
// LINE 1488:
	asm( 
"	      004a733b    pop edi"
"	      004a733c    pop esi"
"	      004a733d    pop ebx"
"	      004a733e    leave"
"	      004a733f    ret"
);
}

// FUNCTION: SIMCOPTER 0x004a7340
public: static int __cdecl GraphicWindow::RemoveModal(class GraphicWindow *) {
// LINE 1499:
	asm( 
"	      004a7340    push ebp"
"	      004a7341    mov ebp,esp"
"	      004a7343    sub esp,2Ch"
"	      004a7346    push ebx"
"	      004a7347    push esi"
"	      004a7348    push edi"
);
// LINE 1500:
	asm( 
"	      004a7349    mov eax,ds:[606990h]"
"	      004a734e    mov eax,[eax]"
"	      004a7350    mov [ebp-24h],eax"
"	      004a7353    mov eax,[ebp-24h]"
"	      004a7356    mov [ebp-4],eax"
"	      004a7359    jmp near ptr 004A735Eh"
"	      004a735e    jmp near ptr 004A7363h"
);
// LINE 1501:
	asm( 
"	      004a7363    mov eax,ds:[606990h]"
"	      004a7368    mov [ebp-18h],eax"
"	      004a736b    mov eax,[ebp-18h]"
"	      004a736e    mov [ebp-8],eax"
"	      004a7371    jmp near ptr 004A7376h"
"	      004a7376    jmp near ptr 004A737Bh"
"	      004a737b    mov eax,[ebp-4]"
"	      004a737e    cmp [ebp-8],eax"
"	      004a7381    jne near ptr 004A7391h"
"	      004a7387    jmp near ptr 004A73A5h"
"	      004a738c    jmp near ptr 004A7391h"
"	      004a7391    jmp near ptr 004A73A0h"
"	      004a7396    cmp dword ptr [ebp-1Ch],0"
"	      004a739a    jne near ptr 004A73A5h"
"	      004a73a0    jmp near ptr 004A73AAh"
"	      004a73a5    jmp near ptr 004A7461h"
"	      004a73aa    jmp near ptr 004A73B9h"
"	      004a73af    cmp dword ptr [ebp-20h],0"
"	      004a73b3    je near ptr 004A7461h"
);
// LINE 1502:
	asm( 
"	      004a73b9    jmp near ptr 004A73BEh"
"	      004a73be    mov eax,[ebp-4]"
"	      004a73c1    mov ecx,[ebp+8]"
"	      004a73c4    cmp [eax+8],ecx"
"	      004a73c7    jne near ptr 004A743Eh"
);
// LINE 1503:
	asm( 
"	      004a73cd    mov eax,[ebp-4]"
"	      004a73d0    mov [ebp-14h],eax"
"	      004a73d3    mov eax,[ebp-4]"
"	      004a73d6    mov eax,[eax]"
"	      004a73d8    mov [ebp-4],eax"
"	      004a73db    jmp near ptr 004A73E0h"
"	      004a73e0    mov eax,[ebp-14h]"
"	      004a73e3    mov [ebp-0Ch],eax"
"	      004a73e6    jmp near ptr 004A73EBh"
"	      004a73eb    mov eax,[ebp-0Ch]"
"	      004a73ee    mov [ebp-2Ch],eax"
"	      004a73f1    mov eax,[ebp-2Ch]"
"	      004a73f4    mov eax,[eax]"
"	      004a73f6    mov ecx,[ebp-2Ch]"
"	      004a73f9    mov ecx,[ecx+4]"
"	      004a73fc    mov [ecx],eax"
"	      004a73fe    mov eax,[ebp-2Ch]"
"	      004a7401    mov eax,[eax+4]"
"	      004a7404    mov ecx,[ebp-2Ch]"
"	      004a7407    mov ecx,[ecx]"
"	      004a7409    mov [ecx+4],eax"
"	      004a740c    jmp near ptr 004A7411h"
"	      004a7411    jmp near ptr 004A7416h"
"	      004a7416    mov eax,ds:[59A97Ch]"
"	      004a741b    mov ecx,[ebp-2Ch]"
"	      004a741e    mov [ecx],eax"
"	      004a7420    mov eax,[ebp-2Ch]"
"	      004a7423    mov ds:[59A97Ch],eax"
"	      004a7428    jmp near ptr 004A742Dh"
"	      004a742d    add dword ptr ds:[606994h],0FFFFFFFFh"
"	      004a7434    jmp near ptr 004A7439h"
);
// LINE 1504:
	asm( 
"	      004a7439    jmp near ptr 004A745Ch"
);
// LINE 1505:
	asm( 
"	      004a743e    mov eax,[ebp-4]"
"	      004a7441    mov [ebp-28h],eax"
"	      004a7444    mov eax,[ebp-4]"
"	      004a7447    mov eax,[eax]"
"	      004a7449    mov [ebp-4],eax"
"	      004a744c    jmp near ptr 004A7451h"
"	      004a7451    mov eax,[ebp-28h]"
"	      004a7454    mov [ebp-10h],eax"
"	      004a7457    jmp near ptr 004A745Ch"
);
// LINE 1506:
	asm( 
"	      004a745c    jmp near ptr 004A7363h"
);
// LINE 1507:
	asm( 
"	      004a7461    mov eax,1"
"	      004a7466    jmp near ptr 004A746Bh"
);
// LINE 1508:
	asm( 
"	      004a746b    pop edi"
"	      004a746c    pop esi"
"	      004a746d    pop ebx"
"	      004a746e    leave"
"	      004a746f    ret"
);
}

// FUNCTION: SIMCOPTER 0x004a7470
public: static int __cdecl GraphicWindow::MakeFocus(class GraphicWindow *) {
// LINE 1530:
	asm( 
"	      004a7470    push ebp"
"	      004a7471    mov ebp,esp"
"	      004a7473    sub esp,68h"
"	      004a7476    push ebx"
"	      004a7477    push esi"
"	      004a7478    push edi"
);
// LINE 1531:
	asm( 
"	      004a7479    mov eax,[ebp+8]"
"	      004a747c    push eax"
"	      004a747d    call 004A773Bh"
"	      004a7482    add esp,4"
);
// LINE 1532:
	asm( 
"	      004a7485    mov eax,ds:[606960h]"
"	      004a748a    mov eax,[eax]"
"	      004a748c    mov [ebp-0Ch],eax"
"	      004a748f    mov eax,[ebp-0Ch]"
"	      004a7492    mov [ebp-4],eax"
"	      004a7495    jmp near ptr 004A749Ah"
"	      004a749a    jmp near ptr 004A749Fh"
"	      004a749f    mov eax,[ebp-4]"
"	      004a74a2    mov [ebp-68h],eax"
"	      004a74a5    mov eax,ds:[59A97Ch]"
"	      004a74aa    mov [ebp-18h],eax"
"	      004a74ad    cmp dword ptr ds:[59A97Ch],0"
"	      004a74b4    je near ptr 004A74D1h"
"	      004a74ba    mov eax,ds:[59A97Ch]"
"	      004a74bf    mov eax,[eax]"
"	      004a74c1    mov ds:[59A97Ch],eax"
"	      004a74c6    mov eax,[ebp-18h]"
"	      004a74c9    mov [ebp-64h],eax"
"	      004a74cc    jmp near ptr 004A76AEh"
"	      004a74d1    mov eax,ds:[59A978h]"
"	      004a74d6    cmp ds:[59A974h],eax"
"	      004a74dc    jne near ptr 004A7699h"
"	      004a74e2    push 0"
"	      004a74e4    call 0056A620h"
"	      004a74e9    add esp,4"
"	      004a74ec    push 8"
"	      004a74ee    call 0056A600h"
"	      004a74f3    add esp,4"
"	      004a74f6    mov [ebp-50h],eax"
"	      004a74f9    cmp dword ptr [ebp-50h],0"
"	      004a74fd    jne near ptr 004A7530h"
"	      004a7503    push 5971ACh"
"	      004a7508    mov ecx,638BA0h"
"	      004a750d    call 00569960h"
"	      004a7512    mov [ebp-54h],eax"
"	      004a7515    mov eax,[ebp-54h]"
"	      004a7518    push eax"
"	      004a7519    call 004011B0h"
"	      004a751e    add esp,4"
"	      004a7521    jmp near ptr 004A7526h"
"	      004a7526    push 1"
"	      004a7528    call 00569430h"
"	      004a752d    add esp,4"
"	      004a7530    jmp near ptr 004A7535h"
"	      004a7535    jmp near ptr 004A753Ah"
"	      004a753a    mov eax,[ebp-50h]"
"	      004a753d    mov [ebp-24h],eax"
"	      004a7540    mov dword ptr [ebp-28h],155h"
"	      004a7547    lea eax,[ebp-28h]"
"	      004a754a    mov [ebp-30h],eax"
"	      004a754d    mov dword ptr [ebp-2Ch],1"
"	      004a7554    lea eax,[ebp-2Ch]"
"	      004a7557    mov [ebp-34h],eax"
"	      004a755a    mov eax,[ebp-34h]"
"	      004a755d    mov ecx,[ebp-30h]"
"	      004a7560    mov ecx,[ecx]"
"	      004a7562    cmp [eax],ecx"
"	      004a7564    jb near ptr 004A7575h"
"	      004a756a    mov eax,[ebp-34h]"
"	      004a756d    mov [ebp-38h],eax"
"	      004a7570    jmp near ptr 004A757Bh"
"	      004a7575    mov eax,[ebp-30h]"
"	      004a7578    mov [ebp-38h],eax"
"	      004a757b    jmp near ptr 004A7580h"
"	      004a7580    jmp near ptr 004A7585h"
"	      004a7585    jmp near ptr 004A758Ah"
"	      004a758a    mov eax,[ebp-38h]"
"	      004a758d    mov eax,[eax]"
"	      004a758f    mov [ebp-60h],eax"
"	      004a7592    push 0"
"	      004a7594    call 0056A620h"
"	      004a7599    add esp,4"
"	      004a759c    mov eax,[ebp-60h]"
"	      004a759f    lea eax,[eax+eax*2]"
"	      004a75a2    shl eax,2"
"	      004a75a5    push eax"
"	      004a75a6    call 0056A600h"
"	      004a75ab    add esp,4"
"	      004a75ae    mov [ebp-58h],eax"
"	      004a75b1    cmp dword ptr [ebp-58h],0"
"	      004a75b5    jne near ptr 004A75E8h"
"	      004a75bb    push 5971ACh"
"	      004a75c0    mov ecx,638BA0h"
"	      004a75c5    call 00569960h"
"	      004a75ca    mov [ebp-5Ch],eax"
"	      004a75cd    mov eax,[ebp-5Ch]"
"	      004a75d0    push eax"
"	      004a75d1    call 004011B0h"
"	      004a75d6    add esp,4"
"	      004a75d9    jmp near ptr 004A75DEh"
"	      004a75de    push 1"
"	      004a75e0    call 00569430h"
"	      004a75e5    add esp,4"
"	      004a75e8    jmp near ptr 004A75EDh"
"	      004a75ed    jmp near ptr 004A75F2h"
"	      004a75f2    mov eax,[ebp-58h]"
"	      004a75f5    mov ecx,[ebp-24h]"
"	      004a75f8    mov [ecx+4],eax"
"	      004a75fb    mov eax,ds:[59A980h]"
"	      004a7600    mov ecx,[ebp-24h]"
"	      004a7603    mov [ecx],eax"
"	      004a7605    mov eax,[ebp-24h]"
"	      004a7608    mov ds:[59A980h],eax"
"	      004a760d    mov eax,ds:[59A980h]"
"	      004a7612    mov eax,[eax+4]"
"	      004a7615    mov ds:[59A978h],eax"
"	      004a761a    mov dword ptr [ebp-3Ch],155h"
"	      004a7621    lea eax,[ebp-3Ch]"
"	      004a7624    mov [ebp-44h],eax"
"	      004a7627    mov dword ptr [ebp-40h],1"
"	      004a762e    lea eax,[ebp-40h]"
"	      004a7631    mov [ebp-48h],eax"
"	      004a7634    mov eax,[ebp-48h]"
"	      004a7637    mov ecx,[ebp-44h]"
"	      004a763a    mov ecx,[ecx]"
"	      004a763c    cmp [eax],ecx"
"	      004a763e    jb near ptr 004A764Fh"
"	      004a7644    mov eax,[ebp-48h]"
"	      004a7647    mov [ebp-4Ch],eax"
"	      004a764a    jmp near ptr 004A7655h"
"	      004a764f    mov eax,[ebp-44h]"
"	      004a7652    mov [ebp-4Ch],eax"
"	      004a7655    jmp near ptr 004A765Ah"
"	      004a765a    jmp near ptr 004A765Fh"
"	      004a765f    jmp near ptr 004A7664h"
"	      004a7664    mov eax,[ebp-4Ch]"
"	      004a7667    mov eax,[eax]"
"	      004a7669    lea eax,[eax+eax*2]"
"	      004a766c    shl eax,2"
"	      004a766f    add eax,ds:[59A978h]"
"	      004a7675    mov ds:[59A974h],eax"
"	      004a767a    jmp near ptr 004A767Fh"
"	      004a767f    mov eax,ds:[59A978h]"
"	      004a7684    mov [ebp-1Ch],eax"
"	      004a7687    add dword ptr ds:[59A978h],0Ch"
"	      004a768e    mov eax,[ebp-1Ch]"
"	      004a7691    mov [ebp-64h],eax"
"	      004a7694    jmp near ptr 004A76AEh"
"	      004a7699    mov eax,ds:[59A978h]"
"	      004a769e    mov [ebp-20h],eax"
"	      004a76a1    add dword ptr ds:[59A978h],0Ch"
"	      004a76a8    mov eax,[ebp-20h]"
"	      004a76ab    mov [ebp-64h],eax"
"	      004a76ae    jmp near ptr 004A76B3h"
"	      004a76b3    mov eax,[ebp-64h]"
"	      004a76b6    mov [ebp-10h],eax"
"	      004a76b9    jmp near ptr 004A76BEh"
"	      004a76be    mov eax,[ebp-10h]"
"	      004a76c1    add eax,8"
"	      004a76c4    mov [ebp-14h],eax"
"	      004a76c7    jmp near ptr 004A76CCh"
"	      004a76cc    cmp dword ptr [ebp-14h],0"
"	      004a76d0    je near ptr 004A76E3h"
"	      004a76d6    mov eax,[ebp+8]"
"	      004a76d9    mov ecx,[ebp-14h]"
"	      004a76dc    mov [ecx],eax"
"	      004a76de    jmp near ptr 004A76E3h"
"	      004a76e3    jmp near ptr 004A76E8h"
"	      004a76e8    mov eax,[ebp-68h]"
"	      004a76eb    mov ecx,[ebp-10h]"
"	      004a76ee    mov [ecx],eax"
"	      004a76f0    mov eax,[ebp-68h]"
"	      004a76f3    mov eax,[eax+4]"
"	      004a76f6    mov ecx,[ebp-10h]"
"	      004a76f9    mov [ecx+4],eax"
"	      004a76fc    mov eax,[ebp-10h]"
"	      004a76ff    mov ecx,[ebp-68h]"
"	      004a7702    mov ecx,[ecx+4]"
"	      004a7705    mov [ecx],eax"
"	      004a7707    mov eax,[ebp-10h]"
"	      004a770a    mov ecx,[ebp-68h]"
"	      004a770d    mov [ecx+4],eax"
"	      004a7710    add dword ptr ds:[606964h],1"
"	      004a7717    mov eax,[ebp-10h]"
"	      004a771a    mov [ebp-8],eax"
"	      004a771d    jmp near ptr 004A7722h"
"	      004a7722    jmp near ptr 004A7727h"
"	      004a7727    jmp near ptr 004A772Ch"
);
// LINE 1533:
	asm( 
"	      004a772c    mov eax,1"
"	      004a7731    jmp near ptr 004A7736h"
);
// LINE 1534:
	asm( 
"	      004a7736    pop edi"
"	      004a7737    pop esi"
"	      004a7738    pop ebx"
"	      004a7739    leave"
"	      004a773a    ret"
);
}

// FUNCTION: SIMCOPTER 0x004a773b
public: static int __cdecl GraphicWindow::RemoveFocus(class GraphicWindow *) {
// LINE 1544:
	asm( 
"	      004a773b    push ebp"
"	      004a773c    mov ebp,esp"
"	      004a773e    sub esp,2Ch"
"	      004a7741    push ebx"
"	      004a7742    push esi"
"	      004a7743    push edi"
);
// LINE 1545:
	asm( 
"	      004a7744    mov eax,ds:[606960h]"
"	      004a7749    mov eax,[eax]"
"	      004a774b    mov [ebp-24h],eax"
"	      004a774e    mov eax,[ebp-24h]"
"	      004a7751    mov [ebp-4],eax"
"	      004a7754    jmp near ptr 004A7759h"
"	      004a7759    jmp near ptr 004A775Eh"
);
// LINE 1546:
	asm( 
"	      004a775e    mov eax,ds:[606960h]"
"	      004a7763    mov [ebp-18h],eax"
"	      004a7766    mov eax,[ebp-18h]"
"	      004a7769    mov [ebp-8],eax"
"	      004a776c    jmp near ptr 004A7771h"
"	      004a7771    jmp near ptr 004A7776h"
"	      004a7776    mov eax,[ebp-8]"
"	      004a7779    cmp [ebp-4],eax"
"	      004a777c    jne near ptr 004A778Ch"
"	      004a7782    jmp near ptr 004A77A0h"
"	      004a7787    jmp near ptr 004A778Ch"
"	      004a778c    jmp near ptr 004A779Bh"
"	      004a7791    cmp dword ptr [ebp-1Ch],0"
"	      004a7795    jne near ptr 004A77A0h"
"	      004a779b    jmp near ptr 004A77A5h"
"	      004a77a0    jmp near ptr 004A785Ch"
"	      004a77a5    jmp near ptr 004A77B4h"
"	      004a77aa    cmp dword ptr [ebp-20h],0"
"	      004a77ae    je near ptr 004A785Ch"
);
// LINE 1547:
	asm( 
"	      004a77b4    jmp near ptr 004A77B9h"
"	      004a77b9    mov eax,[ebp-4]"
"	      004a77bc    mov ecx,[ebp+8]"
"	      004a77bf    cmp [eax+8],ecx"
"	      004a77c2    jne near ptr 004A7839h"
);
// LINE 1548:
	asm( 
"	      004a77c8    mov eax,[ebp-4]"
"	      004a77cb    mov [ebp-14h],eax"
"	      004a77ce    mov eax,[ebp-4]"
"	      004a77d1    mov eax,[eax]"
"	      004a77d3    mov [ebp-4],eax"
"	      004a77d6    jmp near ptr 004A77DBh"
"	      004a77db    mov eax,[ebp-14h]"
"	      004a77de    mov [ebp-0Ch],eax"
"	      004a77e1    jmp near ptr 004A77E6h"
"	      004a77e6    mov eax,[ebp-0Ch]"
"	      004a77e9    mov [ebp-2Ch],eax"
"	      004a77ec    mov eax,[ebp-2Ch]"
"	      004a77ef    mov eax,[eax]"
"	      004a77f1    mov ecx,[ebp-2Ch]"
"	      004a77f4    mov ecx,[ecx+4]"
"	      004a77f7    mov [ecx],eax"
"	      004a77f9    mov eax,[ebp-2Ch]"
"	      004a77fc    mov eax,[eax+4]"
"	      004a77ff    mov ecx,[ebp-2Ch]"
"	      004a7802    mov ecx,[ecx]"
"	      004a7804    mov [ecx+4],eax"
"	      004a7807    jmp near ptr 004A780Ch"
"	      004a780c    jmp near ptr 004A7811h"
"	      004a7811    mov eax,ds:[59A97Ch]"
"	      004a7816    mov ecx,[ebp-2Ch]"
"	      004a7819    mov [ecx],eax"
"	      004a781b    mov eax,[ebp-2Ch]"
"	      004a781e    mov ds:[59A97Ch],eax"
"	      004a7823    jmp near ptr 004A7828h"
"	      004a7828    add dword ptr ds:[606964h],0FFFFFFFFh"
"	      004a782f    jmp near ptr 004A7834h"
);
// LINE 1549:
	asm( 
"	      004a7834    jmp near ptr 004A7857h"
);
// LINE 1550:
	asm( 
"	      004a7839    mov eax,[ebp-4]"
"	      004a783c    mov [ebp-28h],eax"
"	      004a783f    mov eax,[ebp-4]"
"	      004a7842    mov eax,[eax]"
"	      004a7844    mov [ebp-4],eax"
"	      004a7847    jmp near ptr 004A784Ch"
"	      004a784c    mov eax,[ebp-28h]"
"	      004a784f    mov [ebp-10h],eax"
"	      004a7852    jmp near ptr 004A7857h"
);
// LINE 1551:
	asm( 
"	      004a7857    jmp near ptr 004A775Eh"
);
// LINE 1552:
	asm( 
"	      004a785c    mov eax,1"
"	      004a7861    jmp near ptr 004A7866h"
);
// LINE 1553:
	asm( 
"	      004a7866    pop edi"
"	      004a7867    pop esi"
"	      004a7868    pop ebx"
"	      004a7869    leave"
"	      004a786a    ret"
);
}

// FUNCTION: SIMCOPTER 0x004a786b
public: virtual int __thiscall GraphicWindow::CanWeRespondToMessage(void) {
// LINE 1567:
	asm( 
"	      004a786b    push ebp"
"	      004a786c    mov ebp,esp"
"	      004a786e    sub esp,18h"
"	      004a7871    push ebx"
"	      004a7872    push esi"
"	      004a7873    push edi"
"	      004a7874    mov [ebp-18h],ecx"
);
// LINE 1572:
	asm( 
"	      004a7877    jmp near ptr 004A787Ch"
"	      004a787c    mov eax,ds:[606994h]"
"	      004a7881    mov [ebp-4],eax"
);
// LINE 1573:
	asm( 
"	      004a7884    cmp dword ptr [ebp-4],0"
"	      004a7888    je near ptr 004A7900h"
);
// LINE 1574:
	asm( 
"	      004a788e    mov eax,ds:[606990h]"
"	      004a7893    mov eax,[eax]"
"	      004a7895    mov [ebp-14h],eax"
"	      004a7898    mov eax,[ebp-14h]"
"	      004a789b    mov [ebp-10h],eax"
"	      004a789e    jmp near ptr 004A78A3h"
"	      004a78a3    jmp near ptr 004A78A8h"
"	      004a78a8    jmp near ptr 004A78ADh"
"	      004a78ad    jmp near ptr 004A78B2h"
"	      004a78b2    mov eax,[ebp-10h]"
"	      004a78b5    mov eax,[eax+8]"
"	      004a78b8    mov [ebp-0Ch],eax"
);
// LINE 1575:
	asm( 
"	      004a78bb    mov eax,[ebp-18h]"
"	      004a78be    mov [ebp-8],eax"
);
// LINE 1576:
	asm( 
"	      004a78c1    mov eax,[ebp-0Ch]"
"	      004a78c4    cmp [ebp-8],eax"
"	      004a78c7    je near ptr 004A78E5h"
"	      004a78cd    cmp dword ptr [ebp-8],0"
"	      004a78d1    je near ptr 004A78E5h"
);
// LINE 1577:
	asm( 
"	      004a78d7    mov eax,[ebp-8]"
"	      004a78da    mov eax,[eax+3Ch]"
"	      004a78dd    mov [ebp-8],eax"
"	      004a78e0    jmp near ptr 004A78C1h"
);
// LINE 1578:
	asm( 
"	      004a78e5    cmp dword ptr [ebp-0Ch],0"
"	      004a78e9    jne near ptr 004A78F6h"
);
// LINE 1579:
	asm( 
"	      004a78ef    xor eax,eax"
"	      004a78f1    jmp near ptr 004A790Ah"
);
// LINE 1580:
	asm( 
"	      004a78f6    mov eax,1"
"	      004a78fb    jmp near ptr 004A790Ah"
);
// LINE 1582:
	asm( 
"	      004a7900    mov eax,1"
"	      004a7905    jmp near ptr 004A790Ah"
);
// LINE 1583:
	asm( 
"	      004a790a    pop edi"
"	      004a790b    pop esi"
"	      004a790c    pop ebx"
"	      004a790d    leave"
"	      004a790e    ret"
);
}

// FUNCTION: SIMCOPTER 0x004a790f
void ScreenWindow::ScreenWindow() {
// LINE 1600:
	asm( 
"	      004a790f    push ebp"
"	      004a7910    mov ebp,esp"
"	      004a7912    sub esp,4"
"	      004a7915    push ebx"
"	      004a7916    push esi"
"	      004a7917    push edi"
"	      004a7918    mov [ebp-4],ecx"
"	      004a791b    mov ecx,[ebp-4]"
"	      004a791e    call 004A2A3Fh"
"	      004a7923    mov eax,[ebp-4]"
"	      004a7926    mov dword ptr [eax+74h],0"
"	      004a792d    mov eax,[ebp-4]"
"	      004a7930    mov dword ptr [eax],591748h"
);
// LINE 1601:
	asm( 
"	      004a7936    mov eax,[ebp-4]"
"	      004a7939    mov dword ptr [eax+50h],0"
);
// LINE 1602:
	asm( 
"	      004a7940    jmp near ptr 004A7945h"
"	      004a7945    mov eax,[ebp-4]"
"	      004a7948    pop edi"
"	      004a7949    pop esi"
"	      004a794a    pop ebx"
"	      004a794b    leave"
"	      004a794c    ret"
);
}

// FUNCTION: SIMCOPTER 0x004a794d
void ScreenWindow::ScreenWindow(const class ScreenWindow&) {
// LINE 1611:
	asm( 
"	      004a794d    push ebp"
"	      004a794e    mov ebp,esp"
"	      004a7950    sub esp,4"
"	      004a7953    push ebx"
"	      004a7954    push esi"
"	      004a7955    push edi"
"	      004a7956    mov [ebp-4],ecx"
"	      004a7959    mov eax,[ebp+8]"
"	      004a795c    push eax"
"	      004a795d    mov ecx,[ebp-4]"
"	      004a7960    call 004A2F5Ch"
"	      004a7965    mov eax,[ebp-4]"
"	      004a7968    mov dword ptr [eax],591748h"
);
// LINE 1612:
	asm( 
"	      004a796e    mov eax,[ebp+8]"
"	      004a7971    mov eax,[eax+74h]"
"	      004a7974    mov ecx,[ebp-4]"
"	      004a7977    mov [ecx+74h],eax"
);
// LINE 1613:
	asm( 
"	      004a797a    jmp near ptr 004A797Fh"
"	      004a797f    mov eax,[ebp-4]"
"	      004a7982    pop edi"
"	      004a7983    pop esi"
"	      004a7984    pop ebx"
"	      004a7985    leave"
"	      004a7986    ret 4"
);
}

// FUNCTION: SIMCOPTER 0x004a7989
void ScreenWindow::ScreenWindow(class MRect&, int32_t, class CBackBuffer*, class GraphicWindowOwner*, int32_t) {
// LINE 1624:
	asm( 
"	      004a7989    push ebp"
"	      004a798a    mov ebp,esp"
"	      004a798c    sub esp,4"
"	      004a798f    push ebx"
"	      004a7990    push esi"
"	      004a7991    push edi"
"	      004a7992    mov [ebp-4],ecx"
"	      004a7995    mov eax,[ebp+18h]"
"	      004a7998    push eax"
"	      004a7999    mov eax,[ebp+14h]"
"	      004a799c    push eax"
"	      004a799d    push 0"
"	      004a799f    mov eax,[ebp+0Ch]"
"	      004a79a2    push eax"
"	      004a79a3    mov eax,[ebp+8]"
"	      004a79a6    push eax"
"	      004a79a7    mov ecx,[ebp-4]"
"	      004a79aa    call 004A33EEh"
"	      004a79af    mov eax,[ebp-4]"
"	      004a79b2    mov dword ptr [eax],591748h"
);
// LINE 1625:
	asm( 
"	      004a79b8    mov eax,[ebp-4]"
"	      004a79bb    mov dword ptr [eax+50h],0"
);
// LINE 1626:
	asm( 
"	      004a79c2    mov eax,[ebp+10h]"
"	      004a79c5    mov ecx,[ebp-4]"
"	      004a79c8    mov [ecx+74h],eax"
);
// LINE 1627:
	asm( 
"	      004a79cb    mov eax,[ebp+10h]"
"	      004a79ce    mov ecx,[ebp-4]"
"	      004a79d1    mov [ecx+40h],eax"
);
// LINE 1628:
	asm( 
"	      004a79d4    mov eax,[ebp-4]"
"	      004a79d7    mov dword ptr [eax+44h],0"
);
// LINE 1629:
	asm( 
"	      004a79de    jmp near ptr 004A79E3h"
"	      004a79e3    mov eax,[ebp-4]"
"	      004a79e6    pop edi"
"	      004a79e7    pop esi"
"	      004a79e8    pop ebx"
"	      004a79e9    leave"
"	      004a79ea    ret 14h"
);
}

// FUNCTION: SIMCOPTER 0x004a79ed
void ScreenWindow::~ScreenWindow() {
// LINE 1636:
	asm( 
"	      004a79ed    push ebp"
"	      004a79ee    mov ebp,esp"
"	      004a79f0    sub esp,4"
"	      004a79f3    push ebx"
"	      004a79f4    push esi"
"	      004a79f5    push edi"
"	      004a79f6    mov [ebp-4],ecx"
"	      004a79f9    mov eax,[ebp-4]"
"	      004a79fc    mov dword ptr [eax],591748h"
);
// LINE 1637:
	asm( 
"	      004a7a02    mov eax,[ebp-4]"
"	      004a7a05    mov dword ptr [eax+40h],0"
);
// LINE 1638:
	asm( 
"	      004a7a0c    jmp near ptr 004A7A11h"
"	      004a7a11    mov ecx,[ebp-4]"
"	      004a7a14    call 004A4045h"
"	      004a7a19    pop edi"
"	      004a7a1a    pop esi"
"	      004a7a1b    pop ebx"
"	      004a7a1c    leave"
"	      004a7a1d    ret"
);
}

// FUNCTION: SIMCOPTER 0x004a7a1e
class ScreenWindow& ScreenWindow::operator=(const class ScreenWindow&) {
// LINE 1645:
	asm( 
"	      004a7a1e    push ebp"
"	      004a7a1f    mov ebp,esp"
"	      004a7a21    sub esp,4"
"	      004a7a24    push ebx"
"	      004a7a25    push esi"
"	      004a7a26    push edi"
"	      004a7a27    mov [ebp-4],ecx"
);
// LINE 1646:
	asm( 
"	      004a7a2a    mov eax,[ebp+8]"
"	      004a7a2d    push eax"
"	      004a7a2e    mov ecx,[ebp-4]"
"	      004a7a31    call 004A44EFh"
);
// LINE 1647:
	asm( 
"	      004a7a36    mov eax,[ebp+8]"
"	      004a7a39    mov eax,[eax+74h]"
"	      004a7a3c    mov ecx,[ebp-4]"
"	      004a7a3f    mov [ecx+74h],eax"
);
// LINE 1649:
	asm( 
"	      004a7a42    mov eax,[ebp-4]"
"	      004a7a45    jmp near ptr 004A7A4Ah"
);
// LINE 1650:
	asm( 
"	      004a7a4a    pop edi"
"	      004a7a4b    pop esi"
"	      004a7a4c    pop ebx"
"	      004a7a4d    leave"
"	      004a7a4e    ret 4"
);
}

// FUNCTION: SIMCOPTER 0x004a7a51
int32_t ScreenWindow::ComposeSelf() {
// LINE 1662:
	asm( 
"	      004a7a51    push ebp"
"	      004a7a52    mov ebp,esp"
"	      004a7a54    sub esp,28h"
"	      004a7a57    push ebx"
"	      004a7a58    push esi"
"	      004a7a59    push edi"
"	      004a7a5a    mov [ebp-28h],ecx"
);
// LINE 1665:
	asm( 
"	      004a7a5d    mov eax,[ebp-28h]"
"	      004a7a60    cmp dword ptr [eax+54h],0"
"	      004a7a64    jne near ptr 004A7A71h"
);
// LINE 1666:
	asm( 
"	      004a7a6a    xor eax,eax"
"	      004a7a6c    jmp near ptr 004A7B33h"
);
// LINE 1668:
	asm( 
"	      004a7a71    mov eax,[ebp-28h]"
"	      004a7a74    mov eax,[eax+30h]"
"	      004a7a77    mov eax,[eax]"
"	      004a7a79    mov [ebp-20h],eax"
"	      004a7a7c    mov eax,[ebp-20h]"
"	      004a7a7f    mov [ebp-8],eax"
"	      004a7a82    jmp near ptr 004A7A87h"
"	      004a7a87    jmp near ptr 004A7A8Ch"
);
// LINE 1669:
	asm( 
"	      004a7a8c    mov eax,[ebp-28h]"
"	      004a7a8f    mov eax,[eax+30h]"
"	      004a7a92    mov [ebp-14h],eax"
"	      004a7a95    mov eax,[ebp-14h]"
"	      004a7a98    mov [ebp-0Ch],eax"
"	      004a7a9b    jmp near ptr 004A7AA0h"
"	      004a7aa0    jmp near ptr 004A7AA5h"
"	      004a7aa5    mov eax,[ebp-0Ch]"
"	      004a7aa8    cmp [ebp-8],eax"
"	      004a7aab    jne near ptr 004A7ABBh"
"	      004a7ab1    jmp near ptr 004A7ACFh"
"	      004a7ab6    jmp near ptr 004A7ABBh"
"	      004a7abb    jmp near ptr 004A7ACAh"
"	      004a7ac0    cmp dword ptr [ebp-18h],0"
"	      004a7ac4    jne near ptr 004A7ACFh"
"	      004a7aca    jmp near ptr 004A7AD4h"
"	      004a7acf    jmp near ptr 004A7B29h"
"	      004a7ad4    jmp near ptr 004A7AE3h"
"	      004a7ad9    cmp dword ptr [ebp-1Ch],0"
"	      004a7add    je near ptr 004A7B29h"
);
// LINE 1670:
	asm( 
"	      004a7ae3    jmp near ptr 004A7AE8h"
"	      004a7ae8    mov eax,[ebp-8]"
"	      004a7aeb    mov eax,[eax+8]"
"	      004a7aee    mov [ebp-4],eax"
);
// LINE 1671:
	asm( 
"	      004a7af1    mov eax,[ebp-8]"
"	      004a7af4    mov [ebp-24h],eax"
"	      004a7af7    mov eax,[ebp-8]"
"	      004a7afa    mov eax,[eax]"
"	      004a7afc    mov [ebp-8],eax"
"	      004a7aff    jmp near ptr 004A7B04h"
"	      004a7b04    mov eax,[ebp-24h]"
"	      004a7b07    mov [ebp-10h],eax"
"	      004a7b0a    jmp near ptr 004A7B0Fh"
);
// LINE 1672:
	asm( 
"	      004a7b0f    mov eax,[ebp-4]"
"	      004a7b12    mov dword ptr [eax+48h],1"
);
// LINE 1673:
	asm( 
"	      004a7b19    mov eax,[ebp-4]"
"	      004a7b1c    mov eax,[eax]"
"	      004a7b1e    mov ecx,[ebp-4]"
"	      004a7b21    call dword ptr [eax+18h]"
);
// LINE 1674:
	asm( 
"	      004a7b24    jmp near ptr 004A7A8Ch"
);
// LINE 1680:
	asm( 
"	      004a7b29    mov eax,1"
"	      004a7b2e    jmp near ptr 004A7B33h"
);
// LINE 1681:
	asm( 
"	      004a7b33    pop edi"
"	      004a7b34    pop esi"
"	      004a7b35    pop ebx"
"	      004a7b36    leave"
"	      004a7b37    ret"
);
}

// FUNCTION: SIMCOPTER 0x004a7b38
int32_t ScreenWindow::DrawSelf() {
// LINE 1694:
	asm( 
"	      004a7b38    push ebp"
"	      004a7b39    mov ebp,esp"
"	      004a7b3b    sub esp,4"
"	      004a7b3e    push ebx"
"	      004a7b3f    push esi"
"	      004a7b40    push edi"
"	      004a7b41    mov [ebp-4],ecx"
);
// LINE 1695:
	asm( 
"	      004a7b44    mov eax,1"
"	      004a7b49    jmp near ptr 004A7B4Eh"
);
// LINE 1696:
	asm( 
"	      004a7b4e    pop edi"
"	      004a7b4f    pop esi"
"	      004a7b50    pop ebx"
"	      004a7b51    leave"
"	      004a7b52    ret"
);
}



// Contribution: 1:000a6b60-000a6b81 Module: 9, 16 byte alignment, code, (comdat), execute, read, 


// Contribution: 1:000a6b90-000a6bb1 Module: 9, 16 byte alignment, code, (comdat), execute, read, 


// Contribution: 1:000a6bc0-000a6dd5 Module: 9, 16 byte alignment, code, (comdat), execute, read, 


// Contribution: 1:000a6de0-000a6e18 Module: 9, 16 byte alignment, code, (comdat), execute, read, 
// FUNCTION: SIMCOPTER 0x004a7de0
// GraphicWindow::`scalar deleting destructor'



// Contribution: 1:000a6e20-000a6e5b Module: 9, 16 byte alignment, code, (comdat), execute, read, 


// Contribution: 1:000a6e60-000a6eb9 Module: 9, 16 byte alignment, code, (comdat), execute, read, 


// Contribution: 1:000a6ec0-000a6ef1 Module: 9, 16 byte alignment, code, (comdat), execute, read, 


// Contribution: 1:000a6f00-000a6f31 Module: 9, 16 byte alignment, code, (comdat), execute, read, 


// Contribution: 1:000a6f40-000a6f78 Module: 9, 16 byte alignment, code, (comdat), execute, read, 
// FUNCTION: SIMCOPTER 0x004a7f40
// ScreenWindow::`scalar deleting destructor'



// Contribution: 1:000a6f80-000a6fb6 Module: 9, 16 byte alignment, code, (comdat), execute, read, 


// Contribution: 1:000a6fc0-000a704e Module: 9, 16 byte alignment, code, (comdat), execute, read, 


// Contribution: 1:000a7050-000a7359 Module: 9, 16 byte alignment, code, (comdat), execute, read, 


// Contribution: 2:00002648-0000267f Module: 9, 8 byte alignment, initialized_data, (comdat), read, 
// GLOBAL: SIMCOPTER 0x00002648
// ??_7GraphicWindowManager@@6B@
// GLOBAL: SIMCOPTER 0x00002680
// ??_7GraphicWindow@@6B@


// Contribution: 2:00002680-00002743 Module: 9, 8 byte alignment, initialized_data, (comdat), read, 


// Contribution: 2:00002748-0000280b Module: 9, 8 byte alignment, initialized_data, (comdat), read, 
// GLOBAL: SIMCOPTER 0x00002748
// ??_7ScreenWindow@@6B@


// Contribution: 3:00000090-0000009f Module: 9, 4 byte alignment, initialized_data, read, write, 
// LOCAL: SIMCOPTER 0x00000094
// $S54
// LOCAL: SIMCOPTER 0x00000098
// $S59
// LOCAL: SIMCOPTER 0x0000009c
// $S62


// Contribution: 3:00003960-0000396f Module: 9, 4 byte alignment, initialized_data, read, write, 
// GLOBAL: SIMCOPTER 0x00003960
// GraphicWindow::windowCursorCapture
// GLOBAL: SIMCOPTER 0x00003964
// GraphicWindow::windowManager
// GLOBAL: SIMCOPTER 0x00003968
// GraphicWindow::screenWindow


// Contribution: 3:00003970-00003973 Module: 9, 4 byte alignment, initialized_data, (comdat), read, write, 
// GLOBAL: SIMCOPTER 0x00003970
// list<GraphicWindow *>::number_of_lists
// GLOBAL: SIMCOPTER 0x00003974
// list<GraphicWindow *>::last


// Contribution: 3:00003974-00003977 Module: 9, 4 byte alignment, initialized_data, (comdat), read, write, 
// GLOBAL: SIMCOPTER 0x00003978
// list<GraphicWindow *>::next_avail


// Contribution: 3:00003978-0000397b Module: 9, 4 byte alignment, initialized_data, (comdat), read, write, 
// GLOBAL: SIMCOPTER 0x0000397c
// list<GraphicWindow *>::free_list


// Contribution: 3:0000397c-0000397f Module: 9, 4 byte alignment, initialized_data, (comdat), read, write, 
// GLOBAL: SIMCOPTER 0x00003980
// list<GraphicWindow *>::buffer_list


// Contribution: 3:00003980-00003983 Module: 9, 4 byte alignment, initialized_data, (comdat), read, write, 
// GLOBAL: SIMCOPTER 0x00003984
// SZ_INVENTORY_IMAGE_FILE_NAME


// Contribution: 3:0006f960-0006f9a7 Module: 9, 8 byte alignment, uninitialized_data, read, write, 
// GLOBAL: SIMCOPTER 0x0006f960
// GraphicWindow::listFocusWindows
// GLOBAL: SIMCOPTER 0x0006f968
// GraphicWindow::colorConstants
// GLOBAL: SIMCOPTER 0x0006f990
// GraphicWindow::listModalWindows
// LOCAL: SIMCOPTER 0x0006f998
// $S46
// GLOBAL: SIMCOPTER 0x0006f9a0
// GraphicWindow::listValidWindows
