// Module: Gameapp8.obj
// Source: C:\Copter\source\sparkal\Gameapp8.cpp
// autogenerated by simcopter_tool from PDB file



// Contribution: 1:00026550-00027c67 Module: 68, 16 byte alignment, code, execute, read, 
// FUNCTION: COPTER_D 0x00427550
unsigned long  CGameApp::GetLoadFileType(char * szFilePath, long& lFileType) {
// LINE 61:
	__asm        push   ebp;
	__asm        mov    ebp, esp;
	__asm        sub    esp, 4;
	__asm        push   ebx;
	__asm        push   esi;
	__asm        push   edi;
	__asm        mov    this, ecx;
// LINE 63:
	__asm        mov    eax, szFilePath;
	__asm        push   eax;
	__asm        call   0x004C4690;
	__asm        add    esp, 4;
	__asm        test   eax, eax;
	__asm        je     near ptr 0x00427585;
// LINE 64:
	__asm        mov    eax, lFileType;
	__asm        mov    dword ptr [eax], 1;
// LINE 65:
	__asm        xor    eax, eax;
	__asm        jmp    near ptr 0x004275DC;
// LINE 67:
	__asm        jmp    near ptr 0x004275D2;
	__asm        mov    eax, szFilePath;
	__asm        push   eax;
	__asm        call   0x004C4A2B;
	__asm        add    esp, 4;
	__asm        test   eax, eax;
	__asm        je     near ptr 0x004275AE;
// LINE 68:
	__asm        mov    eax, lFileType;
	__asm        mov    dword ptr [eax], 5;
// LINE 69:
	__asm        xor    eax, eax;
	__asm        jmp    near ptr 0x004275DC;
// LINE 71:
	__asm        jmp    near ptr 0x004275D2;
// LINE 72:
	__asm        mov    eax, szFilePath;
	__asm        push   eax;
	__asm        mov    ecx, this;
	__asm        call   0x00428A74;
	__asm        mov    ecx, lFileType;
	__asm        mov    [ecx], eax;
// LINE 73:
	__asm        mov    eax, lFileType;
	__asm        cmp    dword ptr [eax], 0;
	__asm        je     near ptr 0x004275D2;
// LINE 74:
	__asm        xor    eax, eax;
	__asm        jmp    near ptr 0x004275DC;
// LINE 76:
	__asm        mov    eax, 6;
	__asm        jmp    near ptr 0x004275DC;
// LINE 77:
	__asm        pop    edi;
	__asm        pop    esi;
	__asm        pop    ebx;
	__asm        leave;
	__asm        ret    8;
}

// FUNCTION: COPTER_D 0x004275e3
unsigned long  CGameApp::SetUpLoadGame(char * szLoadGamePath, long lFileType) {
// LINE 85:
	__asm        push   ebp;
	__asm        mov    ebp, esp;
	__asm        sub    esp, 4;
	__asm        push   ebx;
	__asm        push   esi;
	__asm        push   edi;
	__asm        mov    this, ecx;
// LINE 86:
	__asm        mov    eax, this;
	__asm        mov    dword ptr [eax+0x20], 0;
// LINE 87:
	__asm        cmp    lFileType, 1;
	__asm        jne    near ptr 0x00427639;
// LINE 88:
	__asm        mov    eax, szLoadGamePath;
	__asm        push   eax;
	__asm        call   0x004C4690;
	__asm        add    esp, 4;
	__asm        test   eax, eax;
	__asm        jne    near ptr 0x00427621;
// LINE 89:
	__asm        mov    eax, 0x80000000;
	__asm        jmp    near ptr 0x0042768A;
// LINE 90:
	__asm        mov    eax, szLoadGamePath;
	__asm        push   eax;
	__asm        call   0x00429582;
	__asm        add    esp, 4;
// LINE 91:
	__asm        xor    eax, eax;
	__asm        jmp    near ptr 0x0042768A;
// LINE 93:
	__asm        jmp    near ptr 0x00427680;
	__asm        cmp    lFileType, 3;
	__asm        je     near ptr 0x0042764D;
	__asm        cmp    lFileType, 4;
	__asm        jne    near ptr 0x00427663;
// LINE 94:
	__asm        mov    eax, szLoadGamePath;
	__asm        push   eax;
	__asm        mov    ecx, this;
	__asm        call   0x00427691;
	__asm        jmp    near ptr 0x0042768A;
// LINE 96:
	__asm        jmp    near ptr 0x00427680;
	__asm        cmp    lFileType, 5;
	__asm        jne    near ptr 0x00427680;
// LINE 97:
	__asm        mov    eax, szLoadGamePath;
	__asm        push   eax;
	__asm        call   0x00429582;
	__asm        add    esp, 4;
// LINE 98:
	__asm        xor    eax, eax;
	__asm        jmp    near ptr 0x0042768A;
// LINE 101:
	__asm        mov    eax, 0x80000000;
	__asm        jmp    near ptr 0x0042768A;
// LINE 102:
	__asm        pop    edi;
	__asm        pop    esi;
	__asm        pop    ebx;
	__asm        leave;
	__asm        ret    8;
}

// FUNCTION: COPTER_D 0x00427691
unsigned long  CGameApp::LoadUserOrCareerGame(char * szGamePath) {
	char[260] szCityFile;
	struct tagUserCityInfo tempUserCityInfo;
	unsigned long lActualCityFileChecksum;
	char[260] szCityPath;
	int32_t bPathInfoFound;
	char[256] szSplitPathFilename;
	struct tagCitySettings savedCitySettings;
	char[256] szSplitPathDirectory;
	int32_t bSaveGameInfoFound;
	struct tagCurrentCareerCityInfo tempCurrentCareerCityInfo;
	unsigned long lSavedCityFileChecksum;
	long lFileType;
	char[3] szSplitPathDrive;
	char[256] szSplitPathExtension;
	long lPresentRecordType;

// LINE 109:
	__asm        push   ebp;
	__asm        mov    ebp, esp;
	__asm        sub    esp, 0x638;
	__asm        push   ebx;
	__asm        push   esi;
	__asm        push   edi;
	__asm        mov    this, ecx;
// LINE 126:
	__asm        mov    eax, this;
	__asm        mov    dword ptr [eax+0x20], 0;
// LINE 127:
	__asm        mov    ecx, this;
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+0x4174];
	__asm        add    ecx, 0x4174;
	__asm        call   dword ptr [eax+0x10];
// LINE 128:
	__asm        mov    eax, szGamePath;
	__asm        push   eax;
	__asm        mov    ecx, this;
	__asm        add    ecx, 0x4174;
	__asm        call   0x004A0759;
// LINE 129:
	__asm        mov    ecx, this;
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+0x4174];
	__asm        add    ecx, 0x4174;
	__asm        call   dword ptr [eax+4];
	__asm        test   eax, eax;
	__asm        jne    near ptr 0x0042770D;
// LINE 130:
	__asm        mov    eax, 3;
	__asm        jmp    near ptr 0x00427BED;
// LINE 132:
	__asm        mov    ecx, this;
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+0x4174];
	__asm        add    ecx, 0x4174;
	__asm        call   dword ptr [eax+0x24];
	__asm        test   eax, eax;
	__asm        je     near ptr 0x00427756;
	__asm        mov    ecx, this;
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+0x4174];
	__asm        add    ecx, 0x4174;
	__asm        call   dword ptr [eax+0x30];
	__asm        cmp    eax, 0x43505452;
	__asm        je     near ptr 0x0042777B;
// LINE 133:
	__asm        mov    ecx, this;
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+0x4174];
	__asm        add    ecx, 0x4174;
	__asm        call   dword ptr [eax+0x10];
// LINE 134:
	__asm        mov    eax, 4;
	__asm        jmp    near ptr 0x00427BED;
// LINE 137:
	__asm        mov    ecx, this;
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+0x4174];
	__asm        add    ecx, 0x4174;
	__asm        call   dword ptr [eax+0x34];
	__asm        mov    lFileType, eax;
// LINE 138:
	__asm        cmp    lFileType, 0x43524552;
	__asm        je     near ptr 0x004277E1;
	__asm        cmp    lFileType, 0x55534552;
	__asm        je     near ptr 0x004277E1;
// LINE 139:
	__asm        mov    ecx, this;
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+0x4174];
	__asm        add    ecx, 0x4174;
	__asm        call   dword ptr [eax+0x10];
// LINE 140:
	__asm        mov    eax, 6;
	__asm        jmp    near ptr 0x00427BED;
// LINE 143:
	__asm        mov    bSaveGameInfoFound, 0;
	__asm        mov    eax, bSaveGameInfoFound;
	__asm        mov    bPathInfoFound, eax;
// LINE 144:
	__asm        mov    ecx, this;
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+0x4174];
	__asm        add    ecx, 0x4174;
	__asm        call   dword ptr [eax+0x44];
// LINE 146:
	__asm        mov    ecx, this;
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+0x4174];
	__asm        add    ecx, 0x4174;
	__asm        call   dword ptr [eax+0x14];
	__asm        mov    lPresentRecordType, eax;
// LINE 147:
	__asm        cmp    lPresentRecordType, 0x4346494C;
	__asm        jne    near ptr 0x00427873;
// LINE 148:
	__asm        push   0x104;
	__asm        lea    eax, szCityFile[0];
	__asm        push   eax;
	__asm        mov    ecx, this;
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+0x4174];
	__asm        add    ecx, 0x4174;
	__asm        call   dword ptr [eax+0x40];
// LINE 149:
	__asm        mov    bPathInfoFound, 1;
// LINE 151:
	__asm        jmp    near ptr 0x00427911;
// LINE 152:
	__asm        cmp    lPresentRecordType, 0x55494E46;
	__asm        jne    near ptr 0x004278C6;
	__asm        cmp    lFileType, 0x55534552;
	__asm        jne    near ptr 0x004278C6;
// LINE 154:
	__asm        push   0x80;
	__asm        lea    eax, tempUserCityInfo.citySettings.lDifficulty;
	__asm        push   eax;
	__asm        mov    ecx, this;
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+0x4174];
	__asm        add    ecx, 0x4174;
	__asm        call   dword ptr [eax+0x40];
// LINE 155:
	__asm        mov    bSaveGameInfoFound, 1;
// LINE 157:
	__asm        jmp    near ptr 0x00427911;
// LINE 158:
	__asm        cmp    lPresentRecordType, 0x43494E46;
	__asm        jne    near ptr 0x00427911;
	__asm        cmp    lFileType, 0x43524552;
	__asm        jne    near ptr 0x00427911;
// LINE 160:
	__asm        push   0x6C;
	__asm        lea    eax, tempCurrentCareerCityInfo.lCurrentCities[0];
	__asm        push   eax;
	__asm        mov    ecx, this;
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+0x4174];
	__asm        add    ecx, 0x4174;
	__asm        call   dword ptr [eax+0x40];
// LINE 161:
	__asm        mov    bSaveGameInfoFound, 1;
// LINE 163:
	__asm        cmp    bPathInfoFound, 0;
	__asm        je     near ptr 0x00427930;
	__asm        cmp    bSaveGameInfoFound, 0;
	__asm        je     near ptr 0x00427930;
// LINE 164:
	__asm        jmp    near ptr 0x00427953;
// LINE 165:
	__asm        mov    ecx, this;
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+0x4174];
	__asm        add    ecx, 0x4174;
	__asm        call   dword ptr [eax+0x48];
	__asm        test   eax, eax;
	__asm        jne    near ptr 0x00427812;
// LINE 167:
	__asm        cmp    bPathInfoFound, 0;
	__asm        je     near ptr 0x0042796D;
	__asm        cmp    bSaveGameInfoFound, 0;
	__asm        jne    near ptr 0x00427992;
// LINE 168:
	__asm        mov    ecx, this;
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+0x4174];
	__asm        add    ecx, 0x4174;
	__asm        call   dword ptr [eax+0x10];
// LINE 169:
	__asm        mov    eax, 2;
	__asm        jmp    near ptr 0x00427BED;
// LINE 173:
	__asm        lea    eax, szSplitPathExtension[0];
	__asm        push   eax;
	__asm        lea    eax, szSplitPathFilename[0];
	__asm        push   eax;
	__asm        lea    eax, szSplitPathDirectory[0];
	__asm        push   eax;
	__asm        lea    eax, szSplitPathDrive[0];
	__asm        push   eax;
	__asm        mov    eax, szGamePath;
	__asm        push   eax;
	__asm        call   0x0056DDF0;
	__asm        add    esp, 0x14;
// LINE 174:
	__asm        lea    eax, szSplitPathDrive[0];
	__asm        push   eax;
	__asm        lea    eax, szCityPath[0];
	__asm        push   eax;
	__asm        call   0x0056CEB0;
	__asm        add    esp, 8;
// LINE 175:
	__asm        lea    eax, szSplitPathDirectory[0];
	__asm        push   eax;
	__asm        lea    eax, szCityPath[0];
	__asm        push   eax;
	__asm        call   0x0056CEC0;
	__asm        add    esp, 8;
// LINE 176:
	__asm        lea    eax, szCityFile[0];
	__asm        push   eax;
	__asm        lea    eax, szCityPath[0];
	__asm        push   eax;
	__asm        call   0x0056CEC0;
	__asm        add    esp, 8;
// LINE 177:
	__asm        lea    eax, szCityPath[0];
	__asm        push   eax;
	__asm        call   0x004C4690;
	__asm        add    esp, 4;
	__asm        test   eax, eax;
	__asm        jne    near ptr 0x00427A38;
// LINE 178:
	__asm        mov    ecx, this;
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+0x4174];
	__asm        add    ecx, 0x4174;
	__asm        call   dword ptr [eax+0x10];
// LINE 179:
	__asm        mov    eax, 5;
	__asm        jmp    near ptr 0x00427BED;
// LINE 181:
	__asm        cmp    lFileType, 0x55534552;
	__asm        jne    near ptr 0x00427A73;
// LINE 182:
	__asm        mov    dword ptr ds:[0x5C2AA0], 1;
// LINE 183:
	__asm        lea    esi, tempUserCityInfo.citySettings.lDifficulty;
	__asm        mov    edi, 0x5C2A20;
	__asm        mov    ecx, 0x20;
	__asm        rep movsd;
// LINE 185:
	__asm        mov    eax, ds:[0x5C2A40];
	__asm        mov    ds:[0x598E90], eax;
// LINE 187:
	__asm        jmp    near ptr 0x00427AE6;
// LINE 188:
	__asm        mov    dword ptr ds:[0x5C2AA0], 2;
// LINE 189:
	__asm        lea    esi, tempCurrentCareerCityInfo.lCurrentCities[0];
	__asm        mov    edi, 0x5C2AA8;
	__asm        mov    ecx, 0x1B;
	__asm        rep movsd;
// LINE 190:
	__asm        push   0x43534554;
	__asm        mov    ecx, this;
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+0x4174];
	__asm        add    ecx, 0x4174;
	__asm        call   dword ptr [eax+0x50];
	__asm        test   eax, eax;
	__asm        je     near ptr 0x00427AE6;
// LINE 191:
	__asm        push   0x24;
	__asm        lea    eax, savedCitySettings.lDifficulty;
	__asm        push   eax;
	__asm        mov    ecx, this;
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+0x4174];
	__asm        add    ecx, 0x4174;
	__asm        call   dword ptr [eax+0x40];
// LINE 193:
	__asm        mov    eax, savedCitySettings.lDaytime;
	__asm        mov    ds:[0x598E90], eax;
// LINE 196:
	__asm        lea    eax, szCityPath[0];
	__asm        push   eax;
	__asm        push   0x5C2918;
	__asm        call   0x0056CEB0;
	__asm        add    esp, 8;
// LINE 199:
	__asm        mov    lSavedCityFileChecksum, 0;
// LINE 200:
	__asm        mov    ecx, this;
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+0x4174];
	__asm        add    ecx, 0x4174;
	__asm        call   dword ptr [eax+0x44];
// LINE 201:
	__asm        push   0x4353554D;
	__asm        mov    ecx, this;
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+0x4174];
	__asm        add    ecx, 0x4174;
	__asm        call   dword ptr [eax+0x54];
	__asm        test   eax, eax;
	__asm        je     near ptr 0x00427B6B;
// LINE 202:
	__asm        push   4;
	__asm        lea    eax, lSavedCityFileChecksum;
	__asm        push   eax;
	__asm        mov    ecx, this;
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+0x4174];
	__asm        add    ecx, 0x4174;
	__asm        call   dword ptr [eax+0x40];
// LINE 203:
	__asm        lea    eax, szCityPath[0];
	__asm        push   eax;
	__asm        call   0x004A07B9;
	__asm        add    esp, 4;
	__asm        mov    lActualCityFileChecksum, eax;
// LINE 204:
	__asm        cmp    lActualCityFileChecksum, 0;
	__asm        je     near ptr 0x00427BBE;
	__asm        cmp    lSavedCityFileChecksum, 0;
	__asm        je     near ptr 0x00427BBE;
	__asm        mov    eax, lActualCityFileChecksum;
	__asm        cmp    lSavedCityFileChecksum, eax;
	__asm        jne    near ptr 0x00427BBE;
// LINE 205:
	__asm        mov    eax, this;
	__asm        mov    dword ptr [eax+0x20], 1;
// LINE 208:
	__asm        jmp    near ptr 0x00427BE6;
// LINE 209:
	__asm        mov    eax, this;
	__asm        mov    dword ptr [eax+0x20], 0;
// LINE 210:
	__asm        mov    ecx, this;
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+0x4174];
	__asm        add    ecx, 0x4174;
	__asm        call   dword ptr [eax+0x10];
// LINE 212:
	__asm        xor    eax, eax;
	__asm        jmp    near ptr 0x00427BED;
// LINE 213:
	__asm        pop    edi;
	__asm        pop    esi;
	__asm        pop    ebx;
	__asm        leave;
	__asm        ret    4;
}

// FUNCTION: COPTER_D 0x00427bf4
unsigned long  CGameApp::SaveUserOrCareerGame(char * szGamePath, char * szCityPath) {
	unsigned long lActualCityFileChecksum;
	char[256] szCityFile;
	char[256] szSplitPathFilename;
	struct tagCitySettings tempCitySettings;
	char[256] szSplitPathDirectory;
	long lFileType;
	char[3] szSplitPathDrive;
	char[256] szSplitPathExtension;

// LINE 222:
	__asm        push   ebp;
	__asm        mov    ebp, esp;
	__asm        sub    esp, 0x434;
	__asm        push   ebx;
	__asm        push   esi;
	__asm        push   edi;
	__asm        mov    this, ecx;
// LINE 232:
	__asm        mov    ecx, this;
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+0x4174];
	__asm        add    ecx, 0x4174;
	__asm        call   dword ptr [eax+0x10];
// LINE 233:
	__asm        mov    eax, szGamePath;
	__asm        push   eax;
	__asm        mov    ecx, this;
	__asm        add    ecx, 0x4174;
	__asm        call   0x004A0759;
// LINE 234:
	__asm        call   0x00429109;
// LINE 236:
	__asm        cmp    dword ptr ds:[0x5C2AA0], 2;
	__asm        jne    near ptr 0x00427C57;
// LINE 237:
	__asm        mov    lFileType, 0x43524552;
// LINE 238:
	__asm        jmp    near ptr 0x00427C6E;
	__asm        cmp    dword ptr ds:[0x5C2AA0], 1;
	__asm        jne    near ptr 0x00427C6E;
// LINE 239:
	__asm        mov    lFileType, 0x55534552;
// LINE 241:
	__asm        push   0x100;
	__asm        mov    eax, lFileType;
	__asm        push   eax;
	__asm        push   0x43505452;
	__asm        mov    ecx, this;
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+0x4174];
	__asm        add    ecx, 0x4174;
	__asm        call   dword ptr [eax+8];
	__asm        test   eax, eax;
	__asm        jne    near ptr 0x00427CAC;
// LINE 242:
	__asm        mov    eax, 7;
	__asm        jmp    near ptr 0x00427F91;
// LINE 244:
	__asm        lea    eax, szSplitPathExtension[0];
	__asm        push   eax;
	__asm        lea    eax, szSplitPathFilename[0];
	__asm        push   eax;
	__asm        lea    eax, szSplitPathDirectory[0];
	__asm        push   eax;
	__asm        lea    eax, szSplitPathDrive[0];
	__asm        push   eax;
	__asm        mov    eax, szCityPath;
	__asm        push   eax;
	__asm        call   0x0056DDF0;
	__asm        add    esp, 0x14;
// LINE 245:
	__asm        lea    eax, szSplitPathFilename[0];
	__asm        push   eax;
	__asm        lea    eax, szCityFile[0];
	__asm        push   eax;
	__asm        call   0x0056CEB0;
	__asm        add    esp, 8;
// LINE 246:
	__asm        lea    eax, szSplitPathExtension[0];
	__asm        push   eax;
	__asm        lea    eax, szCityFile[0];
	__asm        push   eax;
	__asm        call   0x0056CEC0;
	__asm        add    esp, 8;
// LINE 247:
	__asm        lea    eax, szCityFile[0];
	__asm        push   eax;
	__asm        call   0x0056ABE0;
	__asm        add    esp, 4;
	__asm        inc    eax;
	__asm        push   eax;
	__asm        lea    eax, szCityFile[0];
	__asm        push   eax;
	__asm        push   0x4346494C;
	__asm        mov    ecx, this;
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+0x4174];
	__asm        add    ecx, 0x4174;
	__asm        call   dword ptr [eax+0x64];
	__asm        test   eax, eax;
	__asm        jne    near ptr 0x00427D65;
// LINE 248:
	__asm        mov    ecx, this;
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+0x4174];
	__asm        add    ecx, 0x4174;
	__asm        call   dword ptr [eax+0x10];
// LINE 249:
	__asm        mov    eax, 7;
	__asm        jmp    near ptr 0x00427F91;
// LINE 251:
	__asm        cmp    dword ptr ds:[0x5C2AA0], 2;
	__asm        jne    near ptr 0x00427E48;
// LINE 252:
	__asm        push   0x6C;
	__asm        push   0x5C2AA8;
	__asm        push   0x43494E46;
	__asm        mov    ecx, this;
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+0x4174];
	__asm        add    ecx, 0x4174;
	__asm        call   dword ptr [eax+0x64];
	__asm        test   eax, eax;
	__asm        jne    near ptr 0x00427DC6;
// LINE 253:
	__asm        mov    ecx, this;
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+0x4174];
	__asm        add    ecx, 0x4174;
	__asm        call   dword ptr [eax+0x10];
// LINE 254:
	__asm        mov    eax, 7;
	__asm        jmp    near ptr 0x00427F91;
// LINE 260:
	__asm        mov    eax, ds:[0x5C2AB4];
	__asm        shl    eax, 3;
	__asm        lea    edi, tempCitySettings.lDifficulty;
	__asm        lea    esi, [eax+eax*8+0x5C2B1C];
	__asm        mov    ecx, 9;
	__asm        rep movsd;
// LINE 261:
	__asm        mov    eax, ds:[0x598E90];
	__asm        mov    tempCitySettings.lDaytime, eax;
// LINE 262:
	__asm        push   0x24;
	__asm        lea    eax, tempCitySettings.lDifficulty;
	__asm        push   eax;
	__asm        push   0x43534554;
	__asm        mov    ecx, this;
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+0x4174];
	__asm        add    ecx, 0x4174;
	__asm        call   dword ptr [eax+0x64];
	__asm        test   eax, eax;
	__asm        jne    near ptr 0x00427E43;
// LINE 263:
	__asm        mov    ecx, this;
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+0x4174];
	__asm        add    ecx, 0x4174;
	__asm        call   dword ptr [eax+0x10];
// LINE 264:
	__asm        mov    eax, 7;
	__asm        jmp    near ptr 0x00427F91;
// LINE 267:
	__asm        jmp    near ptr 0x00427EAC;
	__asm        cmp    dword ptr ds:[0x5C2AA0], 1;
	__asm        jne    near ptr 0x00427EAC;
// LINE 268:
	__asm        push   0x80;
	__asm        push   0x5C2A20;
	__asm        push   0x55494E46;
	__asm        mov    ecx, this;
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+0x4174];
	__asm        add    ecx, 0x4174;
	__asm        call   dword ptr [eax+0x64];
	__asm        test   eax, eax;
	__asm        jne    near ptr 0x00427EAC;
// LINE 269:
	__asm        mov    ecx, this;
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+0x4174];
	__asm        add    ecx, 0x4174;
	__asm        call   dword ptr [eax+0x10];
// LINE 270:
	__asm        mov    eax, 7;
	__asm        jmp    near ptr 0x00427F91;
// LINE 274:
	__asm        mov    eax, this;
	__asm        add    eax, 0x4174;
	__asm        push   eax;
	__asm        mov    ecx, 0x606E78;
	__asm        call   0x004EC284;
// LINE 275:
	__asm        mov    eax, this;
	__asm        add    eax, 0x4174;
	__asm        push   eax;
	__asm        call   0x004EB909;
	__asm        add    esp, 4;
// LINE 277:
	__asm        mov    eax, szCityPath;
	__asm        push   eax;
	__asm        call   0x004C680E;
	__asm        add    esp, 4;
	__asm        movsx  eax, ax;
	__asm        test   eax, eax;
	__asm        jne    near ptr 0x00427F12;
// LINE 278:
	__asm        mov    ecx, this;
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+0x4174];
	__asm        add    ecx, 0x4174;
	__asm        call   dword ptr [eax+0x10];
// LINE 279:
	__asm        mov    eax, 7;
	__asm        jmp    near ptr 0x00427F91;
// LINE 283:
	__asm        mov    eax, szCityPath;
	__asm        push   eax;
	__asm        call   0x004A07B9;
	__asm        add    esp, 4;
	__asm        mov    lActualCityFileChecksum, eax;
// LINE 284:
	__asm        push   4;
	__asm        lea    eax, lActualCityFileChecksum;
	__asm        push   eax;
	__asm        push   0x4353554D;
	__asm        mov    ecx, this;
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+0x4174];
	__asm        add    ecx, 0x4174;
	__asm        call   dword ptr [eax+0x64];
// LINE 285:
	__asm        mov    ecx, this;
	__asm        mov    eax, this;
	__asm        mov    eax, [eax+0x4174];
	__asm        add    ecx, 0x4174;
	__asm        call   dword ptr [eax+0x10];
// LINE 288:
	__asm        mov    eax, szGamePath;
	__asm        push   eax;
	__asm        push   0x5C33E8;
	__asm        call   0x0056CEB0;
	__asm        add    esp, 8;
// LINE 289:
	__asm        mov    eax, szCityPath;
	__asm        push   eax;
	__asm        push   0x5C2918;
	__asm        call   0x0056CEB0;
	__asm        add    esp, 8;
// LINE 291:
	__asm        xor    eax, eax;
	__asm        jmp    near ptr 0x00427F91;
// LINE 292:
	__asm        pop    edi;
	__asm        pop    esi;
	__asm        pop    ebx;
	__asm        leave;
	__asm        ret    8;
}

// FUNCTION: COPTER_D 0x00427f98
unsigned long  CGameApp::DoSaveGameAs() {
	unsigned long nResult;
	int32_t nFullFilterID;
	char[256] szSplitPathFilename;
	char[260] szGameFileSavePath;
	char[260] szCityFileSavePath;
	char[256] szSplitPathDirectory;
	char[256] szNewDirectory;
	char * chPrefData;
	char[256] szSplitPathFullDirectory;
	int32_t nFullTitleID;
	char[3] szSplitPathDrive;
	int32_t nFullStringID;
	char[256] szSplitPathExtension;

// LINE 305:
	__asm        push   ebp;
	__asm        mov    ebp, esp;
	__asm        sub    esp, 0x808;
	__asm        push   ebx;
	__asm        push   esi;
	__asm        push   edi;
	__asm        mov    this, ecx;
// LINE 326:
	__asm        lea    eax, szSplitPathExtension[0];
	__asm        push   eax;
	__asm        lea    eax, szSplitPathFilename[0];
	__asm        push   eax;
	__asm        lea    eax, szSplitPathDirectory[0];
	__asm        push   eax;
	__asm        lea    eax, szSplitPathDrive[0];
	__asm        push   eax;
	__asm        push   0x5C2918;
	__asm        call   0x0056DDF0;
	__asm        add    esp, 0x14;
// LINE 328:
	__asm        push   0x7EEEEEE;
	__asm        mov    eax, ds:[0x599BC4];
	__asm        mov    eax, [eax];
	__asm        mov    ecx, ds:[0x599BC4];
	__asm        call   dword ptr [eax+0x1C];
	__asm        mov    chPrefData, eax;
// LINE 329:
	__asm        cmp    chPrefData, 0;
	__asm        je     near ptr 0x004282A4;
	__asm        push   0x10;
	__asm        call   0x0056A600;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7CC], eax;
	__asm        cmp    dword ptr [ebp-0x7CC], 0;
	__asm        je     near ptr 0x00428035;
	__asm        mov    eax, chPrefData;
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7CC];
	__asm        call   0x0041DFE0;
	__asm        mov    [ebp-0x728], eax;
	__asm        jmp    near ptr 0x0042803F;
	__asm        mov    dword ptr [ebp-0x728], 0;
	__asm        mov    dword ptr [ebp-0x72C], 0;
	__asm        jmp    near ptr 0x0042804E;
	__asm        push   0x5974A8;
	__asm        call   0x0056ABE0;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7FC], eax;
	__asm        jmp    near ptr 0x00428066;
	__asm        jmp    near ptr 0x0042806B;
	__asm        mov    eax, [ebp-0x7FC];
	__asm        push   eax;
	__asm        mov    eax, [ebp-0x728];
	__asm        mov    eax, [eax+4];
	__asm        push   eax;
	__asm        lea    ecx, [ebp-0x72C];
	__asm        call   0x00417C00;
	__asm        push   eax;
	__asm        lea    ecx, [ebp-0x7F8];
	__asm        call   0x00411F60;
	__asm        cmp    dword ptr [ebp-0x7FC], 0;
	__asm        je     near ptr 0x004280E1;
	__asm        jmp    near ptr 0x004280A5;
	__asm        jmp    near ptr 0x004280AA;
	__asm        mov    eax, [ebp-0x7F4];
	__asm        mov    eax, [eax];
	__asm        mov    ecx, [ebp-0x728];
	__asm        add    eax, [ecx+4];
	__asm        mov    [ebp-0x804], eax;
	__asm        mov    eax, [ebp-0x7FC];
	__asm        push   eax;
	__asm        push   0x5974A8;
	__asm        mov    eax, [ebp-0x804];
	__asm        push   eax;
	__asm        call   0x0056A800;
	__asm        add    esp, 0xC;
	__asm        jmp    near ptr 0x004280E1;
	__asm        mov    eax, [ebp-0x7F4];
	__asm        add    eax, 4;
	__asm        mov    [ebp-0x800], eax;
	__asm        jmp    near ptr 0x004280F5;
	__asm        mov    eax, [ebp-0x7FC];
	__asm        mov    ecx, [ebp-0x800];
	__asm        add    [ecx], eax;
	__asm        push   0xFFFFFFFF;
	__asm        push   0;
	__asm        lea    eax, [ebp-0x7F8];
	__asm        push   eax;
	__asm        lea    ecx, [ebp-0x734];
	__asm        call   0x00411B80;
	__asm        lea    ecx, [ebp-0x7F8];
	__asm        call   0x00412130;
	__asm        jmp    near ptr 0x00428129;
	__asm        lea    eax, [ebp-0x734];
	__asm        push   eax;
	__asm        call   0x00485735;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x724], eax;
	__asm        mov    eax, [ebp-0x730];
	__asm        dec    dword ptr [eax+0xC];
	__asm        mov    eax, [ebp-0x730];
	__asm        cmp    dword ptr [eax+0xC], 0;
	__asm        jne    near ptr 0x0042818E;
	__asm        mov    eax, [ebp-0x730];
	__asm        mov    [ebp-0x788], eax;
	__asm        mov    eax, [ebp-0x788];
	__asm        mov    [ebp-0x784], eax;
	__asm        cmp    dword ptr [ebp-0x784], 0;
	__asm        je     near ptr 0x0042818E;
	__asm        push   1;
	__asm        mov    ecx, [ebp-0x784];
	__asm        call   0x0041DD70;
	__asm        jmp    near ptr 0x0042818E;
	__asm        jmp    near ptr 0x00428193;
	__asm        cmp    dword ptr [ebp-0x734], 0;
	__asm        je     near ptr 0x004281C7;
	__asm        mov    eax, [ebp-0x734];
	__asm        mov    [ebp-0x77C], eax;
	__asm        mov    eax, [ebp-0x77C];
	__asm        mov    [ebp-0x780], eax;
	__asm        mov    eax, [ebp-0x780];
	__asm        push   eax;
	__asm        call   0x0056A740;
	__asm        add    esp, 4;
	__asm        jmp    near ptr 0x004281CC;
	__asm        mov    eax, [ebp-0x728];
	__asm        dec    dword ptr [eax+0xC];
	__asm        mov    eax, [ebp-0x728];
	__asm        cmp    dword ptr [eax+0xC], 0;
	__asm        jne    near ptr 0x0042821C;
	__asm        mov    eax, [ebp-0x728];
	__asm        mov    [ebp-0x798], eax;
	__asm        mov    eax, [ebp-0x798];
	__asm        mov    [ebp-0x794], eax;
	__asm        cmp    dword ptr [ebp-0x794], 0;
	__asm        je     near ptr 0x0042821C;
	__asm        push   1;
	__asm        mov    ecx, [ebp-0x794];
	__asm        call   0x0041DD70;
	__asm        jmp    near ptr 0x0042821C;
	__asm        jmp    near ptr 0x00428221;
	__asm        cmp    dword ptr [ebp-0x72C], 0;
	__asm        je     near ptr 0x00428255;
	__asm        mov    eax, [ebp-0x72C];
	__asm        mov    [ebp-0x78C], eax;
	__asm        mov    eax, [ebp-0x78C];
	__asm        mov    [ebp-0x790], eax;
	__asm        mov    eax, [ebp-0x790];
	__asm        push   eax;
	__asm        call   0x0056A740;
	__asm        add    esp, 4;
	__asm        jmp    near ptr 0x0042825A;
	__asm        mov    eax, [ebp-0x724];
	__asm        mov    [ebp-0x774], eax;
	__asm        cmp    dword ptr [ebp-0x774], 0;
	__asm        je     near ptr 0x004282A4;
// LINE 331:
	__asm        mov    eax, chPrefData;
	__asm        push   eax;
	__asm        lea    eax, szGameFileSavePath[0];
	__asm        push   eax;
	__asm        call   0x0056CEB0;
	__asm        add    esp, 8;
// LINE 332:
	__asm        lea    eax, szSplitPathFilename[0];
	__asm        push   eax;
	__asm        lea    eax, szGameFileSavePath[0];
	__asm        push   eax;
	__asm        call   0x0056CEC0;
	__asm        add    esp, 8;
// LINE 334:
	__asm        jmp    near ptr 0x004287A2;
// LINE 340:
	__asm        mov    eax, ds:[0x598F04];
	__asm        push   eax;
	__asm        lea    eax, szGameFileSavePath[0];
	__asm        push   eax;
	__asm        call   0x0056CEB0;
	__asm        add    esp, 8;
// LINE 341:
	__asm        push   0;
	__asm        push   0x32;
	__asm        call   0x0042B15F;
	__asm        add    esp, 8;
	__asm        mov    nFullStringID, eax;
// LINE 342:
	__asm        push   0xFFF;
	__asm        lea    eax, szNewDirectory[0];
	__asm        push   eax;
	__asm        mov    eax, nFullStringID;
	__asm        push   eax;
	__asm        mov    eax, ds:[0x5C28C8];
	__asm        push   eax;
	__asm        call   dword ptr ds:[0x6C38B4];
	__asm        mov    [ebp-0x7F0], eax;
	__asm        cmp    dword ptr [ebp-0x7F0], 0;
	__asm        jne    near ptr 0x00428344;
	__asm        push   0xFFF;
	__asm        lea    eax, szNewDirectory[0];
	__asm        push   eax;
	__asm        mov    ecx, 0x3E8;
	__asm        mov    eax, nFullStringID;
	__asm        sub    edx, edx;
	__asm        div    ecx;
	__asm        push   edx;
	__asm        mov    eax, ds:[0x5C28C8];
	__asm        push   eax;
	__asm        call   dword ptr ds:[0x6C38B4];
	__asm        mov    [ebp-0x7F0], eax;
	__asm        push   0x597200;
	__asm        lea    eax, szNewDirectory[0];
	__asm        push   eax;
	__asm        call   0x0056CEC0;
	__asm        add    esp, 8;
	__asm        jmp    near ptr 0x00428349;
	__asm        jmp    near ptr 0x00428349;
// LINE 343:
	__asm        lea    eax, szNewDirectory[0];
	__asm        push   eax;
	__asm        lea    eax, szGameFileSavePath[0];
	__asm        push   eax;
	__asm        call   0x0056CEC0;
	__asm        add    esp, 8;
// LINE 344:
	__asm        push   0x10;
	__asm        call   0x0056A600;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7D0], eax;
	__asm        cmp    dword ptr [ebp-0x7D0], 0;
	__asm        je     near ptr 0x00428399;
	__asm        lea    eax, szGameFileSavePath[0];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7D0];
	__asm        call   0x0041DFE0;
	__asm        mov    [ebp-0x73C], eax;
	__asm        jmp    near ptr 0x004283A3;
	__asm        mov    dword ptr [ebp-0x73C], 0;
	__asm        mov    dword ptr [ebp-0x740], 0;
	__asm        jmp    near ptr 0x004283B2;
	__asm        lea    eax, [ebp-0x740];
	__asm        push   eax;
	__asm        call   0x00485735;
	__asm        add    esp, 4;
	__asm        test   eax, eax;
	__asm        jne    near ptr 0x004283D8;
	__asm        mov    dword ptr [ebp-0x738], 1;
	__asm        jmp    near ptr 0x004283E2;
	__asm        mov    dword ptr [ebp-0x738], 0;
	__asm        mov    eax, [ebp-0x73C];
	__asm        dec    dword ptr [eax+0xC];
	__asm        mov    eax, [ebp-0x73C];
	__asm        cmp    dword ptr [eax+0xC], 0;
	__asm        jne    near ptr 0x00428432;
	__asm        mov    eax, [ebp-0x73C];
	__asm        mov    [ebp-0x7A8], eax;
	__asm        mov    eax, [ebp-0x7A8];
	__asm        mov    [ebp-0x7A4], eax;
	__asm        cmp    dword ptr [ebp-0x7A4], 0;
	__asm        je     near ptr 0x00428432;
	__asm        push   1;
	__asm        mov    ecx, [ebp-0x7A4];
	__asm        call   0x0041DD70;
	__asm        jmp    near ptr 0x00428432;
	__asm        jmp    near ptr 0x00428437;
	__asm        cmp    dword ptr [ebp-0x740], 0;
	__asm        je     near ptr 0x0042846B;
	__asm        mov    eax, [ebp-0x740];
	__asm        mov    [ebp-0x79C], eax;
	__asm        mov    eax, [ebp-0x79C];
	__asm        mov    [ebp-0x7A0], eax;
	__asm        mov    eax, [ebp-0x7A0];
	__asm        push   eax;
	__asm        call   0x0056A740;
	__asm        add    esp, 4;
	__asm        jmp    near ptr 0x00428470;
	__asm        mov    eax, [ebp-0x738];
	__asm        mov    [ebp-0x778], eax;
	__asm        cmp    dword ptr [ebp-0x778], 0;
	__asm        je     near ptr 0x0042878C;
// LINE 345:
	__asm        push   0x10;
	__asm        call   0x0056A600;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7D4], eax;
	__asm        cmp    dword ptr [ebp-0x7D4], 0;
	__asm        je     near ptr 0x00428572;
	__asm        lea    eax, szNewDirectory[0];
	__asm        push   eax;
	__asm        call   0x0056ABE0;
	__asm        add    esp, 4;
	__asm        mov    ecx, [ebp-0x7D4];
	__asm        mov    [ecx+4], eax;
	__asm        jmp    near ptr 0x004284C3;
	__asm        mov    eax, [ebp-0x7D4];
	__asm        mov    eax, [eax+4];
	__asm        mov    ecx, [ebp-0x7D4];
	__asm        mov    [ecx+8], eax;
	__asm        mov    eax, [ebp-0x7D4];
	__asm        cmp    dword ptr [eax+8], 0;
	__asm        je     near ptr 0x00428543;
	__asm        mov    eax, [ebp-0x7D4];
	__asm        mov    eax, [eax+8];
	__asm        push   eax;
	__asm        call   0x0056A600;
	__asm        add    esp, 4;
	__asm        mov    ecx, [ebp-0x7D4];
	__asm        mov    [ecx], eax;
	__asm        mov    eax, [ebp-0x7D4];
	__asm        mov    eax, [eax+4];
	__asm        mov    [ebp-0x7D8], eax;
	__asm        mov    eax, [ebp-0x7D4];
	__asm        mov    eax, [eax];
	__asm        mov    [ebp-0x7DC], eax;
	__asm        mov    eax, [ebp-0x7D8];
	__asm        push   eax;
	__asm        lea    eax, szNewDirectory[0];
	__asm        push   eax;
	__asm        mov    eax, [ebp-0x7DC];
	__asm        push   eax;
	__asm        call   0x0056A800;
	__asm        add    esp, 0xC;
	__asm        jmp    near ptr 0x0042853E;
	__asm        jmp    near ptr 0x0042854F;
	__asm        mov    eax, [ebp-0x7D4];
	__asm        mov    dword ptr [eax], 0;
	__asm        mov    eax, [ebp-0x7D4];
	__asm        mov    dword ptr [eax+0xC], 1;
	__asm        jmp    near ptr 0x00428561;
	__asm        mov    eax, [ebp-0x7D4];
	__asm        mov    [ebp-0x76C], eax;
	__asm        jmp    near ptr 0x0042857C;
	__asm        mov    dword ptr [ebp-0x76C], 0;
	__asm        mov    dword ptr [ebp-0x770], 0;
	__asm        jmp    near ptr 0x0042858B;
	__asm        mov    eax, ds:[0x598F04];
	__asm        mov    [ebp-0x7E4], eax;
	__asm        push   0x10;
	__asm        call   0x0056A600;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x7E0], eax;
	__asm        cmp    dword ptr [ebp-0x7E0], 0;
	__asm        je     near ptr 0x004285D0;
	__asm        mov    eax, [ebp-0x7E4];
	__asm        push   eax;
	__asm        mov    ecx, [ebp-0x7E0];
	__asm        call   0x0041DFE0;
	__asm        mov    [ebp-0x764], eax;
	__asm        jmp    near ptr 0x004285DA;
	__asm        mov    dword ptr [ebp-0x764], 0;
	__asm        mov    dword ptr [ebp-0x768], 0;
	__asm        jmp    near ptr 0x004285E9;
	__asm        push   4;
	__asm        lea    eax, [ebp-0x770];
	__asm        push   eax;
	__asm        push   0;
	__asm        push   1;
	__asm        push   0;
	__asm        lea    eax, [ebp-0x768];
	__asm        push   eax;
	__asm        lea    ecx, [ebp-0x760];
	__asm        call   0x004832A3;
	__asm        mov    ecx, eax;
	__asm        call   0x00485D34;
	__asm        mov    eax, [ebp-0x76C];
	__asm        dec    dword ptr [eax+0xC];
	__asm        mov    eax, [ebp-0x76C];
	__asm        cmp    dword ptr [eax+0xC], 0;
	__asm        jne    near ptr 0x00428661;
	__asm        mov    eax, [ebp-0x76C];
	__asm        mov    [ebp-0x7B8], eax;
	__asm        mov    eax, [ebp-0x7B8];
	__asm        mov    [ebp-0x7B4], eax;
	__asm        cmp    dword ptr [ebp-0x7B4], 0;
	__asm        je     near ptr 0x00428661;
	__asm        push   1;
	__asm        mov    ecx, [ebp-0x7B4];
	__asm        call   0x0041DD70;
	__asm        jmp    near ptr 0x00428661;
	__asm        jmp    near ptr 0x00428666;
	__asm        cmp    dword ptr [ebp-0x770], 0;
	__asm        je     near ptr 0x0042869A;
	__asm        mov    eax, [ebp-0x770];
	__asm        mov    [ebp-0x7AC], eax;
	__asm        mov    eax, [ebp-0x7AC];
	__asm        mov    [ebp-0x7B0], eax;
	__asm        mov    eax, [ebp-0x7B0];
	__asm        push   eax;
	__asm        call   0x0056A740;
	__asm        add    esp, 4;
	__asm        jmp    near ptr 0x0042869F;
	__asm        jmp    near ptr 0x004286A4;
	__asm        lea    ecx, [ebp-0x750];
	__asm        call   0x00412080;
	__asm        cmp    dword ptr [ebp-0x750], 0;
	__asm        je     near ptr 0x004286E3;
	__asm        mov    eax, [ebp-0x750];
	__asm        mov    [ebp-0x7E8], eax;
	__asm        mov    eax, [ebp-0x7E8];
	__asm        mov    [ebp-0x7EC], eax;
	__asm        mov    eax, [ebp-0x7EC];
	__asm        push   eax;
	__asm        call   0x0056A740;
	__asm        add    esp, 4;
	__asm        jmp    near ptr 0x004286E8;
	__asm        lea    ecx, [ebp-0x758];
	__asm        call   0x00412130;
	__asm        lea    ecx, [ebp-0x760];
	__asm        call   0x00428C70;
	__asm        mov    eax, [ebp-0x764];
	__asm        dec    dword ptr [eax+0xC];
	__asm        mov    eax, [ebp-0x764];
	__asm        cmp    dword ptr [eax+0xC], 0;
	__asm        jne    near ptr 0x0042874E;
	__asm        mov    eax, [ebp-0x764];
	__asm        mov    [ebp-0x7C8], eax;
	__asm        mov    eax, [ebp-0x7C8];
	__asm        mov    [ebp-0x7C4], eax;
	__asm        cmp    dword ptr [ebp-0x7C4], 0;
	__asm        je     near ptr 0x0042874E;
	__asm        push   1;
	__asm        mov    ecx, [ebp-0x7C4];
	__asm        call   0x0041DD70;
	__asm        jmp    near ptr 0x0042874E;
	__asm        jmp    near ptr 0x00428753;
	__asm        cmp    dword ptr [ebp-0x768], 0;
	__asm        je     near ptr 0x00428787;
	__asm        mov    eax, [ebp-0x768];
	__asm        mov    [ebp-0x7BC], eax;
	__asm        mov    eax, [ebp-0x7BC];
	__asm        mov    [ebp-0x7C0], eax;
	__asm        mov    eax, [ebp-0x7C0];
	__asm        push   eax;
	__asm        call   0x0056A740;
	__asm        add    esp, 4;
	__asm        jmp    near ptr 0x0042878C;
// LINE 346:
	__asm        lea    eax, szSplitPathFilename[0];
	__asm        push   eax;
	__asm        lea    eax, szGameFileSavePath[0];
	__asm        push   eax;
	__asm        call   0x0056CEC0;
	__asm        add    esp, 8;
// LINE 354:
	__asm        cmp    dword ptr ds:[0x5C2AA0], 2;
	__asm        jne    near ptr 0x004287C8;
// LINE 355:
	__asm        mov    nFullTitleID, 0x2F;
// LINE 356:
	__asm        mov    nFullFilterID, 0x2D;
// LINE 358:
	__asm        jmp    near ptr 0x004287DC;
// LINE 359:
	__asm        mov    nFullTitleID, 0x2E;
// LINE 360:
	__asm        mov    nFullFilterID, 0x2B;
// LINE 362:
	__asm        push   0;
	__asm        mov    eax, nFullTitleID;
	__asm        push   eax;
	__asm        call   0x0042B15F;
	__asm        add    esp, 8;
	__asm        mov    nFullTitleID, eax;
// LINE 363:
	__asm        push   0;
	__asm        mov    eax, nFullFilterID;
	__asm        push   eax;
	__asm        call   0x0042B15F;
	__asm        add    esp, 8;
	__asm        mov    nFullFilterID, eax;
// LINE 365:
	__asm        push   0;
	__asm        mov    eax, nFullFilterID;
	__asm        push   eax;
	__asm        mov    eax, nFullTitleID;
	__asm        push   eax;
	__asm        lea    eax, szGameFileSavePath[0];
	__asm        push   eax;
	__asm        call   0x004909E3;
	__asm        add    esp, 0x10;
	__asm        mov    nResult, eax;
// LINE 366:
	__asm        cmp    nResult, 0;
	__asm        je     near ptr 0x00428846;
// LINE 367:
	__asm        mov    eax, 9;
	__asm        jmp    near ptr 0x00428A6F;
// LINE 373:
	__asm        lea    eax, szSplitPathExtension[0];
	__asm        push   eax;
	__asm        lea    eax, szSplitPathFilename[0];
	__asm        push   eax;
	__asm        lea    eax, szSplitPathDirectory[0];
	__asm        push   eax;
	__asm        lea    eax, szSplitPathDrive[0];
	__asm        push   eax;
	__asm        lea    eax, szGameFileSavePath[0];
	__asm        push   eax;
	__asm        call   0x0056DDF0;
	__asm        add    esp, 0x14;
// LINE 376:
	__asm        lea    eax, szSplitPathDrive[0];
	__asm        push   eax;
	__asm        lea    eax, szGameFileSavePath[0];
	__asm        push   eax;
	__asm        call   0x0056CEB0;
	__asm        add    esp, 8;
// LINE 377:
	__asm        lea    eax, szSplitPathDirectory[0];
	__asm        push   eax;
	__asm        lea    eax, szGameFileSavePath[0];
	__asm        push   eax;
	__asm        call   0x0056CEC0;
	__asm        add    esp, 8;
// LINE 378:
	__asm        lea    eax, szSplitPathFilename[0];
	__asm        push   eax;
	__asm        lea    eax, szGameFileSavePath[0];
	__asm        push   eax;
	__asm        call   0x0056CEC0;
	__asm        add    esp, 8;
// LINE 380:
	__asm        cmp    dword ptr ds:[0x5C2AA0], 2;
	__asm        jne    near ptr 0x00428932;
// LINE 381:
	__asm        movsx  eax, szSplitPathExtension[0];
	__asm        test   eax, eax;
	__asm        je     near ptr 0x00428902;
	__asm        mov    eax, ds:[0x597488];
	__asm        push   eax;
	__asm        lea    eax, szSplitPathExtension[0];
	__asm        push   eax;
	__asm        call   0x0056CE20;
	__asm        add    esp, 8;
	__asm        test   eax, eax;
	__asm        je     near ptr 0x00428902;
// LINE 382:
	__asm        lea    eax, szSplitPathExtension[0];
	__asm        push   eax;
	__asm        lea    eax, szGameFileSavePath[0];
	__asm        push   eax;
	__asm        call   0x0056CEC0;
	__asm        add    esp, 8;
// LINE 383:
	__asm        lea    eax, szGameFileSavePath[0];
	__asm        push   eax;
	__asm        lea    eax, szCityFileSavePath[0];
	__asm        push   eax;
	__asm        call   0x0056CEB0;
	__asm        add    esp, 8;
// LINE 384:
	__asm        mov    eax, ds:[0x597488];
	__asm        push   eax;
	__asm        lea    eax, szGameFileSavePath[0];
	__asm        push   eax;
	__asm        call   0x0056CEC0;
	__asm        add    esp, 8;
// LINE 386:
	__asm        jmp    near ptr 0x0042899F;
// LINE 387:
	__asm        movsx  eax, szSplitPathExtension[0];
	__asm        test   eax, eax;
	__asm        je     near ptr 0x00428974;
	__asm        mov    eax, ds:[0x59748C];
	__asm        push   eax;
	__asm        lea    eax, szSplitPathExtension[0];
	__asm        push   eax;
	__asm        call   0x0056CE20;
	__asm        add    esp, 8;
	__asm        test   eax, eax;
	__asm        je     near ptr 0x00428974;
// LINE 388:
	__asm        lea    eax, szSplitPathExtension[0];
	__asm        push   eax;
	__asm        lea    eax, szGameFileSavePath[0];
	__asm        push   eax;
	__asm        call   0x0056CEC0;
	__asm        add    esp, 8;
// LINE 389:
	__asm        lea    eax, szGameFileSavePath[0];
	__asm        push   eax;
	__asm        lea    eax, szCityFileSavePath[0];
	__asm        push   eax;
	__asm        call   0x0056CEB0;
	__asm        add    esp, 8;
// LINE 390:
	__asm        mov    eax, ds:[0x59748C];
	__asm        push   eax;
	__asm        lea    eax, szGameFileSavePath[0];
	__asm        push   eax;
	__asm        call   0x0056CEC0;
	__asm        add    esp, 8;
// LINE 394:
	__asm        mov    eax, ds:[0x597484];
	__asm        push   eax;
	__asm        lea    eax, szCityFileSavePath[0];
	__asm        push   eax;
	__asm        call   0x0056CEC0;
	__asm        add    esp, 8;
// LINE 396:
	__asm        lea    eax, szCityFileSavePath[0];
	__asm        push   eax;
	__asm        lea    eax, szGameFileSavePath[0];
	__asm        push   eax;
	__asm        mov    ecx, this;
	__asm        call   0x00427BF4;
	__asm        mov    nResult, eax;
// LINE 398:
	__asm        cmp    nResult, 0;
	__asm        jne    near ptr 0x00428A64;
// LINE 399:
	__asm        lea    eax, szSplitPathExtension[0];
	__asm        push   eax;
	__asm        lea    eax, szSplitPathFilename[0];
	__asm        push   eax;
	__asm        lea    eax, szSplitPathDirectory[0];
	__asm        push   eax;
	__asm        lea    eax, szSplitPathDrive[0];
	__asm        push   eax;
	__asm        lea    eax, szGameFileSavePath[0];
	__asm        push   eax;
	__asm        call   0x0056DDF0;
	__asm        add    esp, 0x14;
// LINE 400:
	__asm        lea    eax, szSplitPathDrive[0];
	__asm        push   eax;
	__asm        lea    eax, szSplitPathFullDirectory[0];
	__asm        push   eax;
	__asm        call   0x0056CEB0;
	__asm        add    esp, 8;
// LINE 401:
	__asm        lea    eax, szSplitPathDirectory[0];
	__asm        push   eax;
	__asm        lea    eax, szSplitPathFullDirectory[0];
	__asm        push   eax;
	__asm        call   0x0056CEC0;
	__asm        add    esp, 8;
// LINE 402:
	__asm        lea    eax, szSplitPathFullDirectory[0];
	__asm        push   eax;
	__asm        call   0x0056ABE0;
	__asm        add    esp, 4;
	__asm        inc    eax;
	__asm        push   eax;
	__asm        lea    eax, szSplitPathFullDirectory[0];
	__asm        push   eax;
	__asm        push   0x7EEEEEE;
	__asm        mov    eax, ds:[0x599BC4];
	__asm        mov    eax, [eax];
	__asm        mov    ecx, ds:[0x599BC4];
	__asm        call   dword ptr [eax+0x2C];
// LINE 405:
	__asm        mov    eax, nResult;
	__asm        jmp    near ptr 0x00428A6F;
// LINE 406:
	__asm        pop    edi;
	__asm        pop    esi;
	__asm        pop    ebx;
	__asm        leave;
	__asm        ret;
}

// FUNCTION: COPTER_D 0x00428a74
long  CGameApp::ValidateCopterSaveGameFile(char * szGamePath) {
	class MIFF myMIFF;
	long lFileType;

// LINE 421:
	__asm        push   ebp;
	__asm        mov    ebp, esp;
	__asm        sub    esp, 0x16C;
	__asm        push   ebx;
	__asm        push   esi;
	__asm        push   edi;
	__asm        mov    this, ecx;
// LINE 422:
	__asm        mov    eax, szGamePath;
	__asm        push   eax;
	__asm        lea    ecx, myMIFF.<vftable>;
	__asm        call   0x004AB6F5;
// LINE 425:
	__asm        lea    ecx, myMIFF.<vftable>;
	__asm        call   0x004AB878;
	__asm        test   eax, eax;
	__asm        jne    near ptr 0x00428AC8;
// LINE 426:
	__asm        mov    dword ptr [ebp-0x150], 0;
	__asm        lea    ecx, myMIFF.<vftable>;
	__asm        call   0x004AB7CF;
	__asm        mov    eax, [ebp-0x150];
	__asm        jmp    near ptr 0x00428C31;
// LINE 428:
	__asm        lea    ecx, myMIFF.<vftable>;
	__asm        call   0x004ABB95;
	__asm        test   eax, eax;
	__asm        je     near ptr 0x00428AF1;
	__asm        lea    ecx, myMIFF.<vftable>;
	__asm        call   0x004ABCBA;
	__asm        cmp    eax, 0x43505452;
	__asm        je     near ptr 0x00428B1C;
// LINE 429:
	__asm        lea    ecx, myMIFF.<vftable>;
	__asm        call   0x004ABB47;
// LINE 430:
	__asm        mov    dword ptr [ebp-0x154], 0;
	__asm        lea    ecx, myMIFF.<vftable>;
	__asm        call   0x004AB7CF;
	__asm        mov    eax, [ebp-0x154];
	__asm        jmp    near ptr 0x00428C31;
// LINE 433:
	__asm        lea    ecx, myMIFF.<vftable>;
	__asm        call   0x004ABD6E;
	__asm        mov    lFileType, eax;
// LINE 435:
	__asm        cmp    lFileType, 0x43524552;
	__asm        je     near ptr 0x00428B6F;
	__asm        cmp    lFileType, 0x55534552;
	__asm        je     near ptr 0x00428B6F;
// LINE 437:
	__asm        lea    ecx, myMIFF.<vftable>;
	__asm        call   0x004ABB47;
// LINE 438:
	__asm        mov    dword ptr [ebp-0x158], 0;
	__asm        lea    ecx, myMIFF.<vftable>;
	__asm        call   0x004AB7CF;
	__asm        mov    eax, [ebp-0x158];
	__asm        jmp    near ptr 0x00428C31;
// LINE 443:
	__asm        push   0x4346494C;
	__asm        lea    ecx, myMIFF.<vftable>;
	__asm        call   0x004AC332;
	__asm        test   eax, eax;
	__asm        jne    near ptr 0x00428BB2;
// LINE 444:
	__asm        lea    ecx, myMIFF.<vftable>;
	__asm        call   0x004ABB47;
// LINE 445:
	__asm        mov    dword ptr [ebp-0x15C], 0;
	__asm        lea    ecx, myMIFF.<vftable>;
	__asm        call   0x004AB7CF;
	__asm        mov    eax, [ebp-0x15C];
	__asm        jmp    near ptr 0x00428C31;
// LINE 450:
	__asm        cmp    lFileType, 0x55534552;
	__asm        jne    near ptr 0x00428BE4;
// LINE 451:
	__asm        mov    dword ptr [ebp-0x160], 3;
	__asm        lea    ecx, myMIFF.<vftable>;
	__asm        call   0x004AB7CF;
	__asm        mov    eax, [ebp-0x160];
	__asm        jmp    near ptr 0x00428C31;
// LINE 452:
	__asm        jmp    near ptr 0x00428C11;
	__asm        cmp    lFileType, 0x43524552;
	__asm        jne    near ptr 0x00428C11;
// LINE 453:
	__asm        mov    dword ptr [ebp-0x164], 4;
	__asm        lea    ecx, myMIFF.<vftable>;
	__asm        call   0x004AB7CF;
	__asm        mov    eax, [ebp-0x164];
	__asm        jmp    near ptr 0x00428C31;
// LINE 454:
	__asm        mov    dword ptr [ebp-0x168], 0;
	__asm        lea    ecx, myMIFF.<vftable>;
	__asm        call   0x004AB7CF;
	__asm        mov    eax, [ebp-0x168];
	__asm        jmp    near ptr 0x00428C31;
// LINE 455:
	__asm        pop    edi;
	__asm        pop    esi;
	__asm        pop    ebx;
	__asm        leave;
	__asm        ret    4;
}

// FUNCTION: COPTER_D 0x00428c38
int  CGameApp::DisplayFileOpenError(unsigned long nResult) {
// LINE 462:
	__asm        push   ebp;
	__asm        mov    ebp, esp;
	__asm        sub    esp, 4;
	__asm        push   ebx;
	__asm        push   esi;
	__asm        push   edi;
	__asm        mov    this, ecx;
// LINE 463:
	__asm        push   1;
	__asm        mov    eax, nResult;
	__asm        add    eax, 0x15E;
	__asm        push   eax;
	__asm        push   0x7D9;
	__asm        mov    ecx, this;
	__asm        call   0x0043F2B9;
	__asm        jmp    near ptr 0x00428C61;
// LINE 464:
	__asm        pop    edi;
	__asm        pop    esi;
	__asm        pop    ebx;
	__asm        leave;
	__asm        ret    4;
}



// Contribution: 1:00027c70-00027e75 Module: 68, 16 byte alignment, code, (comdat), execute, read, 
// LIBRARY: MSVC 0x00428c70
// list<DirectoryEntry>::~list<DirectoryEntry>



// Contribution: 3:00000484-000004ab Module: 68, 4 byte alignment, initialized_data, read, write, 
// GLOBAL: COPTER_D 0x00597484
// SZ_CITY_DATA_FILE_SUFFIX
// GLOBAL: COPTER_D 0x00597488
// SZ_CAREER_DATA_FILE_SUFFIX
// GLOBAL: COPTER_D 0x0059748c
// SZ_USER_DATA_FILE_SUFFIX


// Contribution: 3:000004ac-000004af Module: 68, 4 byte alignment, initialized_data, (comdat), read, write, 
// GLOBAL: COPTER_D 0x005974ac
// list<DirectoryEntry>::number_of_lists


// Contribution: 3:000004b0-000004b3 Module: 68, 4 byte alignment, initialized_data, (comdat), read, write, 
// GLOBAL: COPTER_D 0x005974b0
// list<DirectoryEntry>::last


// Contribution: 3:000004b4-000004b7 Module: 68, 4 byte alignment, initialized_data, (comdat), read, write, 
// GLOBAL: COPTER_D 0x005974b4
// list<DirectoryEntry>::next_avail


// Contribution: 3:000004b8-000004bb Module: 68, 4 byte alignment, initialized_data, (comdat), read, write, 
// GLOBAL: COPTER_D 0x005974b8
// list<DirectoryEntry>::free_list


// Contribution: 3:000004bc-000004bf Module: 68, 4 byte alignment, initialized_data, (comdat), read, write, 
// GLOBAL: COPTER_D 0x005974bc
// list<DirectoryEntry>::buffer_list
