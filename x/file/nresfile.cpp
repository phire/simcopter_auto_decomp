// Module: Nresfile.obj
// Source: C:\Copter\Source\X\File\Nresfile.cpp
// autogenerated by simcopter_tool from PDB file



// Contribution: 1:00098ef0-0009943b Module: 16, 16 byte alignment, code, execute, read, 
// FUNCTION: SIMCOPTER 0x00499ef0
class StdResLoader* NResFile::GetLoader(unsigned long, void (*)(void * __ptr32, long)) {
// LINE 11:
	asm( 
"	      00499ef0    push ebp"
"	      00499ef1    mov ebp,esp"
"	      00499ef3    sub esp,38h"
"	      00499ef6    push ebx"
"	      00499ef7    push esi"
"	      00499ef8    push edi"
"	      00499ef9    mov [ebp-38h],ecx"
);
// LINE 13:
	asm( 
"	      00499efc    mov eax,[ebp-38h]"
"	      00499eff    add eax,11Ah"
"	      00499f04    mov [ebp-0Ch],eax"
"	      00499f07    cmp dword ptr [ebp-0Ch],0"
"	      00499f0b    je near ptr 00499F1Eh"
"	      00499f11    mov eax,[ebp-0Ch]"
"	      00499f14    mov eax,[eax]"
"	      00499f16    mov [ebp-8],eax"
"	      00499f19    jmp near ptr 00499F25h"
"	      00499f1e    mov dword ptr [ebp-8],0"
"	      00499f25    jmp near ptr 00499F2Ah"
"	      00499f2a    jmp near ptr 00499F2Fh"
);
// LINE 14:
	asm( 
"	      00499f2f    jmp near ptr 00499F4Ch"
"	      00499f34    cmp dword ptr [ebp-8],0"
"	      00499f38    je near ptr 00499F47h"
"	      00499f3e    mov eax,[ebp-8]"
"	      00499f41    mov eax,[eax+4]"
"	      00499f44    mov [ebp-8],eax"
"	      00499f47    jmp near ptr 00499F4Ch"
"	      00499f4c    cmp dword ptr [ebp-8],0"
"	      00499f50    je near ptr 00499F6Ch"
"	      00499f56    mov eax,[ebp-8]"
"	      00499f59    cmp dword ptr [eax],0"
"	      00499f5c    je near ptr 00499FE9h"
"	      00499f62    jmp near ptr 00499F80h"
"	      00499f67    jmp near ptr 00499F76h"
"	      00499f6c    jmp near ptr 00499FE9h"
"	      00499f71    jmp near ptr 00499F80h"
"	      00499f76    cmp dword ptr [ebp-18h],0"
"	      00499f7a    je near ptr 00499FE9h"
);
// LINE 15:
	asm( 
"	      00499f80    cmp dword ptr [ebp-8],0"
"	      00499f84    je near ptr 00499F9Ch"
"	      00499f8a    mov eax,[ebp-8]"
"	      00499f8d    mov eax,[eax]"
"	      00499f8f    mov [ebp-14h],eax"
"	      00499f92    jmp near ptr 00499FA8h"
"	      00499f97    jmp near ptr 00499FA8h"
"	      00499f9c    mov dword ptr [ebp-14h],0"
"	      00499fa3    jmp near ptr 00499FA8h"
"	      00499fa8    jmp near ptr 00499FADh"
"	      00499fad    mov eax,[ebp-14h]"
"	      00499fb0    mov ecx,[ebp+8]"
"	      00499fb3    cmp [eax+0Ch],ecx"
"	      00499fb6    jne near ptr 00499FE4h"
);
// LINE 16:
	asm( 
"	      00499fbc    cmp dword ptr [ebp-8],0"
"	      00499fc0    je near ptr 00499FD5h"
"	      00499fc6    mov eax,[ebp-8]"
"	      00499fc9    mov eax,[eax]"
"	      00499fcb    jmp near ptr 00499FDFh"
"	      00499fd0    jmp near ptr 00499FDCh"
"	      00499fd5    xor eax,eax"
"	      00499fd7    jmp near ptr 00499FDFh"
"	      00499fdc    mov eax,[ebp-1Ch]"
"	      00499fdf    jmp near ptr 0049A1EEh"
);
// LINE 17:
	asm( 
"	      00499fe4    jmp near ptr 00499F34h"
);
// LINE 20:
	asm( 
"	      00499fe9    push 10h"
"	      00499feb    call 0056A600h"
"	      00499ff0    add esp,4"
"	      00499ff3    mov [ebp-10h],eax"
"	      00499ff6    cmp dword ptr [ebp-10h],0"
"	      00499ffa    je near ptr 0049A13Eh"
"	      0049a000    mov eax,[ebp-38h]"
"	      0049a003    mov ecx,[ebp-10h]"
"	      0049a006    mov [ecx+8],eax"
"	      0049a009    mov eax,[ebp+8]"
"	      0049a00c    mov ecx,[ebp-10h]"
"	      0049a00f    mov [ecx+0Ch],eax"
"	      0049a012    mov eax,[ebp-10h]"
"	      0049a015    cmp dword ptr [eax+8],0"
"	      0049a019    je near ptr 0049A03Bh"
"	      0049a01f    mov eax,[ebp+8]"
"	      0049a022    push eax"
"	      0049a023    mov eax,[ebp-10h]"
"	      0049a026    mov ecx,[eax+8]"
"	      0049a029    call 0055319Ah"
"	      0049a02e    movsx eax,ax"
"	      0049a031    mov ecx,[ebp-10h]"
"	      0049a034    mov [ecx],eax"
"	      0049a036    jmp near ptr 0049A044h"
"	      0049a03b    mov eax,[ebp-10h]"
"	      0049a03e    mov dword ptr [eax],0"
"	      0049a044    mov eax,[ebp-10h]"
"	      0049a047    mov eax,[eax]"
"	      0049a049    lea eax,[eax+eax*2]"
"	      0049a04c    shl eax,2"
"	      0049a04f    push eax"
"	      0049a050    call 0056A600h"
"	      0049a055    add esp,4"
"	      0049a058    mov ecx,[ebp-10h]"
"	      0049a05b    mov [ecx+4],eax"
"	      0049a05e    mov eax,[ebp-10h]"
"	      0049a061    mov eax,[eax]"
"	      0049a063    dec eax"
"	      0049a064    mov [ebp-20h],eax"
"	      0049a067    jmp near ptr 0049A06Fh"
"	      0049a06c    dec dword ptr [ebp-20h]"
"	      0049a06f    cmp dword ptr [ebp-20h],0"
"	      0049a073    jl near ptr 0049A129h"
"	      0049a079    mov eax,[ebp+0Ch]"
"	      0049a07c    push eax"
"	      0049a07d    mov eax,[ebp-20h]"
"	      0049a080    inc eax"
"	      0049a081    push eax"
"	      0049a082    mov eax,[ebp+8]"
"	      0049a085    push eax"
"	      0049a086    mov eax,[ebp-10h]"
"	      0049a089    mov ecx,[eax+8]"
"	      0049a08c    call 00553452h"
"	      0049a091    mov [ebp-24h],eax"
"	      0049a094    mov eax,[ebp-24h]"
"	      0049a097    mov ecx,[ebp-10h]"
"	      0049a09a    mov ecx,[ecx+4]"
"	      0049a09d    mov edx,[ebp-20h]"
"	      0049a0a0    lea edx,[edx+edx*2]"
"	      0049a0a3    mov [ecx+edx*4+4],eax"
"	      0049a0a7    cmp dword ptr [ebp-24h],0"
"	      0049a0ab    je near ptr 0049A0FDh"
"	      0049a0b1    mov eax,[ebp-24h]"
"	      0049a0b4    push eax"
"	      0049a0b5    call 00554B04h"
"	      0049a0ba    add esp,4"
"	      0049a0bd    mov ecx,[ebp-10h]"
"	      0049a0c0    mov ecx,[ecx+4]"
"	      0049a0c3    mov edx,[ebp-20h]"
"	      0049a0c6    lea edx,[edx+edx*2]"
"	      0049a0c9    mov [ecx+edx*4+8],eax"
"	      0049a0cd    lea eax,[ebp-28h]"
"	      0049a0d0    push eax"
"	      0049a0d1    mov eax,[ebp-24h]"
"	      0049a0d4    push eax"
"	      0049a0d5    mov eax,[ebp-10h]"
"	      0049a0d8    mov ecx,[eax+8]"
"	      0049a0db    call 0055360Dh"
"	      0049a0e0    movsx eax,word ptr [ebp-28h]"
"	      0049a0e4    mov ecx,[ebp-10h]"
"	      0049a0e7    mov ecx,[ecx+4]"
"	      0049a0ea    mov edx,[ebp-20h]"
"	      0049a0ed    lea edx,[edx+edx*2]"
"	      0049a0f0    mov [ecx+edx*4],eax"
"	      0049a0f3    jmp near ptr 0049A0F8h"
"	      0049a0f8    jmp near ptr 0049A124h"
"	      0049a0fd    mov eax,[ebp-10h]"
"	      0049a100    mov eax,[eax+4]"
"	      0049a103    mov ecx,[ebp-20h]"
"	      0049a106    lea ecx,[ecx+ecx*2]"
"	      0049a109    mov dword ptr [eax+ecx*4+8],0"
"	      0049a111    mov eax,[ebp-10h]"
"	      0049a114    mov eax,[eax+4]"
"	      0049a117    mov ecx,[ebp-20h]"
"	      0049a11a    lea ecx,[ecx+ecx*2]"
"	      0049a11d    mov dword ptr [eax+ecx*4],0"
"	      0049a124    jmp near ptr 0049A06Ch"
"	      0049a129    jmp near ptr 0049A12Eh"
"	      0049a12e    jmp near ptr 0049A133h"
"	      0049a133    mov eax,[ebp-10h]"
"	      0049a136    mov [ebp-4],eax"
"	      0049a139    jmp near ptr 0049A145h"
"	      0049a13e    mov dword ptr [ebp-4],0"
);
// LINE 21:
	asm( 
"	      0049a145    cmp dword ptr [ebp-4],0"
"	      0049a149    je near ptr 0049A1A2h"
"	      0049a14f    mov eax,[ebp-38h]"
"	      0049a152    mov eax,[eax+11Ah]"
"	      0049a158    mov [ebp-30h],eax"
"	      0049a15b    jmp near ptr 0049A169h"
"	      0049a160    mov eax,[ebp-30h]"
"	      0049a163    mov eax,[eax+4]"
"	      0049a166    mov [ebp-30h],eax"
"	      0049a169    cmp dword ptr [ebp-30h],0"
"	      0049a16d    je near ptr 0049A18Bh"
"	      0049a173    mov eax,[ebp-30h]"
"	      0049a176    mov ecx,[ebp-4]"
"	      0049a179    cmp [eax],ecx"
"	      0049a17b    jne near ptr 0049A186h"
"	      0049a181    jmp near ptr 0049A1A2h"
"	      0049a186    jmp near ptr 0049A160h"
"	      0049a18b    jmp near ptr 0049A1A7h"
"	      0049a190    jmp near ptr 0049A1A2h"
"	      0049a195    test dword ptr [ebp-34h],0FFFFh"
"	      0049a19c    je near ptr 0049A1A7h"
"	      0049a1a2    jmp near ptr 0049A1E6h"
"	      0049a1a7    push 8"
"	      0049a1a9    call 0056A600h"
"	      0049a1ae    add esp,4"
"	      0049a1b1    mov [ebp-2Ch],eax"
"	      0049a1b4    mov eax,[ebp-4]"
"	      0049a1b7    mov ecx,[ebp-2Ch]"
"	      0049a1ba    mov [ecx],eax"
"	      0049a1bc    mov eax,[ebp-38h]"
"	      0049a1bf    mov eax,[eax+11Ah]"
"	      0049a1c5    mov ecx,[ebp-2Ch]"
"	      0049a1c8    mov [ecx+4],eax"
"	      0049a1cb    mov eax,[ebp-2Ch]"
"	      0049a1ce    mov ecx,[ebp-38h]"
"	      0049a1d1    mov [ecx+11Ah],eax"
"	      0049a1d7    mov eax,[ebp-38h]"
"	      0049a1da    inc word ptr [eax+11Eh]"
"	      0049a1e1    jmp near ptr 0049A1E6h"
);
// LINE 22:
	asm( 
"	      0049a1e6    mov eax,[ebp-4]"
"	      0049a1e9    jmp near ptr 0049A1EEh"
);
// LINE 23:
	asm( 
"	      0049a1ee    pop edi"
"	      0049a1ef    pop esi"
"	      0049a1f0    pop ebx"
"	      0049a1f1    leave"
"	      0049a1f2    ret 8"
);
}

// FUNCTION: SIMCOPTER 0x0049a1f5
void NResFile::~NResFile() {
// LINE 30:
	asm( 
"	      0049a1f5    push ebp"
"	      0049a1f6    mov ebp,esp"
"	      0049a1f8    sub esp,30h"
"	      0049a1fb    push ebx"
"	      0049a1fc    push esi"
"	      0049a1fd    push edi"
"	      0049a1fe    mov [ebp-30h],ecx"
"	      0049a201    mov eax,[ebp-30h]"
"	      0049a204    mov dword ptr [eax],591218h"
);
// LINE 31:
	asm( 
"	      0049a20a    mov eax,[ebp-30h]"
"	      0049a20d    add eax,11Ah"
"	      0049a212    mov [ebp-8],eax"
"	      0049a215    cmp dword ptr [ebp-8],0"
"	      0049a219    je near ptr 0049A22Ch"
"	      0049a21f    mov eax,[ebp-8]"
"	      0049a222    mov eax,[eax]"
"	      0049a224    mov [ebp-4],eax"
"	      0049a227    jmp near ptr 0049A233h"
"	      0049a22c    mov dword ptr [ebp-4],0"
"	      0049a233    jmp near ptr 0049A238h"
"	      0049a238    jmp near ptr 0049A23Dh"
);
// LINE 32:
	asm( 
"	      0049a23d    jmp near ptr 0049A25Ah"
"	      0049a242    cmp dword ptr [ebp-4],0"
"	      0049a246    je near ptr 0049A255h"
"	      0049a24c    mov eax,[ebp-4]"
"	      0049a24f    mov eax,[eax+4]"
"	      0049a252    mov [ebp-4],eax"
"	      0049a255    jmp near ptr 0049A25Ah"
"	      0049a25a    cmp dword ptr [ebp-4],0"
"	      0049a25e    je near ptr 0049A27Ah"
"	      0049a264    mov eax,[ebp-4]"
"	      0049a267    cmp dword ptr [eax],0"
"	      0049a26a    je near ptr 0049A342h"
"	      0049a270    jmp near ptr 0049A28Eh"
"	      0049a275    jmp near ptr 0049A284h"
"	      0049a27a    jmp near ptr 0049A342h"
"	      0049a27f    jmp near ptr 0049A28Eh"
"	      0049a284    cmp dword ptr [ebp-14h],0"
"	      0049a288    je near ptr 0049A342h"
);
// LINE 33:
	asm( 
"	      0049a28e    cmp dword ptr [ebp-4],0"
"	      0049a292    je near ptr 0049A2AAh"
"	      0049a298    mov eax,[ebp-4]"
"	      0049a29b    mov eax,[eax]"
"	      0049a29d    mov [ebp-10h],eax"
"	      0049a2a0    jmp near ptr 0049A2B6h"
"	      0049a2a5    jmp near ptr 0049A2B6h"
"	      0049a2aa    mov dword ptr [ebp-10h],0"
"	      0049a2b1    jmp near ptr 0049A2B6h"
"	      0049a2b6    mov eax,[ebp-10h]"
"	      0049a2b9    mov [ebp-0Ch],eax"
"	      0049a2bc    cmp dword ptr [ebp-0Ch],0"
"	      0049a2c0    je near ptr 0049A33Dh"
"	      0049a2c6    jmp near ptr 0049A2CBh"
"	      0049a2cb    mov eax,[ebp-0Ch]"
"	      0049a2ce    mov eax,[eax]"
"	      0049a2d0    dec eax"
"	      0049a2d1    mov [ebp-18h],eax"
"	      0049a2d4    jmp near ptr 0049A2DCh"
"	      0049a2d9    dec dword ptr [ebp-18h]"
"	      0049a2dc    cmp dword ptr [ebp-18h],0"
"	      0049a2e0    jl near ptr 0049A307h"
"	      0049a2e6    mov eax,[ebp-0Ch]"
"	      0049a2e9    mov eax,[eax+4]"
"	      0049a2ec    mov ecx,[ebp-18h]"
"	      0049a2ef    lea ecx,[ecx+ecx*2]"
"	      0049a2f2    mov eax,[eax+ecx*4+4]"
"	      0049a2f6    push eax"
"	      0049a2f7    mov eax,[ebp-0Ch]"
"	      0049a2fa    mov ecx,[eax+8]"
"	      0049a2fd    call 00553794h"
"	      0049a302    jmp near ptr 0049A2D9h"
"	      0049a307    mov eax,[ebp-0Ch]"
"	      0049a30a    mov eax,[eax+4]"
"	      0049a30d    mov [ebp-1Ch],eax"
"	      0049a310    mov eax,[ebp-1Ch]"
"	      0049a313    mov [ebp-20h],eax"
"	      0049a316    mov eax,[ebp-20h]"
"	      0049a319    push eax"
"	      0049a31a    call 0056A740h"
"	      0049a31f    add esp,4"
"	      0049a322    jmp near ptr 0049A327h"
"	      0049a327    mov eax,[ebp-0Ch]"
"	      0049a32a    push eax"
"	      0049a32b    call 0056A740h"
"	      0049a330    add esp,4"
"	      0049a333    jmp near ptr 0049A338h"
"	      0049a338    jmp near ptr 0049A33Dh"
);
// LINE 34:
	asm( 
"	      0049a33d    jmp near ptr 0049A242h"
);
// LINE 35:
	asm( 
"	      0049a342    jmp near ptr 0049A347h"
"	      0049a347    mov eax,[ebp-30h]"
"	      0049a34a    cmp dword ptr [eax+11Ah],0"
"	      0049a351    je near ptr 0049A3CAh"
"	      0049a357    mov eax,[ebp-30h]"
"	      0049a35a    mov eax,[eax+11Ah]"
"	      0049a360    mov [ebp-24h],eax"
"	      0049a363    mov eax,[ebp-30h]"
"	      0049a366    mov eax,[eax+11Ah]"
"	      0049a36c    mov eax,[eax+4]"
"	      0049a36f    mov ecx,[ebp-30h]"
"	      0049a372    mov [ecx+11Ah],eax"
"	      0049a378    mov eax,[ebp-24h]"
"	      0049a37b    mov [ebp-28h],eax"
"	      0049a37e    mov eax,[ebp-28h]"
"	      0049a381    mov [ebp-2Ch],eax"
"	      0049a384    mov eax,[ebp-2Ch]"
"	      0049a387    push eax"
"	      0049a388    call 0056A740h"
"	      0049a38d    add esp,4"
"	      0049a390    mov eax,[ebp-30h]"
"	      0049a393    dec word ptr [eax+11Eh]"
"	      0049a39a    mov eax,[ebp-30h]"
"	      0049a39d    movsx eax,word ptr [eax+11Eh]"
"	      0049a3a4    test eax,eax"
"	      0049a3a6    jge near ptr 0049A3C5h"
"	      0049a3ac    push 8C085h"
"	      0049a3b1    push 59A24Ch"
"	      0049a3b6    push 26h"
"	      0049a3b8    push 59A254h"
"	      0049a3bd    call 00554F30h"
"	      0049a3c2    add esp,10h"
"	      0049a3c5    jmp near ptr 0049A347h"
"	      0049a3ca    mov eax,[ebp-30h]"
"	      0049a3cd    movsx eax,word ptr [eax+11Eh]"
"	      0049a3d4    test eax,eax"
"	      0049a3d6    je near ptr 0049A3F5h"
"	      0049a3dc    push 8C085h"
"	      0049a3e1    push 59A24Ch"
"	      0049a3e6    push 28h"
"	      0049a3e8    push 59A254h"
"	      0049a3ed    call 00554F30h"
"	      0049a3f2    add esp,10h"
"	      0049a3f5    jmp near ptr 0049A3FAh"
"	      0049a3fa    mov eax,[ebp-30h]"
"	      0049a3fd    movsx eax,word ptr [eax+11Eh]"
"	      0049a404    test eax,eax"
"	      0049a406    je near ptr 0049A425h"
"	      0049a40c    push 8C085h"
"	      0049a411    push 59A274h"
"	      0049a416    push 17h"
"	      0049a418    push 59A254h"
"	      0049a41d    call 00554F30h"
"	      0049a422    add esp,10h"
"	      0049a425    jmp near ptr 0049A42Ah"
"	      0049a42a    jmp near ptr 0049A42Fh"
"	      0049a42f    mov ecx,[ebp-30h]"
"	      0049a432    call 0055301Bh"
"	      0049a437    pop edi"
"	      0049a438    pop esi"
"	      0049a439    pop ebx"
"	      0049a43a    leave"
"	      0049a43b    ret"
);
}



// Contribution: 1:00099440-00099478 Module: 16, 16 byte alignment, code, (comdat), execute, read, 
// FUNCTION: SIMCOPTER 0x0049a440
// NResFile::`scalar deleting destructor'



// Contribution: 2:00002218-00002227 Module: 16, 8 byte alignment, initialized_data, (comdat), read, 
// GLOBAL: SIMCOPTER 0x00002218
// ??_7NResFile@@6B@


// Contribution: 3:0000324c-00003252 Module: 16, 4 byte alignment, initialized_data, (comdat), read, write, 
// GLOBAL: SIMCOPTER 0x0000324c
// ??_C@_06BBEO@whoops?$AA@


// Contribution: 3:00003254-00003270 Module: 16, 4 byte alignment, initialized_data, (comdat), read, write, 
// GLOBAL: SIMCOPTER 0x00003254
// ??_C@_0BN@BGMO@c?3?2copter?2source?2x?2PtrList?4h?$AA@


// Contribution: 3:00003274-0000328a Module: 16, 4 byte alignment, initialized_data, (comdat), read, write, 
// GLOBAL: SIMCOPTER 0x00003274
// ??_C@_0BH@OELJ@count?5error?5in?5ptrlist?$AA@
