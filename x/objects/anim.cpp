// Module: Anim.obj
// Source: C:\Copter\Source\X\Objects\Anim.cpp
// autogenerated by simcopter_tool from PDB file

// Type: /*unpacked*/ class cBList<cCopterAnim> (forward reference);
// cBList<cCopterAnim> Class implementation not found

// Type: /*unpacked*/ class cCopterAnim (forward reference);
// VTABLE: COPTER_D 0x00593658
class cCopterAnim : public cBBase
{ // not packed(0x2c bytes) TI: 0x3404
public:
	void cCopterAnim();
	virtual void ~cCopterAnim() /* override */;
	virtual void Destroy() /* override */;
	virtual void WriteToDisk() /* override */;
	virtual unsigned short IsDirty() /* override */;
	virtual unsigned long GetBodyType() /* override */;
	virtual void InstallArrayPointers(unsigned short) /* override */;
	static /*unpacked*/ class cBList<cCopterAnim> *fsList;
	virtual /*unpacked*/ class cBList<cBBase>* GetList() /* override */;
	virtual /*unpacked*/ struct PrivAnimPartInfo* GetPartInfo(short, short); // vtable+0x24
	virtual /*unpacked*/ struct PrivAnimPartInfo* GetPartInfoBasePtr(short); // vtable+0x28
	/*+0x28*/  /*unpacked*/ class cArray<PrivAnimPartInfo> *fPrivPartInfo;
	short GetNumParts();
	short GetNumFrames();
	// calltype: NearC
	static /*unpacked*/ class cBBase* MakeNew(void * __ptr32);
	// calltype: NearC
	static /*unpacked*/ class cCopterAnim* MakeNew(unsigned long, /*unpacked*/ class cCopterBody*);
	// calltype: NearC
	static void LoadAllRelatedArrays(/*unpacked*/ class ResFile*);
	// calltype: NearC
	static void DestroyAll();
};

// Type: unsigned short;

// Type: unsigned char;

// Type: void;

// Type: /*unpacked*/ class cBBase;
// VTABLE: COPTER_D 0x00593688
class cBBase{ // not packed(0x28 bytes) TI: 0x339c
public:
	virtual unsigned long GetBodyType(); // vtable+0x0
	unsigned long GetName();
	unsigned long GetResType();
	virtual /*unpacked*/ class cBList<cBBase>* GetList(); // vtable+0x4
	unsigned long operator unsigned long();
	virtual unsigned short CanDestroy(); // vtable+0x8
	// calltype: NearC
	static /*unpacked*/ class cBBase* MakeNew(void * __ptr32);
	// calltype: NearC
	static void LoadAllRelatedArrays(/*unpacked*/ class ResFile*);
	virtual void InstallArrayPointers(unsigned short); // vtable+0xc
	void FinishMake(unsigned short);
	void Delete();
	virtual void ~cBBase(); // vtable+0x10
	virtual void Destroy(); // vtable+0x14
	virtual void Dirty(); // vtable+0x18
	virtual unsigned short IsDirty(); // vtable+0x1c
	virtual void WriteToDisk(); // vtable+0x20
	void cBBase();
	void Init(void * __ptr32);
	void Init(unsigned char *);
	void Init(unsigned long);
	/*+0x4*/   void * __ptr32 fDataHandle;
	/*+0x8*/   unsigned long fDataHandleSize;
	/*+0xc*/   unsigned char fName[16]; // 0x10 bytes
	/*+0x1c*/  unsigned long fTinyName;
	/*+0x20*/  short fResID; // 0x2 bytes
	/*+0x22*/  unsigned short fDataChanged; // 0x2 bytes
	struct cBBase::BBaseHeader{ // not packed(0x40 bytes) TI: 0x339f
		/*+0x0*/   unsigned long bodyType;
		/*+0x4*/   long _win8pad[15]; // 0x3c bytes
	};
public:
	/*+0x24*/  /*unpacked*/ struct cBBase::BBaseHeader *fHeader;
	// calltype: NearC
	static void SwizzleBBaseHeader(void * __ptr32, long);
};



// Contribution: 1:00166200-001664d4 Module: 181, 16 byte alignment, code, execute, read, 
// FUNCTION: COPTER_D 0x00567200
void cCopterAnim::InstallArrayPointers(unsigned short expectondisk) {
	/*bp-0x1c*/  unsigned char tmp[16]; // 0x10 bytes

	// Function registers exception cleanup function at 0x005674bb
// LINE 38:
	__asm        cmp    cCopterAnim::fsList, 0;
	__asm        jne    _T47;

	doAssert(0x5bf6e0, 0x26, 0x5bf6d8, 0x8c085);
// LINE 39:
_T47:
	__asm        mov    eax, this;
	__asm        cmp    dword ptr [eax+0x1C], 0;
	__asm        jne    _T6d;

	doAssert(0x5bf728, 0x27, 0x5bf704, 0x8c085);
// LINE 43:
_T6d:
Memory::BlockMove((this + 0xc), tmp[0], 0x10);
// LINE 44:
	__asm        mov    tmp[4], 0x69;
	__asm        mov    ax, expectondisk;
	__asm        mov    [ebp-0x50], ax;
	__asm        mov    eax, cCopterAnim::fsList;
	__asm        mov    eax, [eax+0xC];
	__asm        mov    [ebp-0x54], eax;
// LINE 45:
	__asm        lea    eax, tmp[0];
	__asm        push   eax;
	__asm        call   PStr2Long;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x34], eax;
	__asm        push   0xFFFFFFFF;
	__asm        mov    eax, [ebp-0x34];
	__asm        push   eax;
	__asm        call   _cArray::GetArray;
	__asm        add    esp, 8;
	__asm        mov    [ebp-0x2C], eax;
	__asm        cmp    dword ptr [ebp-0x2C], 0;
	__asm        je     _Te8;

	__asm        mov    eax, [ebp-0x2C];
	__asm        cmp    dword ptr [eax+0x18], 8;
	__asm        jne    _Tdc;

	__asm        mov    dword ptr [ebp-0x30], 1;
	__asm        jmp    _Te3;
_Tdc:
	__asm        mov    dword ptr [ebp-0x30], 0;
_Te3:
	__asm        jmp    _Tef;
_Te8:
	__asm        mov    dword ptr [ebp-0x30], 1;
_Tef:
	__asm        cmp    dword ptr [ebp-0x30], 0;
	__asm        jne    _T115;

	doAssert(0x5be4f0, 0x11e, 0x5beb8c, 0x8c085);
_T115:
	__asm        jmp    _T11a;
_T11a:
	__asm        mov    eax, [ebp-0x2C];
	__asm        mov    [ebp-0x20], eax;
	__asm        test   dword ptr [ebp-0x50], 0xFFFF;
	__asm        je     _T158;

	__asm        cmp    dword ptr [ebp-0x20], 0;
	__asm        jne    _T153;

	doAssert(0x5be4f0, 0x131, 0x5beb58, 0x8c085);
_T153:
	__asm        jmp    _T17e;
_T158:
	__asm        cmp    dword ptr [ebp-0x20], 0;
	__asm        je     _T17e;

	doAssert(0x5be4f0, 0x132, 0x5beb1c, 0x8c085);
_T17e:
	__asm        cmp    dword ptr [ebp-0x20], 0;
	__asm        jne    _T26c;

	__asm        jmp    _T1a9;

	doAssert(0x5be4f0, 0x134, 0x5beaf0, 0x8c085);
_T1a9:
	__asm        push   0x50;
	__asm        call   operator new;
	__asm        add    esp, 4;
	__asm        mov    [ebp-0x24], eax;
	__asm        mov    dword ptr [ebp-4], 0;
	__asm        cmp    dword ptr [ebp-0x24], 0;
	__asm        je     _T258;

	__asm        mov    dword ptr [ebp-0x38], 0x41525050;
	__asm        mov    eax, [ebp-0x54];
	__asm        mov    [ebp-0x3C], eax;
	__asm        lea    eax, tmp[0];
	__asm        mov    [ebp-0x40], eax;
	__asm        mov    dword ptr [ebp-0x44], 0;
	__asm        mov    dword ptr [ebp-0x48], 0;
	__asm        mov    eax, [ebp-0x24];
	__asm        mov    [ebp-0x4C], eax;
	__asm        mov    eax, [ebp-0x4C];
	__asm        mov    dword ptr [eax], 0x593738;
	__asm        cmp    dword ptr [ebp-0x40], 0;
	__asm        je     _T206;

_cArray::MakeTable();
_T206:
	__asm        mov    eax, [ebp-0x38];
	__asm        push   eax;
	__asm        mov    eax, [ebp-0x3C];
	__asm        push   eax;
	__asm        mov    eax, [ebp-0x40];
	__asm        push   eax;
	__asm        mov    eax, [ebp-0x44];
	__asm        push   eax;
	__asm        mov    eax, [ebp-0x48];
	__asm        push   eax;
	__asm        push   8;
	__asm        mov    ecx, [ebp-0x4C];
	__asm        call   _cArray::BeginCreate;
	__asm        jmp    _T229;
_T229:
	__asm        mov    byte ptr [ebp-4], 1;
	__asm        mov    eax, [ebp-0x4C];
	__asm        mov    dword ptr [eax], 0x593A30;
	__asm        jmp    _T23b;
_T23b:
	__asm        mov    byte ptr [ebp-4], 0;
	__asm        mov    eax, [ebp-0x4C];
	__asm        mov    [ebp-0x28], eax;
	__asm        jmp    _T253;
_L31083:
	__asm        mov    ecx, [ebp-0x4C];
	__asm        call   _cArray::~_cArray;
	__asm        ret;
// No fallthrough
_T253:
	__asm        jmp    _T25f;
_T258:
	__asm        mov    dword ptr [ebp-0x28], 0;
_T25f:
	__asm        mov    dword ptr [ebp-4], 0xFFFFFFFF;
	__asm        mov    eax, [ebp-0x28];
	__asm        mov    [ebp-0x20], eax;
_T26c:
	__asm        cmp    dword ptr [ebp-0x20], 0;
	__asm        jne    _T292;

	doAssert(0x5be4f0, 0x137, 0x5bead4, 0x8c085);
_T292:
	__asm        mov    eax, [ebp-0x20];
	__asm        mov    ecx, this;
	__asm        mov    [ecx+0x28], eax;
	__asm        jmp    _T2b6;

	__asm        mov    eax, [ebp-0x58];
	__asm        mov    ecx, this;
	__asm        mov    [ecx+0x28], eax;
_L31071:
	__asm        mov    eax, [ebp-0x24];
	__asm        push   eax;
	__asm        call   operator delete;
	__asm        add    esp, 4;
	__asm        ret;
// LINE 47:
// No fallthrough
_T2b6:
	return;
_L31070:
	__asm        mov    eax, 0x5961B0;
	__asm        jmp    ___CxxFrameHandler;

	__asm        mov    eax, [ebp-0xC];
	__asm        mov    fs:[0], eax;
}



// Contribution: 2:00004a30-00004a33 Module: 181, 4 byte alignment, initialized_data, (comdat), read, 
// vftable for PrivAnimPartInfo> @ 0x00593a30
//   00: _cArray::WriteToDisk @ 0x00567be1
//   1 entries



// Contribution: 2:000071b0-000071df Module: 181, 8 byte alignment, initialized_data, read, 


// Contribution: 3:000286d4-0002874b Module: 181, 4 byte alignment, initialized_data, read, write, 
// GLOBAL: COPTER_D 0x005bf6d4
/*unpacked*/ class cBList<cCopterAnim> *cCopterAnim::fsList = { 0 /* todo */ };

