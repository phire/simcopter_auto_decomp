// Module: Anim.obj
// Source: C:\Copter\Source\X\Objects\Anim.cpp
// autogenerated by simcopter_tool from PDB file



// Contribution: 1:00166200-001664d4 Module: 181, 16 byte alignment, code, execute, read, 
// FUNCTION: COPTER_D 0x00567200
void cCopterAnim::InstallArrayPointers(unsigned short) {
// LINE 37:
	asm( 
"	      00567200    push ebp"
"	      00567201    mov ebp,esp"
"	      00567203    push 0FFFFFFFFh"
"	      00567205    push 5674BBh"
"	      0056720a    mov eax,fs:[0]"
"	      00567210    push eax"
"	      00567211    mov fs:[0],esp"
"	      00567218    sub esp,50h"
"	      0056721b    push ebx"
"	      0056721c    push esi"
"	      0056721d    push edi"
"	      0056721e    mov [ebp-5Ch],ecx"
);
// LINE 38:
	asm( 
"	      00567221    cmp dword ptr ds:[5BF6D4h],0"
"	      00567228    jne near ptr 00567247h"
"	      0056722e    push 8C085h"
"	      00567233    push 5BF6D8h"
"	      00567238    push 26h"
"	      0056723a    push 5BF6E0h"
"	      0056723f    call 00554F30h"
"	      00567244    add esp,10h"
);
// LINE 39:
	asm( 
"	      00567247    mov eax,[ebp-5Ch]"
"	      0056724a    cmp dword ptr [eax+1Ch],0"
"	      0056724e    jne near ptr 0056726Dh"
"	      00567254    push 8C085h"
"	      00567259    push 5BF704h"
"	      0056725e    push 27h"
"	      00567260    push 5BF728h"
"	      00567265    call 00554F30h"
"	      0056726a    add esp,10h"
);
// LINE 43:
	asm( 
"	      0056726d    push 10h"
"	      0056726f    lea eax,[ebp-1Ch]"
"	      00567272    push eax"
"	      00567273    mov eax,[ebp-5Ch]"
"	      00567276    add eax,0Ch"
"	      00567279    push eax"
"	      0056727a    call 00554B76h"
"	      0056727f    add esp,0Ch"
);
// LINE 44:
	asm( 
"	      00567282    mov byte ptr [ebp-18h],69h"
"	      00567286    mov ax,[ebp+8]"
"	      0056728a    mov [ebp-50h],ax"
"	      0056728e    mov eax,ds:[5BF6D4h]"
"	      00567293    mov eax,[eax+0Ch]"
"	      00567296    mov [ebp-54h],eax"
);
// LINE 45:
	asm( 
"	      00567299    lea eax,[ebp-1Ch]"
"	      0056729c    push eax"
"	      0056729d    call 005661F4h"
"	      005672a2    add esp,4"
"	      005672a5    mov [ebp-34h],eax"
"	      005672a8    push 0FFFFFFFFh"
"	      005672aa    mov eax,[ebp-34h]"
"	      005672ad    push eax"
"	      005672ae    call 00568DB1h"
"	      005672b3    add esp,8"
"	      005672b6    mov [ebp-2Ch],eax"
"	      005672b9    cmp dword ptr [ebp-2Ch],0"
"	      005672bd    je near ptr 005672E8h"
"	      005672c3    mov eax,[ebp-2Ch]"
"	      005672c6    cmp dword ptr [eax+18h],8"
"	      005672ca    jne near ptr 005672DCh"
"	      005672d0    mov dword ptr [ebp-30h],1"
"	      005672d7    jmp near ptr 005672E3h"
"	      005672dc    mov dword ptr [ebp-30h],0"
"	      005672e3    jmp near ptr 005672EFh"
"	      005672e8    mov dword ptr [ebp-30h],1"
"	      005672ef    cmp dword ptr [ebp-30h],0"
"	      005672f3    jne near ptr 00567315h"
"	      005672f9    push 8C085h"
"	      005672fe    push 5BEB8Ch"
"	      00567303    push 11Eh"
"	      00567308    push 5BE4F0h"
"	      0056730d    call 00554F30h"
"	      00567312    add esp,10h"
"	      00567315    jmp near ptr 0056731Ah"
"	      0056731a    mov eax,[ebp-2Ch]"
"	      0056731d    mov [ebp-20h],eax"
"	      00567320    test dword ptr [ebp-50h],0FFFFh"
"	      00567327    je near ptr 00567358h"
"	      0056732d    cmp dword ptr [ebp-20h],0"
"	      00567331    jne near ptr 00567353h"
"	      00567337    push 8C085h"
"	      0056733c    push 5BEB58h"
"	      00567341    push 131h"
"	      00567346    push 5BE4F0h"
"	      0056734b    call 00554F30h"
"	      00567350    add esp,10h"
"	      00567353    jmp near ptr 0056737Eh"
"	      00567358    cmp dword ptr [ebp-20h],0"
"	      0056735c    je near ptr 0056737Eh"
"	      00567362    push 8C085h"
"	      00567367    push 5BEB1Ch"
"	      0056736c    push 132h"
"	      00567371    push 5BE4F0h"
"	      00567376    call 00554F30h"
"	      0056737b    add esp,10h"
"	      0056737e    cmp dword ptr [ebp-20h],0"
"	      00567382    jne near ptr 0056746Ch"
"	      00567388    jmp near ptr 005673A9h"
"	      0056738d    push 8C085h"
"	      00567392    push 5BEAF0h"
"	      00567397    push 134h"
"	      0056739c    push 5BE4F0h"
"	      005673a1    call 00554F30h"
"	      005673a6    add esp,10h"
"	      005673a9    push 50h"
"	      005673ab    call 0056A600h"
"	      005673b0    add esp,4"
"	      005673b3    mov [ebp-24h],eax"
"	      005673b6    mov dword ptr [ebp-4],0"
"	      005673bd    cmp dword ptr [ebp-24h],0"
"	      005673c1    je near ptr 00567458h"
"	      005673c7    mov dword ptr [ebp-38h],41525050h"
"	      005673ce    mov eax,[ebp-54h]"
"	      005673d1    mov [ebp-3Ch],eax"
"	      005673d4    lea eax,[ebp-1Ch]"
"	      005673d7    mov [ebp-40h],eax"
"	      005673da    mov dword ptr [ebp-44h],0"
"	      005673e1    mov dword ptr [ebp-48h],0"
"	      005673e8    mov eax,[ebp-24h]"
"	      005673eb    mov [ebp-4Ch],eax"
"	      005673ee    mov eax,[ebp-4Ch]"
"	      005673f1    mov dword ptr [eax],593738h"
"	      005673f7    cmp dword ptr [ebp-40h],0"
"	      005673fb    je near ptr 00567406h"
"	      00567401    call 00567B1Bh"
"	      00567406    mov eax,[ebp-38h]"
"	      00567409    push eax"
"	      0056740a    mov eax,[ebp-3Ch]"
"	      0056740d    push eax"
"	      0056740e    mov eax,[ebp-40h]"
"	      00567411    push eax"
"	      00567412    mov eax,[ebp-44h]"
"	      00567415    push eax"
"	      00567416    mov eax,[ebp-48h]"
"	      00567419    push eax"
"	      0056741a    push 8"
"	      0056741c    mov ecx,[ebp-4Ch]"
"	      0056741f    call 00567900h"
"	      00567424    jmp near ptr 00567429h"
"	      00567429    mov byte ptr [ebp-4],1"
"	      0056742d    mov eax,[ebp-4Ch]"
"	      00567430    mov dword ptr [eax],593A30h"
"	      00567436    jmp near ptr 0056743Bh"
"	      0056743b    mov byte ptr [ebp-4],0"
"	      0056743f    mov eax,[ebp-4Ch]"
"	      00567442    mov [ebp-28h],eax"
"	      00567445    jmp near ptr 00567453h"
"	      0056744a    mov ecx,[ebp-4Ch]"
"	      0056744d    call 005679EBh"
"	      00567452    ret"
"	      00567453    jmp near ptr 0056745Fh"
"	      00567458    mov dword ptr [ebp-28h],0"
"	      0056745f    mov dword ptr [ebp-4],0FFFFFFFFh"
"	      00567466    mov eax,[ebp-28h]"
"	      00567469    mov [ebp-20h],eax"
"	      0056746c    cmp dword ptr [ebp-20h],0"
"	      00567470    jne near ptr 00567492h"
"	      00567476    push 8C085h"
"	      0056747b    push 5BEAD4h"
"	      00567480    push 137h"
"	      00567485    push 5BE4F0h"
"	      0056748a    call 00554F30h"
"	      0056748f    add esp,10h"
"	      00567492    mov eax,[ebp-20h]"
"	      00567495    mov ecx,[ebp-5Ch]"
"	      00567498    mov [ecx+28h],eax"
"	      0056749b    jmp near ptr 005674B6h"
"	      005674a0    mov eax,[ebp-58h]"
"	      005674a3    mov ecx,[ebp-5Ch]"
"	      005674a6    mov [ecx+28h],eax"
"	      005674a9    mov eax,[ebp-24h]"
"	      005674ac    push eax"
"	      005674ad    call 0056A740h"
"	      005674b2    add esp,4"
"	      005674b5    ret"
);
// LINE 47:
	asm( 
"	      005674b6    jmp near ptr 005674C5h"
"	      005674bb    mov eax,5961B0h"
"	      005674c0    jmp near ptr 0056F590h"
"	      005674c5    mov eax,[ebp-0Ch]"
"	      005674c8    mov fs:[0],eax"
"	      005674ce    pop edi"
"	      005674cf    pop esi"
"	      005674d0    pop ebx"
"	      005674d1    leave"
"	      005674d2    ret 4"
);
}



// Contribution: 2:00004a30-00004a33 Module: 181, 4 byte alignment, initialized_data, (comdat), read, 


// Contribution: 2:000071b0-000071df Module: 181, 8 byte alignment, initialized_data, read, 


// Contribution: 3:000286d4-0002874b Module: 181, 4 byte alignment, initialized_data, read, write, 
