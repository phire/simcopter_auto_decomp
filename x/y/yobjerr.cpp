// Module: Yobjerr.obj
// Source: C:\Copter\Source\X\Y\Yobjerr.cpp
// autogenerated by simcopter_tool from PDB file

// Type: class cYObject (forward reference);
class cYObject : public TreeSim, public Language, public YObjLang
{
private:
	struct TreeSim::StackElem* fStack;
	short fStackSize;
	short fMaxStackSize;
	short fIterations;
	short _pad;
	short * fAutoStackArea;
protected:
	// vtable: 0
	intro enum TreeSim::ReturnCode TryElement(struct TreeSim::StackElem*, struct Behavior::Node*);
	// vtable: 4
	intro void Error(short);
	void GetCurrentNode(short *, short *);
	void Reset(class Behavior*, short);
	char NodeComplete(unsigned short);
	unsigned short Gosub(class Behavior*, short *, short);
public:
	void TreeSim(short, short *);
	void TreeSim(short, short, class Behavior*, short *);
	// vtable: 8
	intro void ~TreeSim();
	// vtable: 12
	intro unsigned short Simulate(long, unsigned short);
	struct TreeSim::StackElem* GetHighLevelAction();
	struct TreeSim::StackElem* GetCurElem();
	struct TreeSim::StackElem* GetNthElem(short);
	short GetStackSize();
	short GetMaxStackSize();
	void YObjLang(class YObjLang&);
	void YObjLang(unsigned char *);
	void ~YObjLang();
	virtual void GetNodeText(class Behavior*, struct Behavior::Node*, unsigned char *);
	virtual void GetPrimName(short, unsigned char *);
	virtual unsigned short IsSingleExit(struct Behavior::Node*);
	// calltype: NearC
	static void SwizzleTreeParam(short, struct Behavior::NodeParameter*);
	// calltype: NearC
	static void SwizzleTree(void * __ptr32, long);
	virtual void (*)(void * __ptr32, long) GetSwizzler();
	virtual short CountPrimitives();
	using DataType = short;
		enum __unnamed {
			kNumData = 48,
			kNumTemp = 8,
			kNumPointers = 4,
		};
	class cYObject::ObjDefHeader{
	public:
		long version;
		short stackSize;
		short baseGraphic;
		short numGraphics;
		short initBhav;
		short toolbarPict;
		short treeTableID;
		short personalityID;
		short type;
		short red;
		short green;
		short blue;
		short _padding2;
	};
		enum MoveErrorCode {
			kMoveError = -1,
			kMoveSuccess = 0,
			kMoveFailTooHigh = 1,
			kMoveFailTooLow = 2,
			kMoveFailNonNeutralTerritory = 3,
			kMoveFailDynObjGeneric = 4,
			kMoveFailDynObjPerson = 5,
			kMoveFailOutOfDynObjRect = 6,
			kMoveFailNoSpeed = 7,
			kMoveFailFinishedMoving = 8,
			kMoveFailStaticObj = 9,
			kMoveFailStackObject = 10,
			kMoveFailUnwalkableLoctype = 11,
			kMoveFailOutOfRoad = 12,
		};
		enum ObjectType {
			kPerson = 0,
			kNumObjectTypes = 1,
		};
public:
	static short[1] sStackSize;
	void SetToLoc(struct _DYOBJ_INST*);
	unsigned short Gosub(short);
	short GetTree();
	void ReceiveHit(long, struct _DYOBJ_INST*, struct _DYOBJ_INST*, long, long);
	void Die();
		enum MissionUpdates {
			kPickedUp = 0,
			kOuttaHere = 1,
			kReportNewPickupLocation = 2,
			kJoinedRiot = 3,
			kDrivenFromRiot = 4,
			kLeftRiotOfOwnVolition = 5,
			kReportNewLocation = 6,
			kMedVicToted = 7,
			kMedVicPickedUp = 8,
			kPersonCaught = 9,
		};
		enum Checks {
			kHeliLanded = 0,
			kHeliLow = 1,
			kMasterObjectLow = 2,
			kMasterObjectMovingSlowly = 3,
			kStackObjectLow = 4,
		};
		enum CompareMyLocWith {
			kMissionDestLoc = 0,
			kStackPointer = 1,
			kHeli = 2,
			kBucket = 3,
			kLastHitter = 4,
			kClosestMedevacVictim = 5,
			kClosestCriminal = 6,
			k_pad_MotherShipLoc = 7,
			kClosestCop = 8,
			kAvatarClose = 9,
			kClosestAmbulance = 10,
			kClosestCopCar = 11,
			kClosestFiretruck = 12,
			kClosestCriminalCar = 13,
			kClosestAmbient = 14,
		};
public:
	short * GetLocalVar(short);
	// calltype: NearC
	static void StartScurkPeople(short, short);
	// calltype: NearC
	static void StartScurkPeopleNearAvatar();
	// calltype: NearC
	static void BeamRemainingAmbients();
	// calltype: NearC
	static void StartForScurkID(enum PersonType, enum MissionType, short, short, short, struct _DYOBJ_INST*, int32_t, int32_t);
	// calltype: NearC
	static void StartForScurkID(enum PersonType, enum MissionType, short, short, short, struct _DYOBJ_INST*);
	unsigned short GetNearbyFire(short, short *, short *);
	unsigned short StartMission(enum PersonType, enum MissionType, short, short, long, struct _DYOBJ_INST*, struct Point3d*);
	unsigned short StartScurkAmbientMission(short, short, enum PersonType, short, short, struct _DYOBJ_INST*, int32_t, int32_t);
	unsigned short StartScurkAmbientMission(short, short, enum PersonType, short, short, struct _DYOBJ_INST*, struct Point3d*);
	void ResetToAmbient();
	long JoinRiot();
	// calltype: NearC
	static short StartPerson(enum PersonType, enum MissionType);
	unsigned short AddToHeli();
	void RemoveFromHeli();
	void SetPersonData(enum PersonType, enum MissionType, long);
	static short[14] sInitBhav;
	static short[20] sHitRxnTree;
	// calltype: NearC
	static void SetRxnTree(short, short);
	static long sSimTicks;
	long fLastInterrupt;
		enum LocationType {
			kOutOfCity = -1,
			kLocNoInfo = 0,
			kLocUnknown = 1,
			kNothing = 2,
			kForest = 3,
			kRubble = 4,
			kSmallPark = 5,
			kWireStuff = 6,
			kCarRoad = 7,
			kCarBridge = 8,
			kTrainTrack = 9,
			kDomestic = 10,
			kCommercial = 11,
			kWhiteCollarBusiness = 12,
			kBlueCollarBusiness = 13,
			kNumLocTypes = 14,
		};
public:
	static enum cYObject::LocationType[256] sLocType;
		enum SearchType {
			kSearchEdgeGround = 0,
			kSearchAnywhereGround = 1,
			kSearchRoof = 2,
			kSearchAnywhereAtAll = 3,
		};
	class cYObject::LocationInfo{
	public:
		enum cYObject::SearchType searchType;
		short maxNormalLoiterers;
	};
public:
	static struct cYObject::LocationInfo[14] sLocInfo;
	struct _DYOBJ_INST* SearchForDynObj(short, short, struct _DYOBJ_INST*);
	short GetDirectionTo(struct _DYOBJ_INST*);
	short GetDirectionTo(short, short);
	unsigned short SearchForPersonSpot(struct _CELL_INFO*, struct Point3d*, enum cYObject::SearchType);
	unsigned short SearchForPersonSpot(struct _CELL_INFO*, int32_t *, int32_t *, enum cYObject::SearchType);
	unsigned short SearchForPersonSpot(struct _DYOBJ_INST*, struct Point3d*);
	static short sBeamed;
	static short sDebugNumBeamed;
	// calltype: NearC
	static unsigned short LikelyToBeamSuccessfully();
	// calltype: NearC
	static short GetScurkID(short, short);
	// calltype: NearC
	static unsigned short IsSuitableForMission(enum MissionType, short, short);
	// calltype: NearC
	static unsigned short IsNeutralForPerson(enum PersonType, enum cYObject::LocationType);
	unsigned short IsNeutralAndSparse(struct _CELL_INFO*, enum cYObject::LocationType);
	// calltype: NearC
	static struct Point3d GetPos(unsigned char, unsigned char, int32_t, int32_t);
	// calltype: NearC
	static struct Point3d GetPos(struct _CELL_INFO*, int32_t, int32_t);
	unsigned short AdjoinsRoad(struct Point3d);
	unsigned short RoadTile(int32_t, int32_t);
	unsigned short GetNeutralLoc(int32_t *, int32_t *, int32_t *, int32_t *);
	void UpdateMission(enum cYObject::MissionUpdates, long);
	void ResetTree();
	void ResetTree(short);
	class cYObject::MoveInfo{
	public:
		enum cYObject::LocationType* locType;
		char * roadDir;
		struct _DYOBJ_INST* dyBlock;
		struct _STOBJ_INST* stBlock;
	};
	class cYObject::_ControlInput{
	public:
		struct Point3d vector;
		int32_t fwdSpeed;
		int32_t rotateRate;
		int32_t yaw;
	};
	class cYObject::_ControlInput{
	public:
		struct Point3d vector;
		int32_t fwdSpeed;
		int32_t rotateRate;
		int32_t yaw;
	};
private:
	static unsigned short sInited;
	static Ptr to: class cYObject[100] sObjects;
	static enum cYObject::LocationType[10][18] sNeutralPersonLocs;
	static enum cYObject::LocationType[10][14] sNeutralMissionLocs;
	static class cYObject* sList;
	static class NResFile sFile;
	static class ResFile sErrorFile;
public:
	static class YObjLang* sLanguage;
	static class Behavior* sBehavior;
	static struct Point3d[8] sMoveTable;
	static struct Point3d[8] sUnitVectorTable;
	// calltype: NearC
	static void InitObjects(char *);
	// calltype: NearC
	static void DestroyObjects();
	// calltype: NearC
	static short MakeNewObject(short, struct Point3d, class Behavior*);
	// calltype: NearC
	static void KillObject(short);
	// calltype: NearC
	static void MakePlebes();
	void InitForEngine(short);
	void TellLocToEngine();
	class cYObject* GetClosest(enum MissionSupertype, enum MissionType, unsigned short, short *);
	// calltype: NearC
	static class cYObject* GetObjectA(short);
	// calltype: NearC
	static class cYObject* GetObjectA(struct _DYOBJ_INST*);
	class cYObject* GetPersonWithMaster(struct _DYOBJ_INST*);
	// calltype: NearC
	static class cYObject* GetSleepingPerson();
	// calltype: NearC
	static void DrawOnePerson(struct VRBlit*);
	void SetCell(unsigned char, unsigned char);
	void UnsetCell(unsigned char, unsigned char);
	void Link();
	void Link(unsigned char, unsigned char);
	long fMissionID;
	void PutOnGround();
	void Unlink();
	unsigned short CellIsSet();
	unsigned short fbLinked;
	unsigned short Linked();
	unsigned short fInited;
	// calltype: NearC
	static unsigned short ConvertObjDef(void * __ptr32);
	// calltype: NearC
	static short GetAvailRouteMask();
	// calltype: NearC
	static void ClearRouteMask(short);
	// calltype: NearC
	static void MaskTile(short, short, short);
	// calltype: NearC
	static void IntegrityCheck(unsigned char *);
	static short sNumMissionAwake;
	static short sNumAmbientAwake;
	static unsigned short sAllAmbientStarted;
	static short sAmbientTopOff;
	static short sAmbientAbsoluteMax;
	static short sScurkRectRad;
	struct _DYOBJ_INST fDyn;
	unsigned char fCellX;
	unsigned char fCellY;
	unsigned long fBodyName;
	class cCopterBody* fBody;
	unsigned long fAnimName;
	class cCopterAnim* fAnim;
	short fFace;
	void SetFace(short);
	struct Point3d fLastMasterLoc;
	unsigned short SetMaster(struct _DYOBJ_INST*);
	struct _DYOBJ_INST* GetMaster();
	void FollowMaster();
	enum cYObject::LocationType fCurLocType;
	// calltype: NearC
	static unsigned short GetOutOfHeli(long);
	// calltype: NearC
	static struct Point2d GetRiotCenter(short, short);
	// calltype: NearC
	static struct Point2d GetRiotCenter(long);
	void SimAnim();
	void Simulate();
	// calltype: NearC
	static void SimulateAll();
	// calltype: NearC
	static void TryStartAllAmbient();
	unsigned long GetBody();
	void SetBody(unsigned long);
	void IncAndCheckAnimFrame();
	void CheckAnimFrame();
	// calltype: NearC
	static class cYObject* GetOnePersonForScurkID(short, short);
	// calltype: NearC
	static struct _DYOBJ_INST* GetFirstDynObj(struct _CELL_INFO*, long);
	// calltype: NearC
	static short CountDynObjs(struct _CELL_INFO*, long);
	void SetMissionType(enum MissionType);
	void SetMissionID(long);
	void SetPersonType(enum PersonType);
	void ChangeMission(enum MissionType, long);
	void IncrementMissionStats(enum MissionType, short);
	void ClickHeels();
	void VisitOz();
	unsigned long GetAnim();
	void SetAnim(unsigned long);
	unsigned short fSimulate;
	class Behavior* fBehavior;
	class cYObject* fNext;
	short fID;
	short _pad;
	short[8] fTemp;
	short[48] fData;
	unsigned char *[4] fPointers;
	short fIterations;
	short _pad2;
	short fDirInc;
	struct cYObject::ObjDefHeader fDefinition;
		enum __unnamed {
			kMasterObject = 0,
			kLastHitterObject = 1,
		};
		enum __unnamed {
			kDirection = 0,
			kAwake = 1,
			kHeightCanJump = 2,
			kPersonType = 3,
			kMissionType = 4,
			kMissionSupertype = 5,
			kAnimFrame = 6,
			kObjectID = 7,
			kRiotVal = 8,
			kVisible = 9,
			kLastRiotVal = 10,
			kNearMedFar = 11,
			kLastHitterMsg = 12,
			kMegaphoneMessage = 13,
			kInRxnTree = 14,
			kDead = 15,
			kColorIndexShift = 16,
			kDynAnim = 17,
			kSpeed = 18,
			kOnlyOnRoad = 19,
			kMoveOnlyNeutrally = 20,
			kMoveNoMatterWhat = 21,
			kSpecificToScurkID = 22,
			kCaptured = 23,
			kStartingObject = 24,
			kSoundChannel = 25,
			kCurrentSound = 26,
			kDynSound = 27,
			kSoundFrequencyAdj = 28,
			kInitBhav = 29,
			kLastRxnTree = 30,
		};
protected:
	virtual enum TreeSim::ReturnCode TryElement(struct TreeSim::StackElem*, struct Behavior::Node*);
	// vtable: 16
	intro void HandleOverflow();
	// vtable: 20
	intro short InterpValue(short, short, short **);
	enum TreeSim::ReturnCode TryExpression(struct YObjLang::AttrParam*);
public:
	enum cYObject::MoveErrorCode TryVectorMove(struct Point3d, int32_t, struct cYObject::MoveInfo*);
	enum cYObject::MoveErrorCode TryTableMove(short, unsigned short, struct cYObject::MoveInfo*);
	enum cYObject::MoveErrorCode TryMove(unsigned short, struct cYObject::MoveInfo*, int32_t, int32_t, int32_t, unsigned short);
	enum cYObject::LocationType GetLocType();
	// calltype: NearC
	static enum cYObject::LocationType GetLocType(short, short);
	// calltype: NearC
	static unsigned short IsWater(short, short);
	unsigned short IsWalkable(short, short, enum cYObject::LocationType);
	unsigned short CanJumpOffHere();
	// calltype: NearC
	static char GetRoadDir(struct Point3d);
		enum SoundNum {
			kSNone = -1,
			kSAssertion = 1,
			kSDunno = 2,
			kSHoHum = 3,
			kSQuery = 4,
			kSSad = 5,
			kSTitter = 6,
			kSYouGoGirl = 7,
			kSGrunt = 8,
			kSWhoa = 9,
			kSHey = 10,
			kSHiThere = 11,
			kSAaah = 12,
			kSAck = 13,
			kSFeet = 14,
			kSYrUnderArrest = 15,
			kSGimmeYrCash = 16,
			kSSinisterChuckle = 17,
			kSSayYrKindaHot = 18,
		};
public:
	// calltype: NearC
	static short DistributeSoundChannels(short, short);
	unsigned short PlaySoundA(enum cYObject::SoundNum, unsigned short);
	// calltype: NearC
	static void PhaseAndBeamSoundChannels();
	static short[15] sSoundChannels;
	// calltype: NearC
	static short ExtraSoundChannelForSure();
	// calltype: NearC
	static short RegSoundChannel();
	// calltype: NearC
	static void StopAllSounds();
	void StopSound();
	void ClearSoundChannel();
	short GetActualSoundChannel();
	// calltype: NearC
	static short GetActualSoundChannel(short);
	void SetSoundChannel(short);
	// calltype: NearC
	static short GetSRadius(struct _DYOBJ_INST*);
	// calltype: NearC
	static int32_t GetRadius(struct _DYOBJ_INST*);
	// calltype: NearC
	static struct _DYOBJ_INST* GetDynObj(struct _DYOBJ_INST*, struct Point3d, int32_t, struct _DYOBJ_INST*, struct _DYOBJ_INST*);
	// calltype: NearC
	static struct _STOBJ_INST* GetStaticObj(struct Point3d, int32_t);
	// calltype: NearC
	static unsigned short InBoundingRect(struct Point3d, int32_t, struct Point3d, int32_t);
	unsigned short MasterSlowerThan(short);
	short GetHeightOverGround();
	unsigned short GetFakeDistTo(struct _DYOBJ_INST*);
	unsigned short CloseTo(struct _DYOBJ_INST*);
	// calltype: NearC
	static class cYObject* GetFirst();
	// calltype: NearC
	static class cYObject* GetFirst(short, short);
	// calltype: NearC
	static class cYObject* GetFirstInvisible(short);
	class cYObject* PutTotedMedVicOnHeli();
	class cYObject* PutTotedMedVicOn(struct _DYOBJ_INST*);
	unsigned short SetStartingObject(struct _DYOBJ_INST*);
	class cYObject* DropToted();
	class cYObject* GetToted();
	unsigned short GetOffMasterObject();
	// calltype: NearC
	static unsigned short IsHigherThan(struct Point3d, short);
	// calltype: NearC
	static unsigned short IsFlattenedTerrain(struct _CELL_INFO*);
	// calltype: NearC
	static void RandomEdgeOffset(short, int32_t *, int32_t *);
	// calltype: NearC
	static void RandomOffset(short, int32_t *, int32_t *);
	// vtable: 24
	intro void Reset();
	virtual void ~cYObject();
protected:
	virtual void Error(short);
	void cYObject(short, class Behavior*, struct Point3d, short);
public:
	struct cYObject::ObjDefHeader* GetDef();
	void GetTypeName(char *);
	// calltype: NearC
	static class ResFile* GetGlobalFile();
	// calltype: NearC
	static class YObjLang* GetLanguage();
	// calltype: NearC
	static class ResFile* GetErrorFile();
	short GetID();
	struct Point3d GetLocation();
	class Behavior* GetBehavior();
	void Draw(struct VRBlit*);
	float fScale;
	void DefaultDrawStr(short, short, unsigned char, unsigned char *, int32_t);
	void SetCellAndLoc(struct Point3d, unsigned char, unsigned char);
	void SetCellAndLoc(unsigned char, unsigned char, int32_t, int32_t);
	void Start(int32_t, int32_t, int32_t, int32_t);
	unsigned short BeamIntoCameraRange();
	unsigned short OutOfCameraRange();
	unsigned short CanPlace(struct Point3d);
	void AdjustRadiusForRiotVal();
	unsigned short HasRiotValChanged();
	void IncrementRiotVal(short);
	void GetSurroundingRiotInfo(short, short *, short *, short *);
	void Turn(short);
	class cYObject* GetNext();
	void DynEffects(short, enum cYObject::MoveErrorCode, struct cYObject::MoveInfo*);
	void DynEffectsFixed(int32_t, enum cYObject::MoveErrorCode, struct cYObject::MoveInfo*);
	using PrimProc = LfEnum @ 0x5ed18:
	[90m   LE.[32m[  0.  2][m [95mcount[m = 5
	[90m   LE.[95msymbols[m = [Container(Type=13805, Name=u'TreeSim::ReturnCode', index=11352, visablity=<Visablity.Global: 1>, refcount=4)]
	[90m   LE.[95mTI[m = 0x35ed
	[90m   LE.[32m[  2.  2][m [95mutype[m = int32_t
	[90m   LE.[32m[  4.  2][m [95mfieldList[m =
	[90m   LE.[mLfFieldList @ 0x5ecb4:
	[90m   LE.[m[90m  LFL.[32m[  0.  *][m [95mData[m =
	[90m   LE.[m[90m  LFL.[m[LfEnumerate @ 0x5ecb6:
	[90m   LE.[m[90m  LFL.[m[90m   LE.[32m[  0.  2][m [95mattr[m = public
	[90m   LE.[m[90m  LFL.[m[90m   LE.[32m[err.  *][m [95mName[m = kTrueComplete
	[90m   LE.[m[90m  LFL.[m[90m   LE.[95msymbols[m = []
	[90m   LE.[m[90m  LFL.[m[90m   LE.[95mTI[m = 0x35ec
	[90m   LE.[m[90m  LFL.[m[90m   LE.[32m[  2.  *][m [95mvalue[m = 1
	[90m   LE.[m[90m  LFL.[m, LfEnumerate @ 0x5ecca:
	[90m   LE.[m[90m  LFL.[m[90m   LE.[32m[  0.  2][m [95mattr[m = public
	[90m   LE.[m[90m  LFL.[m[90m   LE.[32m[err.  *][m [95mName[m = kFalseComplete
	[90m   LE.[m[90m  LFL.[m[90m   LE.[95msymbols[m = []
	[90m   LE.[m[90m  LFL.[m[90m   LE.[95mTI[m = 0x35ec
	[90m   LE.[m[90m  LFL.[m[90m   LE.[32m[  2.  *][m [95mvalue[m = 0
	[90m   LE.[m[90m  LFL.[m, LfEnumerate @ 0x5ece2:
	[90m   LE.[m[90m  LFL.[m[90m   LE.[32m[  0.  2][m [95mattr[m = public
	[90m   LE.[m[90m  LFL.[m[90m   LE.[32m[err.  *][m [95mName[m = kEngaged
	[90m   LE.[m[90m  LFL.[m[90m   LE.[95msymbols[m = []
	[90m   LE.[m[90m  LFL.[m[90m   LE.[95mTI[m = 0x35ec
	[90m   LE.[m[90m  LFL.[m[90m   LE.[32m[  2.  *][m [95mvalue[m = 2
	[90m   LE.[m[90m  LFL.[m, LfEnumerate @ 0x5ecf2:
	[90m   LE.[m[90m  LFL.[m[90m   LE.[32m[  0.  2][m [95mattr[m = public
	[90m   LE.[m[90m  LFL.[m[90m   LE.[32m[err.  *][m [95mName[m = kError
	[90m   LE.[m[90m  LFL.[m[90m   LE.[95msymbols[m = []
	[90m   LE.[m[90m  LFL.[m[90m   LE.[95mTI[m = 0x35ec
	[90m   LE.[m[90m  LFL.[m[90m   LE.[32m[  2.  *][m [95mvalue[m = -1
	[90m   LE.[m[90m  LFL.[m, LfEnumerate @ 0x5ed02:
	[90m   LE.[m[90m  LFL.[m[90m   LE.[32m[  0.  2][m [95mattr[m = public
	[90m   LE.[m[90m  LFL.[m[90m   LE.[32m[err.  *][m [95mName[m = kStackLoaded
	[90m   LE.[m[90m  LFL.[m[90m   LE.[95msymbols[m = []
	[90m   LE.[m[90m  LFL.[m[90m   LE.[95mTI[m = 0x35ec
	[90m   LE.[m[90m  LFL.[m[90m   LE.[32m[  2.  *][m [95mvalue[m = 3
	[90m   LE.[m[90m  LFL.[m]
	[90m   LE.[m[90m  LFL.[95mTI[m = 0x35ec
	[90m   LE.[32m[  6.  2][m [95mproperties[m = isnested
	[90m   LE.[32m[  8.  *][m [95mName[m = TreeSim::ReturnCode
	 (*)(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
public:
	static Ptr to: LfEnum @ 0x5ed18:
	[90m   LE.[32m[  0.  2][m [95mcount[m = 5
	[90m   LE.[95msymbols[m = [Container(Type=13805, Name=u'TreeSim::ReturnCode', index=11352, visablity=<Visablity.Global: 1>, refcount=4)]
	[90m   LE.[95mTI[m = 0x35ed
	[90m   LE.[32m[  2.  2][m [95mutype[m = int32_t
	[90m   LE.[32m[  4.  2][m [95mfieldList[m =
	[90m   LE.[mLfFieldList @ 0x5ecb4:
	[90m   LE.[m[90m  LFL.[32m[  0.  *][m [95mData[m =
	[90m   LE.[m[90m  LFL.[m[LfEnumerate @ 0x5ecb6:
	[90m   LE.[m[90m  LFL.[m[90m   LE.[32m[  0.  2][m [95mattr[m = public
	[90m   LE.[m[90m  LFL.[m[90m   LE.[32m[err.  *][m [95mName[m = kTrueComplete
	[90m   LE.[m[90m  LFL.[m[90m   LE.[95msymbols[m = []
	[90m   LE.[m[90m  LFL.[m[90m   LE.[95mTI[m = 0x35ec
	[90m   LE.[m[90m  LFL.[m[90m   LE.[32m[  2.  *][m [95mvalue[m = 1
	[90m   LE.[m[90m  LFL.[m, LfEnumerate @ 0x5ecca:
	[90m   LE.[m[90m  LFL.[m[90m   LE.[32m[  0.  2][m [95mattr[m = public
	[90m   LE.[m[90m  LFL.[m[90m   LE.[32m[err.  *][m [95mName[m = kFalseComplete
	[90m   LE.[m[90m  LFL.[m[90m   LE.[95msymbols[m = []
	[90m   LE.[m[90m  LFL.[m[90m   LE.[95mTI[m = 0x35ec
	[90m   LE.[m[90m  LFL.[m[90m   LE.[32m[  2.  *][m [95mvalue[m = 0
	[90m   LE.[m[90m  LFL.[m, LfEnumerate @ 0x5ece2:
	[90m   LE.[m[90m  LFL.[m[90m   LE.[32m[  0.  2][m [95mattr[m = public
	[90m   LE.[m[90m  LFL.[m[90m   LE.[32m[err.  *][m [95mName[m = kEngaged
	[90m   LE.[m[90m  LFL.[m[90m   LE.[95msymbols[m = []
	[90m   LE.[m[90m  LFL.[m[90m   LE.[95mTI[m = 0x35ec
	[90m   LE.[m[90m  LFL.[m[90m   LE.[32m[  2.  *][m [95mvalue[m = 2
	[90m   LE.[m[90m  LFL.[m, LfEnumerate @ 0x5ecf2:
	[90m   LE.[m[90m  LFL.[m[90m   LE.[32m[  0.  2][m [95mattr[m = public
	[90m   LE.[m[90m  LFL.[m[90m   LE.[32m[err.  *][m [95mName[m = kError
	[90m   LE.[m[90m  LFL.[m[90m   LE.[95msymbols[m = []
	[90m   LE.[m[90m  LFL.[m[90m   LE.[95mTI[m = 0x35ec
	[90m   LE.[m[90m  LFL.[m[90m   LE.[32m[  2.  *][m [95mvalue[m = -1
	[90m   LE.[m[90m  LFL.[m, LfEnumerate @ 0x5ed02:
	[90m   LE.[m[90m  LFL.[m[90m   LE.[32m[  0.  2][m [95mattr[m = public
	[90m   LE.[m[90m  LFL.[m[90m   LE.[32m[err.  *][m [95mName[m = kStackLoaded
	[90m   LE.[m[90m  LFL.[m[90m   LE.[95msymbols[m = []
	[90m   LE.[m[90m  LFL.[m[90m   LE.[95mTI[m = 0x35ec
	[90m   LE.[m[90m  LFL.[m[90m   LE.[32m[  2.  *][m [95mvalue[m = 3
	[90m   LE.[m[90m  LFL.[m]
	[90m   LE.[m[90m  LFL.[95mTI[m = 0x35ec
	[90m   LE.[32m[  6.  2][m [95mproperties[m = isnested
	[90m   LE.[32m[  8.  *][m [95mName[m = TreeSim::ReturnCode
	 (LfPointer @ 0x60f88:
	[90m   LP.[32m[  0.  2][m [95mAttributes[m =
	[90m   LP.[mContainer: 
	[90m   LP.[m    ptrmode = (enum) Ptr 0
	[90m   LP.[m    ptrtype = (enum) PtrNear32 10
	[90m   LP.[m    isunaligned = False
	[90m   LP.[m    isconst = False
	[90m   LP.[m    isvolatile = False
	[90m   LP.[m    isflat32 = False
	[90m   LP.[95msymbols[m = [Container(Offset=136836, Segment=3, Type=14030, Name=u'cYObject::sList', index=12502, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=64, contrib=Container(Section=3, Unknown1=3263, Offset=136772, Size=13105, Characteristics=3224371264, ModuleIndex=200, Pad2=142, symbols=[Container(Offset=136848, Segment=3, Type=0, Name=u'?sSimTicks@cYObject@@2JA', index=11762, visablity=<Visablity.Public: 2>, refcount=1, contribOffset=76, contrib=<recursion detected>), Container(Offset=136832, Segment=3, Type=0, Name=u'?gAvatar@@3PAVcAvatar@@A', index=11764, visablity=<Visablity.Public: 2>, refcount=1, contribOffset=60, contrib=<recursion detected>), Container(Offset=136816, Segment=3, Type=0, Name=u'?sNumMissionAwake@cYObject@@2FA', index=11842, visablity=<Visablity.Public: 2>, refcount=1, contribOffset=44, contrib=<recursion detected>), Container(Offset=136820, Segment=3, Type=0, Name=u'?sNumAmbientAwake@cYObject@@2FA', index=11843, visablity=<Visablity.Public: 2>, refcount=1, contribOffset=48, contrib=<recursion detected>), Container(Offset=136816, Segment=3, Type=17, Name=u'cYObject::sNumMissionAwake', index=11977, visablity=<Visablity.Global: 1>, refcount=2, contribOffset=44, contrib=<recursion detected>), Container(Offset=136820, Segment=3, Type=17, Name=u'cYObject::sNumAmbientAwake', index=11978, visablity=<Visablity.Global: 1>, refcount=2, contribOffset=48, contrib=<recursion detected>), Container(Offset=136832, Segment=3, Type=13879, Name=u'gAvatar', index=11985, visablity=<Visablity.Global: 1>, refcount=2, contribOffset=60, contrib=<recursion detected>), Container(Offset=136848, Segment=3, Type=18, Name=u'cYObject::sSimTicks', index=11987, visablity=<Visablity.Global: 1>, refcount=2, contribOffset=76, contrib=<recursion detected>), Container(Offset=136868, Segment=3, Type=0, Name=u'?sScurkRectRad@cYObject@@2FA', index=12214, visablity=<Visablity.Public: 2>, refcount=1, contribOffset=96, contrib=<recursion detected>), Container(Offset=136864, Segment=3, Type=0, Name=u'?gBodyDebugInfoIndex@@3FA', index=12215, visablity=<Visablity.Public: 2>, refcount=1, contribOffset=92, contrib=<recursion detected>), Container(Offset=136860, Segment=3, Type=0, Name=u'?gCumTime@@3HA', index=12216, visablity=<Visablity.Public: 2>, refcount=1, contribOffset=88, contrib=<recursion detected>), Container(Offset=136856, Segment=3, Type=0, Name=u'?gNextTime@@3HA', index=12217, visablity=<Visablity.Public: 2>, refcount=1, contribOffset=84, contrib=<recursion detected>), Container(Offset=136852, Segment=3, Type=0, Name=u'?gPersonBeamSlice@@3HA', index=12218, visablity=<Visablity.Public: 2>, refcount=1, contribOffset=80, contrib=<recursion detected>), Container(Offset=136844, Segment=3, Type=0, Name=u'?sDebugNumBeamed@cYObject@@2FA', index=12219, visablity=<Visablity.Public: 2>, refcount=1, contribOffset=72, contrib=<recursion detected>), Container(Offset=136840, Segment=3, Type=0, Name=u'?sBeamed@cYObject@@2FA', index=12220, visablity=<Visablity.Public: 2>, refcount=1, contribOffset=68, contrib=<recursion detected>), Container(Offset=136836, Segment=3, Type=0, Name=u'?sList@cYObject@@0PAV1@A', index=12221, visablity=<Visablity.Public: 2>, refcount=1, contribOffset=64, contrib=<recursion detected>), Container(Offset=136828, Segment=3, Type=0, Name=u'?sAmbientAbsoluteMax@cYObject@@2FA', index=12222, visablity=<Visablity.Public: 2>, refcount=1, contribOffset=56, contrib=<recursion detected>), Container(Offset=136824, Segment=3, Type=0, Name=u'?sAmbientTopOff@cYObject@@2FA', index=12223, visablity=<Visablity.Public: 2>, refcount=1, contribOffset=52, contrib=<recursion detected>), Container(Offset=136812, Segment=3, Type=0, Name=u'?sAllAmbientStarted@cYObject@@2GA', index=12224, visablity=<Visablity.Public: 2>, refcount=1, contribOffset=40, contrib=<recursion detected>), Container(Offset=136808, Segment=3, Type=0, Name=u'?sInited@cYObject@@0GA', index=12225, visablity=<Visablity.Public: 2>, refcount=1, contribOffset=36, contrib=<recursion detected>), Container(Offset=136804, Segment=3, Type=0, Name=u'?CopterDir@@3HA', index=12226, visablity=<Visablity.Public: 2>, refcount=1, contribOffset=32, contrib=<recursion detected>), Container(Offset=136800, Segment=3, Type=0, Name=u'?gNearLimit@@3HA', index=12227, visablity=<Visablity.Public: 2>, refcount=1, contribOffset=28, contrib=<recursion detected>), Container(Offset=136796, Segment=3, Type=0, Name=u'?gNearBoundary@@3HA', index=12228, visablity=<Visablity.Public: 2>, refcount=1, contribOffset=24, contrib=<recursion detected>), Container(Offset=136792, Segment=3, Type=0, Name=u'?gMidBoundary@@3HA', index=12229, visablity=<Visablity.Public: 2>, refcount=1, contribOffset=20, contrib=<recursion detected>), Container(Offset=136788, Segment=3, Type=0, Name=u'?gFarBoundary@@3HA', index=12230, visablity=<Visablity.Public: 2>, refcount=1, contribOffset=16, contrib=<recursion detected>), Container(Offset=136784, Segment=3, Type=0, Name=u'?gFarLimit@@3HA', index=12231, visablity=<Visablity.Public: 2>, refcount=1, contribOffset=12, contrib=<recursion detected>), Container(Offset=136780, Segment=3, Type=0, Name=u'?gPersonBeamingSlicesSlice@@3FA', index=12232, visablity=<Visablity.Public: 2>, refcount=1, contribOffset=8, contrib=<recursion detected>), Container(Offset=136776, Segment=3, Type=0, Name=u'?gPersonBeamingForwardWeight@@3FA', index=12233, visablity=<Visablity.Public: 2>, refcount=1, contribOffset=4, contrib=<recursion detected>), Container(Offset=136772, Segment=3, Type=0, Name=u'_gPersonBeamingSlices', index=12234, visablity=<Visablity.Public: 2>, refcount=1, contribOffset=0, contrib=<recursion detected>), Container(Offset=136864, Segment=3, Type=17, Name=u'gBodyDebugInfoIndex', index=12486, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=92, contrib=<recursion detected>), Container(Offset=136772, Segment=3, Type=17, Name=u'gPersonBeamingSlices', index=12487, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=0, contrib=<recursion detected>), Container(Offset=136880, Segment=3, Type=17, Name=u'gPersonSoundBeamSlice', index=12488, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=108, contrib=<recursion detected>), Container(Offset=136872, Segment=3, Type=17, Name=u'sAvLastCellX', index=12492, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=100, contrib=<recursion detected>), Container(Offset=136876, Segment=3, Type=17, Name=u'sAvLastCellY', index=12493, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=104, contrib=<recursion detected>), Container(Offset=136884, Segment=3, Type=17, Name=u'sCheckTotedCount', index=12494, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=112, contrib=<recursion detected>), Container(Offset=136840, Segment=3, Type=17, Name=u'cYObject::sBeamed', index=12498, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=68, contrib=<recursion detected>), Container(Offset=136844, Segment=3, Type=17, Name=u'cYObject::sDebugNumBeamed', index=12499, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=72, contrib=<recursion detected>), Container(Offset=136808, Segment=3, Type=33, Name=u'cYObject::sInited', index=12500, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=36, contrib=<recursion detected>), <recursion detected>, Container(Offset=136812, Segment=3, Type=33, Name=u'cYObject::sAllAmbientStarted', index=12510, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=40, contrib=<recursion detected>), Container(Offset=136824, Segment=3, Type=17, Name=u'cYObject::sAmbientTopOff', index=12511, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=52, contrib=<recursion detected>), Container(Offset=136828, Segment=3, Type=17, Name=u'cYObject::sAmbientAbsoluteMax', index=12512, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=56, contrib=<recursion detected>), Container(Offset=136776, Segment=3, Type=17, Name=u'gPersonBeamingForwardWeight', index=12513, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=4, contrib=<recursion detected>), Container(Offset=136868, Segment=3, Type=17, Name=u'cYObject::sScurkRectRad', index=12514, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=96, contrib=<recursion detected>), Container(Offset=136780, Segment=3, Type=17, Name=u'gPersonBeamingSlicesSlice', index=12515, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=8, contrib=<recursion detected>), Container(Offset=136784, Segment=3, Type=116, Name=u'gFarLimit', index=12516, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=12, contrib=<recursion detected>), Container(Offset=136788, Segment=3, Type=116, Name=u'gFarBoundary', index=12517, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=16, contrib=<recursion detected>), Container(Offset=136792, Segment=3, Type=116, Name=u'gMidBoundary', index=12518, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=20, contrib=<recursion detected>), Container(Offset=136796, Segment=3, Type=116, Name=u'gNearBoundary', index=12519, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=24, contrib=<recursion detected>), Container(Offset=136800, Segment=3, Type=116, Name=u'gNearLimit', index=12520, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=28, contrib=<recursion detected>), Container(Offset=136804, Segment=3, Type=116, Name=u'CopterDir', index=12523, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=32, contrib=<recursion detected>), Container(Offset=136852, Segment=3, Type=116, Name=u'gPersonBeamSlice', index=12525, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=80, contrib=<recursion detected>), Container(Offset=136856, Segment=3, Type=116, Name=u'gNextTime', index=12526, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=84, contrib=<recursion detected>), Container(Offset=136860, Segment=3, Type=116, Name=u'gCumTime', index=12527, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=88, contrib=<recursion detected>)], things={76: Container(Offset=136848, Segment=3, Type=18, Name=u'cYObject::sSimTicks', index=11987, visablity=<Visablity.Global: 1>, refcount=2, contribOffset=76, contrib=<recursion detected>), 60: Container(Offset=136832, Segment=3, Type=13879, Name=u'gAvatar', index=11985, visablity=<Visablity.Global: 1>, refcount=2, contribOffset=60, contrib=<recursion detected>), 44: Container(Offset=136816, Segment=3, Type=17, Name=u'cYObject::sNumMissionAwake', index=11977, visablity=<Visablity.Global: 1>, refcount=2, contribOffset=44, contrib=<recursion detected>), 48: Container(Offset=136820, Segment=3, Type=17, Name=u'cYObject::sNumAmbientAwake', index=11978, visablity=<Visablity.Global: 1>, refcount=2, contribOffset=48, contrib=<recursion detected>), 96: Container(Offset=136868, Segment=3, Type=17, Name=u'cYObject::sScurkRectRad', index=12514, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=96, contrib=<recursion detected>), 92: Container(Offset=136864, Segment=3, Type=17, Name=u'gBodyDebugInfoIndex', index=12486, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=92, contrib=<recursion detected>), 88: Container(Offset=136860, Segment=3, Type=116, Name=u'gCumTime', index=12527, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=88, contrib=<recursion detected>), 84: Container(Offset=136856, Segment=3, Type=116, Name=u'gNextTime', index=12526, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=84, contrib=<recursion detected>), 80: Container(Offset=136852, Segment=3, Type=116, Name=u'gPersonBeamSlice', index=12525, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=80, contrib=<recursion detected>), 72: Container(Offset=136844, Segment=3, Type=17, Name=u'cYObject::sDebugNumBeamed', index=12499, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=72, contrib=<recursion detected>), 68: Container(Offset=136840, Segment=3, Type=17, Name=u'cYObject::sBeamed', index=12498, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=68, contrib=<recursion detected>), 64: <recursion detected>, 56: Container(Offset=136828, Segment=3, Type=17, Name=u'cYObject::sAmbientAbsoluteMax', index=12512, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=56, contrib=<recursion detected>), 52: Container(Offset=136824, Segment=3, Type=17, Name=u'cYObject::sAmbientTopOff', index=12511, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=52, contrib=<recursion detected>), 40: Container(Offset=136812, Segment=3, Type=33, Name=u'cYObject::sAllAmbientStarted', index=12510, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=40, contrib=<recursion detected>), 36: Container(Offset=136808, Segment=3, Type=33, Name=u'cYObject::sInited', index=12500, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=36, contrib=<recursion detected>), 32: Container(Offset=136804, Segment=3, Type=116, Name=u'CopterDir', index=12523, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=32, contrib=<recursion detected>), 28: Container(Offset=136800, Segment=3, Type=116, Name=u'gNearLimit', index=12520, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=28, contrib=<recursion detected>), 24: Container(Offset=136796, Segment=3, Type=116, Name=u'gNearBoundary', index=12519, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=24, contrib=<recursion detected>), 20: Container(Offset=136792, Segment=3, Type=116, Name=u'gMidBoundary', index=12518, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=20, contrib=<recursion detected>), 16: Container(Offset=136788, Segment=3, Type=116, Name=u'gFarBoundary', index=12517, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=16, contrib=<recursion detected>), 12: Container(Offset=136784, Segment=3, Type=116, Name=u'gFarLimit', index=12516, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=12, contrib=<recursion detected>), 8: Container(Offset=136780, Segment=3, Type=17, Name=u'gPersonBeamingSlicesSlice', index=12515, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=8, contrib=<recursion detected>), 4: Container(Offset=136776, Segment=3, Type=17, Name=u'gPersonBeamingForwardWeight', index=12513, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=4, contrib=<recursion detected>), 0: Container(Offset=136772, Segment=3, Type=17, Name=u'gPersonBeamingSlices', index=12487, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=0, contrib=<recursion detected>), 108: Container(Offset=136880, Segment=3, Type=17, Name=u'gPersonSoundBeamSlice', index=12488, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=108, contrib=<recursion detected>), 100: Container(Offset=136872, Segment=3, Type=17, Name=u'sAvLastCellX', index=12492, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=100, contrib=<recursion detected>), 104: Container(Offset=136876, Segment=3, Type=17, Name=u'sAvLastCellY', index=12493, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=104, contrib=<recursion detected>), 112: Container(Offset=136884, Segment=3, Type=17, Name=u'sCheckTotedCount', index=12494, visablity=<Visablity.Global: 1>, refcount=1, contribOffset=112, contrib=<recursion detected>)}, module=Module('Yobject.obj', 'C:\\Copter\\Source\\X\\Y\\Yobject.cpp', ...)))]
	[90m   LP.[95mTI[m = 0x36ce
	[90m   LP.[32m[  2.  2][m [95mType[m =
	[90m   LP.[mLfClass @ 0x5b5c0:
	[90m   LP.[m[90m   LC.[32m[  0.  2][m [95mcount[m = 0
	[90m   LP.[m[90m   LC.[32m[err.  *][m [95mName[m = cYObject
	[90m   LP.[m[90m   LC.[95msymbols[m = []
	[90m   LP.[m[90m   LC.[95mTI[m = 0x3509
	[90m   LP.[m[90m   LC.[32m[  2.  2][m [95mfieldList[m = <NoType>
	[90m   LP.[m[90m   LC.[32m[  4.  2][m [95mproperties[m = ctor fwdref
	[90m   LP.[m[90m   LC.[32m[  6.  2][m [95mderivedList[m = <NoType>
	[90m   LP.[m[90m   LC.[32m[  8.  2][m [95mvshape[m = <NoType>
	[90m   LP.[m[90m   LC.[32m[  a.  *][m [95mSize[m = 0
	, LfPointer @ 0x5ed5c:
	[90m   LP.[32m[  0.  2][m [95mAttributes[m =
	[90m   LP.[mContainer: 
	[90m   LP.[m    ptrmode = (enum) Ptr 0
	[90m   LP.[m    ptrtype = (enum) PtrNear32 10
	[90m   LP.[m    isunaligned = False
	[90m   LP.[m    isconst = False
	[90m   LP.[m    isvolatile = False
	[90m   LP.[m    isflat32 = False
	[90m   LP.[95msymbols[m = []
	[90m   LP.[95mTI[m = 0x35ef
	[90m   LP.[32m[  2.  2][m [95mType[m =
	[90m   LP.[mLfStruct @ 0x5ed38:
	[90m   LP.[m[90m   LS.[32m[  0.  2][m [95mcount[m = 0
	[90m   LP.[m[90m   LS.[32m[err.  *][m [95mName[m = TreeSim::StackElem
	[90m   LP.[m[90m   LS.[95msymbols[m = []
	[90m   LP.[m[90m   LS.[95mTI[m = 0x35ee
	[90m   LP.[m[90m   LS.[32m[  2.  2][m [95mfieldList[m = <NoType>
	[90m   LP.[m[90m   LS.[32m[  4.  2][m [95mproperties[m = isnested fwdref
	[90m   LP.[m[90m   LS.[32m[  6.  2][m [95mderivedList[m = <NoType>
	[90m   LP.[m[90m   LS.[32m[  8.  2][m [95mvshape[m = <NoType>
	[90m   LP.[m[90m   LS.[32m[  a.  *][m [95mSize[m = 0
	, LfPointer @ 0x5bd88:
	[90m   LP.[32m[  0.  2][m [95mAttributes[m =
	[90m   LP.[mContainer: 
	[90m   LP.[m    ptrmode = (enum) Ptr 0
	[90m   LP.[m    ptrtype = (enum) PtrNear32 10
	[90m   LP.[m    isunaligned = False
	[90m   LP.[m    isconst = False
	[90m   LP.[m    isvolatile = False
	[90m   LP.[m    isflat32 = False
	[90m   LP.[95msymbols[m = []
	[90m   LP.[95mTI[m = 0x352f
	[90m   LP.[32m[  2.  2][m [95mType[m =
	[90m   LP.[mLfStruct @ 0x5bd68:
	[90m   LP.[m[90m   LS.[32m[  0.  2][m [95mcount[m = 0
	[90m   LP.[m[90m   LS.[32m[err.  *][m [95mName[m = Behavior::Node
	[90m   LP.[m[90m   LS.[95msymbols[m = []
	[90m   LP.[m[90m   LS.[95mTI[m = 0x352e
	[90m   LP.[m[90m   LS.[32m[  2.  2][m [95mfieldList[m = <NoType>
	[90m   LP.[m[90m   LS.[32m[  4.  2][m [95mproperties[m = isnested fwdref
	[90m   LP.[m[90m   LS.[32m[  6.  2][m [95mderivedList[m = <NoType>
	[90m   LP.[m[90m   LS.[32m[  8.  2][m [95mvshape[m = <NoType>
	[90m   LP.[m[90m   LS.[32m[  a.  *][m [95mSize[m = 0
	, )[64] PrimProcs;
	// calltype: NearC
	static enum TreeSim::ReturnCode sIdle(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iIdle(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sSetAnim(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iSetAnim(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sAttr(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iAttr(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sWalk(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iWalk(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sSetBody(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iSetBody(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sRandom(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iRandom(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sWalkToAndGrabOntoStackObject(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iWalkToAndGrabOntoStackObject(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sUpdateMyMission(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iUpdateMyMission(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sCheckForTrue(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iCheckForTrue(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sCompareMyLocWith(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iCompareMyLocWith(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sSelfDecommission(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iSelfDecommission(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sGetOffMasterObject(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iGetOffMasterObject(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sTurnTowardsStackObject(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iTurnTowardsStackObject(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sIsThisLocType(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iIsThisLocType(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sIsThisLocTypeNeutral(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iIsThisLocTypeNeutral(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sCanJumpOffHere(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iCanJumpOffHere(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sCheckForSpotlightInMyCell(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iCheckForSpotlightInMyCell(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sIncrementRiotVal(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iIncrementRiotVal(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sGetSurroundingRiotVal(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iGetSurroundingRiotVal(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sIsThisScurkID(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iIsThisScurkID(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sGosubToInitbhav(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iGosubToInitbhav(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sAdjustRadiusForRiotVal(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iAdjustRadiusForRiotVal(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sJoinRiot(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iJoinRiot(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sSetDirection(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iSetDirection(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sThrowProjectile(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iThrowProjectile(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sTurnFromStackObject(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iTurnFromStackObject(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sTurnFromLastHitter(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iTurnFromLastHitter(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sTurnTowardsLastHitter(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iTurnTowardsLastHitter(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sGetOutOfRoadEtc(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iGetOutOfRoadEtc(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sGenerateMedevacAndSetSelfAsVictim(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iGenerateMedevacAndSetSelfAsVictim(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sTurnToNearbyFire(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iTurnToNearbyFire(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sDie(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iDie(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sWalkToStackObject(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iWalkToStackObject(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sPutObjIntoTreeNum(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iPutObjIntoTreeNum(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sVisitOz(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iVisitOz(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sMakeMyMedevacVictimVisible(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iMakeMyMedevacVictimVisible(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sMakeMyMedevacVictimInvisible(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iMakeMyMedevacVictimInvisible(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sMakeMeMasterOfStackObject(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iMakeMeMasterOfStackObject(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sMakeMyStackObjectVisitOz(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iMakeMyStackObjectVisitOz(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sPutTotedMedVicOnStackObject(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iPutTotedMedVicOnStackObject(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sTakeAnyMedVicOffStackObject(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iTakeAnyMedVicOffStackObject(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sGetOnStackObject(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iGetOnStackObject(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sUpdateStackVictimToted(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iUpdateStackVictimToted(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sGetNumSpacesOnStackObject(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iGetNumSpacesOnStackObject(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sDropToted(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iDropToted(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sUpdateStackVictimPickedUp(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iUpdateStackVictimPickedUp(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sCloseToHeli(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iCloseToHeli(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sSetMyExpression(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iSetMyExpression(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sGetHeliSpeedPlusDamage(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iGetHeliSpeedPlusDamage(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sIsThisCellSafe(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iIsThisCellSafe(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sPlaySound(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iPlaySound(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sGetOnHeliIfHarnessRaised(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iGetOnHeliIfHarnessRaised(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sAmIOnHeli(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iAmIOnHeli(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sThrowFieryProjectile(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iThrowFieryProjectile(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sTellStartingObjectTrueOrFalse(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iTellStartingObjectTrueOrFalse(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sPutMyCarInStack(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iPutMyCarInStack(struct TreeSim::StackElem*, struct Behavior::Node*);
	// calltype: NearC
	static enum TreeSim::ReturnCode sDoIHaveAMaster(class cYObject*, struct TreeSim::StackElem*, struct Behavior::Node*);
	enum TreeSim::ReturnCode iDoIHaveAMaster(struct TreeSim::StackElem*, struct Behavior::Node*);
};

// Type: short;

// Type: void;



// Contribution: 1:00161500-0016160a Module: 188, 16 byte alignment, code, execute, read, 
// FUNCTION: COPTER_D 0x00562500
void cYObject::Error(short errNum) {
	 // Switch table at 0x005625e6

// LINE 13:
	__asm        push   ebp;
	__asm        mov    ebp, esp;
	__asm        sub    esp, 8;
	__asm        push   ebx;
	__asm        push   esi;
	__asm        push   edi;
	__asm        mov    this, ecx;
// LINE 14:
	__asm        movsx  eax, errNum;
	__asm        mov    [ebp-8], eax;
	__asm        jmp    near ptr 0x005625B3;
// LINE 16:
	__asm        push   0x8C085;
	__asm        push   0x5BEBAC;
	__asm        push   0x10;
	__asm        push   0x5BEBC4;
	__asm        call   0x00554F30;
	__asm        add    esp, 0x10;
// LINE 17:
	__asm        jmp    near ptr 0x005625FF;
// LINE 20:
	__asm        push   0x8C085;
	__asm        push   0x5BEBE8;
	__asm        push   0x14;
	__asm        push   0x5BEBFC;
	__asm        call   0x00554F30;
	__asm        add    esp, 0x10;
// LINE 21:
	__asm        jmp    near ptr 0x005625FF;
// LINE 24:
	__asm        push   0x8C085;
	__asm        push   0x5BEC20;
	__asm        push   0x18;
	__asm        push   0x5BEC34;
	__asm        call   0x00554F30;
	__asm        add    esp, 0x10;
// LINE 25:
	__asm        jmp    near ptr 0x005625FF;
// LINE 28:
	__asm        push   0x8C085;
	__asm        push   0x5BEC58;
	__asm        push   0x1C;
	__asm        push   0x5BEC74;
	__asm        call   0x00554F30;
	__asm        add    esp, 0x10;
// LINE 29:
	__asm        jmp    near ptr 0x005625FF;
// LINE 32:
	__asm        push   0x8C085;
	__asm        push   0x5BEC98;
	__asm        push   0x20;
	__asm        push   0x5BECB4;
	__asm        call   0x00554F30;
	__asm        add    esp, 0x10;
// LINE 33:
	__asm        jmp    near ptr 0x005625FF;
// LINE 34:
	__asm        jmp    near ptr 0x005625FF;
	__asm        dec    dword ptr [ebp-8];
	__asm        cmp    dword ptr [ebp-8], 0x18;
	__asm        ja     near ptr 0x00562590;
	__asm        mov    eax, [ebp-8];
	__asm        xor    ecx, ecx;
	__asm        mov    cl, [eax+0x5625E6];
	__asm        jmp    dword ptr [ecx*4+0x5625D2];
	__asm        sbb    ds:[0x25360056], ah;
	__asm        push   esi;
	__asm        add    [ebp+0x56], dl;
	__asm        add    [edx+0x25], dh;
	__asm        push   esi;
	__asm        add    [eax+0x5625], dl;
	__asm        add    al, 1;
	__asm        add    al, [esp+eax];
	__asm        add    al, 4;
	__asm        add    al, 4;
	__asm        add    al, 4;
	__asm        add    al, 4;
	__asm        add    al, 4;
	__asm        add    al, 4;
	__asm        add    al, 4;
	__asm        add    al, 4;
	__asm        add    al, 4;
	__asm        (bad);
// LINE 69:
	__asm        jmp    near ptr 0x00562604;
	__asm        pop    edi;
	__asm        pop    esi;
	__asm        pop    ebx;
	__asm        leave;
	__asm        ret    4;
}



// Contribution: 3:00027bac-00027cd4 Module: 188, 4 byte alignment, initialized_data, read, write, 
