// Module: Yobjerr.obj
// Source: C:\Copter\Source\X\Y\Yobjerr.cpp
// autogenerated by simcopter_tool from PDB file



// Contribution: 1:00161500-0016160a Module: 188, 16 byte alignment, code, execute, read, 
// FUNCTION: SIMCOPTER 0x00562500
cYObject::Error {
// LINE 13:
	asm( 
"	      00562500    push ebp"
"	      00562501    mov ebp,esp"
"	      00562503    sub esp,8"
"	      00562506    push ebx"
"	      00562507    push esi"
"	      00562508    push edi"
"	      00562509    mov [ebp-4],ecx"
);
// LINE 14:
	asm( 
"	      0056250c    movsx eax,word ptr [ebp+8]"
"	      00562510    mov [ebp-8],eax"
"	      00562513    jmp near ptr 005625B3h"
);
// LINE 16:
	asm( 
"	      00562518    push 8C085h"
"	      0056251d    push 5BEBACh"
"	      00562522    push 10h"
"	      00562524    push 5BEBC4h"
"	      00562529    call 00554F30h"
"	      0056252e    add esp,10h"
);
// LINE 17:
	asm( 
"	      00562531    jmp near ptr 005625FFh"
);
// LINE 20:
	asm( 
"	      00562536    push 8C085h"
"	      0056253b    push 5BEBE8h"
"	      00562540    push 14h"
"	      00562542    push 5BEBFCh"
"	      00562547    call 00554F30h"
"	      0056254c    add esp,10h"
);
// LINE 21:
	asm( 
"	      0056254f    jmp near ptr 005625FFh"
);
// LINE 24:
	asm( 
"	      00562554    push 8C085h"
"	      00562559    push 5BEC20h"
"	      0056255e    push 18h"
"	      00562560    push 5BEC34h"
"	      00562565    call 00554F30h"
"	      0056256a    add esp,10h"
);
// LINE 25:
	asm( 
"	      0056256d    jmp near ptr 005625FFh"
);
// LINE 28:
	asm( 
"	      00562572    push 8C085h"
"	      00562577    push 5BEC58h"
"	      0056257c    push 1Ch"
"	      0056257e    push 5BEC74h"
"	      00562583    call 00554F30h"
"	      00562588    add esp,10h"
);
// LINE 29:
	asm( 
"	      0056258b    jmp near ptr 005625FFh"
);
// LINE 32:
	asm( 
"	      00562590    push 8C085h"
"	      00562595    push 5BEC98h"
"	      0056259a    push 20h"
"	      0056259c    push 5BECB4h"
"	      005625a1    call 00554F30h"
"	      005625a6    add esp,10h"
);
// LINE 33:
	asm( 
"	      005625a9    jmp near ptr 005625FFh"
);
// LINE 34:
	asm( 
"	      005625ae    jmp near ptr 005625FFh"
"	      005625b3    dec dword ptr [ebp-8]"
"	      005625b6    cmp dword ptr [ebp-8],18h"
"	      005625ba    ja near ptr 00562590h"
"	      005625c0    mov eax,[ebp-8]"
"	      005625c3    xor ecx,ecx"
"	      005625c5    mov cl,[eax+5625E6h]"
"	      005625cb    jmp dword ptr [ecx*4+5625D2h]"
"	      005625d2    sbb ds:[25360056h],ah"
"	      005625d8    push esi"
"	      005625d9    add [ebp+56h],dl"
"	      005625dd    add [edx+25h],dh"
"	      005625e0    push esi"
"	      005625e1    add [eax+5625h],dl"
"	      005625e7    add al,1"
"	      005625e9    add al,[esp+eax]"
"	      005625ec    add al,4"
"	      005625ee    add al,4"
"	      005625f0    add al,4"
"	      005625f2    add al,4"
"	      005625f4    add al,4"
"	      005625f6    add al,4"
"	      005625f8    add al,4"
"	      005625fa    add al,4"
"	      005625fc    add al,4"
"	      005625fe    (bad)"
);
// LINE 69:
	asm( 
"	      005625ff    jmp near ptr 00562604h"
"	      00562604    pop edi"
"	      00562605    pop esi"
"	      00562606    pop ebx"
"	      00562607    leave"
"	      00562608    ret 4"
);
}



// Contribution: 3:00027bac-00027cd4 Module: 188, 4 byte alignment, initialized_data, read, write, 
