// Module: Yobjerr.obj
// Source: C:\Copter\Source\X\Y\Yobjerr.cpp
// autogenerated by simcopter_tool from PDB file



// Contribution: 1:00161500-0016160a Module: 188, 16 byte alignment, code, execute, read, 
// FUNCTION: COPTER_D 0x00562500
void cYObject::Error(short errNum) {
	 // Switch table at 0x005625e6

// LINE 13:
	__asm        push   ebp;
	__asm        mov    ebp, esp;
	__asm        sub    esp, 8;
	__asm        push   ebx;
	__asm        push   esi;
	__asm        push   edi;
	__asm        mov    this, ecx;
// LINE 14:
	__asm        movsx  eax, errNum;
	__asm        mov    [ebp-8], eax;
	__asm        jmp    near ptr 0x005625B3;
// LINE 16:
	__asm        push   0x8C085;
	__asm        push   0x5BEBAC;
	__asm        push   0x10;
	__asm        push   0x5BEBC4;
	__asm        call   0x00554F30;
	__asm        add    esp, 0x10;
// LINE 17:
	__asm        jmp    near ptr 0x005625FF;
// LINE 20:
	__asm        push   0x8C085;
	__asm        push   0x5BEBE8;
	__asm        push   0x14;
	__asm        push   0x5BEBFC;
	__asm        call   0x00554F30;
	__asm        add    esp, 0x10;
// LINE 21:
	__asm        jmp    near ptr 0x005625FF;
// LINE 24:
	__asm        push   0x8C085;
	__asm        push   0x5BEC20;
	__asm        push   0x18;
	__asm        push   0x5BEC34;
	__asm        call   0x00554F30;
	__asm        add    esp, 0x10;
// LINE 25:
	__asm        jmp    near ptr 0x005625FF;
// LINE 28:
	__asm        push   0x8C085;
	__asm        push   0x5BEC58;
	__asm        push   0x1C;
	__asm        push   0x5BEC74;
	__asm        call   0x00554F30;
	__asm        add    esp, 0x10;
// LINE 29:
	__asm        jmp    near ptr 0x005625FF;
// LINE 32:
	__asm        push   0x8C085;
	__asm        push   0x5BEC98;
	__asm        push   0x20;
	__asm        push   0x5BECB4;
	__asm        call   0x00554F30;
	__asm        add    esp, 0x10;
// LINE 33:
	__asm        jmp    near ptr 0x005625FF;
// LINE 34:
	__asm        jmp    near ptr 0x005625FF;
	__asm        dec    dword ptr [ebp-8];
	__asm        cmp    dword ptr [ebp-8], 0x18;
	__asm        ja     near ptr 0x00562590;
	__asm        mov    eax, [ebp-8];
	__asm        xor    ecx, ecx;
	__asm        mov    cl, [eax+0x5625E6];
	__asm        jmp    dword ptr [ecx*4+0x5625D2];
	__asm        sbb    ds:[0x25360056], ah;
	__asm        push   esi;
	__asm        add    [ebp+0x56], dl;
	__asm        add    [edx+0x25], dh;
	__asm        push   esi;
	__asm        add    [eax+0x5625], dl;
	__asm        add    al, 1;
	__asm        add    al, [esp+eax];
	__asm        add    al, 4;
	__asm        add    al, 4;
	__asm        add    al, 4;
	__asm        add    al, 4;
	__asm        add    al, 4;
	__asm        add    al, 4;
	__asm        add    al, 4;
	__asm        add    al, 4;
	__asm        add    al, 4;
	__asm        (bad);
// LINE 69:
	__asm        jmp    near ptr 0x00562604;
	__asm        pop    edi;
	__asm        pop    esi;
	__asm        pop    ebx;
	__asm        leave;
	__asm        ret    4;
}



// Contribution: 3:00027bac-00027cd4 Module: 188, 4 byte alignment, initialized_data, read, write, 
